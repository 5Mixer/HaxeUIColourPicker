// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_kha_StringExtensions
#include <hxinc/kha/StringExtensions.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_54c71e85c7eef9ea_4_toCharArray,"kha.StringExtensions","toCharArray",0x3b3722e9,"kha.StringExtensions.toCharArray","kha/StringExtensions.hx",4,0x8f7a6ace)
namespace kha{

void StringExtensions_obj::__construct() { }

Dynamic StringExtensions_obj::__CreateEmpty() { return new StringExtensions_obj; }

void *StringExtensions_obj::_hx_vtable = 0;

Dynamic StringExtensions_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StringExtensions_obj > _hx_result = new StringExtensions_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StringExtensions_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x19012c49;
}

::Array< int > StringExtensions_obj::toCharArray(::String s){
            	HX_STACKFRAME(&_hx_pos_54c71e85c7eef9ea_4_toCharArray)
HXLINE(   5)		::Array< int > results = ::Array_obj< int >::__new();
HXLINE(   6)		{
HXLINE(   6)			int _g = 0;
HXDLIN(   6)			int _g1 = s.length;
HXDLIN(   6)			while((_g < _g1)){
HXLINE(   6)				_g = (_g + 1);
HXDLIN(   6)				int i = (_g - 1);
HXLINE(   7)				results->push(s.charCodeAt(i));
            			}
            		}
HXLINE(   9)		return results;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringExtensions_obj,toCharArray,return )


StringExtensions_obj::StringExtensions_obj()
{
}

bool StringExtensions_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"toCharArray") ) { outValue = toCharArray_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *StringExtensions_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *StringExtensions_obj_sStaticStorageInfo = 0;
#endif

hx::Class StringExtensions_obj::__mClass;

static ::String StringExtensions_obj_sStaticFields[] = {
	HX_("toCharArray",e8,69,cd,45),
	::String(null())
};

void StringExtensions_obj::__register()
{
	StringExtensions_obj _hx_dummy;
	StringExtensions_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("kha.StringExtensions",ef,5b,b2,56);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StringExtensions_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StringExtensions_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StringExtensions_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringExtensions_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringExtensions_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
