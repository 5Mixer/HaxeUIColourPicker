// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_StbTruetype
#include <hxinc/kha/graphics2/truetype/StbTruetype.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__active_edge
#include <hxinc/kha/graphics2/truetype/Stbtt__active_edge.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__bitmap
#include <hxinc/kha/graphics2/truetype/Stbtt__bitmap.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__buf
#include <hxinc/kha/graphics2/truetype/Stbtt__buf.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__csctx
#include <hxinc/kha/graphics2/truetype/Stbtt__csctx.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__edge
#include <hxinc/kha/graphics2/truetype/Stbtt__edge.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt__point
#include <hxinc/kha/graphics2/truetype/Stbtt__point.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_aligned_quad
#include <hxinc/kha/graphics2/truetype/Stbtt_aligned_quad.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_bakedchar
#include <hxinc/kha/graphics2/truetype/Stbtt_bakedchar.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_fontinfo
#include <hxinc/kha/graphics2/truetype/Stbtt_fontinfo.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_font_v_metrics
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_font_v_metrics.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_glyph_h_metrics
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_glyph_h_metrics.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_rect
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_rect.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_temp_region
#include <hxinc/kha/graphics2/truetype/Stbtt_temp_region.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_Stbtt_vertex
#include <hxinc/kha/graphics2/truetype/Stbtt_vertex.h>
#endif
#ifndef INCLUDED_kha_graphics2_truetype_VectorOfIntPointer
#include <hxinc/kha/graphics2/truetype/VectorOfIntPointer.h>
#endif
#ifndef INCLUDED_kha_internal_BytesBlob
#include <hxinc/kha/internal/BytesBlob.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_215_STBTT_assert,"kha.graphics2.truetype.StbTruetype","STBTT_assert",0x69bc9cde,"kha.graphics2.truetype.StbTruetype.STBTT_assert","kha/graphics2/truetype/StbTruetype.hx",215,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_216_STBTT_POINT_SIZE,"kha.graphics2.truetype.StbTruetype","STBTT_POINT_SIZE",0xe08bac88,"kha.graphics2.truetype.StbTruetype.STBTT_POINT_SIZE","kha/graphics2/truetype/StbTruetype.hx",216,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_298_stbtt__buf_get8,"kha.graphics2.truetype.StbTruetype","stbtt__buf_get8",0x53159315,"kha.graphics2.truetype.StbTruetype.stbtt__buf_get8","kha/graphics2/truetype/StbTruetype.hx",298,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_304_stbtt__buf_peek8,"kha.graphics2.truetype.StbTruetype","stbtt__buf_peek8",0x8e5b22aa,"kha.graphics2.truetype.StbTruetype.stbtt__buf_peek8","kha/graphics2/truetype/StbTruetype.hx",304,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_310_stbtt__buf_seek,"kha.graphics2.truetype.StbTruetype","stbtt__buf_seek",0x5b0415ab,"kha.graphics2.truetype.StbTruetype.stbtt__buf_seek","kha/graphics2/truetype/StbTruetype.hx",310,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_316_stbtt__buf_skip,"kha.graphics2.truetype.StbTruetype","stbtt__buf_skip",0x5b08a6b2,"kha.graphics2.truetype.StbTruetype.stbtt__buf_skip","kha/graphics2/truetype/StbTruetype.hx",316,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_319_stbtt__buf_get,"kha.graphics2.truetype.StbTruetype","stbtt__buf_get",0x50bb37c3,"kha.graphics2.truetype.StbTruetype.stbtt__buf_get","kha/graphics2/truetype/StbTruetype.hx",319,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_327_stbtt__new_buf,"kha.graphics2.truetype.StbTruetype","stbtt__new_buf",0xa7d3220d,"kha.graphics2.truetype.StbTruetype.stbtt__new_buf","kha/graphics2/truetype/StbTruetype.hx",327,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_336_stbtt__buf_get16,"kha.graphics2.truetype.StbTruetype","stbtt__buf_get16",0x5fcb1968,"kha.graphics2.truetype.StbTruetype.stbtt__buf_get16","kha/graphics2/truetype/StbTruetype.hx",336,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_340_stbtt__buf_get32,"kha.graphics2.truetype.StbTruetype","stbtt__buf_get32",0x5fcb1b22,"kha.graphics2.truetype.StbTruetype.stbtt__buf_get32","kha/graphics2/truetype/StbTruetype.hx",340,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_343_stbtt__buf_range,"kha.graphics2.truetype.StbTruetype","stbtt__buf_range",0xb28a422a,"kha.graphics2.truetype.StbTruetype.stbtt__buf_range","kha/graphics2/truetype/StbTruetype.hx",343,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_350_stbtt__cff_get_index,"kha.graphics2.truetype.StbTruetype","stbtt__cff_get_index",0xfddcdf86,"kha.graphics2.truetype.StbTruetype.stbtt__cff_get_index","kha/graphics2/truetype/StbTruetype.hx",350,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_363_stbtt__cff_int,"kha.graphics2.truetype.StbTruetype","stbtt__cff_int",0x7af7d14c,"kha.graphics2.truetype.StbTruetype.stbtt__cff_int","kha/graphics2/truetype/StbTruetype.hx",363,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_376_stbtt__cff_skip_operand,"kha.graphics2.truetype.StbTruetype","stbtt__cff_skip_operand",0x62079acc,"kha.graphics2.truetype.StbTruetype.stbtt__cff_skip_operand","kha/graphics2/truetype/StbTruetype.hx",376,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_391_stbtt__dict_get,"kha.graphics2.truetype.StbTruetype","stbtt__dict_get",0xb188c274,"kha.graphics2.truetype.StbTruetype.stbtt__dict_get","kha/graphics2/truetype/StbTruetype.hx",391,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_409_stbtt__dict_get_ints,"kha.graphics2.truetype.StbTruetype","stbtt__dict_get_ints",0x57aa398f,"kha.graphics2.truetype.StbTruetype.stbtt__dict_get_ints","kha/graphics2/truetype/StbTruetype.hx",409,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_418_stbtt__cff_index_count,"kha.graphics2.truetype.StbTruetype","stbtt__cff_index_count",0xa686a9ff,"kha.graphics2.truetype.StbTruetype.stbtt__cff_index_count","kha/graphics2/truetype/StbTruetype.hx",418,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_423_stbtt__cff_index_get,"kha.graphics2.truetype.StbTruetype","stbtt__cff_index_get",0x0c6d39c6,"kha.graphics2.truetype.StbTruetype.stbtt__cff_index_get","kha/graphics2/truetype/StbTruetype.hx",423,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_436_ttBYTE,"kha.graphics2.truetype.StbTruetype","ttBYTE",0x1ef477a2,"kha.graphics2.truetype.StbTruetype.ttBYTE","kha/graphics2/truetype/StbTruetype.hx",436,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_439_ttCHAR,"kha.graphics2.truetype.StbTruetype","ttCHAR",0x1f90b770,"kha.graphics2.truetype.StbTruetype.ttCHAR","kha/graphics2/truetype/StbTruetype.hx",439,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_446_ttUSHORT,"kha.graphics2.truetype.StbTruetype","ttUSHORT",0x3b34d301,"kha.graphics2.truetype.StbTruetype.ttUSHORT","kha/graphics2/truetype/StbTruetype.hx",446,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_452_ttSHORT,"kha.graphics2.truetype.StbTruetype","ttSHORT",0xb583b282,"kha.graphics2.truetype.StbTruetype.ttSHORT","kha/graphics2/truetype/StbTruetype.hx",452,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_461_ttULONG,"kha.graphics2.truetype.StbTruetype","ttULONG",0xdef5b277,"kha.graphics2.truetype.StbTruetype.ttULONG","kha/graphics2/truetype/StbTruetype.hx",461,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_463_ttLONG,"kha.graphics2.truetype.StbTruetype","ttLONG",0x2588fe16,"kha.graphics2.truetype.StbTruetype.ttLONG","kha/graphics2/truetype/StbTruetype.hx",463,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_472_to_stbtt_uint16,"kha.graphics2.truetype.StbTruetype","to_stbtt_uint16",0xcf165e87,"kha.graphics2.truetype.StbTruetype.to_stbtt_uint16","kha/graphics2/truetype/StbTruetype.hx",472,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_475_ttFixed,"kha.graphics2.truetype.StbTruetype","ttFixed",0x4f3d5f7a,"kha.graphics2.truetype.StbTruetype.ttFixed","kha/graphics2/truetype/StbTruetype.hx",475,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_477_stbtt_tag4,"kha.graphics2.truetype.StbTruetype","stbtt_tag4",0x787a9892,"kha.graphics2.truetype.StbTruetype.stbtt_tag4","kha/graphics2/truetype/StbTruetype.hx",477,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_478_stbtt_tag,"kha.graphics2.truetype.StbTruetype","stbtt_tag",0x6ebf1d62,"kha.graphics2.truetype.StbTruetype.stbtt_tag","kha/graphics2/truetype/StbTruetype.hx",478,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_480_stbtt__isfont,"kha.graphics2.truetype.StbTruetype","stbtt__isfont",0x3c7def60,"kha.graphics2.truetype.StbTruetype.stbtt__isfont","kha/graphics2/truetype/StbTruetype.hx",480,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_491_stbtt__find_table,"kha.graphics2.truetype.StbTruetype","stbtt__find_table",0x8d01186f,"kha.graphics2.truetype.StbTruetype.stbtt__find_table","kha/graphics2/truetype/StbTruetype.hx",491,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_502_stbtt_GetFontOffsetForIndex,"kha.graphics2.truetype.StbTruetype","stbtt_GetFontOffsetForIndex",0x75577749,"kha.graphics2.truetype.StbTruetype.stbtt_GetFontOffsetForIndex","kha/graphics2/truetype/StbTruetype.hx",502,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_520_stbtt_GetNumberOfFonts,"kha.graphics2.truetype.StbTruetype","stbtt_GetNumberOfFonts",0x1144ed06,"kha.graphics2.truetype.StbTruetype.stbtt_GetNumberOfFonts","kha/graphics2/truetype/StbTruetype.hx",520,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_535_stbtt__get_subrs,"kha.graphics2.truetype.StbTruetype","stbtt__get_subrs",0x24dc7351,"kha.graphics2.truetype.StbTruetype.stbtt__get_subrs","kha/graphics2/truetype/StbTruetype.hx",535,0x5d9e0de9)
static const int _hx_array_data_79db9614_79[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_80[] = {
	(int)0,(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_547_stbtt_InitFont,"kha.graphics2.truetype.StbTruetype","stbtt_InitFont",0x8c3a8917,"kha.graphics2.truetype.StbTruetype.stbtt_InitFont","kha/graphics2/truetype/StbTruetype.hx",547,0x5d9e0de9)
static const int _hx_array_data_79db9614_148[] = {
	(int)2,
};
static const int _hx_array_data_79db9614_149[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_150[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_151[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_152[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_153[] = {
	(int)0,(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_653_stbtt_FindGlyphIndex,"kha.graphics2.truetype.StbTruetype","stbtt_FindGlyphIndex",0xbf6bd177,"kha.graphics2.truetype.StbTruetype.stbtt_FindGlyphIndex","kha/graphics2/truetype/StbTruetype.hx",653,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_746_stbtt_GetCodepointShape,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointShape",0x654c383c,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointShape","kha/graphics2/truetype/StbTruetype.hx",746,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_749_stbtt_setvertex,"kha.graphics2.truetype.StbTruetype","stbtt_setvertex",0x3161958e,"kha.graphics2.truetype.StbTruetype.stbtt_setvertex","kha/graphics2/truetype/StbTruetype.hx",749,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_757_stbtt__GetGlyfOffset,"kha.graphics2.truetype.StbTruetype","stbtt__GetGlyfOffset",0x4b91fab4,"kha.graphics2.truetype.StbTruetype.stbtt__GetGlyfOffset","kha/graphics2/truetype/StbTruetype.hx",757,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_776_stbtt_GetGlyphBox,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphBox",0x7a6db15d,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBox","kha/graphics2/truetype/StbTruetype.hx",776,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_792_stbtt_GetCodepointBox,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointBox",0x10930666,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBox","kha/graphics2/truetype/StbTruetype.hx",792,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_795_stbtt_IsGlyphEmpty,"kha.graphics2.truetype.StbTruetype","stbtt_IsGlyphEmpty",0x18ddade3,"kha.graphics2.truetype.StbTruetype.stbtt_IsGlyphEmpty","kha/graphics2/truetype/StbTruetype.hx",795,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_806_stbtt__close_shape,"kha.graphics2.truetype.StbTruetype","stbtt__close_shape",0xb4462613,"kha.graphics2.truetype.StbTruetype.stbtt__close_shape","kha/graphics2/truetype/StbTruetype.hx",806,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_821_copyVertices,"kha.graphics2.truetype.StbTruetype","copyVertices",0xec2e2f68,"kha.graphics2.truetype.StbTruetype.copyVertices","kha/graphics2/truetype/StbTruetype.hx",821,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_826_stbtt__GetGlyphShapeTT,"kha.graphics2.truetype.StbTruetype","stbtt__GetGlyphShapeTT",0x040b06a4,"kha.graphics2.truetype.StbTruetype.stbtt__GetGlyphShapeTT","kha/graphics2/truetype/StbTruetype.hx",826,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1081_STBTT__CSCTX_INIT,"kha.graphics2.truetype.StbTruetype","STBTT__CSCTX_INIT",0x07bf7fbf,"kha.graphics2.truetype.StbTruetype.STBTT__CSCTX_INIT","kha/graphics2/truetype/StbTruetype.hx",1081,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1099_stbtt__track_vertex,"kha.graphics2.truetype.StbTruetype","stbtt__track_vertex",0x942b85bf,"kha.graphics2.truetype.StbTruetype.stbtt__track_vertex","kha/graphics2/truetype/StbTruetype.hx",1099,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1107_stbtt__csctx_v,"kha.graphics2.truetype.StbTruetype","stbtt__csctx_v",0x01549467,"kha.graphics2.truetype.StbTruetype.stbtt__csctx_v","kha/graphics2/truetype/StbTruetype.hx",1107,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1123_stbtt__csctx_close_shape,"kha.graphics2.truetype.StbTruetype","stbtt__csctx_close_shape",0x790d274b,"kha.graphics2.truetype.StbTruetype.stbtt__csctx_close_shape","kha/graphics2/truetype/StbTruetype.hx",1123,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1127_stbtt__csctx_rmove_to,"kha.graphics2.truetype.StbTruetype","stbtt__csctx_rmove_to",0x243c2726,"kha.graphics2.truetype.StbTruetype.stbtt__csctx_rmove_to","kha/graphics2/truetype/StbTruetype.hx",1127,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1134_stbtt__csctx_rline_to,"kha.graphics2.truetype.StbTruetype","stbtt__csctx_rline_to",0xf94de223,"kha.graphics2.truetype.StbTruetype.stbtt__csctx_rline_to","kha/graphics2/truetype/StbTruetype.hx",1134,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1140_stbtt__csctx_rccurve_to,"kha.graphics2.truetype.StbTruetype","stbtt__csctx_rccurve_to",0x1a74e8eb,"kha.graphics2.truetype.StbTruetype.stbtt__csctx_rccurve_to","kha/graphics2/truetype/StbTruetype.hx",1140,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1151_stbtt__get_subr,"kha.graphics2.truetype.StbTruetype","stbtt__get_subr",0x78b412e2,"kha.graphics2.truetype.StbTruetype.stbtt__get_subr","kha/graphics2/truetype/StbTruetype.hx",1151,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1164_stbtt__cid_get_glyph_subrs,"kha.graphics2.truetype.StbTruetype","stbtt__cid_get_glyph_subrs",0x1aba773d,"kha.graphics2.truetype.StbTruetype.stbtt__cid_get_glyph_subrs","kha/graphics2/truetype/StbTruetype.hx",1164,0x5d9e0de9)
static const int _hx_array_data_79db9614_212[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_213[] = {
	(int)0,(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1192_STBTT__CSERR,"kha.graphics2.truetype.StbTruetype","STBTT__CSERR",0xe48ad3ee,"kha.graphics2.truetype.StbTruetype.STBTT__CSERR","kha/graphics2/truetype/StbTruetype.hx",1192,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1195_stbtt__run_charstring,"kha.graphics2.truetype.StbTruetype","stbtt__run_charstring",0x7c122782,"kha.graphics2.truetype.StbTruetype.stbtt__run_charstring","kha/graphics2/truetype/StbTruetype.hx",1195,0x5d9e0de9)
static const int _hx_array_data_79db9614_261[] = {
	(int)0,
};
static const int _hx_array_data_79db9614_262[] = {
	(int)0,(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1458_stbtt__GetGlyphShapeT2,"kha.graphics2.truetype.StbTruetype","stbtt__GetGlyphShapeT2",0x040b0682,"kha.graphics2.truetype.StbTruetype.stbtt__GetGlyphShapeT2","kha/graphics2/truetype/StbTruetype.hx",1458,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1474_stbtt__GetGlyphInfoT2,"kha.graphics2.truetype.StbTruetype","stbtt__GetGlyphInfoT2",0x1a0552e9,"kha.graphics2.truetype.StbTruetype.stbtt__GetGlyphInfoT2","kha/graphics2/truetype/StbTruetype.hx",1474,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1487_stbtt_GetGlyphShape,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphShape",0xfb60cef3,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphShape","kha/graphics2/truetype/StbTruetype.hx",1487,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1493_stbtt_GetGlyphHMetrics,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphHMetrics",0x4333ea29,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphHMetrics","kha/graphics2/truetype/StbTruetype.hx",1493,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1506_stbtt_GetGlyphKernAdvance,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphKernAdvance",0x1e04b09e,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphKernAdvance","kha/graphics2/truetype/StbTruetype.hx",1506,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1536_stbtt_GetCodepointKernAdvance,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointKernAdvance",0x7383b6a7,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointKernAdvance","kha/graphics2/truetype/StbTruetype.hx",1536,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1543_stbtt_GetCodepointHMetrics,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointHMetrics",0x35d0b480,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointHMetrics","kha/graphics2/truetype/StbTruetype.hx",1543,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1546_stbtt_GetFontVMetrics,"kha.graphics2.truetype.StbTruetype","stbtt_GetFontVMetrics",0x39aaf1fa,"kha.graphics2.truetype.StbTruetype.stbtt_GetFontVMetrics","kha/graphics2/truetype/StbTruetype.hx",1546,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1554_stbtt_GetFontBoundingBox,"kha.graphics2.truetype.StbTruetype","stbtt_GetFontBoundingBox",0xf62c3d9a,"kha.graphics2.truetype.StbTruetype.stbtt_GetFontBoundingBox","kha/graphics2/truetype/StbTruetype.hx",1554,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1563_stbtt_ScaleForPixelHeight,"kha.graphics2.truetype.StbTruetype","stbtt_ScaleForPixelHeight",0x31fdc196,"kha.graphics2.truetype.StbTruetype.stbtt_ScaleForPixelHeight","kha/graphics2/truetype/StbTruetype.hx",1563,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1568_stbtt_ScaleForMappingEmToPixels,"kha.graphics2.truetype.StbTruetype","stbtt_ScaleForMappingEmToPixels",0xa0885387,"kha.graphics2.truetype.StbTruetype.stbtt_ScaleForMappingEmToPixels","kha/graphics2/truetype/StbTruetype.hx",1568,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1578_stbtt_GetGlyphBitmapBoxSubpixel,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphBitmapBoxSubpixel",0x27894954,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBoxSubpixel","kha/graphics2/truetype/StbTruetype.hx",1578,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1601_stbtt_GetGlyphBitmapBox,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphBitmapBox",0xb80f022e,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapBox","kha/graphics2/truetype/StbTruetype.hx",1601,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1605_stbtt_GetCodepointBitmapBoxSubpixel,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointBitmapBoxSubpixel",0x1d51fc1d,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBitmapBoxSubpixel","kha/graphics2/truetype/StbTruetype.hx",1605,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1609_stbtt_GetCodepointBitmapBox,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointBitmapBox",0x0ea343f7,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBitmapBox","kha/graphics2/truetype/StbTruetype.hx",1609,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1616_stbtt__new_active,"kha.graphics2.truetype.StbTruetype","stbtt__new_active",0x85e5272c,"kha.graphics2.truetype.StbTruetype.stbtt__new_active","kha/graphics2/truetype/StbTruetype.hx",1616,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1635_stbtt__handle_clipped_edge,"kha.graphics2.truetype.StbTruetype","stbtt__handle_clipped_edge",0xa6dfd0ed,"kha.graphics2.truetype.StbTruetype.stbtt__handle_clipped_edge","kha/graphics2/truetype/StbTruetype.hx",1635,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1671_stbtt__fill_active_edges_new,"kha.graphics2.truetype.StbTruetype","stbtt__fill_active_edges_new",0xf3ac6eb3,"kha.graphics2.truetype.StbTruetype.stbtt__fill_active_edges_new","kha/graphics2/truetype/StbTruetype.hx",1671,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1832_stbtt__rasterize_sorted_edges,"kha.graphics2.truetype.StbTruetype","stbtt__rasterize_sorted_edges",0x45291a03,"kha.graphics2.truetype.StbTruetype.stbtt__rasterize_sorted_edges","kha/graphics2/truetype/StbTruetype.hx",1832,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1937_STBTT__COMPARE,"kha.graphics2.truetype.StbTruetype","STBTT__COMPARE",0x3c42521e,"kha.graphics2.truetype.StbTruetype.STBTT__COMPARE","kha/graphics2/truetype/StbTruetype.hx",1937,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1939_stbtt__sort_edges_ins_sort,"kha.graphics2.truetype.StbTruetype","stbtt__sort_edges_ins_sort",0x1b014492,"kha.graphics2.truetype.StbTruetype.stbtt__sort_edges_ins_sort","kha/graphics2/truetype/StbTruetype.hx",1939,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_1959_stbtt__sort_edges_quicksort,"kha.graphics2.truetype.StbTruetype","stbtt__sort_edges_quicksort",0x0f0bde68,"kha.graphics2.truetype.StbTruetype.stbtt__sort_edges_quicksort","kha/graphics2/truetype/StbTruetype.hx",1959,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2021_stbtt__sort_edges,"kha.graphics2.truetype.StbTruetype","stbtt__sort_edges",0x1f8f8edc,"kha.graphics2.truetype.StbTruetype.stbtt__sort_edges","kha/graphics2/truetype/StbTruetype.hx",2021,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2026_stbtt__rasterize,"kha.graphics2.truetype.StbTruetype","stbtt__rasterize",0x7ac8deb0,"kha.graphics2.truetype.StbTruetype.stbtt__rasterize","kha/graphics2/truetype/StbTruetype.hx",2026,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2085_stbtt__add_point,"kha.graphics2.truetype.StbTruetype","stbtt__add_point",0xa284662b,"kha.graphics2.truetype.StbTruetype.stbtt__add_point","kha/graphics2/truetype/StbTruetype.hx",2085,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2092_stbtt__tesselate_curve,"kha.graphics2.truetype.StbTruetype","stbtt__tesselate_curve",0xc138f203,"kha.graphics2.truetype.StbTruetype.stbtt__tesselate_curve","kha/graphics2/truetype/StbTruetype.hx",2092,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2111_stbtt__tesselate_cubic,"kha.graphics2.truetype.StbTruetype","stbtt__tesselate_cubic",0xc12cc29e,"kha.graphics2.truetype.StbTruetype.stbtt__tesselate_cubic","kha/graphics2/truetype/StbTruetype.hx",2111,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2153_stbtt_FlattenCurves,"kha.graphics2.truetype.StbTruetype","stbtt_FlattenCurves",0x59f844b0,"kha.graphics2.truetype.StbTruetype.stbtt_FlattenCurves","kha/graphics2/truetype/StbTruetype.hx",2153,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2232_stbtt_Rasterize,"kha.graphics2.truetype.StbTruetype","stbtt_Rasterize",0x2524cddf,"kha.graphics2.truetype.StbTruetype.stbtt_Rasterize","kha/graphics2/truetype/StbTruetype.hx",2232,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2246_stbtt_GetGlyphBitmapSubpixel,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphBitmapSubpixel",0x89588a03,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmapSubpixel","kha/graphics2/truetype/StbTruetype.hx",2246,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2286_stbtt_GetGlyphBitmap,"kha.graphics2.truetype.StbTruetype","stbtt_GetGlyphBitmap",0xcd367bdd,"kha.graphics2.truetype.StbTruetype.stbtt_GetGlyphBitmap","kha/graphics2/truetype/StbTruetype.hx",2286,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2289_stbtt_MakeGlyphBitmapSubpixel,"kha.graphics2.truetype.StbTruetype","stbtt_MakeGlyphBitmapSubpixel",0xcea2707b,"kha.graphics2.truetype.StbTruetype.stbtt_MakeGlyphBitmapSubpixel","kha/graphics2/truetype/StbTruetype.hx",2289,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2309_stbtt_MakeGlyphBitmap,"kha.graphics2.truetype.StbTruetype","stbtt_MakeGlyphBitmap",0x89f92a55,"kha.graphics2.truetype.StbTruetype.stbtt_MakeGlyphBitmap","kha/graphics2/truetype/StbTruetype.hx",2309,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2313_stbtt_GetCodepointBitmapSubpixel,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointBitmapSubpixel",0x6a742f9a,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBitmapSubpixel","kha/graphics2/truetype/StbTruetype.hx",2313,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2317_stbtt_MakeCodepointBitmapSubpixel,"kha.graphics2.truetype.StbTruetype","stbtt_MakeCodepointBitmapSubpixel",0xc9beb212,"kha.graphics2.truetype.StbTruetype.stbtt_MakeCodepointBitmapSubpixel","kha/graphics2/truetype/StbTruetype.hx",2317,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2321_stbtt_GetCodepointBitmap,"kha.graphics2.truetype.StbTruetype","stbtt_GetCodepointBitmap",0x11473274,"kha.graphics2.truetype.StbTruetype.stbtt_GetCodepointBitmap","kha/graphics2/truetype/StbTruetype.hx",2321,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2325_stbtt_MakeCodepointBitmap,"kha.graphics2.truetype.StbTruetype","stbtt_MakeCodepointBitmap",0x280e7cec,"kha.graphics2.truetype.StbTruetype.stbtt_MakeCodepointBitmap","kha/graphics2/truetype/StbTruetype.hx",2325,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2338_stbtt_BakeFontBitmap,"kha.graphics2.truetype.StbTruetype","stbtt_BakeFontBitmap",0x6b4863af,"kha.graphics2.truetype.StbTruetype.stbtt_BakeFontBitmap","kha/graphics2/truetype/StbTruetype.hx",2338,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_2395_stbtt_GetBakedQuad,"kha.graphics2.truetype.StbTruetype","stbtt_GetBakedQuad",0x21e67034,"kha.graphics2.truetype.StbTruetype.stbtt_GetBakedQuad","kha/graphics2/truetype/StbTruetype.hx",2395,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_218_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",218,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_219_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",219,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_220_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",220,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_221_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",221,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_223_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",223,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_224_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",224,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_225_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",225,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_226_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",226,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_227_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",227,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_230_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",230,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_231_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",231,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_232_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",232,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_233_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",233,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_236_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",236,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_237_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",237,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_238_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",238,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_239_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",239,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_240_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",240,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_243_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",243,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_244_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",244,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_245_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",245,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_246_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",246,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_249_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",249,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_250_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",250,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_251_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",251,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_252_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",252,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_253_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",253,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_254_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",254,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_255_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",255,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_256_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",256,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_260_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",260,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_261_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",261,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_262_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",262,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_263_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",263,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_264_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",264,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_265_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",265,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_266_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",266,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_267_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",267,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_268_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",268,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_269_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",269,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_270_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",270,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_271_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",271,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_274_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",274,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_275_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",275,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_276_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",276,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_277_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",277,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_278_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",278,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_279_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",279,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_280_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",280,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_281_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",281,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_282_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",282,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_283_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",283,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_284_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",284,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_285_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",285,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_286_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",286,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_287_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",287,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_289_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",289,0x5d9e0de9)
HX_LOCAL_STACK_FRAME(_hx_pos_d244f07465627071_291_boot,"kha.graphics2.truetype.StbTruetype","boot",0x311214cc,"kha.graphics2.truetype.StbTruetype.boot","kha/graphics2/truetype/StbTruetype.hx",291,0x5d9e0de9)
namespace kha{
namespace graphics2{
namespace truetype{

void StbTruetype_obj::__construct() { }

Dynamic StbTruetype_obj::__CreateEmpty() { return new StbTruetype_obj; }

void *StbTruetype_obj::_hx_vtable = 0;

Dynamic StbTruetype_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StbTruetype_obj > _hx_result = new StbTruetype_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StbTruetype_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x170942de;
}

void StbTruetype_obj::STBTT_assert(bool value){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_215_STBTT_assert)
HXDLIN( 215)		if (!(value)) {
HXDLIN( 215)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,STBTT_assert,(void))

Float StbTruetype_obj::STBTT_POINT_SIZE(Float x){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_216_STBTT_POINT_SIZE)
HXDLIN( 216)		return -(x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,STBTT_POINT_SIZE,return )

int StbTruetype_obj::STBTT_vmove;

int StbTruetype_obj::STBTT_vline;

int StbTruetype_obj::STBTT_vcurve;

int StbTruetype_obj::STBTT_vcubic;

int StbTruetype_obj::STBTT_MACSTYLE_DONTCARE;

int StbTruetype_obj::STBTT_MACSTYLE_BOLD;

int StbTruetype_obj::STBTT_MACSTYLE_ITALIC;

int StbTruetype_obj::STBTT_MACSTYLE_UNDERSCORE;

int StbTruetype_obj::STBTT_MACSTYLE_NONE;

int StbTruetype_obj::STBTT_PLATFORM_ID_UNICODE;

int StbTruetype_obj::STBTT_PLATFORM_ID_MAC;

int StbTruetype_obj::STBTT_PLATFORM_ID_ISO;

int StbTruetype_obj::STBTT_PLATFORM_ID_MICROSOFT;

int StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_0;

int StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_1;

int StbTruetype_obj::STBTT_UNICODE_EID_ISO_10646;

int StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_BMP;

int StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_FULL;

int StbTruetype_obj::STBTT_MS_EID_SYMBOL;

int StbTruetype_obj::STBTT_MS_EID_UNICODE_BMP;

int StbTruetype_obj::STBTT_MS_EID_SHIFTJIS;

int StbTruetype_obj::STBTT_MS_EID_UNICODE_FULL;

int StbTruetype_obj::STBTT_MAC_EID_ROMAN;

int StbTruetype_obj::STBTT_MAC_EID_ARABIC;

int StbTruetype_obj::STBTT_MAC_EID_JAPANESE;

int StbTruetype_obj::STBTT_MAC_EID_HEBREW;

int StbTruetype_obj::STBTT_MAC_EID_CHINESE_TRAD;

int StbTruetype_obj::STBTT_MAC_EID_GREEK;

int StbTruetype_obj::STBTT_MAC_EID_KOREAN;

int StbTruetype_obj::STBTT_MAC_EID_RUSSIAN;

int StbTruetype_obj::STBTT_MS_LANG_ENGLISH;

int StbTruetype_obj::STBTT_MS_LANG_ITALIAN;

int StbTruetype_obj::STBTT_MS_LANG_CHINESE;

int StbTruetype_obj::STBTT_MS_LANG_JAPANESE;

int StbTruetype_obj::STBTT_MS_LANG_DUTCH;

int StbTruetype_obj::STBTT_MS_LANG_KOREAN;

int StbTruetype_obj::STBTT_MS_LANG_FRENCH;

int StbTruetype_obj::STBTT_MS_LANG_RUSSIAN;

int StbTruetype_obj::STBTT_MS_LANG_GERMAN;

int StbTruetype_obj::STBTT_MS_LANG_SPANISH;

int StbTruetype_obj::STBTT_MS_LANG_HEBREW;

int StbTruetype_obj::STBTT_MS_LANG_SWEDISH;

int StbTruetype_obj::STBTT_MAC_LANG_ENGLISH;

int StbTruetype_obj::STBTT_MAC_LANG_JAPANESE;

int StbTruetype_obj::STBTT_MAC_LANG_ARABIC;

int StbTruetype_obj::STBTT_MAC_LANG_KOREAN;

int StbTruetype_obj::STBTT_MAC_LANG_DUTCH;

int StbTruetype_obj::STBTT_MAC_LANG_RUSSIAN;

int StbTruetype_obj::STBTT_MAC_LANG_FRENCH;

int StbTruetype_obj::STBTT_MAC_LANG_SPANISH;

int StbTruetype_obj::STBTT_MAC_LANG_GERMAN;

int StbTruetype_obj::STBTT_MAC_LANG_SWEDISH;

int StbTruetype_obj::STBTT_MAC_LANG_HEBREW;

int StbTruetype_obj::STBTT_MAC_LANG_CHINESE_SIMPLIFIED;

int StbTruetype_obj::STBTT_MAC_LANG_ITALIAN;

int StbTruetype_obj::STBTT_MAC_LANG_CHINESE_TRAD;

int StbTruetype_obj::STBTT_MAX_OVERSAMPLE;

int StbTruetype_obj::STBTT_RASTERIZER_VERSION;

int StbTruetype_obj::stbtt__buf_get8( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_298_stbtt__buf_get8)
HXLINE( 299)		int b1 = b->cursor;
HXDLIN( 299)		if ((b1 >= b->data->get_length())) {
HXLINE( 300)			return 0;
            		}
HXLINE( 301)		return b->data->readU8(b->cursor++);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__buf_get8,return )

int StbTruetype_obj::stbtt__buf_peek8( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_304_stbtt__buf_peek8)
HXLINE( 305)		int b1 = b->cursor;
HXDLIN( 305)		if ((b1 >= b->data->get_length())) {
HXLINE( 306)			return 0;
            		}
HXLINE( 307)		return b->data->readU8(b->cursor);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__buf_peek8,return )

void StbTruetype_obj::stbtt__buf_seek( ::kha::graphics2::truetype::Stbtt__buf b,int o){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_310_stbtt__buf_seek)
HXLINE( 311)		{
HXLINE( 311)			bool value;
HXDLIN( 311)			if ((o <= b->data->get_length())) {
HXLINE( 311)				value = (o < 0);
            			}
            			else {
HXLINE( 311)				value = true;
            			}
HXDLIN( 311)			if (!(!(value))) {
HXLINE( 311)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
            		}
HXLINE( 312)		int _hx_tmp;
HXDLIN( 312)		bool _hx_tmp1;
HXDLIN( 312)		if ((o <= b->data->get_length())) {
HXLINE( 312)			_hx_tmp1 = (o < 0);
            		}
            		else {
HXLINE( 312)			_hx_tmp1 = true;
            		}
HXDLIN( 312)		if (_hx_tmp1) {
HXLINE( 312)			_hx_tmp = b->data->get_length();
            		}
            		else {
HXLINE( 312)			_hx_tmp = o;
            		}
HXDLIN( 312)		b->cursor = _hx_tmp;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__buf_seek,(void))

void StbTruetype_obj::stbtt__buf_skip( ::kha::graphics2::truetype::Stbtt__buf b,int o){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_316_stbtt__buf_skip)
HXDLIN( 316)		int o1 = (b->cursor + o);
HXDLIN( 316)		{
HXDLIN( 316)			bool value;
HXDLIN( 316)			if ((o1 <= b->data->get_length())) {
HXDLIN( 316)				value = (o1 < 0);
            			}
            			else {
HXDLIN( 316)				value = true;
            			}
HXDLIN( 316)			if (!(!(value))) {
HXDLIN( 316)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
            		}
HXDLIN( 316)		int _hx_tmp;
HXDLIN( 316)		bool _hx_tmp1;
HXDLIN( 316)		if ((o1 <= b->data->get_length())) {
HXDLIN( 316)			_hx_tmp1 = (o1 < 0);
            		}
            		else {
HXDLIN( 316)			_hx_tmp1 = true;
            		}
HXDLIN( 316)		if (_hx_tmp1) {
HXDLIN( 316)			_hx_tmp = b->data->get_length();
            		}
            		else {
HXDLIN( 316)			_hx_tmp = o1;
            		}
HXDLIN( 316)		b->cursor = _hx_tmp;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__buf_skip,(void))

int StbTruetype_obj::stbtt__buf_get( ::kha::graphics2::truetype::Stbtt__buf b,int n){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_319_stbtt__buf_get)
HXLINE( 320)		int v = 0;
HXLINE( 321)		bool _hx_tmp;
HXDLIN( 321)		if ((n >= 1)) {
HXLINE( 321)			_hx_tmp = (n <= 4);
            		}
            		else {
HXLINE( 321)			_hx_tmp = false;
            		}
HXDLIN( 321)		if (!(_hx_tmp)) {
HXLINE( 321)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE( 322)		{
HXLINE( 322)			int _g = 0;
HXDLIN( 322)			int _g1 = n;
HXDLIN( 322)			while((_g < _g1)){
HXLINE( 322)				_g = (_g + 1);
HXDLIN( 322)				int i = (_g - 1);
HXLINE( 323)				int v1;
HXDLIN( 323)				int b1 = b->cursor;
HXDLIN( 323)				if ((b1 >= b->data->get_length())) {
HXLINE( 323)					v1 = 0;
            				}
            				else {
HXLINE( 323)					v1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 323)				v = ((v << 8) | v1);
            			}
            		}
HXLINE( 324)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__buf_get,return )

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__new_buf( ::kha::internal::BytesBlob p,int size){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_327_stbtt__new_buf)
HXLINE( 328)		 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXLINE( 329)		if ((size >= (int)1073741824)) {
HXLINE( 329)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE( 330)		r->_hx_set_data(HX_CTX, p);
HXLINE( 331)		r->cursor = 0;
HXLINE( 332)		return r;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__new_buf,return )

int StbTruetype_obj::stbtt__buf_get16( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_336_stbtt__buf_get16)
HXDLIN( 336)		int v = 0;
HXDLIN( 336)		{
HXDLIN( 336)			int _g = 0;
HXDLIN( 336)			int _g1 = 2;
HXDLIN( 336)			while((_g < _g1)){
HXDLIN( 336)				_g = (_g + 1);
HXDLIN( 336)				int i = (_g - 1);
HXDLIN( 336)				int v1;
HXDLIN( 336)				int b1 = b->cursor;
HXDLIN( 336)				if ((b1 >= b->data->get_length())) {
HXDLIN( 336)					v1 = 0;
            				}
            				else {
HXDLIN( 336)					v1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 336)				v = ((v << 8) | v1);
            			}
            		}
HXDLIN( 336)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__buf_get16,return )

int StbTruetype_obj::stbtt__buf_get32( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_340_stbtt__buf_get32)
HXDLIN( 340)		int v = 0;
HXDLIN( 340)		{
HXDLIN( 340)			int _g = 0;
HXDLIN( 340)			int _g1 = 4;
HXDLIN( 340)			while((_g < _g1)){
HXDLIN( 340)				_g = (_g + 1);
HXDLIN( 340)				int i = (_g - 1);
HXDLIN( 340)				int v1;
HXDLIN( 340)				int b1 = b->cursor;
HXDLIN( 340)				if ((b1 >= b->data->get_length())) {
HXDLIN( 340)					v1 = 0;
            				}
            				else {
HXDLIN( 340)					v1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 340)				v = ((v << 8) | v1);
            			}
            		}
HXDLIN( 340)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__buf_get32,return )

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__buf_range( ::kha::graphics2::truetype::Stbtt__buf b,int o,int s){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_343_stbtt__buf_range)
HXLINE( 344)		 ::kha::internal::BytesBlob p = null();
HXDLIN( 344)		 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 344)		r->_hx_set_data(HX_CTX, p);
HXDLIN( 344)		r->cursor = 0;
HXDLIN( 344)		 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXLINE( 345)		bool _hx_tmp;
HXDLIN( 345)		bool _hx_tmp1;
HXDLIN( 345)		bool _hx_tmp2;
HXDLIN( 345)		if ((o >= 0)) {
HXLINE( 345)			_hx_tmp2 = (s < 0);
            		}
            		else {
HXLINE( 345)			_hx_tmp2 = true;
            		}
HXDLIN( 345)		if (!(_hx_tmp2)) {
HXLINE( 345)			_hx_tmp1 = (o > b->data->get_length());
            		}
            		else {
HXLINE( 345)			_hx_tmp1 = true;
            		}
HXDLIN( 345)		if (!(_hx_tmp1)) {
HXLINE( 345)			_hx_tmp = (s > (b->data->get_length() - o));
            		}
            		else {
HXLINE( 345)			_hx_tmp = true;
            		}
HXDLIN( 345)		if (_hx_tmp) {
HXLINE( 345)			return r1;
            		}
HXLINE( 346)		r1->_hx_set_data(HX_CTX, b->data->sub(o,s));
HXLINE( 347)		return r1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__buf_range,return )

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__cff_get_index( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_350_stbtt__cff_get_index)
HXLINE( 351)		int start = b->cursor;
HXLINE( 352)		int v = 0;
HXDLIN( 352)		{
HXLINE( 352)			int _g = 0;
HXDLIN( 352)			int _g1 = 2;
HXDLIN( 352)			while((_g < _g1)){
HXLINE( 352)				_g = (_g + 1);
HXDLIN( 352)				int i = (_g - 1);
HXDLIN( 352)				int v1;
HXDLIN( 352)				int b1 = b->cursor;
HXDLIN( 352)				if ((b1 >= b->data->get_length())) {
HXLINE( 352)					v1 = 0;
            				}
            				else {
HXLINE( 352)					v1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 352)				v = ((v << 8) | v1);
            			}
            		}
HXDLIN( 352)		int count = v;
HXLINE( 353)		if ((count > 0)) {
HXLINE( 354)			int offsize;
HXDLIN( 354)			int b2 = b->cursor;
HXDLIN( 354)			if ((b2 >= b->data->get_length())) {
HXLINE( 354)				offsize = 0;
            			}
            			else {
HXLINE( 354)				offsize = b->data->readU8(b->cursor++);
            			}
HXLINE( 355)			bool _hx_tmp;
HXDLIN( 355)			if ((offsize >= 1)) {
HXLINE( 355)				_hx_tmp = (offsize <= 4);
            			}
            			else {
HXLINE( 355)				_hx_tmp = false;
            			}
HXDLIN( 355)			if (!(_hx_tmp)) {
HXLINE( 355)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXLINE( 356)			{
HXLINE( 356)				int o = (b->cursor + (offsize * count));
HXDLIN( 356)				{
HXLINE( 356)					bool value;
HXDLIN( 356)					if ((o <= b->data->get_length())) {
HXLINE( 356)						value = (o < 0);
            					}
            					else {
HXLINE( 356)						value = true;
            					}
HXDLIN( 356)					if (!(!(value))) {
HXLINE( 356)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 356)				int _hx_tmp1;
HXDLIN( 356)				bool _hx_tmp2;
HXDLIN( 356)				if ((o <= b->data->get_length())) {
HXLINE( 356)					_hx_tmp2 = (o < 0);
            				}
            				else {
HXLINE( 356)					_hx_tmp2 = true;
            				}
HXDLIN( 356)				if (_hx_tmp2) {
HXLINE( 356)					_hx_tmp1 = b->data->get_length();
            				}
            				else {
HXLINE( 356)					_hx_tmp1 = o;
            				}
HXDLIN( 356)				b->cursor = _hx_tmp1;
            			}
HXLINE( 357)			{
HXLINE( 357)				int v2 = 0;
HXDLIN( 357)				bool o1;
HXDLIN( 357)				if ((offsize >= 1)) {
HXLINE( 357)					o1 = (offsize <= 4);
            				}
            				else {
HXLINE( 357)					o1 = false;
            				}
HXDLIN( 357)				if (!(o1)) {
HXLINE( 357)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 357)				{
HXLINE( 357)					int _g2 = 0;
HXDLIN( 357)					int _g11 = offsize;
HXDLIN( 357)					while((_g2 < _g11)){
HXLINE( 357)						_g2 = (_g2 + 1);
HXDLIN( 357)						int i1 = (_g2 - 1);
HXDLIN( 357)						int v3;
HXDLIN( 357)						int b3 = b->cursor;
HXDLIN( 357)						if ((b3 >= b->data->get_length())) {
HXLINE( 357)							v3 = 0;
            						}
            						else {
HXLINE( 357)							v3 = b->data->readU8(b->cursor++);
            						}
HXDLIN( 357)						v2 = ((v2 << 8) | v3);
            					}
            				}
HXDLIN( 357)				{
HXLINE( 357)					int o2 = (b->cursor + (v2 - 1));
HXDLIN( 357)					{
HXLINE( 357)						bool value1;
HXDLIN( 357)						if ((o2 <= b->data->get_length())) {
HXLINE( 357)							value1 = (o2 < 0);
            						}
            						else {
HXLINE( 357)							value1 = true;
            						}
HXDLIN( 357)						if (!(!(value1))) {
HXLINE( 357)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN( 357)					int _hx_tmp3;
HXDLIN( 357)					bool _hx_tmp4;
HXDLIN( 357)					if ((o2 <= b->data->get_length())) {
HXLINE( 357)						_hx_tmp4 = (o2 < 0);
            					}
            					else {
HXLINE( 357)						_hx_tmp4 = true;
            					}
HXDLIN( 357)					if (_hx_tmp4) {
HXLINE( 357)						_hx_tmp3 = b->data->get_length();
            					}
            					else {
HXLINE( 357)						_hx_tmp3 = o2;
            					}
HXDLIN( 357)					b->cursor = _hx_tmp3;
            				}
            			}
HXLINE( 358)			int s = (b->cursor - start);
HXDLIN( 358)			 ::kha::internal::BytesBlob p = null();
HXDLIN( 358)			 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 358)			r->_hx_set_data(HX_CTX, p);
HXDLIN( 358)			r->cursor = 0;
HXDLIN( 358)			 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXDLIN( 358)			bool _hx_tmp5;
HXDLIN( 358)			bool _hx_tmp6;
HXDLIN( 358)			bool _hx_tmp7;
HXDLIN( 358)			if ((start >= 0)) {
HXLINE( 358)				_hx_tmp7 = (s < 0);
            			}
            			else {
HXLINE( 358)				_hx_tmp7 = true;
            			}
HXDLIN( 358)			if (!(_hx_tmp7)) {
HXLINE( 358)				_hx_tmp6 = (start > b->data->get_length());
            			}
            			else {
HXLINE( 358)				_hx_tmp6 = true;
            			}
HXDLIN( 358)			if (!(_hx_tmp6)) {
HXLINE( 358)				_hx_tmp5 = (s > (b->data->get_length() - start));
            			}
            			else {
HXLINE( 358)				_hx_tmp5 = true;
            			}
HXDLIN( 358)			if (_hx_tmp5) {
HXLINE( 358)				return r1;
            			}
            			else {
HXLINE( 358)				r1->_hx_set_data(HX_CTX, b->data->sub(start,s));
HXDLIN( 358)				return r1;
            			}
            		}
HXLINE( 360)		return b;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__cff_get_index,return )

int StbTruetype_obj::stbtt__cff_int( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_363_stbtt__cff_int)
HXLINE( 364)		int b0;
HXDLIN( 364)		int b1 = b->cursor;
HXDLIN( 364)		if ((b1 >= b->data->get_length())) {
HXLINE( 364)			b0 = 0;
            		}
            		else {
HXLINE( 364)			b0 = b->data->readU8(b->cursor++);
            		}
HXLINE( 365)		bool _hx_tmp;
HXDLIN( 365)		if ((b0 >= 32)) {
HXLINE( 365)			_hx_tmp = (b0 <= 246);
            		}
            		else {
HXLINE( 365)			_hx_tmp = false;
            		}
HXDLIN( 365)		if (_hx_tmp) {
HXLINE( 365)			return (b0 - 139);
            		}
            		else {
HXLINE( 366)			bool _hx_tmp1;
HXDLIN( 366)			if ((b0 >= 247)) {
HXLINE( 366)				_hx_tmp1 = (b0 <= 250);
            			}
            			else {
HXLINE( 366)				_hx_tmp1 = false;
            			}
HXDLIN( 366)			if (_hx_tmp1) {
HXLINE( 366)				int _hx_tmp2;
HXDLIN( 366)				int b2 = b->cursor;
HXDLIN( 366)				if ((b2 >= b->data->get_length())) {
HXLINE( 366)					_hx_tmp2 = 0;
            				}
            				else {
HXLINE( 366)					_hx_tmp2 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 366)				return ((((b0 - 247) * 256) + _hx_tmp2) + 108);
            			}
            			else {
HXLINE( 367)				bool _hx_tmp3;
HXDLIN( 367)				if ((b0 >= 251)) {
HXLINE( 367)					_hx_tmp3 = (b0 <= 254);
            				}
            				else {
HXLINE( 367)					_hx_tmp3 = false;
            				}
HXDLIN( 367)				if (_hx_tmp3) {
HXLINE( 367)					int _hx_tmp4;
HXDLIN( 367)					int b3 = b->cursor;
HXDLIN( 367)					if ((b3 >= b->data->get_length())) {
HXLINE( 367)						_hx_tmp4 = 0;
            					}
            					else {
HXLINE( 367)						_hx_tmp4 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 367)					return (((-((b0 - 251)) * 256) - _hx_tmp4) - 108);
            				}
            				else {
HXLINE( 368)					if ((b0 == 28)) {
HXLINE( 368)						int v = 0;
HXDLIN( 368)						{
HXLINE( 368)							int _g = 0;
HXDLIN( 368)							int _g1 = 2;
HXDLIN( 368)							while((_g < _g1)){
HXLINE( 368)								_g = (_g + 1);
HXDLIN( 368)								int i = (_g - 1);
HXDLIN( 368)								int v1;
HXDLIN( 368)								int b4 = b->cursor;
HXDLIN( 368)								if ((b4 >= b->data->get_length())) {
HXLINE( 368)									v1 = 0;
            								}
            								else {
HXLINE( 368)									v1 = b->data->readU8(b->cursor++);
            								}
HXDLIN( 368)								v = ((v << 8) | v1);
            							}
            						}
HXDLIN( 368)						return v;
            					}
            					else {
HXLINE( 369)						if ((b0 == 29)) {
HXLINE( 369)							int v2 = 0;
HXDLIN( 369)							{
HXLINE( 369)								int _g2 = 0;
HXDLIN( 369)								int _g11 = 4;
HXDLIN( 369)								while((_g2 < _g11)){
HXLINE( 369)									_g2 = (_g2 + 1);
HXDLIN( 369)									int i1 = (_g2 - 1);
HXDLIN( 369)									int v3;
HXDLIN( 369)									int b5 = b->cursor;
HXDLIN( 369)									if ((b5 >= b->data->get_length())) {
HXLINE( 369)										v3 = 0;
            									}
            									else {
HXLINE( 369)										v3 = b->data->readU8(b->cursor++);
            									}
HXDLIN( 369)									v2 = ((v2 << 8) | v3);
            								}
            							}
HXDLIN( 369)							return v2;
            						}
            						else {
HXLINE( 371)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
            				}
            			}
            		}
HXLINE( 365)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__cff_int,return )

void StbTruetype_obj::stbtt__cff_skip_operand( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_376_stbtt__cff_skip_operand)
HXLINE( 377)		int v;
HXDLIN( 377)		int b0;
HXDLIN( 377)		int b1 = b->cursor;
HXDLIN( 377)		if ((b1 >= b->data->get_length())) {
HXLINE( 377)			b0 = 0;
            		}
            		else {
HXLINE( 377)			b0 = b->data->readU8(b->cursor);
            		}
HXLINE( 378)		if ((b0 < 28)) {
HXLINE( 378)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE( 379)		if ((b0 == 30)) {
HXLINE( 380)			{
HXLINE( 380)				int o = (b->cursor + 1);
HXDLIN( 380)				{
HXLINE( 380)					bool value;
HXDLIN( 380)					if ((o <= b->data->get_length())) {
HXLINE( 380)						value = (o < 0);
            					}
            					else {
HXLINE( 380)						value = true;
            					}
HXDLIN( 380)					if (!(!(value))) {
HXLINE( 380)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 380)				int _hx_tmp;
HXDLIN( 380)				bool _hx_tmp1;
HXDLIN( 380)				if ((o <= b->data->get_length())) {
HXLINE( 380)					_hx_tmp1 = (o < 0);
            				}
            				else {
HXLINE( 380)					_hx_tmp1 = true;
            				}
HXDLIN( 380)				if (_hx_tmp1) {
HXLINE( 380)					_hx_tmp = b->data->get_length();
            				}
            				else {
HXLINE( 380)					_hx_tmp = o;
            				}
HXDLIN( 380)				b->cursor = _hx_tmp;
            			}
HXLINE( 381)			while(true){
HXLINE( 381)				int b2 = b->cursor;
HXDLIN( 381)				if (!((b2 < b->data->get_length()))) {
HXLINE( 381)					goto _hx_goto_20;
            				}
HXLINE( 382)				int b3 = b->cursor;
HXDLIN( 382)				if ((b3 >= b->data->get_length())) {
HXLINE( 382)					v = 0;
            				}
            				else {
HXLINE( 382)					v = b->data->readU8(b->cursor++);
            				}
HXLINE( 383)				bool _hx_tmp2;
HXDLIN( 383)				if (((v & 15) != 15)) {
HXLINE( 383)					_hx_tmp2 = ((v >> 4) == 15);
            				}
            				else {
HXLINE( 383)					_hx_tmp2 = true;
            				}
HXDLIN( 383)				if (_hx_tmp2) {
HXLINE( 384)					goto _hx_goto_20;
            				}
            			}
            			_hx_goto_20:;
            		}
            		else {
HXLINE( 387)			int b01;
HXDLIN( 387)			int b4 = b->cursor;
HXDLIN( 387)			if ((b4 >= b->data->get_length())) {
HXLINE( 387)				b01 = 0;
            			}
            			else {
HXLINE( 387)				b01 = b->data->readU8(b->cursor++);
            			}
HXDLIN( 387)			bool _hx_tmp3;
HXDLIN( 387)			if ((b01 >= 32)) {
HXLINE( 387)				_hx_tmp3 = (b01 <= 246);
            			}
            			else {
HXLINE( 387)				_hx_tmp3 = false;
            			}
HXDLIN( 387)			if (!(_hx_tmp3)) {
HXLINE( 387)				bool _hx_tmp4;
HXDLIN( 387)				if ((b01 >= 247)) {
HXLINE( 387)					_hx_tmp4 = (b01 <= 250);
            				}
            				else {
HXLINE( 387)					_hx_tmp4 = false;
            				}
HXDLIN( 387)				if (_hx_tmp4) {
HXLINE( 387)					int b5 = b->cursor;
HXDLIN( 387)					if ((b5 < b->data->get_length())) {
HXLINE( 387)						b->data->readU8(b->cursor++);
            					}
            				}
            				else {
HXLINE( 387)					bool _hx_tmp5;
HXDLIN( 387)					if ((b01 >= 251)) {
HXLINE( 387)						_hx_tmp5 = (b01 <= 254);
            					}
            					else {
HXLINE( 387)						_hx_tmp5 = false;
            					}
HXDLIN( 387)					if (_hx_tmp5) {
HXLINE( 387)						int b6 = b->cursor;
HXDLIN( 387)						if ((b6 < b->data->get_length())) {
HXLINE( 387)							b->data->readU8(b->cursor++);
            						}
            					}
            					else {
HXLINE( 387)						if ((b01 == 28)) {
HXLINE( 387)							int v1 = 0;
HXDLIN( 387)							{
HXLINE( 387)								int _g = 0;
HXDLIN( 387)								int _g1 = 2;
HXDLIN( 387)								while((_g < _g1)){
HXLINE( 387)									_g = (_g + 1);
HXDLIN( 387)									int i = (_g - 1);
HXDLIN( 387)									int v2;
HXDLIN( 387)									int b7 = b->cursor;
HXDLIN( 387)									if ((b7 >= b->data->get_length())) {
HXLINE( 387)										v2 = 0;
            									}
            									else {
HXLINE( 387)										v2 = b->data->readU8(b->cursor++);
            									}
HXDLIN( 387)									v1 = ((v1 << 8) | v2);
            								}
            							}
            						}
            						else {
HXLINE( 387)							if ((b01 == 29)) {
HXLINE( 387)								int v3 = 0;
HXDLIN( 387)								{
HXLINE( 387)									int _g2 = 0;
HXDLIN( 387)									int _g11 = 4;
HXDLIN( 387)									while((_g2 < _g11)){
HXLINE( 387)										_g2 = (_g2 + 1);
HXDLIN( 387)										int i1 = (_g2 - 1);
HXDLIN( 387)										int v4;
HXDLIN( 387)										int b8 = b->cursor;
HXDLIN( 387)										if ((b8 >= b->data->get_length())) {
HXLINE( 387)											v4 = 0;
            										}
            										else {
HXLINE( 387)											v4 = b->data->readU8(b->cursor++);
            										}
HXDLIN( 387)										v3 = ((v3 << 8) | v4);
            									}
            								}
            							}
            							else {
HXLINE( 387)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__cff_skip_operand,(void))

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__dict_get( ::kha::graphics2::truetype::Stbtt__buf b,int key){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_391_stbtt__dict_get)
HXLINE( 392)		{
HXLINE( 392)			if ((0 > b->data->get_length())) {
HXLINE( 392)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 392)			int _hx_tmp;
HXDLIN( 392)			if ((0 > b->data->get_length())) {
HXLINE( 392)				_hx_tmp = b->data->get_length();
            			}
            			else {
HXLINE( 392)				_hx_tmp = 0;
            			}
HXDLIN( 392)			b->cursor = _hx_tmp;
            		}
HXLINE( 393)		 ::kha::graphics2::truetype::Stbtt__buf ret = null();
HXLINE( 394)		while(true){
HXLINE( 394)			int b1 = b->cursor;
HXDLIN( 394)			if (!((b1 < b->data->get_length()))) {
HXLINE( 394)				goto _hx_goto_24;
            			}
HXLINE( 395)			int start = b->cursor;
HXDLIN( 395)			int op;
HXLINE( 396)			while(true){
HXLINE( 396)				int _hx_tmp1;
HXDLIN( 396)				int b2 = b->cursor;
HXDLIN( 396)				if ((b2 >= b->data->get_length())) {
HXLINE( 396)					_hx_tmp1 = 0;
            				}
            				else {
HXLINE( 396)					_hx_tmp1 = b->data->readU8(b->cursor);
            				}
HXDLIN( 396)				if (!((_hx_tmp1 >= 28))) {
HXLINE( 396)					goto _hx_goto_25;
            				}
HXLINE( 397)				int v;
HXDLIN( 397)				int b0;
HXDLIN( 397)				int b3 = b->cursor;
HXDLIN( 397)				if ((b3 >= b->data->get_length())) {
HXLINE( 397)					b0 = 0;
            				}
            				else {
HXLINE( 397)					b0 = b->data->readU8(b->cursor);
            				}
HXDLIN( 397)				if ((b0 < 28)) {
HXLINE( 397)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 397)				if ((b0 == 30)) {
HXLINE( 397)					{
HXLINE( 397)						int o = (b->cursor + 1);
HXDLIN( 397)						{
HXLINE( 397)							bool value;
HXDLIN( 397)							if ((o <= b->data->get_length())) {
HXLINE( 397)								value = (o < 0);
            							}
            							else {
HXLINE( 397)								value = true;
            							}
HXDLIN( 397)							if (!(!(value))) {
HXLINE( 397)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 397)						int _hx_tmp2;
HXDLIN( 397)						bool _hx_tmp3;
HXDLIN( 397)						if ((o <= b->data->get_length())) {
HXLINE( 397)							_hx_tmp3 = (o < 0);
            						}
            						else {
HXLINE( 397)							_hx_tmp3 = true;
            						}
HXDLIN( 397)						if (_hx_tmp3) {
HXLINE( 397)							_hx_tmp2 = b->data->get_length();
            						}
            						else {
HXLINE( 397)							_hx_tmp2 = o;
            						}
HXDLIN( 397)						b->cursor = _hx_tmp2;
            					}
HXDLIN( 397)					while(true){
HXLINE( 397)						int b4 = b->cursor;
HXDLIN( 397)						if (!((b4 < b->data->get_length()))) {
HXLINE( 397)							goto _hx_goto_26;
            						}
HXDLIN( 397)						int b5 = b->cursor;
HXDLIN( 397)						if ((b5 >= b->data->get_length())) {
HXLINE( 397)							v = 0;
            						}
            						else {
HXLINE( 397)							v = b->data->readU8(b->cursor++);
            						}
HXDLIN( 397)						bool _hx_tmp4;
HXDLIN( 397)						if (((v & 15) != 15)) {
HXLINE( 397)							_hx_tmp4 = ((v >> 4) == 15);
            						}
            						else {
HXLINE( 397)							_hx_tmp4 = true;
            						}
HXDLIN( 397)						if (_hx_tmp4) {
HXLINE( 397)							goto _hx_goto_26;
            						}
            					}
            					_hx_goto_26:;
            				}
            				else {
HXLINE( 397)					int b01;
HXDLIN( 397)					int b6 = b->cursor;
HXDLIN( 397)					if ((b6 >= b->data->get_length())) {
HXLINE( 397)						b01 = 0;
            					}
            					else {
HXLINE( 397)						b01 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 397)					bool _hx_tmp5;
HXDLIN( 397)					if ((b01 >= 32)) {
HXLINE( 397)						_hx_tmp5 = (b01 <= 246);
            					}
            					else {
HXLINE( 397)						_hx_tmp5 = false;
            					}
HXDLIN( 397)					if (!(_hx_tmp5)) {
HXLINE( 397)						bool _hx_tmp6;
HXDLIN( 397)						if ((b01 >= 247)) {
HXLINE( 397)							_hx_tmp6 = (b01 <= 250);
            						}
            						else {
HXLINE( 397)							_hx_tmp6 = false;
            						}
HXDLIN( 397)						if (_hx_tmp6) {
HXLINE( 397)							int b7 = b->cursor;
HXDLIN( 397)							if ((b7 < b->data->get_length())) {
HXLINE( 397)								b->data->readU8(b->cursor++);
            							}
            						}
            						else {
HXLINE( 397)							bool _hx_tmp7;
HXDLIN( 397)							if ((b01 >= 251)) {
HXLINE( 397)								_hx_tmp7 = (b01 <= 254);
            							}
            							else {
HXLINE( 397)								_hx_tmp7 = false;
            							}
HXDLIN( 397)							if (_hx_tmp7) {
HXLINE( 397)								int b8 = b->cursor;
HXDLIN( 397)								if ((b8 < b->data->get_length())) {
HXLINE( 397)									b->data->readU8(b->cursor++);
            								}
            							}
            							else {
HXLINE( 397)								if ((b01 == 28)) {
HXLINE( 397)									int v1 = 0;
HXDLIN( 397)									{
HXLINE( 397)										int _g = 0;
HXDLIN( 397)										int _g1 = 2;
HXDLIN( 397)										while((_g < _g1)){
HXLINE( 397)											_g = (_g + 1);
HXDLIN( 397)											int i = (_g - 1);
HXDLIN( 397)											int v2;
HXDLIN( 397)											int b9 = b->cursor;
HXDLIN( 397)											if ((b9 >= b->data->get_length())) {
HXLINE( 397)												v2 = 0;
            											}
            											else {
HXLINE( 397)												v2 = b->data->readU8(b->cursor++);
            											}
HXDLIN( 397)											v1 = ((v1 << 8) | v2);
            										}
            									}
            								}
            								else {
HXLINE( 397)									if ((b01 == 29)) {
HXLINE( 397)										int v3 = 0;
HXDLIN( 397)										{
HXLINE( 397)											int _g2 = 0;
HXDLIN( 397)											int _g11 = 4;
HXDLIN( 397)											while((_g2 < _g11)){
HXLINE( 397)												_g2 = (_g2 + 1);
HXDLIN( 397)												int i1 = (_g2 - 1);
HXDLIN( 397)												int v4;
HXDLIN( 397)												int b10 = b->cursor;
HXDLIN( 397)												if ((b10 >= b->data->get_length())) {
HXLINE( 397)													v4 = 0;
            												}
            												else {
HXLINE( 397)													v4 = b->data->readU8(b->cursor++);
            												}
HXDLIN( 397)												v3 = ((v3 << 8) | v4);
            											}
            										}
            									}
            									else {
HXLINE( 397)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            			_hx_goto_25:;
HXLINE( 395)			int end = b->cursor;
HXLINE( 399)			int b11 = b->cursor;
HXDLIN( 399)			if ((b11 >= b->data->get_length())) {
HXLINE( 399)				op = 0;
            			}
            			else {
HXLINE( 399)				op = b->data->readU8(b->cursor++);
            			}
HXLINE( 400)			if ((op == 12)) {
HXLINE( 400)				int op1;
HXDLIN( 400)				int b12 = b->cursor;
HXDLIN( 400)				if ((b12 >= b->data->get_length())) {
HXLINE( 400)					op1 = 0;
            				}
            				else {
HXLINE( 400)					op1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 400)				op = (op1 | 256);
            			}
HXLINE( 401)			if ((op == key)) {
HXLINE( 402)				int s = (end - start);
HXDLIN( 402)				 ::kha::internal::BytesBlob p = null();
HXDLIN( 402)				 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 402)				r->_hx_set_data(HX_CTX, p);
HXDLIN( 402)				r->cursor = 0;
HXDLIN( 402)				 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXDLIN( 402)				bool ret1;
HXDLIN( 402)				bool ret2;
HXDLIN( 402)				bool ret3;
HXDLIN( 402)				if ((start >= 0)) {
HXLINE( 402)					ret3 = (s < 0);
            				}
            				else {
HXLINE( 402)					ret3 = true;
            				}
HXDLIN( 402)				if (!(ret3)) {
HXLINE( 402)					ret2 = (start > b->data->get_length());
            				}
            				else {
HXLINE( 402)					ret2 = true;
            				}
HXDLIN( 402)				if (!(ret2)) {
HXLINE( 402)					ret1 = (s > (b->data->get_length() - start));
            				}
            				else {
HXLINE( 402)					ret1 = true;
            				}
HXDLIN( 402)				if (ret1) {
HXLINE( 402)					ret = r1;
            				}
            				else {
HXLINE( 402)					r1->_hx_set_data(HX_CTX, b->data->sub(start,s));
HXDLIN( 402)					ret = r1;
            				}
HXLINE( 403)				goto _hx_goto_24;
            			}
            		}
            		_hx_goto_24:;
HXLINE( 406)		if (hx::IsNotNull( ret )) {
HXLINE( 406)			return ret;
            		}
            		else {
HXLINE( 406)			 ::kha::internal::BytesBlob p1 = null();
HXDLIN( 406)			 ::kha::graphics2::truetype::Stbtt__buf r2 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 406)			r2->_hx_set_data(HX_CTX, p1);
HXDLIN( 406)			r2->cursor = 0;
HXDLIN( 406)			 ::kha::graphics2::truetype::Stbtt__buf r3 = r2;
HXDLIN( 406)			bool _hx_tmp8;
HXDLIN( 406)			if ((0 <= b->data->get_length())) {
HXLINE( 406)				_hx_tmp8 = (0 > b->data->get_length());
            			}
            			else {
HXLINE( 406)				_hx_tmp8 = true;
            			}
HXDLIN( 406)			if (_hx_tmp8) {
HXLINE( 406)				return r3;
            			}
            			else {
HXLINE( 406)				r3->_hx_set_data(HX_CTX, b->data->sub(0,0));
HXDLIN( 406)				return r3;
            			}
            		}
HXDLIN( 406)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__dict_get,return )

void StbTruetype_obj::stbtt__dict_get_ints( ::kha::graphics2::truetype::Stbtt__buf b,int key,int outcount,::Array< int > out){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_409_stbtt__dict_get_ints)
HXLINE( 410)		int i = 0;
HXDLIN( 410)		{
HXLINE( 410)			if ((0 > b->data->get_length())) {
HXLINE( 410)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 410)			int _hx_tmp;
HXDLIN( 410)			if ((0 > b->data->get_length())) {
HXLINE( 410)				_hx_tmp = b->data->get_length();
            			}
            			else {
HXLINE( 410)				_hx_tmp = 0;
            			}
HXDLIN( 410)			b->cursor = _hx_tmp;
            		}
HXDLIN( 410)		 ::kha::graphics2::truetype::Stbtt__buf ret = null();
HXDLIN( 410)		while(true){
HXLINE( 410)			int b1 = b->cursor;
HXDLIN( 410)			if (!((b1 < b->data->get_length()))) {
HXLINE( 410)				goto _hx_goto_30;
            			}
HXDLIN( 410)			int start = b->cursor;
HXDLIN( 410)			int op;
HXDLIN( 410)			while(true){
HXLINE( 410)				int _hx_tmp1;
HXDLIN( 410)				int b2 = b->cursor;
HXDLIN( 410)				if ((b2 >= b->data->get_length())) {
HXLINE( 410)					_hx_tmp1 = 0;
            				}
            				else {
HXLINE( 410)					_hx_tmp1 = b->data->readU8(b->cursor);
            				}
HXDLIN( 410)				if (!((_hx_tmp1 >= 28))) {
HXLINE( 410)					goto _hx_goto_31;
            				}
HXDLIN( 410)				int v;
HXDLIN( 410)				int b0;
HXDLIN( 410)				int b3 = b->cursor;
HXDLIN( 410)				if ((b3 >= b->data->get_length())) {
HXLINE( 410)					b0 = 0;
            				}
            				else {
HXLINE( 410)					b0 = b->data->readU8(b->cursor);
            				}
HXDLIN( 410)				if ((b0 < 28)) {
HXLINE( 410)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 410)				if ((b0 == 30)) {
HXLINE( 410)					{
HXLINE( 410)						int o = (b->cursor + 1);
HXDLIN( 410)						{
HXLINE( 410)							bool value;
HXDLIN( 410)							if ((o <= b->data->get_length())) {
HXLINE( 410)								value = (o < 0);
            							}
            							else {
HXLINE( 410)								value = true;
            							}
HXDLIN( 410)							if (!(!(value))) {
HXLINE( 410)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 410)						int _hx_tmp2;
HXDLIN( 410)						bool _hx_tmp3;
HXDLIN( 410)						if ((o <= b->data->get_length())) {
HXLINE( 410)							_hx_tmp3 = (o < 0);
            						}
            						else {
HXLINE( 410)							_hx_tmp3 = true;
            						}
HXDLIN( 410)						if (_hx_tmp3) {
HXLINE( 410)							_hx_tmp2 = b->data->get_length();
            						}
            						else {
HXLINE( 410)							_hx_tmp2 = o;
            						}
HXDLIN( 410)						b->cursor = _hx_tmp2;
            					}
HXDLIN( 410)					while(true){
HXLINE( 410)						int b4 = b->cursor;
HXDLIN( 410)						if (!((b4 < b->data->get_length()))) {
HXLINE( 410)							goto _hx_goto_32;
            						}
HXDLIN( 410)						int b5 = b->cursor;
HXDLIN( 410)						if ((b5 >= b->data->get_length())) {
HXLINE( 410)							v = 0;
            						}
            						else {
HXLINE( 410)							v = b->data->readU8(b->cursor++);
            						}
HXDLIN( 410)						bool _hx_tmp4;
HXDLIN( 410)						if (((v & 15) != 15)) {
HXLINE( 410)							_hx_tmp4 = ((v >> 4) == 15);
            						}
            						else {
HXLINE( 410)							_hx_tmp4 = true;
            						}
HXDLIN( 410)						if (_hx_tmp4) {
HXLINE( 410)							goto _hx_goto_32;
            						}
            					}
            					_hx_goto_32:;
            				}
            				else {
HXLINE( 410)					int b01;
HXDLIN( 410)					int b6 = b->cursor;
HXDLIN( 410)					if ((b6 >= b->data->get_length())) {
HXLINE( 410)						b01 = 0;
            					}
            					else {
HXLINE( 410)						b01 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 410)					bool _hx_tmp5;
HXDLIN( 410)					if ((b01 >= 32)) {
HXLINE( 410)						_hx_tmp5 = (b01 <= 246);
            					}
            					else {
HXLINE( 410)						_hx_tmp5 = false;
            					}
HXDLIN( 410)					if (!(_hx_tmp5)) {
HXLINE( 410)						bool _hx_tmp6;
HXDLIN( 410)						if ((b01 >= 247)) {
HXLINE( 410)							_hx_tmp6 = (b01 <= 250);
            						}
            						else {
HXLINE( 410)							_hx_tmp6 = false;
            						}
HXDLIN( 410)						if (_hx_tmp6) {
HXLINE( 410)							int b7 = b->cursor;
HXDLIN( 410)							if ((b7 < b->data->get_length())) {
HXLINE( 410)								b->data->readU8(b->cursor++);
            							}
            						}
            						else {
HXLINE( 410)							bool _hx_tmp7;
HXDLIN( 410)							if ((b01 >= 251)) {
HXLINE( 410)								_hx_tmp7 = (b01 <= 254);
            							}
            							else {
HXLINE( 410)								_hx_tmp7 = false;
            							}
HXDLIN( 410)							if (_hx_tmp7) {
HXLINE( 410)								int b8 = b->cursor;
HXDLIN( 410)								if ((b8 < b->data->get_length())) {
HXLINE( 410)									b->data->readU8(b->cursor++);
            								}
            							}
            							else {
HXLINE( 410)								if ((b01 == 28)) {
HXLINE( 410)									int v1 = 0;
HXDLIN( 410)									{
HXLINE( 410)										int _g = 0;
HXDLIN( 410)										int _g1 = 2;
HXDLIN( 410)										while((_g < _g1)){
HXLINE( 410)											_g = (_g + 1);
HXDLIN( 410)											int i1 = (_g - 1);
HXDLIN( 410)											int v2;
HXDLIN( 410)											int b9 = b->cursor;
HXDLIN( 410)											if ((b9 >= b->data->get_length())) {
HXLINE( 410)												v2 = 0;
            											}
            											else {
HXLINE( 410)												v2 = b->data->readU8(b->cursor++);
            											}
HXDLIN( 410)											v1 = ((v1 << 8) | v2);
            										}
            									}
            								}
            								else {
HXLINE( 410)									if ((b01 == 29)) {
HXLINE( 410)										int v3 = 0;
HXDLIN( 410)										{
HXLINE( 410)											int _g2 = 0;
HXDLIN( 410)											int _g11 = 4;
HXDLIN( 410)											while((_g2 < _g11)){
HXLINE( 410)												_g2 = (_g2 + 1);
HXDLIN( 410)												int i2 = (_g2 - 1);
HXDLIN( 410)												int v4;
HXDLIN( 410)												int b10 = b->cursor;
HXDLIN( 410)												if ((b10 >= b->data->get_length())) {
HXLINE( 410)													v4 = 0;
            												}
            												else {
HXLINE( 410)													v4 = b->data->readU8(b->cursor++);
            												}
HXDLIN( 410)												v3 = ((v3 << 8) | v4);
            											}
            										}
            									}
            									else {
HXLINE( 410)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            			_hx_goto_31:;
HXDLIN( 410)			int end = b->cursor;
HXDLIN( 410)			int b11 = b->cursor;
HXDLIN( 410)			if ((b11 >= b->data->get_length())) {
HXLINE( 410)				op = 0;
            			}
            			else {
HXLINE( 410)				op = b->data->readU8(b->cursor++);
            			}
HXDLIN( 410)			if ((op == 12)) {
HXLINE( 410)				int op1;
HXDLIN( 410)				int b12 = b->cursor;
HXDLIN( 410)				if ((b12 >= b->data->get_length())) {
HXLINE( 410)					op1 = 0;
            				}
            				else {
HXLINE( 410)					op1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 410)				op = (op1 | 256);
            			}
HXDLIN( 410)			if ((op == key)) {
HXLINE( 410)				int s = (end - start);
HXDLIN( 410)				 ::kha::internal::BytesBlob p = null();
HXDLIN( 410)				 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 410)				r->_hx_set_data(HX_CTX, p);
HXDLIN( 410)				r->cursor = 0;
HXDLIN( 410)				 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXDLIN( 410)				bool ret1;
HXDLIN( 410)				bool ret2;
HXDLIN( 410)				bool ret3;
HXDLIN( 410)				if ((start >= 0)) {
HXLINE( 410)					ret3 = (s < 0);
            				}
            				else {
HXLINE( 410)					ret3 = true;
            				}
HXDLIN( 410)				if (!(ret3)) {
HXLINE( 410)					ret2 = (start > b->data->get_length());
            				}
            				else {
HXLINE( 410)					ret2 = true;
            				}
HXDLIN( 410)				if (!(ret2)) {
HXLINE( 410)					ret1 = (s > (b->data->get_length() - start));
            				}
            				else {
HXLINE( 410)					ret1 = true;
            				}
HXDLIN( 410)				if (ret1) {
HXLINE( 410)					ret = r1;
            				}
            				else {
HXLINE( 410)					r1->_hx_set_data(HX_CTX, b->data->sub(start,s));
HXDLIN( 410)					ret = r1;
            				}
HXDLIN( 410)				goto _hx_goto_30;
            			}
            		}
            		_hx_goto_30:;
HXDLIN( 410)		 ::kha::graphics2::truetype::Stbtt__buf operands;
HXDLIN( 410)		if (hx::IsNotNull( ret )) {
HXLINE( 410)			operands = ret;
            		}
            		else {
HXLINE( 410)			 ::kha::internal::BytesBlob p1 = null();
HXDLIN( 410)			 ::kha::graphics2::truetype::Stbtt__buf r2 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 410)			r2->_hx_set_data(HX_CTX, p1);
HXDLIN( 410)			r2->cursor = 0;
HXDLIN( 410)			 ::kha::graphics2::truetype::Stbtt__buf r3 = r2;
HXDLIN( 410)			bool operands1;
HXDLIN( 410)			if ((0 <= b->data->get_length())) {
HXLINE( 410)				operands1 = (0 > b->data->get_length());
            			}
            			else {
HXLINE( 410)				operands1 = true;
            			}
HXDLIN( 410)			if (operands1) {
HXLINE( 410)				operands = r3;
            			}
            			else {
HXLINE( 410)				r3->_hx_set_data(HX_CTX, b->data->sub(0,0));
HXDLIN( 410)				operands = r3;
            			}
            		}
HXLINE( 411)		while(true){
HXLINE( 411)			bool _hx_tmp8;
HXDLIN( 411)			if ((i < outcount)) {
HXLINE( 411)				int operands2 = operands->cursor;
HXDLIN( 411)				_hx_tmp8 = (operands2 < operands->data->get_length());
            			}
            			else {
HXLINE( 411)				_hx_tmp8 = false;
            			}
HXDLIN( 411)			if (!(_hx_tmp8)) {
HXLINE( 411)				goto _hx_goto_35;
            			}
HXLINE( 412)			int b02;
HXDLIN( 412)			int operands3 = operands->cursor;
HXDLIN( 412)			if ((operands3 >= operands->data->get_length())) {
HXLINE( 412)				b02 = 0;
            			}
            			else {
HXLINE( 412)				b02 = operands->data->readU8(operands->cursor++);
            			}
HXDLIN( 412)			int _hx_tmp9;
HXDLIN( 412)			bool _hx_tmp10;
HXDLIN( 412)			if ((b02 >= 32)) {
HXLINE( 412)				_hx_tmp10 = (b02 <= 246);
            			}
            			else {
HXLINE( 412)				_hx_tmp10 = false;
            			}
HXDLIN( 412)			if (_hx_tmp10) {
HXLINE( 412)				_hx_tmp9 = (b02 - 139);
            			}
            			else {
HXLINE( 412)				bool _hx_tmp11;
HXDLIN( 412)				if ((b02 >= 247)) {
HXLINE( 412)					_hx_tmp11 = (b02 <= 250);
            				}
            				else {
HXLINE( 412)					_hx_tmp11 = false;
            				}
HXDLIN( 412)				if (_hx_tmp11) {
HXLINE( 412)					int _hx_tmp12;
HXDLIN( 412)					int operands4 = operands->cursor;
HXDLIN( 412)					if ((operands4 >= operands->data->get_length())) {
HXLINE( 412)						_hx_tmp12 = 0;
            					}
            					else {
HXLINE( 412)						_hx_tmp12 = operands->data->readU8(operands->cursor++);
            					}
HXDLIN( 412)					_hx_tmp9 = ((((b02 - 247) * 256) + _hx_tmp12) + 108);
            				}
            				else {
HXLINE( 412)					bool _hx_tmp13;
HXDLIN( 412)					if ((b02 >= 251)) {
HXLINE( 412)						_hx_tmp13 = (b02 <= 254);
            					}
            					else {
HXLINE( 412)						_hx_tmp13 = false;
            					}
HXDLIN( 412)					if (_hx_tmp13) {
HXLINE( 412)						int _hx_tmp14;
HXDLIN( 412)						int operands5 = operands->cursor;
HXDLIN( 412)						if ((operands5 >= operands->data->get_length())) {
HXLINE( 412)							_hx_tmp14 = 0;
            						}
            						else {
HXLINE( 412)							_hx_tmp14 = operands->data->readU8(operands->cursor++);
            						}
HXDLIN( 412)						_hx_tmp9 = (((-((b02 - 251)) * 256) - _hx_tmp14) - 108);
            					}
            					else {
HXLINE( 412)						if ((b02 == 28)) {
HXLINE( 412)							int v5 = 0;
HXDLIN( 412)							{
HXLINE( 412)								int _g3 = 0;
HXDLIN( 412)								int _g12 = 2;
HXDLIN( 412)								while((_g3 < _g12)){
HXLINE( 412)									_g3 = (_g3 + 1);
HXDLIN( 412)									int i3 = (_g3 - 1);
HXDLIN( 412)									int v6;
HXDLIN( 412)									int operands6 = operands->cursor;
HXDLIN( 412)									if ((operands6 >= operands->data->get_length())) {
HXLINE( 412)										v6 = 0;
            									}
            									else {
HXLINE( 412)										v6 = operands->data->readU8(operands->cursor++);
            									}
HXDLIN( 412)									v5 = ((v5 << 8) | v6);
            								}
            							}
HXDLIN( 412)							_hx_tmp9 = v5;
            						}
            						else {
HXLINE( 412)							if ((b02 == 29)) {
HXLINE( 412)								int v7 = 0;
HXDLIN( 412)								{
HXLINE( 412)									int _g4 = 0;
HXDLIN( 412)									int _g13 = 4;
HXDLIN( 412)									while((_g4 < _g13)){
HXLINE( 412)										_g4 = (_g4 + 1);
HXDLIN( 412)										int i4 = (_g4 - 1);
HXDLIN( 412)										int v8;
HXDLIN( 412)										int operands7 = operands->cursor;
HXDLIN( 412)										if ((operands7 >= operands->data->get_length())) {
HXLINE( 412)											v8 = 0;
            										}
            										else {
HXLINE( 412)											v8 = operands->data->readU8(operands->cursor++);
            										}
HXDLIN( 412)										v7 = ((v7 << 8) | v8);
            									}
            								}
HXDLIN( 412)								_hx_tmp9 = v7;
            							}
            							else {
HXLINE( 412)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
            					}
            				}
            			}
HXDLIN( 412)			out[i] = _hx_tmp9;
HXLINE( 413)			i = (i + 1);
            		}
            		_hx_goto_35:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(StbTruetype_obj,stbtt__dict_get_ints,(void))

int StbTruetype_obj::stbtt__cff_index_count( ::kha::graphics2::truetype::Stbtt__buf b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_418_stbtt__cff_index_count)
HXLINE( 419)		{
HXLINE( 419)			if ((0 > b->data->get_length())) {
HXLINE( 419)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 419)			int _hx_tmp;
HXDLIN( 419)			if ((0 > b->data->get_length())) {
HXLINE( 419)				_hx_tmp = b->data->get_length();
            			}
            			else {
HXLINE( 419)				_hx_tmp = 0;
            			}
HXDLIN( 419)			b->cursor = _hx_tmp;
            		}
HXLINE( 420)		int v = 0;
HXDLIN( 420)		{
HXLINE( 420)			int _g = 0;
HXDLIN( 420)			int _g1 = 2;
HXDLIN( 420)			while((_g < _g1)){
HXLINE( 420)				_g = (_g + 1);
HXDLIN( 420)				int i = (_g - 1);
HXDLIN( 420)				int v1;
HXDLIN( 420)				int b1 = b->cursor;
HXDLIN( 420)				if ((b1 >= b->data->get_length())) {
HXLINE( 420)					v1 = 0;
            				}
            				else {
HXLINE( 420)					v1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 420)				v = ((v << 8) | v1);
            			}
            		}
HXDLIN( 420)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__cff_index_count,return )

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__cff_index_get( ::kha::graphics2::truetype::Stbtt__buf b,int i){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_423_stbtt__cff_index_get)
HXLINE( 424)		{
HXLINE( 424)			if ((0 > b->data->get_length())) {
HXLINE( 424)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 424)			int _hx_tmp;
HXDLIN( 424)			if ((0 > b->data->get_length())) {
HXLINE( 424)				_hx_tmp = b->data->get_length();
            			}
            			else {
HXLINE( 424)				_hx_tmp = 0;
            			}
HXDLIN( 424)			b->cursor = _hx_tmp;
            		}
HXLINE( 425)		int v = 0;
HXDLIN( 425)		{
HXLINE( 425)			int _g = 0;
HXDLIN( 425)			int _g1 = 2;
HXDLIN( 425)			while((_g < _g1)){
HXLINE( 425)				_g = (_g + 1);
HXDLIN( 425)				int i1 = (_g - 1);
HXDLIN( 425)				int v1;
HXDLIN( 425)				int b1 = b->cursor;
HXDLIN( 425)				if ((b1 >= b->data->get_length())) {
HXLINE( 425)					v1 = 0;
            				}
            				else {
HXLINE( 425)					v1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 425)				v = ((v << 8) | v1);
            			}
            		}
HXDLIN( 425)		int count = v;
HXLINE( 426)		int offsize;
HXDLIN( 426)		int b2 = b->cursor;
HXDLIN( 426)		if ((b2 >= b->data->get_length())) {
HXLINE( 426)			offsize = 0;
            		}
            		else {
HXLINE( 426)			offsize = b->data->readU8(b->cursor++);
            		}
HXLINE( 427)		bool _hx_tmp1;
HXDLIN( 427)		if ((i >= 0)) {
HXLINE( 427)			_hx_tmp1 = (i < count);
            		}
            		else {
HXLINE( 427)			_hx_tmp1 = false;
            		}
HXDLIN( 427)		if (!(_hx_tmp1)) {
HXLINE( 427)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE( 428)		bool _hx_tmp2;
HXDLIN( 428)		if ((offsize >= 1)) {
HXLINE( 428)			_hx_tmp2 = (offsize <= 4);
            		}
            		else {
HXLINE( 428)			_hx_tmp2 = false;
            		}
HXDLIN( 428)		if (!(_hx_tmp2)) {
HXLINE( 428)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE( 429)		{
HXLINE( 429)			int o = (b->cursor + (i * offsize));
HXDLIN( 429)			{
HXLINE( 429)				bool value;
HXDLIN( 429)				if ((o <= b->data->get_length())) {
HXLINE( 429)					value = (o < 0);
            				}
            				else {
HXLINE( 429)					value = true;
            				}
HXDLIN( 429)				if (!(!(value))) {
HXLINE( 429)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            			}
HXDLIN( 429)			int _hx_tmp3;
HXDLIN( 429)			bool _hx_tmp4;
HXDLIN( 429)			if ((o <= b->data->get_length())) {
HXLINE( 429)				_hx_tmp4 = (o < 0);
            			}
            			else {
HXLINE( 429)				_hx_tmp4 = true;
            			}
HXDLIN( 429)			if (_hx_tmp4) {
HXLINE( 429)				_hx_tmp3 = b->data->get_length();
            			}
            			else {
HXLINE( 429)				_hx_tmp3 = o;
            			}
HXDLIN( 429)			b->cursor = _hx_tmp3;
            		}
HXLINE( 430)		int v2 = 0;
HXDLIN( 430)		bool _hx_tmp5;
HXDLIN( 430)		if ((offsize >= 1)) {
HXLINE( 430)			_hx_tmp5 = (offsize <= 4);
            		}
            		else {
HXLINE( 430)			_hx_tmp5 = false;
            		}
HXDLIN( 430)		if (!(_hx_tmp5)) {
HXLINE( 430)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN( 430)		{
HXLINE( 430)			int _g2 = 0;
HXDLIN( 430)			int _g11 = offsize;
HXDLIN( 430)			while((_g2 < _g11)){
HXLINE( 430)				_g2 = (_g2 + 1);
HXDLIN( 430)				int i2 = (_g2 - 1);
HXDLIN( 430)				int v3;
HXDLIN( 430)				int b3 = b->cursor;
HXDLIN( 430)				if ((b3 >= b->data->get_length())) {
HXLINE( 430)					v3 = 0;
            				}
            				else {
HXLINE( 430)					v3 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 430)				v2 = ((v2 << 8) | v3);
            			}
            		}
HXDLIN( 430)		int start = v2;
HXLINE( 431)		int v4 = 0;
HXDLIN( 431)		bool _hx_tmp6;
HXDLIN( 431)		if ((offsize >= 1)) {
HXLINE( 431)			_hx_tmp6 = (offsize <= 4);
            		}
            		else {
HXLINE( 431)			_hx_tmp6 = false;
            		}
HXDLIN( 431)		if (!(_hx_tmp6)) {
HXLINE( 431)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN( 431)		{
HXLINE( 431)			int _g3 = 0;
HXDLIN( 431)			int _g12 = offsize;
HXDLIN( 431)			while((_g3 < _g12)){
HXLINE( 431)				_g3 = (_g3 + 1);
HXDLIN( 431)				int i3 = (_g3 - 1);
HXDLIN( 431)				int v5;
HXDLIN( 431)				int b4 = b->cursor;
HXDLIN( 431)				if ((b4 >= b->data->get_length())) {
HXLINE( 431)					v5 = 0;
            				}
            				else {
HXLINE( 431)					v5 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 431)				v4 = ((v4 << 8) | v5);
            			}
            		}
HXDLIN( 431)		int end = v4;
HXLINE( 432)		int o1 = ((2 + ((count + 1) * offsize)) + start);
HXDLIN( 432)		int s = (end - start);
HXDLIN( 432)		 ::kha::internal::BytesBlob p = null();
HXDLIN( 432)		 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 432)		r->_hx_set_data(HX_CTX, p);
HXDLIN( 432)		r->cursor = 0;
HXDLIN( 432)		 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXDLIN( 432)		bool _hx_tmp7;
HXDLIN( 432)		bool _hx_tmp8;
HXDLIN( 432)		bool _hx_tmp9;
HXDLIN( 432)		if ((o1 >= 0)) {
HXLINE( 432)			_hx_tmp9 = (s < 0);
            		}
            		else {
HXLINE( 432)			_hx_tmp9 = true;
            		}
HXDLIN( 432)		if (!(_hx_tmp9)) {
HXLINE( 432)			_hx_tmp8 = (o1 > b->data->get_length());
            		}
            		else {
HXLINE( 432)			_hx_tmp8 = true;
            		}
HXDLIN( 432)		if (!(_hx_tmp8)) {
HXLINE( 432)			_hx_tmp7 = (s > (b->data->get_length() - o1));
            		}
            		else {
HXLINE( 432)			_hx_tmp7 = true;
            		}
HXDLIN( 432)		if (_hx_tmp7) {
HXLINE( 432)			return r1;
            		}
            		else {
HXLINE( 432)			r1->_hx_set_data(HX_CTX, b->data->sub(o1,s));
HXDLIN( 432)			return r1;
            		}
HXDLIN( 432)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__cff_index_get,return )

int StbTruetype_obj::ttBYTE( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_436_ttBYTE)
HXDLIN( 436)		return p->readU8(pos);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttBYTE,return )

int StbTruetype_obj::ttCHAR( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_439_ttCHAR)
HXLINE( 440)		int n = p->readU8(pos);
HXLINE( 441)		if ((n >= 128)) {
HXLINE( 442)			return (n - 256);
            		}
HXLINE( 443)		return n;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttCHAR,return )

int StbTruetype_obj::ttUSHORT( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_446_ttUSHORT)
HXLINE( 447)		int ch1 = p->readU8(pos);
HXLINE( 448)		int ch2 = p->readU8((pos + 1));
HXLINE( 449)		return (ch2 | (ch1 << 8));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttUSHORT,return )

int StbTruetype_obj::ttSHORT( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_452_ttSHORT)
HXLINE( 453)		int ch1 = p->readU8(pos);
HXLINE( 454)		int ch2 = p->readU8((pos + 1));
HXLINE( 455)		int n = (ch2 | (ch1 << 8));
HXLINE( 456)		if (((n & 32768) != 0)) {
HXLINE( 457)			return (n - 65536);
            		}
HXLINE( 458)		return n;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttSHORT,return )

int StbTruetype_obj::ttULONG( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_461_ttULONG)
HXDLIN( 461)		int ch1 = p->readU8(pos);
HXDLIN( 461)		int ch2 = p->readU8((pos + 1));
HXDLIN( 461)		int ch3 = p->readU8((pos + 2));
HXDLIN( 461)		int ch4 = p->readU8((pos + 3));
HXDLIN( 461)		return (((ch4 | (ch3 << 8)) | (ch2 << 16)) | (ch1 << 24));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttULONG,return )

int StbTruetype_obj::ttLONG( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_463_ttLONG)
HXLINE( 464)		int ch1 = p->readU8(pos);
HXLINE( 465)		int ch2 = p->readU8((pos + 1));
HXLINE( 466)		int ch3 = p->readU8((pos + 2));
HXLINE( 467)		int ch4 = p->readU8((pos + 3));
HXLINE( 468)		return (((ch4 | (ch3 << 8)) | (ch2 << 16)) | (ch1 << 24));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttLONG,return )

int StbTruetype_obj::to_stbtt_uint16(int value){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_472_to_stbtt_uint16)
HXDLIN( 472)		return (value & 65535);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,to_stbtt_uint16,return )

int StbTruetype_obj::ttFixed( ::kha::internal::BytesBlob p,hx::Null< int >  __o_pos){
            		int pos = __o_pos.Default(0);
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_475_ttFixed)
HXDLIN( 475)		int ch1 = p->readU8(pos);
HXDLIN( 475)		int ch2 = p->readU8((pos + 1));
HXDLIN( 475)		int ch3 = p->readU8((pos + 2));
HXDLIN( 475)		int ch4 = p->readU8((pos + 3));
HXDLIN( 475)		return (((ch4 | (ch3 << 8)) | (ch2 << 16)) | (ch1 << 24));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,ttFixed,return )

bool StbTruetype_obj::stbtt_tag4( ::kha::internal::BytesBlob p,int pos,int c0,int c1,int c2,int c3){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_477_stbtt_tag4)
HXDLIN( 477)		bool _hx_tmp;
HXDLIN( 477)		bool _hx_tmp1;
HXDLIN( 477)		if ((p->readU8(pos) == c0)) {
HXDLIN( 477)			_hx_tmp1 = (p->readU8((pos + 1)) == c1);
            		}
            		else {
HXDLIN( 477)			_hx_tmp1 = false;
            		}
HXDLIN( 477)		if (_hx_tmp1) {
HXDLIN( 477)			_hx_tmp = (p->readU8((pos + 2)) == c2);
            		}
            		else {
HXDLIN( 477)			_hx_tmp = false;
            		}
HXDLIN( 477)		if (_hx_tmp) {
HXDLIN( 477)			return (p->readU8((pos + 3)) == c3);
            		}
            		else {
HXDLIN( 477)			return false;
            		}
HXDLIN( 477)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(StbTruetype_obj,stbtt_tag4,return )

bool StbTruetype_obj::stbtt_tag( ::kha::internal::BytesBlob p,int pos,::String str){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_478_stbtt_tag)
HXDLIN( 478)		int c0 = ( (int)(str.charCodeAt(0)) );
HXDLIN( 478)		int c1 = ( (int)(str.charCodeAt(1)) );
HXDLIN( 478)		int c2 = ( (int)(str.charCodeAt(2)) );
HXDLIN( 478)		int c3 = ( (int)(str.charCodeAt(3)) );
HXDLIN( 478)		bool _hx_tmp;
HXDLIN( 478)		bool _hx_tmp1;
HXDLIN( 478)		if ((p->readU8(pos) == c0)) {
HXDLIN( 478)			_hx_tmp1 = (p->readU8((pos + 1)) == c1);
            		}
            		else {
HXDLIN( 478)			_hx_tmp1 = false;
            		}
HXDLIN( 478)		if (_hx_tmp1) {
HXDLIN( 478)			_hx_tmp = (p->readU8((pos + 2)) == c2);
            		}
            		else {
HXDLIN( 478)			_hx_tmp = false;
            		}
HXDLIN( 478)		if (_hx_tmp) {
HXDLIN( 478)			return (p->readU8((pos + 3)) == c3);
            		}
            		else {
HXDLIN( 478)			return false;
            		}
HXDLIN( 478)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt_tag,return )

bool StbTruetype_obj::stbtt__isfont( ::kha::internal::BytesBlob font){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_480_stbtt__isfont)
HXLINE( 482)		int c0 = ( (int)(HX_("1",31,00,00,00).charCodeAt(0)) );
HXDLIN( 482)		bool _hx_tmp;
HXDLIN( 482)		bool _hx_tmp1;
HXDLIN( 482)		bool _hx_tmp2;
HXDLIN( 482)		if ((font->readU8(0) == c0)) {
HXLINE( 482)			_hx_tmp2 = (font->readU8(1) == 0);
            		}
            		else {
HXLINE( 482)			_hx_tmp2 = false;
            		}
HXDLIN( 482)		if (_hx_tmp2) {
HXLINE( 482)			_hx_tmp1 = (font->readU8(2) == 0);
            		}
            		else {
HXLINE( 482)			_hx_tmp1 = false;
            		}
HXDLIN( 482)		if (_hx_tmp1) {
HXLINE( 482)			_hx_tmp = (font->readU8(3) == 0);
            		}
            		else {
HXLINE( 482)			_hx_tmp = false;
            		}
HXDLIN( 482)		if (_hx_tmp) {
HXLINE( 482)			return true;
            		}
HXLINE( 483)		int c01 = ( (int)(HX_("typ1",86,f2,08,4d).charCodeAt(0)) );
HXDLIN( 483)		int c1 = ( (int)(HX_("typ1",86,f2,08,4d).charCodeAt(1)) );
HXDLIN( 483)		int c2 = ( (int)(HX_("typ1",86,f2,08,4d).charCodeAt(2)) );
HXDLIN( 483)		int c3 = ( (int)(HX_("typ1",86,f2,08,4d).charCodeAt(3)) );
HXDLIN( 483)		bool _hx_tmp3;
HXDLIN( 483)		bool _hx_tmp4;
HXDLIN( 483)		bool _hx_tmp5;
HXDLIN( 483)		if ((font->readU8(0) == c01)) {
HXLINE( 483)			_hx_tmp5 = (font->readU8(1) == c1);
            		}
            		else {
HXLINE( 483)			_hx_tmp5 = false;
            		}
HXDLIN( 483)		if (_hx_tmp5) {
HXLINE( 483)			_hx_tmp4 = (font->readU8(2) == c2);
            		}
            		else {
HXLINE( 483)			_hx_tmp4 = false;
            		}
HXDLIN( 483)		if (_hx_tmp4) {
HXLINE( 483)			_hx_tmp3 = (font->readU8(3) == c3);
            		}
            		else {
HXLINE( 483)			_hx_tmp3 = false;
            		}
HXDLIN( 483)		if (_hx_tmp3) {
HXLINE( 483)			return true;
            		}
HXLINE( 484)		int c02 = ( (int)(HX_("OTTO",e0,e1,77,34).charCodeAt(0)) );
HXDLIN( 484)		int c11 = ( (int)(HX_("OTTO",e0,e1,77,34).charCodeAt(1)) );
HXDLIN( 484)		int c21 = ( (int)(HX_("OTTO",e0,e1,77,34).charCodeAt(2)) );
HXDLIN( 484)		int c31 = ( (int)(HX_("OTTO",e0,e1,77,34).charCodeAt(3)) );
HXDLIN( 484)		bool _hx_tmp6;
HXDLIN( 484)		bool _hx_tmp7;
HXDLIN( 484)		bool _hx_tmp8;
HXDLIN( 484)		if ((font->readU8(0) == c02)) {
HXLINE( 484)			_hx_tmp8 = (font->readU8(1) == c11);
            		}
            		else {
HXLINE( 484)			_hx_tmp8 = false;
            		}
HXDLIN( 484)		if (_hx_tmp8) {
HXLINE( 484)			_hx_tmp7 = (font->readU8(2) == c21);
            		}
            		else {
HXLINE( 484)			_hx_tmp7 = false;
            		}
HXDLIN( 484)		if (_hx_tmp7) {
HXLINE( 484)			_hx_tmp6 = (font->readU8(3) == c31);
            		}
            		else {
HXLINE( 484)			_hx_tmp6 = false;
            		}
HXDLIN( 484)		if (_hx_tmp6) {
HXLINE( 484)			return true;
            		}
HXLINE( 485)		bool _hx_tmp9;
HXDLIN( 485)		bool _hx_tmp10;
HXDLIN( 485)		bool _hx_tmp11;
HXDLIN( 485)		if ((font->readU8(0) == 0)) {
HXLINE( 485)			_hx_tmp11 = (font->readU8(1) == 1);
            		}
            		else {
HXLINE( 485)			_hx_tmp11 = false;
            		}
HXDLIN( 485)		if (_hx_tmp11) {
HXLINE( 485)			_hx_tmp10 = (font->readU8(2) == 0);
            		}
            		else {
HXLINE( 485)			_hx_tmp10 = false;
            		}
HXDLIN( 485)		if (_hx_tmp10) {
HXLINE( 485)			_hx_tmp9 = (font->readU8(3) == 0);
            		}
            		else {
HXLINE( 485)			_hx_tmp9 = false;
            		}
HXDLIN( 485)		if (_hx_tmp9) {
HXLINE( 485)			return true;
            		}
HXLINE( 486)		int c03 = ( (int)(HX_("true",4e,a7,03,4d).charCodeAt(0)) );
HXDLIN( 486)		int c12 = ( (int)(HX_("true",4e,a7,03,4d).charCodeAt(1)) );
HXDLIN( 486)		int c22 = ( (int)(HX_("true",4e,a7,03,4d).charCodeAt(2)) );
HXDLIN( 486)		int c32 = ( (int)(HX_("true",4e,a7,03,4d).charCodeAt(3)) );
HXDLIN( 486)		bool _hx_tmp12;
HXDLIN( 486)		bool _hx_tmp13;
HXDLIN( 486)		bool _hx_tmp14;
HXDLIN( 486)		if ((font->readU8(0) == c03)) {
HXLINE( 486)			_hx_tmp14 = (font->readU8(1) == c12);
            		}
            		else {
HXLINE( 486)			_hx_tmp14 = false;
            		}
HXDLIN( 486)		if (_hx_tmp14) {
HXLINE( 486)			_hx_tmp13 = (font->readU8(2) == c22);
            		}
            		else {
HXLINE( 486)			_hx_tmp13 = false;
            		}
HXDLIN( 486)		if (_hx_tmp13) {
HXLINE( 486)			_hx_tmp12 = (font->readU8(3) == c32);
            		}
            		else {
HXLINE( 486)			_hx_tmp12 = false;
            		}
HXDLIN( 486)		if (_hx_tmp12) {
HXLINE( 486)			return true;
            		}
HXLINE( 487)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__isfont,return )

int StbTruetype_obj::stbtt__find_table( ::kha::internal::BytesBlob data,int fontstart,::String tag){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_491_stbtt__find_table)
HXLINE( 492)		int pos = (fontstart + 4);
HXDLIN( 492)		int ch1 = data->readU8(pos);
HXDLIN( 492)		int ch2 = data->readU8((pos + 1));
HXDLIN( 492)		int num_tables = (ch2 | (ch1 << 8));
HXLINE( 493)		int tabledir = (fontstart + 12);
HXLINE( 494)		{
HXLINE( 494)			int _g = 0;
HXDLIN( 494)			int _g1 = num_tables;
HXDLIN( 494)			while((_g < _g1)){
HXLINE( 494)				_g = (_g + 1);
HXDLIN( 494)				int i = (_g - 1);
HXLINE( 495)				int loc = (tabledir + (16 * i));
HXLINE( 496)				int c0 = ( (int)(tag.charCodeAt(0)) );
HXDLIN( 496)				int c1 = ( (int)(tag.charCodeAt(1)) );
HXDLIN( 496)				int c2 = ( (int)(tag.charCodeAt(2)) );
HXDLIN( 496)				int c3 = ( (int)(tag.charCodeAt(3)) );
HXDLIN( 496)				bool _hx_tmp;
HXDLIN( 496)				bool _hx_tmp1;
HXDLIN( 496)				bool _hx_tmp2;
HXDLIN( 496)				if ((data->readU8(loc) == c0)) {
HXLINE( 496)					_hx_tmp2 = (data->readU8((loc + 1)) == c1);
            				}
            				else {
HXLINE( 496)					_hx_tmp2 = false;
            				}
HXDLIN( 496)				if (_hx_tmp2) {
HXLINE( 496)					_hx_tmp1 = (data->readU8((loc + 2)) == c2);
            				}
            				else {
HXLINE( 496)					_hx_tmp1 = false;
            				}
HXDLIN( 496)				if (_hx_tmp1) {
HXLINE( 496)					_hx_tmp = (data->readU8((loc + 3)) == c3);
            				}
            				else {
HXLINE( 496)					_hx_tmp = false;
            				}
HXDLIN( 496)				if (_hx_tmp) {
HXLINE( 497)					int pos1 = (loc + 8);
HXDLIN( 497)					int ch11 = data->readU8(pos1);
HXDLIN( 497)					int ch21 = data->readU8((pos1 + 1));
HXDLIN( 497)					int ch3 = data->readU8((pos1 + 2));
HXDLIN( 497)					int ch4 = data->readU8((pos1 + 3));
HXDLIN( 497)					return (((ch4 | (ch3 << 8)) | (ch21 << 16)) | (ch11 << 24));
            				}
            			}
            		}
HXLINE( 499)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__find_table,return )

int StbTruetype_obj::stbtt_GetFontOffsetForIndex( ::kha::internal::BytesBlob font_collection,int index){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_502_stbtt_GetFontOffsetForIndex)
HXLINE( 504)		if (::kha::graphics2::truetype::StbTruetype_obj::stbtt__isfont(font_collection)) {
HXLINE( 505)			if ((index == 0)) {
HXLINE( 505)				return 0;
            			}
            			else {
HXLINE( 505)				return -1;
            			}
            		}
HXLINE( 508)		int c0 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(0)) );
HXDLIN( 508)		int c1 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(1)) );
HXDLIN( 508)		int c2 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(2)) );
HXDLIN( 508)		int c3 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(3)) );
HXDLIN( 508)		bool _hx_tmp;
HXDLIN( 508)		bool _hx_tmp1;
HXDLIN( 508)		bool _hx_tmp2;
HXDLIN( 508)		if ((font_collection->readU8(0) == c0)) {
HXLINE( 508)			_hx_tmp2 = (font_collection->readU8(1) == c1);
            		}
            		else {
HXLINE( 508)			_hx_tmp2 = false;
            		}
HXDLIN( 508)		if (_hx_tmp2) {
HXLINE( 508)			_hx_tmp1 = (font_collection->readU8(2) == c2);
            		}
            		else {
HXLINE( 508)			_hx_tmp1 = false;
            		}
HXDLIN( 508)		if (_hx_tmp1) {
HXLINE( 508)			_hx_tmp = (font_collection->readU8(3) == c3);
            		}
            		else {
HXLINE( 508)			_hx_tmp = false;
            		}
HXDLIN( 508)		if (_hx_tmp) {
HXLINE( 510)			bool _hx_tmp3;
HXDLIN( 510)			int ch1 = font_collection->readU8(4);
HXDLIN( 510)			int ch2 = font_collection->readU8(5);
HXDLIN( 510)			int ch3 = font_collection->readU8(6);
HXDLIN( 510)			int ch4 = font_collection->readU8(7);
HXDLIN( 510)			if (((((ch4 | (ch3 << 8)) | (ch2 << 16)) | (ch1 << 24)) != 65536)) {
HXLINE( 510)				int ch11 = font_collection->readU8(4);
HXDLIN( 510)				int ch21 = font_collection->readU8(5);
HXDLIN( 510)				int ch31 = font_collection->readU8(6);
HXDLIN( 510)				int ch41 = font_collection->readU8(7);
HXDLIN( 510)				_hx_tmp3 = ((((ch41 | (ch31 << 8)) | (ch21 << 16)) | (ch11 << 24)) == 131072);
            			}
            			else {
HXLINE( 510)				_hx_tmp3 = true;
            			}
HXDLIN( 510)			if (_hx_tmp3) {
HXLINE( 511)				int ch12 = font_collection->readU8(8);
HXDLIN( 511)				int ch22 = font_collection->readU8(9);
HXDLIN( 511)				int ch32 = font_collection->readU8(10);
HXDLIN( 511)				int ch42 = font_collection->readU8(11);
HXDLIN( 511)				int n = (((ch42 | (ch32 << 8)) | (ch22 << 16)) | (ch12 << 24));
HXLINE( 512)				if ((index >= n)) {
HXLINE( 513)					return -1;
            				}
HXLINE( 514)				int pos = (12 + (index * 4));
HXDLIN( 514)				int ch13 = font_collection->readU8(pos);
HXDLIN( 514)				int ch23 = font_collection->readU8((pos + 1));
HXDLIN( 514)				int ch33 = font_collection->readU8((pos + 2));
HXDLIN( 514)				int ch43 = font_collection->readU8((pos + 3));
HXDLIN( 514)				return (((ch43 | (ch33 << 8)) | (ch23 << 16)) | (ch13 << 24));
            			}
            		}
HXLINE( 517)		return -1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_GetFontOffsetForIndex,return )

int StbTruetype_obj::stbtt_GetNumberOfFonts( ::kha::internal::BytesBlob font_collection){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_520_stbtt_GetNumberOfFonts)
HXLINE( 522)		if (::kha::graphics2::truetype::StbTruetype_obj::stbtt__isfont(font_collection)) {
HXLINE( 523)			return 1;
            		}
HXLINE( 526)		int c0 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(0)) );
HXDLIN( 526)		int c1 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(1)) );
HXDLIN( 526)		int c2 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(2)) );
HXDLIN( 526)		int c3 = ( (int)(HX_("ttcf",23,1c,05,4d).charCodeAt(3)) );
HXDLIN( 526)		bool _hx_tmp;
HXDLIN( 526)		bool _hx_tmp1;
HXDLIN( 526)		bool _hx_tmp2;
HXDLIN( 526)		if ((font_collection->readU8(0) == c0)) {
HXLINE( 526)			_hx_tmp2 = (font_collection->readU8(1) == c1);
            		}
            		else {
HXLINE( 526)			_hx_tmp2 = false;
            		}
HXDLIN( 526)		if (_hx_tmp2) {
HXLINE( 526)			_hx_tmp1 = (font_collection->readU8(2) == c2);
            		}
            		else {
HXLINE( 526)			_hx_tmp1 = false;
            		}
HXDLIN( 526)		if (_hx_tmp1) {
HXLINE( 526)			_hx_tmp = (font_collection->readU8(3) == c3);
            		}
            		else {
HXLINE( 526)			_hx_tmp = false;
            		}
HXDLIN( 526)		if (_hx_tmp) {
HXLINE( 528)			bool _hx_tmp3;
HXDLIN( 528)			int ch1 = font_collection->readU8(4);
HXDLIN( 528)			int ch2 = font_collection->readU8(5);
HXDLIN( 528)			int ch3 = font_collection->readU8(6);
HXDLIN( 528)			int ch4 = font_collection->readU8(7);
HXDLIN( 528)			if (((((ch4 | (ch3 << 8)) | (ch2 << 16)) | (ch1 << 24)) != 65536)) {
HXLINE( 528)				int ch11 = font_collection->readU8(4);
HXDLIN( 528)				int ch21 = font_collection->readU8(5);
HXDLIN( 528)				int ch31 = font_collection->readU8(6);
HXDLIN( 528)				int ch41 = font_collection->readU8(7);
HXDLIN( 528)				_hx_tmp3 = ((((ch41 | (ch31 << 8)) | (ch21 << 16)) | (ch11 << 24)) == 131072);
            			}
            			else {
HXLINE( 528)				_hx_tmp3 = true;
            			}
HXDLIN( 528)			if (_hx_tmp3) {
HXLINE( 529)				int ch12 = font_collection->readU8(8);
HXDLIN( 529)				int ch22 = font_collection->readU8(9);
HXDLIN( 529)				int ch32 = font_collection->readU8(10);
HXDLIN( 529)				int ch42 = font_collection->readU8(11);
HXDLIN( 529)				return (((ch42 | (ch32 << 8)) | (ch22 << 16)) | (ch12 << 24));
            			}
            		}
HXLINE( 532)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt_GetNumberOfFonts,return )

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__get_subrs( ::kha::graphics2::truetype::Stbtt__buf cff, ::kha::graphics2::truetype::Stbtt__buf fontdict){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_535_stbtt__get_subrs)
HXLINE( 536)		::Array< int > subrsoff = ::Array_obj< int >::fromData( _hx_array_data_79db9614_79,1);
HXLINE( 537)		::Array< int > private_loc = ::Array_obj< int >::fromData( _hx_array_data_79db9614_80,2);
HXLINE( 538)		{
HXLINE( 538)			int i = 0;
HXDLIN( 538)			{
HXLINE( 538)				if ((0 > fontdict->data->get_length())) {
HXLINE( 538)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 538)				int _hx_tmp;
HXDLIN( 538)				if ((0 > fontdict->data->get_length())) {
HXLINE( 538)					_hx_tmp = fontdict->data->get_length();
            				}
            				else {
HXLINE( 538)					_hx_tmp = 0;
            				}
HXDLIN( 538)				fontdict->cursor = _hx_tmp;
            			}
HXDLIN( 538)			 ::kha::graphics2::truetype::Stbtt__buf ret = null();
HXDLIN( 538)			while(true){
HXLINE( 538)				int fontdict1 = fontdict->cursor;
HXDLIN( 538)				if (!((fontdict1 < fontdict->data->get_length()))) {
HXLINE( 538)					goto _hx_goto_60;
            				}
HXDLIN( 538)				int start = fontdict->cursor;
HXDLIN( 538)				int op;
HXDLIN( 538)				while(true){
HXLINE( 538)					int _hx_tmp1;
HXDLIN( 538)					int fontdict2 = fontdict->cursor;
HXDLIN( 538)					if ((fontdict2 >= fontdict->data->get_length())) {
HXLINE( 538)						_hx_tmp1 = 0;
            					}
            					else {
HXLINE( 538)						_hx_tmp1 = fontdict->data->readU8(fontdict->cursor);
            					}
HXDLIN( 538)					if (!((_hx_tmp1 >= 28))) {
HXLINE( 538)						goto _hx_goto_61;
            					}
HXDLIN( 538)					int v;
HXDLIN( 538)					int b0;
HXDLIN( 538)					int fontdict3 = fontdict->cursor;
HXDLIN( 538)					if ((fontdict3 >= fontdict->data->get_length())) {
HXLINE( 538)						b0 = 0;
            					}
            					else {
HXLINE( 538)						b0 = fontdict->data->readU8(fontdict->cursor);
            					}
HXDLIN( 538)					if ((b0 < 28)) {
HXLINE( 538)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 538)					if ((b0 == 30)) {
HXLINE( 538)						{
HXLINE( 538)							int o = (fontdict->cursor + 1);
HXDLIN( 538)							{
HXLINE( 538)								bool value;
HXDLIN( 538)								if ((o <= fontdict->data->get_length())) {
HXLINE( 538)									value = (o < 0);
            								}
            								else {
HXLINE( 538)									value = true;
            								}
HXDLIN( 538)								if (!(!(value))) {
HXLINE( 538)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN( 538)							int _hx_tmp2;
HXDLIN( 538)							bool _hx_tmp3;
HXDLIN( 538)							if ((o <= fontdict->data->get_length())) {
HXLINE( 538)								_hx_tmp3 = (o < 0);
            							}
            							else {
HXLINE( 538)								_hx_tmp3 = true;
            							}
HXDLIN( 538)							if (_hx_tmp3) {
HXLINE( 538)								_hx_tmp2 = fontdict->data->get_length();
            							}
            							else {
HXLINE( 538)								_hx_tmp2 = o;
            							}
HXDLIN( 538)							fontdict->cursor = _hx_tmp2;
            						}
HXDLIN( 538)						while(true){
HXLINE( 538)							int fontdict4 = fontdict->cursor;
HXDLIN( 538)							if (!((fontdict4 < fontdict->data->get_length()))) {
HXLINE( 538)								goto _hx_goto_62;
            							}
HXDLIN( 538)							int fontdict5 = fontdict->cursor;
HXDLIN( 538)							if ((fontdict5 >= fontdict->data->get_length())) {
HXLINE( 538)								v = 0;
            							}
            							else {
HXLINE( 538)								v = fontdict->data->readU8(fontdict->cursor++);
            							}
HXDLIN( 538)							bool _hx_tmp4;
HXDLIN( 538)							if (((v & 15) != 15)) {
HXLINE( 538)								_hx_tmp4 = ((v >> 4) == 15);
            							}
            							else {
HXLINE( 538)								_hx_tmp4 = true;
            							}
HXDLIN( 538)							if (_hx_tmp4) {
HXLINE( 538)								goto _hx_goto_62;
            							}
            						}
            						_hx_goto_62:;
            					}
            					else {
HXLINE( 538)						int b01;
HXDLIN( 538)						int fontdict6 = fontdict->cursor;
HXDLIN( 538)						if ((fontdict6 >= fontdict->data->get_length())) {
HXLINE( 538)							b01 = 0;
            						}
            						else {
HXLINE( 538)							b01 = fontdict->data->readU8(fontdict->cursor++);
            						}
HXDLIN( 538)						bool _hx_tmp5;
HXDLIN( 538)						if ((b01 >= 32)) {
HXLINE( 538)							_hx_tmp5 = (b01 <= 246);
            						}
            						else {
HXLINE( 538)							_hx_tmp5 = false;
            						}
HXDLIN( 538)						if (!(_hx_tmp5)) {
HXLINE( 538)							bool _hx_tmp6;
HXDLIN( 538)							if ((b01 >= 247)) {
HXLINE( 538)								_hx_tmp6 = (b01 <= 250);
            							}
            							else {
HXLINE( 538)								_hx_tmp6 = false;
            							}
HXDLIN( 538)							if (_hx_tmp6) {
HXLINE( 538)								int fontdict7 = fontdict->cursor;
HXDLIN( 538)								if ((fontdict7 < fontdict->data->get_length())) {
HXLINE( 538)									fontdict->data->readU8(fontdict->cursor++);
            								}
            							}
            							else {
HXLINE( 538)								bool _hx_tmp7;
HXDLIN( 538)								if ((b01 >= 251)) {
HXLINE( 538)									_hx_tmp7 = (b01 <= 254);
            								}
            								else {
HXLINE( 538)									_hx_tmp7 = false;
            								}
HXDLIN( 538)								if (_hx_tmp7) {
HXLINE( 538)									int fontdict8 = fontdict->cursor;
HXDLIN( 538)									if ((fontdict8 < fontdict->data->get_length())) {
HXLINE( 538)										fontdict->data->readU8(fontdict->cursor++);
            									}
            								}
            								else {
HXLINE( 538)									if ((b01 == 28)) {
HXLINE( 538)										int v1 = 0;
HXDLIN( 538)										{
HXLINE( 538)											int _g = 0;
HXDLIN( 538)											int _g1 = 2;
HXDLIN( 538)											while((_g < _g1)){
HXLINE( 538)												_g = (_g + 1);
HXDLIN( 538)												int i1 = (_g - 1);
HXDLIN( 538)												int v2;
HXDLIN( 538)												int fontdict9 = fontdict->cursor;
HXDLIN( 538)												if ((fontdict9 >= fontdict->data->get_length())) {
HXLINE( 538)													v2 = 0;
            												}
            												else {
HXLINE( 538)													v2 = fontdict->data->readU8(fontdict->cursor++);
            												}
HXDLIN( 538)												v1 = ((v1 << 8) | v2);
            											}
            										}
            									}
            									else {
HXLINE( 538)										if ((b01 == 29)) {
HXLINE( 538)											int v3 = 0;
HXDLIN( 538)											{
HXLINE( 538)												int _g2 = 0;
HXDLIN( 538)												int _g11 = 4;
HXDLIN( 538)												while((_g2 < _g11)){
HXLINE( 538)													_g2 = (_g2 + 1);
HXDLIN( 538)													int i2 = (_g2 - 1);
HXDLIN( 538)													int v4;
HXDLIN( 538)													int fontdict10 = fontdict->cursor;
HXDLIN( 538)													if ((fontdict10 >= fontdict->data->get_length())) {
HXLINE( 538)														v4 = 0;
            													}
            													else {
HXLINE( 538)														v4 = fontdict->data->readU8(fontdict->cursor++);
            													}
HXDLIN( 538)													v3 = ((v3 << 8) | v4);
            												}
            											}
            										}
            										else {
HXLINE( 538)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            				_hx_goto_61:;
HXDLIN( 538)				int end = fontdict->cursor;
HXDLIN( 538)				int fontdict11 = fontdict->cursor;
HXDLIN( 538)				if ((fontdict11 >= fontdict->data->get_length())) {
HXLINE( 538)					op = 0;
            				}
            				else {
HXLINE( 538)					op = fontdict->data->readU8(fontdict->cursor++);
            				}
HXDLIN( 538)				if ((op == 12)) {
HXLINE( 538)					int op1;
HXDLIN( 538)					int fontdict12 = fontdict->cursor;
HXDLIN( 538)					if ((fontdict12 >= fontdict->data->get_length())) {
HXLINE( 538)						op1 = 0;
            					}
            					else {
HXLINE( 538)						op1 = fontdict->data->readU8(fontdict->cursor++);
            					}
HXDLIN( 538)					op = (op1 | 256);
            				}
HXDLIN( 538)				if ((op == 18)) {
HXLINE( 538)					int s = (end - start);
HXDLIN( 538)					 ::kha::internal::BytesBlob p = null();
HXDLIN( 538)					 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 538)					r->_hx_set_data(HX_CTX, p);
HXDLIN( 538)					r->cursor = 0;
HXDLIN( 538)					 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXDLIN( 538)					bool ret1;
HXDLIN( 538)					bool ret2;
HXDLIN( 538)					bool ret3;
HXDLIN( 538)					if ((start >= 0)) {
HXLINE( 538)						ret3 = (s < 0);
            					}
            					else {
HXLINE( 538)						ret3 = true;
            					}
HXDLIN( 538)					if (!(ret3)) {
HXLINE( 538)						ret2 = (start > fontdict->data->get_length());
            					}
            					else {
HXLINE( 538)						ret2 = true;
            					}
HXDLIN( 538)					if (!(ret2)) {
HXLINE( 538)						ret1 = (s > (fontdict->data->get_length() - start));
            					}
            					else {
HXLINE( 538)						ret1 = true;
            					}
HXDLIN( 538)					if (ret1) {
HXLINE( 538)						ret = r1;
            					}
            					else {
HXLINE( 538)						r1->_hx_set_data(HX_CTX, fontdict->data->sub(start,s));
HXDLIN( 538)						ret = r1;
            					}
HXDLIN( 538)					goto _hx_goto_60;
            				}
            			}
            			_hx_goto_60:;
HXDLIN( 538)			 ::kha::graphics2::truetype::Stbtt__buf operands;
HXDLIN( 538)			if (hx::IsNotNull( ret )) {
HXLINE( 538)				operands = ret;
            			}
            			else {
HXLINE( 538)				 ::kha::internal::BytesBlob p1 = null();
HXDLIN( 538)				 ::kha::graphics2::truetype::Stbtt__buf r2 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 538)				r2->_hx_set_data(HX_CTX, p1);
HXDLIN( 538)				r2->cursor = 0;
HXDLIN( 538)				 ::kha::graphics2::truetype::Stbtt__buf r3 = r2;
HXDLIN( 538)				bool operands1;
HXDLIN( 538)				if ((0 <= fontdict->data->get_length())) {
HXLINE( 538)					operands1 = (0 > fontdict->data->get_length());
            				}
            				else {
HXLINE( 538)					operands1 = true;
            				}
HXDLIN( 538)				if (operands1) {
HXLINE( 538)					operands = r3;
            				}
            				else {
HXLINE( 538)					r3->_hx_set_data(HX_CTX, fontdict->data->sub(0,0));
HXDLIN( 538)					operands = r3;
            				}
            			}
HXDLIN( 538)			while(true){
HXLINE( 538)				bool _hx_tmp8;
HXDLIN( 538)				if ((i < 2)) {
HXLINE( 538)					int operands2 = operands->cursor;
HXDLIN( 538)					_hx_tmp8 = (operands2 < operands->data->get_length());
            				}
            				else {
HXLINE( 538)					_hx_tmp8 = false;
            				}
HXDLIN( 538)				if (!(_hx_tmp8)) {
HXLINE( 538)					goto _hx_goto_65;
            				}
HXDLIN( 538)				int b02;
HXDLIN( 538)				int operands3 = operands->cursor;
HXDLIN( 538)				if ((operands3 >= operands->data->get_length())) {
HXLINE( 538)					b02 = 0;
            				}
            				else {
HXLINE( 538)					b02 = operands->data->readU8(operands->cursor++);
            				}
HXDLIN( 538)				int _hx_tmp9;
HXDLIN( 538)				bool _hx_tmp10;
HXDLIN( 538)				if ((b02 >= 32)) {
HXLINE( 538)					_hx_tmp10 = (b02 <= 246);
            				}
            				else {
HXLINE( 538)					_hx_tmp10 = false;
            				}
HXDLIN( 538)				if (_hx_tmp10) {
HXLINE( 538)					_hx_tmp9 = (b02 - 139);
            				}
            				else {
HXLINE( 538)					bool _hx_tmp11;
HXDLIN( 538)					if ((b02 >= 247)) {
HXLINE( 538)						_hx_tmp11 = (b02 <= 250);
            					}
            					else {
HXLINE( 538)						_hx_tmp11 = false;
            					}
HXDLIN( 538)					if (_hx_tmp11) {
HXLINE( 538)						int _hx_tmp12;
HXDLIN( 538)						int operands4 = operands->cursor;
HXDLIN( 538)						if ((operands4 >= operands->data->get_length())) {
HXLINE( 538)							_hx_tmp12 = 0;
            						}
            						else {
HXLINE( 538)							_hx_tmp12 = operands->data->readU8(operands->cursor++);
            						}
HXDLIN( 538)						_hx_tmp9 = ((((b02 - 247) * 256) + _hx_tmp12) + 108);
            					}
            					else {
HXLINE( 538)						bool _hx_tmp13;
HXDLIN( 538)						if ((b02 >= 251)) {
HXLINE( 538)							_hx_tmp13 = (b02 <= 254);
            						}
            						else {
HXLINE( 538)							_hx_tmp13 = false;
            						}
HXDLIN( 538)						if (_hx_tmp13) {
HXLINE( 538)							int _hx_tmp14;
HXDLIN( 538)							int operands5 = operands->cursor;
HXDLIN( 538)							if ((operands5 >= operands->data->get_length())) {
HXLINE( 538)								_hx_tmp14 = 0;
            							}
            							else {
HXLINE( 538)								_hx_tmp14 = operands->data->readU8(operands->cursor++);
            							}
HXDLIN( 538)							_hx_tmp9 = (((-((b02 - 251)) * 256) - _hx_tmp14) - 108);
            						}
            						else {
HXLINE( 538)							if ((b02 == 28)) {
HXLINE( 538)								int v5 = 0;
HXDLIN( 538)								{
HXLINE( 538)									int _g3 = 0;
HXDLIN( 538)									int _g12 = 2;
HXDLIN( 538)									while((_g3 < _g12)){
HXLINE( 538)										_g3 = (_g3 + 1);
HXDLIN( 538)										int i3 = (_g3 - 1);
HXDLIN( 538)										int v6;
HXDLIN( 538)										int operands6 = operands->cursor;
HXDLIN( 538)										if ((operands6 >= operands->data->get_length())) {
HXLINE( 538)											v6 = 0;
            										}
            										else {
HXLINE( 538)											v6 = operands->data->readU8(operands->cursor++);
            										}
HXDLIN( 538)										v5 = ((v5 << 8) | v6);
            									}
            								}
HXDLIN( 538)								_hx_tmp9 = v5;
            							}
            							else {
HXLINE( 538)								if ((b02 == 29)) {
HXLINE( 538)									int v7 = 0;
HXDLIN( 538)									{
HXLINE( 538)										int _g4 = 0;
HXDLIN( 538)										int _g13 = 4;
HXDLIN( 538)										while((_g4 < _g13)){
HXLINE( 538)											_g4 = (_g4 + 1);
HXDLIN( 538)											int i4 = (_g4 - 1);
HXDLIN( 538)											int v8;
HXDLIN( 538)											int operands7 = operands->cursor;
HXDLIN( 538)											if ((operands7 >= operands->data->get_length())) {
HXLINE( 538)												v8 = 0;
            											}
            											else {
HXLINE( 538)												v8 = operands->data->readU8(operands->cursor++);
            											}
HXDLIN( 538)											v7 = ((v7 << 8) | v8);
            										}
            									}
HXDLIN( 538)									_hx_tmp9 = v7;
            								}
            								else {
HXLINE( 538)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
            						}
            					}
            				}
HXDLIN( 538)				private_loc[i] = _hx_tmp9;
HXDLIN( 538)				i = (i + 1);
            			}
            			_hx_goto_65:;
            		}
HXLINE( 539)		bool _hx_tmp15;
HXDLIN( 539)		if ((private_loc->__get(1) != 0)) {
HXLINE( 539)			_hx_tmp15 = (private_loc->__get(0) == 0);
            		}
            		else {
HXLINE( 539)			_hx_tmp15 = true;
            		}
HXDLIN( 539)		if (_hx_tmp15) {
HXLINE( 539)			 ::kha::internal::BytesBlob p2 = null();
HXDLIN( 539)			 ::kha::graphics2::truetype::Stbtt__buf r4 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 539)			r4->_hx_set_data(HX_CTX, p2);
HXDLIN( 539)			r4->cursor = 0;
HXDLIN( 539)			return r4;
            		}
HXLINE( 540)		int o1 = private_loc->__get(1);
HXDLIN( 540)		int s1 = private_loc->__get(0);
HXDLIN( 540)		 ::kha::internal::BytesBlob p3 = null();
HXDLIN( 540)		 ::kha::graphics2::truetype::Stbtt__buf r5 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 540)		r5->_hx_set_data(HX_CTX, p3);
HXDLIN( 540)		r5->cursor = 0;
HXDLIN( 540)		 ::kha::graphics2::truetype::Stbtt__buf r6 = r5;
HXDLIN( 540)		 ::kha::graphics2::truetype::Stbtt__buf pdict;
HXDLIN( 540)		bool pdict1;
HXDLIN( 540)		bool pdict2;
HXDLIN( 540)		bool pdict3;
HXDLIN( 540)		if ((o1 >= 0)) {
HXLINE( 540)			pdict3 = (s1 < 0);
            		}
            		else {
HXLINE( 540)			pdict3 = true;
            		}
HXDLIN( 540)		if (!(pdict3)) {
HXLINE( 540)			pdict2 = (o1 > cff->data->get_length());
            		}
            		else {
HXLINE( 540)			pdict2 = true;
            		}
HXDLIN( 540)		if (!(pdict2)) {
HXLINE( 540)			pdict1 = (s1 > (cff->data->get_length() - o1));
            		}
            		else {
HXLINE( 540)			pdict1 = true;
            		}
HXDLIN( 540)		if (pdict1) {
HXLINE( 540)			pdict = r6;
            		}
            		else {
HXLINE( 540)			r6->_hx_set_data(HX_CTX, cff->data->sub(o1,s1));
HXDLIN( 540)			pdict = r6;
            		}
HXLINE( 541)		{
HXLINE( 541)			int i5 = 0;
HXDLIN( 541)			{
HXLINE( 541)				if ((0 > pdict->data->get_length())) {
HXLINE( 541)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 541)				int _hx_tmp16;
HXDLIN( 541)				if ((0 > pdict->data->get_length())) {
HXLINE( 541)					_hx_tmp16 = pdict->data->get_length();
            				}
            				else {
HXLINE( 541)					_hx_tmp16 = 0;
            				}
HXDLIN( 541)				pdict->cursor = _hx_tmp16;
            			}
HXDLIN( 541)			 ::kha::graphics2::truetype::Stbtt__buf ret4 = null();
HXDLIN( 541)			while(true){
HXLINE( 541)				int pdict4 = pdict->cursor;
HXDLIN( 541)				if (!((pdict4 < pdict->data->get_length()))) {
HXLINE( 541)					goto _hx_goto_68;
            				}
HXDLIN( 541)				int start1 = pdict->cursor;
HXDLIN( 541)				int op2;
HXDLIN( 541)				while(true){
HXLINE( 541)					int _hx_tmp17;
HXDLIN( 541)					int pdict5 = pdict->cursor;
HXDLIN( 541)					if ((pdict5 >= pdict->data->get_length())) {
HXLINE( 541)						_hx_tmp17 = 0;
            					}
            					else {
HXLINE( 541)						_hx_tmp17 = pdict->data->readU8(pdict->cursor);
            					}
HXDLIN( 541)					if (!((_hx_tmp17 >= 28))) {
HXLINE( 541)						goto _hx_goto_69;
            					}
HXDLIN( 541)					int v9;
HXDLIN( 541)					int b03;
HXDLIN( 541)					int pdict6 = pdict->cursor;
HXDLIN( 541)					if ((pdict6 >= pdict->data->get_length())) {
HXLINE( 541)						b03 = 0;
            					}
            					else {
HXLINE( 541)						b03 = pdict->data->readU8(pdict->cursor);
            					}
HXDLIN( 541)					if ((b03 < 28)) {
HXLINE( 541)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 541)					if ((b03 == 30)) {
HXLINE( 541)						{
HXLINE( 541)							int o2 = (pdict->cursor + 1);
HXDLIN( 541)							{
HXLINE( 541)								bool value1;
HXDLIN( 541)								if ((o2 <= pdict->data->get_length())) {
HXLINE( 541)									value1 = (o2 < 0);
            								}
            								else {
HXLINE( 541)									value1 = true;
            								}
HXDLIN( 541)								if (!(!(value1))) {
HXLINE( 541)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN( 541)							int _hx_tmp18;
HXDLIN( 541)							bool _hx_tmp19;
HXDLIN( 541)							if ((o2 <= pdict->data->get_length())) {
HXLINE( 541)								_hx_tmp19 = (o2 < 0);
            							}
            							else {
HXLINE( 541)								_hx_tmp19 = true;
            							}
HXDLIN( 541)							if (_hx_tmp19) {
HXLINE( 541)								_hx_tmp18 = pdict->data->get_length();
            							}
            							else {
HXLINE( 541)								_hx_tmp18 = o2;
            							}
HXDLIN( 541)							pdict->cursor = _hx_tmp18;
            						}
HXDLIN( 541)						while(true){
HXLINE( 541)							int pdict7 = pdict->cursor;
HXDLIN( 541)							if (!((pdict7 < pdict->data->get_length()))) {
HXLINE( 541)								goto _hx_goto_70;
            							}
HXDLIN( 541)							int pdict8 = pdict->cursor;
HXDLIN( 541)							if ((pdict8 >= pdict->data->get_length())) {
HXLINE( 541)								v9 = 0;
            							}
            							else {
HXLINE( 541)								v9 = pdict->data->readU8(pdict->cursor++);
            							}
HXDLIN( 541)							bool _hx_tmp20;
HXDLIN( 541)							if (((v9 & 15) != 15)) {
HXLINE( 541)								_hx_tmp20 = ((v9 >> 4) == 15);
            							}
            							else {
HXLINE( 541)								_hx_tmp20 = true;
            							}
HXDLIN( 541)							if (_hx_tmp20) {
HXLINE( 541)								goto _hx_goto_70;
            							}
            						}
            						_hx_goto_70:;
            					}
            					else {
HXLINE( 541)						int b04;
HXDLIN( 541)						int pdict9 = pdict->cursor;
HXDLIN( 541)						if ((pdict9 >= pdict->data->get_length())) {
HXLINE( 541)							b04 = 0;
            						}
            						else {
HXLINE( 541)							b04 = pdict->data->readU8(pdict->cursor++);
            						}
HXDLIN( 541)						bool _hx_tmp21;
HXDLIN( 541)						if ((b04 >= 32)) {
HXLINE( 541)							_hx_tmp21 = (b04 <= 246);
            						}
            						else {
HXLINE( 541)							_hx_tmp21 = false;
            						}
HXDLIN( 541)						if (!(_hx_tmp21)) {
HXLINE( 541)							bool _hx_tmp22;
HXDLIN( 541)							if ((b04 >= 247)) {
HXLINE( 541)								_hx_tmp22 = (b04 <= 250);
            							}
            							else {
HXLINE( 541)								_hx_tmp22 = false;
            							}
HXDLIN( 541)							if (_hx_tmp22) {
HXLINE( 541)								int pdict10 = pdict->cursor;
HXDLIN( 541)								if ((pdict10 < pdict->data->get_length())) {
HXLINE( 541)									pdict->data->readU8(pdict->cursor++);
            								}
            							}
            							else {
HXLINE( 541)								bool _hx_tmp23;
HXDLIN( 541)								if ((b04 >= 251)) {
HXLINE( 541)									_hx_tmp23 = (b04 <= 254);
            								}
            								else {
HXLINE( 541)									_hx_tmp23 = false;
            								}
HXDLIN( 541)								if (_hx_tmp23) {
HXLINE( 541)									int pdict11 = pdict->cursor;
HXDLIN( 541)									if ((pdict11 < pdict->data->get_length())) {
HXLINE( 541)										pdict->data->readU8(pdict->cursor++);
            									}
            								}
            								else {
HXLINE( 541)									if ((b04 == 28)) {
HXLINE( 541)										int v10 = 0;
HXDLIN( 541)										{
HXLINE( 541)											int _g5 = 0;
HXDLIN( 541)											int _g14 = 2;
HXDLIN( 541)											while((_g5 < _g14)){
HXLINE( 541)												_g5 = (_g5 + 1);
HXDLIN( 541)												int i6 = (_g5 - 1);
HXDLIN( 541)												int v11;
HXDLIN( 541)												int pdict12 = pdict->cursor;
HXDLIN( 541)												if ((pdict12 >= pdict->data->get_length())) {
HXLINE( 541)													v11 = 0;
            												}
            												else {
HXLINE( 541)													v11 = pdict->data->readU8(pdict->cursor++);
            												}
HXDLIN( 541)												v10 = ((v10 << 8) | v11);
            											}
            										}
            									}
            									else {
HXLINE( 541)										if ((b04 == 29)) {
HXLINE( 541)											int v12 = 0;
HXDLIN( 541)											{
HXLINE( 541)												int _g6 = 0;
HXDLIN( 541)												int _g15 = 4;
HXDLIN( 541)												while((_g6 < _g15)){
HXLINE( 541)													_g6 = (_g6 + 1);
HXDLIN( 541)													int i7 = (_g6 - 1);
HXDLIN( 541)													int v13;
HXDLIN( 541)													int pdict13 = pdict->cursor;
HXDLIN( 541)													if ((pdict13 >= pdict->data->get_length())) {
HXLINE( 541)														v13 = 0;
            													}
            													else {
HXLINE( 541)														v13 = pdict->data->readU8(pdict->cursor++);
            													}
HXDLIN( 541)													v12 = ((v12 << 8) | v13);
            												}
            											}
            										}
            										else {
HXLINE( 541)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            				_hx_goto_69:;
HXDLIN( 541)				int end1 = pdict->cursor;
HXDLIN( 541)				int pdict14 = pdict->cursor;
HXDLIN( 541)				if ((pdict14 >= pdict->data->get_length())) {
HXLINE( 541)					op2 = 0;
            				}
            				else {
HXLINE( 541)					op2 = pdict->data->readU8(pdict->cursor++);
            				}
HXDLIN( 541)				if ((op2 == 12)) {
HXLINE( 541)					int op3;
HXDLIN( 541)					int pdict15 = pdict->cursor;
HXDLIN( 541)					if ((pdict15 >= pdict->data->get_length())) {
HXLINE( 541)						op3 = 0;
            					}
            					else {
HXLINE( 541)						op3 = pdict->data->readU8(pdict->cursor++);
            					}
HXDLIN( 541)					op2 = (op3 | 256);
            				}
HXDLIN( 541)				if ((op2 == 19)) {
HXLINE( 541)					int s2 = (end1 - start1);
HXDLIN( 541)					 ::kha::internal::BytesBlob p4 = null();
HXDLIN( 541)					 ::kha::graphics2::truetype::Stbtt__buf r7 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 541)					r7->_hx_set_data(HX_CTX, p4);
HXDLIN( 541)					r7->cursor = 0;
HXDLIN( 541)					 ::kha::graphics2::truetype::Stbtt__buf r8 = r7;
HXDLIN( 541)					bool ret5;
HXDLIN( 541)					bool ret6;
HXDLIN( 541)					bool ret7;
HXDLIN( 541)					if ((start1 >= 0)) {
HXLINE( 541)						ret7 = (s2 < 0);
            					}
            					else {
HXLINE( 541)						ret7 = true;
            					}
HXDLIN( 541)					if (!(ret7)) {
HXLINE( 541)						ret6 = (start1 > pdict->data->get_length());
            					}
            					else {
HXLINE( 541)						ret6 = true;
            					}
HXDLIN( 541)					if (!(ret6)) {
HXLINE( 541)						ret5 = (s2 > (pdict->data->get_length() - start1));
            					}
            					else {
HXLINE( 541)						ret5 = true;
            					}
HXDLIN( 541)					if (ret5) {
HXLINE( 541)						ret4 = r8;
            					}
            					else {
HXLINE( 541)						r8->_hx_set_data(HX_CTX, pdict->data->sub(start1,s2));
HXDLIN( 541)						ret4 = r8;
            					}
HXDLIN( 541)					goto _hx_goto_68;
            				}
            			}
            			_hx_goto_68:;
HXDLIN( 541)			 ::kha::graphics2::truetype::Stbtt__buf operands8;
HXDLIN( 541)			if (hx::IsNotNull( ret4 )) {
HXLINE( 541)				operands8 = ret4;
            			}
            			else {
HXLINE( 541)				 ::kha::internal::BytesBlob p5 = null();
HXDLIN( 541)				 ::kha::graphics2::truetype::Stbtt__buf r9 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 541)				r9->_hx_set_data(HX_CTX, p5);
HXDLIN( 541)				r9->cursor = 0;
HXDLIN( 541)				 ::kha::graphics2::truetype::Stbtt__buf r10 = r9;
HXDLIN( 541)				bool operands9;
HXDLIN( 541)				if ((0 <= pdict->data->get_length())) {
HXLINE( 541)					operands9 = (0 > pdict->data->get_length());
            				}
            				else {
HXLINE( 541)					operands9 = true;
            				}
HXDLIN( 541)				if (operands9) {
HXLINE( 541)					operands8 = r10;
            				}
            				else {
HXLINE( 541)					r10->_hx_set_data(HX_CTX, pdict->data->sub(0,0));
HXDLIN( 541)					operands8 = r10;
            				}
            			}
HXDLIN( 541)			while(true){
HXLINE( 541)				bool _hx_tmp24;
HXDLIN( 541)				if ((i5 < 1)) {
HXLINE( 541)					int operands10 = operands8->cursor;
HXDLIN( 541)					_hx_tmp24 = (operands10 < operands8->data->get_length());
            				}
            				else {
HXLINE( 541)					_hx_tmp24 = false;
            				}
HXDLIN( 541)				if (!(_hx_tmp24)) {
HXLINE( 541)					goto _hx_goto_73;
            				}
HXDLIN( 541)				int b05;
HXDLIN( 541)				int operands11 = operands8->cursor;
HXDLIN( 541)				if ((operands11 >= operands8->data->get_length())) {
HXLINE( 541)					b05 = 0;
            				}
            				else {
HXLINE( 541)					b05 = operands8->data->readU8(operands8->cursor++);
            				}
HXDLIN( 541)				int _hx_tmp25;
HXDLIN( 541)				bool _hx_tmp26;
HXDLIN( 541)				if ((b05 >= 32)) {
HXLINE( 541)					_hx_tmp26 = (b05 <= 246);
            				}
            				else {
HXLINE( 541)					_hx_tmp26 = false;
            				}
HXDLIN( 541)				if (_hx_tmp26) {
HXLINE( 541)					_hx_tmp25 = (b05 - 139);
            				}
            				else {
HXLINE( 541)					bool _hx_tmp27;
HXDLIN( 541)					if ((b05 >= 247)) {
HXLINE( 541)						_hx_tmp27 = (b05 <= 250);
            					}
            					else {
HXLINE( 541)						_hx_tmp27 = false;
            					}
HXDLIN( 541)					if (_hx_tmp27) {
HXLINE( 541)						int _hx_tmp28;
HXDLIN( 541)						int operands12 = operands8->cursor;
HXDLIN( 541)						if ((operands12 >= operands8->data->get_length())) {
HXLINE( 541)							_hx_tmp28 = 0;
            						}
            						else {
HXLINE( 541)							_hx_tmp28 = operands8->data->readU8(operands8->cursor++);
            						}
HXDLIN( 541)						_hx_tmp25 = ((((b05 - 247) * 256) + _hx_tmp28) + 108);
            					}
            					else {
HXLINE( 541)						bool _hx_tmp29;
HXDLIN( 541)						if ((b05 >= 251)) {
HXLINE( 541)							_hx_tmp29 = (b05 <= 254);
            						}
            						else {
HXLINE( 541)							_hx_tmp29 = false;
            						}
HXDLIN( 541)						if (_hx_tmp29) {
HXLINE( 541)							int _hx_tmp30;
HXDLIN( 541)							int operands13 = operands8->cursor;
HXDLIN( 541)							if ((operands13 >= operands8->data->get_length())) {
HXLINE( 541)								_hx_tmp30 = 0;
            							}
            							else {
HXLINE( 541)								_hx_tmp30 = operands8->data->readU8(operands8->cursor++);
            							}
HXDLIN( 541)							_hx_tmp25 = (((-((b05 - 251)) * 256) - _hx_tmp30) - 108);
            						}
            						else {
HXLINE( 541)							if ((b05 == 28)) {
HXLINE( 541)								int v14 = 0;
HXDLIN( 541)								{
HXLINE( 541)									int _g7 = 0;
HXDLIN( 541)									int _g16 = 2;
HXDLIN( 541)									while((_g7 < _g16)){
HXLINE( 541)										_g7 = (_g7 + 1);
HXDLIN( 541)										int i8 = (_g7 - 1);
HXDLIN( 541)										int v15;
HXDLIN( 541)										int operands14 = operands8->cursor;
HXDLIN( 541)										if ((operands14 >= operands8->data->get_length())) {
HXLINE( 541)											v15 = 0;
            										}
            										else {
HXLINE( 541)											v15 = operands8->data->readU8(operands8->cursor++);
            										}
HXDLIN( 541)										v14 = ((v14 << 8) | v15);
            									}
            								}
HXDLIN( 541)								_hx_tmp25 = v14;
            							}
            							else {
HXLINE( 541)								if ((b05 == 29)) {
HXLINE( 541)									int v16 = 0;
HXDLIN( 541)									{
HXLINE( 541)										int _g8 = 0;
HXDLIN( 541)										int _g17 = 4;
HXDLIN( 541)										while((_g8 < _g17)){
HXLINE( 541)											_g8 = (_g8 + 1);
HXDLIN( 541)											int i9 = (_g8 - 1);
HXDLIN( 541)											int v17;
HXDLIN( 541)											int operands15 = operands8->cursor;
HXDLIN( 541)											if ((operands15 >= operands8->data->get_length())) {
HXLINE( 541)												v17 = 0;
            											}
            											else {
HXLINE( 541)												v17 = operands8->data->readU8(operands8->cursor++);
            											}
HXDLIN( 541)											v16 = ((v16 << 8) | v17);
            										}
            									}
HXDLIN( 541)									_hx_tmp25 = v16;
            								}
            								else {
HXLINE( 541)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
            						}
            					}
            				}
HXDLIN( 541)				subrsoff[i5] = _hx_tmp25;
HXDLIN( 541)				i5 = (i5 + 1);
            			}
            			_hx_goto_73:;
            		}
HXLINE( 542)		if ((subrsoff->__get(0) == 0)) {
HXLINE( 542)			 ::kha::internal::BytesBlob p6 = null();
HXDLIN( 542)			 ::kha::graphics2::truetype::Stbtt__buf r11 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 542)			r11->_hx_set_data(HX_CTX, p6);
HXDLIN( 542)			r11->cursor = 0;
HXDLIN( 542)			return r11;
            		}
HXLINE( 543)		{
HXLINE( 543)			int o3 = (private_loc->__get(1) + subrsoff->__get(0));
HXDLIN( 543)			{
HXLINE( 543)				bool value2;
HXDLIN( 543)				if ((o3 <= cff->data->get_length())) {
HXLINE( 543)					value2 = (o3 < 0);
            				}
            				else {
HXLINE( 543)					value2 = true;
            				}
HXDLIN( 543)				if (!(!(value2))) {
HXLINE( 543)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            			}
HXDLIN( 543)			int _hx_tmp31;
HXDLIN( 543)			bool _hx_tmp32;
HXDLIN( 543)			if ((o3 <= cff->data->get_length())) {
HXLINE( 543)				_hx_tmp32 = (o3 < 0);
            			}
            			else {
HXLINE( 543)				_hx_tmp32 = true;
            			}
HXDLIN( 543)			if (_hx_tmp32) {
HXLINE( 543)				_hx_tmp31 = cff->data->get_length();
            			}
            			else {
HXLINE( 543)				_hx_tmp31 = o3;
            			}
HXDLIN( 543)			cff->cursor = _hx_tmp31;
            		}
HXLINE( 544)		int start2 = cff->cursor;
HXDLIN( 544)		int v18 = 0;
HXDLIN( 544)		{
HXLINE( 544)			int _g9 = 0;
HXDLIN( 544)			int _g18 = 2;
HXDLIN( 544)			while((_g9 < _g18)){
HXLINE( 544)				_g9 = (_g9 + 1);
HXDLIN( 544)				int i10 = (_g9 - 1);
HXDLIN( 544)				int v19;
HXDLIN( 544)				int cff1 = cff->cursor;
HXDLIN( 544)				if ((cff1 >= cff->data->get_length())) {
HXLINE( 544)					v19 = 0;
            				}
            				else {
HXLINE( 544)					v19 = cff->data->readU8(cff->cursor++);
            				}
HXDLIN( 544)				v18 = ((v18 << 8) | v19);
            			}
            		}
HXDLIN( 544)		int count = v18;
HXDLIN( 544)		if ((count > 0)) {
HXLINE( 544)			int offsize;
HXDLIN( 544)			int cff2 = cff->cursor;
HXDLIN( 544)			if ((cff2 >= cff->data->get_length())) {
HXLINE( 544)				offsize = 0;
            			}
            			else {
HXLINE( 544)				offsize = cff->data->readU8(cff->cursor++);
            			}
HXDLIN( 544)			bool _hx_tmp33;
HXDLIN( 544)			if ((offsize >= 1)) {
HXLINE( 544)				_hx_tmp33 = (offsize <= 4);
            			}
            			else {
HXLINE( 544)				_hx_tmp33 = false;
            			}
HXDLIN( 544)			if (!(_hx_tmp33)) {
HXLINE( 544)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 544)			{
HXLINE( 544)				int o4 = (cff->cursor + (offsize * count));
HXDLIN( 544)				{
HXLINE( 544)					bool value3;
HXDLIN( 544)					if ((o4 <= cff->data->get_length())) {
HXLINE( 544)						value3 = (o4 < 0);
            					}
            					else {
HXLINE( 544)						value3 = true;
            					}
HXDLIN( 544)					if (!(!(value3))) {
HXLINE( 544)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 544)				int _hx_tmp34;
HXDLIN( 544)				bool _hx_tmp35;
HXDLIN( 544)				if ((o4 <= cff->data->get_length())) {
HXLINE( 544)					_hx_tmp35 = (o4 < 0);
            				}
            				else {
HXLINE( 544)					_hx_tmp35 = true;
            				}
HXDLIN( 544)				if (_hx_tmp35) {
HXLINE( 544)					_hx_tmp34 = cff->data->get_length();
            				}
            				else {
HXLINE( 544)					_hx_tmp34 = o4;
            				}
HXDLIN( 544)				cff->cursor = _hx_tmp34;
            			}
HXDLIN( 544)			{
HXLINE( 544)				int v20 = 0;
HXDLIN( 544)				bool o5;
HXDLIN( 544)				if ((offsize >= 1)) {
HXLINE( 544)					o5 = (offsize <= 4);
            				}
            				else {
HXLINE( 544)					o5 = false;
            				}
HXDLIN( 544)				if (!(o5)) {
HXLINE( 544)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 544)				{
HXLINE( 544)					int _g10 = 0;
HXDLIN( 544)					int _g19 = offsize;
HXDLIN( 544)					while((_g10 < _g19)){
HXLINE( 544)						_g10 = (_g10 + 1);
HXDLIN( 544)						int i11 = (_g10 - 1);
HXDLIN( 544)						int v21;
HXDLIN( 544)						int cff3 = cff->cursor;
HXDLIN( 544)						if ((cff3 >= cff->data->get_length())) {
HXLINE( 544)							v21 = 0;
            						}
            						else {
HXLINE( 544)							v21 = cff->data->readU8(cff->cursor++);
            						}
HXDLIN( 544)						v20 = ((v20 << 8) | v21);
            					}
            				}
HXDLIN( 544)				{
HXLINE( 544)					int o6 = (cff->cursor + (v20 - 1));
HXDLIN( 544)					{
HXLINE( 544)						bool value4;
HXDLIN( 544)						if ((o6 <= cff->data->get_length())) {
HXLINE( 544)							value4 = (o6 < 0);
            						}
            						else {
HXLINE( 544)							value4 = true;
            						}
HXDLIN( 544)						if (!(!(value4))) {
HXLINE( 544)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN( 544)					int _hx_tmp36;
HXDLIN( 544)					bool _hx_tmp37;
HXDLIN( 544)					if ((o6 <= cff->data->get_length())) {
HXLINE( 544)						_hx_tmp37 = (o6 < 0);
            					}
            					else {
HXLINE( 544)						_hx_tmp37 = true;
            					}
HXDLIN( 544)					if (_hx_tmp37) {
HXLINE( 544)						_hx_tmp36 = cff->data->get_length();
            					}
            					else {
HXLINE( 544)						_hx_tmp36 = o6;
            					}
HXDLIN( 544)					cff->cursor = _hx_tmp36;
            				}
            			}
HXDLIN( 544)			int s3 = (cff->cursor - start2);
HXDLIN( 544)			 ::kha::internal::BytesBlob p7 = null();
HXDLIN( 544)			 ::kha::graphics2::truetype::Stbtt__buf r12 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 544)			r12->_hx_set_data(HX_CTX, p7);
HXDLIN( 544)			r12->cursor = 0;
HXDLIN( 544)			 ::kha::graphics2::truetype::Stbtt__buf r13 = r12;
HXDLIN( 544)			bool _hx_tmp38;
HXDLIN( 544)			bool _hx_tmp39;
HXDLIN( 544)			bool _hx_tmp40;
HXDLIN( 544)			if ((start2 >= 0)) {
HXLINE( 544)				_hx_tmp40 = (s3 < 0);
            			}
            			else {
HXLINE( 544)				_hx_tmp40 = true;
            			}
HXDLIN( 544)			if (!(_hx_tmp40)) {
HXLINE( 544)				_hx_tmp39 = (start2 > cff->data->get_length());
            			}
            			else {
HXLINE( 544)				_hx_tmp39 = true;
            			}
HXDLIN( 544)			if (!(_hx_tmp39)) {
HXLINE( 544)				_hx_tmp38 = (s3 > (cff->data->get_length() - start2));
            			}
            			else {
HXLINE( 544)				_hx_tmp38 = true;
            			}
HXDLIN( 544)			if (_hx_tmp38) {
HXLINE( 544)				return r13;
            			}
            			else {
HXLINE( 544)				r13->_hx_set_data(HX_CTX, cff->data->sub(start2,s3));
HXDLIN( 544)				return r13;
            			}
            		}
            		else {
HXLINE( 544)			return cff;
            		}
HXDLIN( 544)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__get_subrs,return )

bool StbTruetype_obj::stbtt_InitFont( ::kha::graphics2::truetype::Stbtt_fontinfo info, ::kha::internal::BytesBlob data,int fontstart){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_547_stbtt_InitFont)
HXLINE( 551)		info->_hx_set_data(HX_CTX, data);
HXLINE( 552)		info->fontstart = fontstart;
HXLINE( 553)		 ::kha::internal::BytesBlob p = null();
HXDLIN( 553)		 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 553)		r->_hx_set_data(HX_CTX, p);
HXDLIN( 553)		r->cursor = 0;
HXDLIN( 553)		info->_hx_set_cff(HX_CTX, r);
HXLINE( 548)		int cmap = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("cmap",19,2a,c3,41));
HXLINE( 556)		info->loca = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("loca",e1,9b,b7,47));
HXLINE( 557)		info->head = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("head",20,29,0b,45));
HXLINE( 558)		info->glyf = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("glyf",32,57,67,44));
HXLINE( 559)		info->hhea = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("hhea",5c,73,0d,45));
HXLINE( 560)		info->hmtx = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("hmtx",c9,4b,11,45));
HXLINE( 561)		info->kern = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("kern",d6,db,06,47));
HXLINE( 562)		info->gpos = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("GPOS",8d,1f,2b,2f));
HXLINE( 564)		bool _hx_tmp;
HXDLIN( 564)		bool _hx_tmp1;
HXDLIN( 564)		bool _hx_tmp2;
HXDLIN( 564)		if ((cmap != 0)) {
HXLINE( 564)			_hx_tmp2 = (info->head == 0);
            		}
            		else {
HXLINE( 564)			_hx_tmp2 = true;
            		}
HXDLIN( 564)		if (!(_hx_tmp2)) {
HXLINE( 564)			_hx_tmp1 = (info->hhea == 0);
            		}
            		else {
HXLINE( 564)			_hx_tmp1 = true;
            		}
HXDLIN( 564)		if (!(_hx_tmp1)) {
HXLINE( 564)			_hx_tmp = (info->hmtx == 0);
            		}
            		else {
HXLINE( 564)			_hx_tmp = true;
            		}
HXDLIN( 564)		if (_hx_tmp) {
HXLINE( 565)			return false;
            		}
HXLINE( 566)		if ((info->glyf != 0)) {
HXLINE( 567)			if ((info->loca == 0)) {
HXLINE( 567)				return false;
            			}
            		}
            		else {
HXLINE( 570)			 ::kha::graphics2::truetype::Stbtt__buf topdict;
HXDLIN( 570)			 ::kha::graphics2::truetype::Stbtt__buf topdictidx;
HXLINE( 571)			::Array< int > cstype = ::Array_obj< int >::fromData( _hx_array_data_79db9614_148,1);
HXDLIN( 571)			::Array< int > charstrings = ::Array_obj< int >::fromData( _hx_array_data_79db9614_149,1);
HXDLIN( 571)			::Array< int > fdarrayoff = ::Array_obj< int >::fromData( _hx_array_data_79db9614_150,1);
HXDLIN( 571)			::Array< int > fdselectoff = ::Array_obj< int >::fromData( _hx_array_data_79db9614_151,1);
HXLINE( 572)			int cff = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("CFF ",7d,a6,7e,2c));
HXLINE( 575)			if ((cff == 0)) {
HXLINE( 575)				return false;
            			}
HXLINE( 577)			 ::kha::internal::BytesBlob p1 = null();
HXDLIN( 577)			 ::kha::graphics2::truetype::Stbtt__buf r1 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 577)			r1->_hx_set_data(HX_CTX, p1);
HXDLIN( 577)			r1->cursor = 0;
HXDLIN( 577)			info->_hx_set_fontdicts(HX_CTX, r1);
HXLINE( 578)			 ::kha::internal::BytesBlob p2 = null();
HXDLIN( 578)			 ::kha::graphics2::truetype::Stbtt__buf r2 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 578)			r2->_hx_set_data(HX_CTX, p2);
HXDLIN( 578)			r2->cursor = 0;
HXDLIN( 578)			info->_hx_set_fdselect(HX_CTX, r2);
HXLINE( 580)			 ::kha::internal::BytesBlob cff_data = data->sub(cff,(data->get_length() - cff));
HXLINE( 581)			int size = cff_data->get_length();
HXDLIN( 581)			 ::kha::graphics2::truetype::Stbtt__buf r3 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 581)			if ((size >= (int)1073741824)) {
HXLINE( 581)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 581)			r3->_hx_set_data(HX_CTX, cff_data);
HXDLIN( 581)			r3->cursor = 0;
HXDLIN( 581)			info->_hx_set_cff(HX_CTX, r3);
HXLINE( 570)			 ::kha::graphics2::truetype::Stbtt__buf b = info->cff;
HXLINE( 585)			{
HXLINE( 585)				int o = (b->cursor + 2);
HXDLIN( 585)				{
HXLINE( 585)					bool value;
HXDLIN( 585)					if ((o <= b->data->get_length())) {
HXLINE( 585)						value = (o < 0);
            					}
            					else {
HXLINE( 585)						value = true;
            					}
HXDLIN( 585)					if (!(!(value))) {
HXLINE( 585)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 585)				int _hx_tmp3;
HXDLIN( 585)				bool _hx_tmp4;
HXDLIN( 585)				if ((o <= b->data->get_length())) {
HXLINE( 585)					_hx_tmp4 = (o < 0);
            				}
            				else {
HXLINE( 585)					_hx_tmp4 = true;
            				}
HXDLIN( 585)				if (_hx_tmp4) {
HXLINE( 585)					_hx_tmp3 = b->data->get_length();
            				}
            				else {
HXLINE( 585)					_hx_tmp3 = o;
            				}
HXDLIN( 585)				b->cursor = _hx_tmp3;
            			}
HXLINE( 586)			{
HXLINE( 586)				int o1;
HXDLIN( 586)				int b1 = b->cursor;
HXDLIN( 586)				if ((b1 >= b->data->get_length())) {
HXLINE( 586)					o1 = 0;
            				}
            				else {
HXLINE( 586)					o1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 586)				{
HXLINE( 586)					bool value1;
HXDLIN( 586)					if ((o1 <= b->data->get_length())) {
HXLINE( 586)						value1 = (o1 < 0);
            					}
            					else {
HXLINE( 586)						value1 = true;
            					}
HXDLIN( 586)					if (!(!(value1))) {
HXLINE( 586)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 586)				int _hx_tmp5;
HXDLIN( 586)				bool _hx_tmp6;
HXDLIN( 586)				if ((o1 <= b->data->get_length())) {
HXLINE( 586)					_hx_tmp6 = (o1 < 0);
            				}
            				else {
HXLINE( 586)					_hx_tmp6 = true;
            				}
HXDLIN( 586)				if (_hx_tmp6) {
HXLINE( 586)					_hx_tmp5 = b->data->get_length();
            				}
            				else {
HXLINE( 586)					_hx_tmp5 = o1;
            				}
HXDLIN( 586)				b->cursor = _hx_tmp5;
            			}
HXLINE( 590)			{
HXLINE( 590)				int start = b->cursor;
HXDLIN( 590)				int v = 0;
HXDLIN( 590)				{
HXLINE( 590)					int _g = 0;
HXDLIN( 590)					int _g1 = 2;
HXDLIN( 590)					while((_g < _g1)){
HXLINE( 590)						_g = (_g + 1);
HXDLIN( 590)						int i = (_g - 1);
HXDLIN( 590)						int v1;
HXDLIN( 590)						int b2 = b->cursor;
HXDLIN( 590)						if ((b2 >= b->data->get_length())) {
HXLINE( 590)							v1 = 0;
            						}
            						else {
HXLINE( 590)							v1 = b->data->readU8(b->cursor++);
            						}
HXDLIN( 590)						v = ((v << 8) | v1);
            					}
            				}
HXDLIN( 590)				int count = v;
HXDLIN( 590)				if ((count > 0)) {
HXLINE( 590)					int offsize;
HXDLIN( 590)					int b3 = b->cursor;
HXDLIN( 590)					if ((b3 >= b->data->get_length())) {
HXLINE( 590)						offsize = 0;
            					}
            					else {
HXLINE( 590)						offsize = b->data->readU8(b->cursor++);
            					}
HXDLIN( 590)					bool _hx_tmp7;
HXDLIN( 590)					if ((offsize >= 1)) {
HXLINE( 590)						_hx_tmp7 = (offsize <= 4);
            					}
            					else {
HXLINE( 590)						_hx_tmp7 = false;
            					}
HXDLIN( 590)					if (!(_hx_tmp7)) {
HXLINE( 590)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 590)					{
HXLINE( 590)						int o2 = (b->cursor + (offsize * count));
HXDLIN( 590)						{
HXLINE( 590)							bool value2;
HXDLIN( 590)							if ((o2 <= b->data->get_length())) {
HXLINE( 590)								value2 = (o2 < 0);
            							}
            							else {
HXLINE( 590)								value2 = true;
            							}
HXDLIN( 590)							if (!(!(value2))) {
HXLINE( 590)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 590)						int _hx_tmp8;
HXDLIN( 590)						bool _hx_tmp9;
HXDLIN( 590)						if ((o2 <= b->data->get_length())) {
HXLINE( 590)							_hx_tmp9 = (o2 < 0);
            						}
            						else {
HXLINE( 590)							_hx_tmp9 = true;
            						}
HXDLIN( 590)						if (_hx_tmp9) {
HXLINE( 590)							_hx_tmp8 = b->data->get_length();
            						}
            						else {
HXLINE( 590)							_hx_tmp8 = o2;
            						}
HXDLIN( 590)						b->cursor = _hx_tmp8;
            					}
HXDLIN( 590)					{
HXLINE( 590)						int v2 = 0;
HXDLIN( 590)						bool o3;
HXDLIN( 590)						if ((offsize >= 1)) {
HXLINE( 590)							o3 = (offsize <= 4);
            						}
            						else {
HXLINE( 590)							o3 = false;
            						}
HXDLIN( 590)						if (!(o3)) {
HXLINE( 590)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 590)						{
HXLINE( 590)							int _g2 = 0;
HXDLIN( 590)							int _g11 = offsize;
HXDLIN( 590)							while((_g2 < _g11)){
HXLINE( 590)								_g2 = (_g2 + 1);
HXDLIN( 590)								int i1 = (_g2 - 1);
HXDLIN( 590)								int v3;
HXDLIN( 590)								int b4 = b->cursor;
HXDLIN( 590)								if ((b4 >= b->data->get_length())) {
HXLINE( 590)									v3 = 0;
            								}
            								else {
HXLINE( 590)									v3 = b->data->readU8(b->cursor++);
            								}
HXDLIN( 590)								v2 = ((v2 << 8) | v3);
            							}
            						}
HXDLIN( 590)						{
HXLINE( 590)							int o4 = (b->cursor + (v2 - 1));
HXDLIN( 590)							{
HXLINE( 590)								bool value3;
HXDLIN( 590)								if ((o4 <= b->data->get_length())) {
HXLINE( 590)									value3 = (o4 < 0);
            								}
            								else {
HXLINE( 590)									value3 = true;
            								}
HXDLIN( 590)								if (!(!(value3))) {
HXLINE( 590)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN( 590)							int _hx_tmp10;
HXDLIN( 590)							bool _hx_tmp11;
HXDLIN( 590)							if ((o4 <= b->data->get_length())) {
HXLINE( 590)								_hx_tmp11 = (o4 < 0);
            							}
            							else {
HXLINE( 590)								_hx_tmp11 = true;
            							}
HXDLIN( 590)							if (_hx_tmp11) {
HXLINE( 590)								_hx_tmp10 = b->data->get_length();
            							}
            							else {
HXLINE( 590)								_hx_tmp10 = o4;
            							}
HXDLIN( 590)							b->cursor = _hx_tmp10;
            						}
            					}
HXDLIN( 590)					{
HXLINE( 590)						int s = (b->cursor - start);
HXDLIN( 590)						 ::kha::internal::BytesBlob p3 = null();
HXDLIN( 590)						 ::kha::graphics2::truetype::Stbtt__buf r4 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 590)						r4->_hx_set_data(HX_CTX, p3);
HXDLIN( 590)						r4->cursor = 0;
HXDLIN( 590)						 ::kha::graphics2::truetype::Stbtt__buf r5 = r4;
HXDLIN( 590)						bool _hx_tmp12;
HXDLIN( 590)						bool _hx_tmp13;
HXDLIN( 590)						bool _hx_tmp14;
HXDLIN( 590)						if ((start >= 0)) {
HXLINE( 590)							_hx_tmp14 = (s < 0);
            						}
            						else {
HXLINE( 590)							_hx_tmp14 = true;
            						}
HXDLIN( 590)						if (!(_hx_tmp14)) {
HXLINE( 590)							_hx_tmp13 = (start > b->data->get_length());
            						}
            						else {
HXLINE( 590)							_hx_tmp13 = true;
            						}
HXDLIN( 590)						if (!(_hx_tmp13)) {
HXLINE( 590)							_hx_tmp12 = (s > (b->data->get_length() - start));
            						}
            						else {
HXLINE( 590)							_hx_tmp12 = true;
            						}
HXDLIN( 590)						if (!(_hx_tmp12)) {
HXLINE( 590)							r5->_hx_set_data(HX_CTX, b->data->sub(start,s));
            						}
            					}
            				}
            			}
HXLINE( 591)			int start1 = b->cursor;
HXDLIN( 591)			int v4 = 0;
HXDLIN( 591)			{
HXLINE( 591)				int _g3 = 0;
HXDLIN( 591)				int _g12 = 2;
HXDLIN( 591)				while((_g3 < _g12)){
HXLINE( 591)					_g3 = (_g3 + 1);
HXDLIN( 591)					int i2 = (_g3 - 1);
HXDLIN( 591)					int v5;
HXDLIN( 591)					int b5 = b->cursor;
HXDLIN( 591)					if ((b5 >= b->data->get_length())) {
HXLINE( 591)						v5 = 0;
            					}
            					else {
HXLINE( 591)						v5 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 591)					v4 = ((v4 << 8) | v5);
            				}
            			}
HXDLIN( 591)			int count1 = v4;
HXDLIN( 591)			if ((count1 > 0)) {
HXLINE( 591)				int offsize1;
HXDLIN( 591)				int b6 = b->cursor;
HXDLIN( 591)				if ((b6 >= b->data->get_length())) {
HXLINE( 591)					offsize1 = 0;
            				}
            				else {
HXLINE( 591)					offsize1 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 591)				bool topdictidx1;
HXDLIN( 591)				if ((offsize1 >= 1)) {
HXLINE( 591)					topdictidx1 = (offsize1 <= 4);
            				}
            				else {
HXLINE( 591)					topdictidx1 = false;
            				}
HXDLIN( 591)				if (!(topdictidx1)) {
HXLINE( 591)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 591)				{
HXLINE( 591)					int o5 = (b->cursor + (offsize1 * count1));
HXDLIN( 591)					{
HXLINE( 591)						bool value4;
HXDLIN( 591)						if ((o5 <= b->data->get_length())) {
HXLINE( 591)							value4 = (o5 < 0);
            						}
            						else {
HXLINE( 591)							value4 = true;
            						}
HXDLIN( 591)						if (!(!(value4))) {
HXLINE( 591)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN( 591)					int topdictidx2;
HXDLIN( 591)					bool topdictidx3;
HXDLIN( 591)					if ((o5 <= b->data->get_length())) {
HXLINE( 591)						topdictidx3 = (o5 < 0);
            					}
            					else {
HXLINE( 591)						topdictidx3 = true;
            					}
HXDLIN( 591)					if (topdictidx3) {
HXLINE( 591)						topdictidx2 = b->data->get_length();
            					}
            					else {
HXLINE( 591)						topdictidx2 = o5;
            					}
HXDLIN( 591)					b->cursor = topdictidx2;
            				}
HXDLIN( 591)				{
HXLINE( 591)					int v6 = 0;
HXDLIN( 591)					bool o6;
HXDLIN( 591)					if ((offsize1 >= 1)) {
HXLINE( 591)						o6 = (offsize1 <= 4);
            					}
            					else {
HXLINE( 591)						o6 = false;
            					}
HXDLIN( 591)					if (!(o6)) {
HXLINE( 591)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 591)					{
HXLINE( 591)						int _g4 = 0;
HXDLIN( 591)						int _g13 = offsize1;
HXDLIN( 591)						while((_g4 < _g13)){
HXLINE( 591)							_g4 = (_g4 + 1);
HXDLIN( 591)							int i3 = (_g4 - 1);
HXDLIN( 591)							int v7;
HXDLIN( 591)							int b7 = b->cursor;
HXDLIN( 591)							if ((b7 >= b->data->get_length())) {
HXLINE( 591)								v7 = 0;
            							}
            							else {
HXLINE( 591)								v7 = b->data->readU8(b->cursor++);
            							}
HXDLIN( 591)							v6 = ((v6 << 8) | v7);
            						}
            					}
HXDLIN( 591)					{
HXLINE( 591)						int o7 = (b->cursor + (v6 - 1));
HXDLIN( 591)						{
HXLINE( 591)							bool value5;
HXDLIN( 591)							if ((o7 <= b->data->get_length())) {
HXLINE( 591)								value5 = (o7 < 0);
            							}
            							else {
HXLINE( 591)								value5 = true;
            							}
HXDLIN( 591)							if (!(!(value5))) {
HXLINE( 591)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 591)						int topdictidx4;
HXDLIN( 591)						bool topdictidx5;
HXDLIN( 591)						if ((o7 <= b->data->get_length())) {
HXLINE( 591)							topdictidx5 = (o7 < 0);
            						}
            						else {
HXLINE( 591)							topdictidx5 = true;
            						}
HXDLIN( 591)						if (topdictidx5) {
HXLINE( 591)							topdictidx4 = b->data->get_length();
            						}
            						else {
HXLINE( 591)							topdictidx4 = o7;
            						}
HXDLIN( 591)						b->cursor = topdictidx4;
            					}
            				}
HXDLIN( 591)				int s1 = (b->cursor - start1);
HXDLIN( 591)				 ::kha::internal::BytesBlob p4 = null();
HXDLIN( 591)				 ::kha::graphics2::truetype::Stbtt__buf r6 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 591)				r6->_hx_set_data(HX_CTX, p4);
HXDLIN( 591)				r6->cursor = 0;
HXDLIN( 591)				 ::kha::graphics2::truetype::Stbtt__buf r7 = r6;
HXDLIN( 591)				bool topdictidx6;
HXDLIN( 591)				bool topdictidx7;
HXDLIN( 591)				bool topdictidx8;
HXDLIN( 591)				if ((start1 >= 0)) {
HXLINE( 591)					topdictidx8 = (s1 < 0);
            				}
            				else {
HXLINE( 591)					topdictidx8 = true;
            				}
HXDLIN( 591)				if (!(topdictidx8)) {
HXLINE( 591)					topdictidx7 = (start1 > b->data->get_length());
            				}
            				else {
HXLINE( 591)					topdictidx7 = true;
            				}
HXDLIN( 591)				if (!(topdictidx7)) {
HXLINE( 591)					topdictidx6 = (s1 > (b->data->get_length() - start1));
            				}
            				else {
HXLINE( 591)					topdictidx6 = true;
            				}
HXDLIN( 591)				if (topdictidx6) {
HXLINE( 591)					topdictidx = r7;
            				}
            				else {
HXLINE( 591)					r7->_hx_set_data(HX_CTX, b->data->sub(start1,s1));
HXDLIN( 591)					topdictidx = r7;
            				}
            			}
            			else {
HXLINE( 591)				topdictidx = b;
            			}
HXLINE( 592)			{
HXLINE( 592)				if ((0 > topdictidx->data->get_length())) {
HXLINE( 592)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 592)				int topdict1;
HXDLIN( 592)				if ((0 > topdictidx->data->get_length())) {
HXLINE( 592)					topdict1 = topdictidx->data->get_length();
            				}
            				else {
HXLINE( 592)					topdict1 = 0;
            				}
HXDLIN( 592)				topdictidx->cursor = topdict1;
            			}
HXDLIN( 592)			int v8 = 0;
HXDLIN( 592)			{
HXLINE( 592)				int _g5 = 0;
HXDLIN( 592)				int _g14 = 2;
HXDLIN( 592)				while((_g5 < _g14)){
HXLINE( 592)					_g5 = (_g5 + 1);
HXDLIN( 592)					int i4 = (_g5 - 1);
HXDLIN( 592)					int v9;
HXDLIN( 592)					int topdictidx9 = topdictidx->cursor;
HXDLIN( 592)					if ((topdictidx9 >= topdictidx->data->get_length())) {
HXLINE( 592)						v9 = 0;
            					}
            					else {
HXLINE( 592)						v9 = topdictidx->data->readU8(topdictidx->cursor++);
            					}
HXDLIN( 592)					v8 = ((v8 << 8) | v9);
            				}
            			}
HXDLIN( 592)			int count2 = v8;
HXDLIN( 592)			int offsize2;
HXDLIN( 592)			int topdictidx10 = topdictidx->cursor;
HXDLIN( 592)			if ((topdictidx10 >= topdictidx->data->get_length())) {
HXLINE( 592)				offsize2 = 0;
            			}
            			else {
HXLINE( 592)				offsize2 = topdictidx->data->readU8(topdictidx->cursor++);
            			}
HXDLIN( 592)			if ((0 >= count2)) {
HXLINE( 592)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 592)			bool topdict2;
HXDLIN( 592)			if ((offsize2 >= 1)) {
HXLINE( 592)				topdict2 = (offsize2 <= 4);
            			}
            			else {
HXLINE( 592)				topdict2 = false;
            			}
HXDLIN( 592)			if (!(topdict2)) {
HXLINE( 592)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 592)			{
HXLINE( 592)				int o8 = (topdictidx->cursor + (0 * offsize2));
HXDLIN( 592)				{
HXLINE( 592)					bool value6;
HXDLIN( 592)					if ((o8 <= topdictidx->data->get_length())) {
HXLINE( 592)						value6 = (o8 < 0);
            					}
            					else {
HXLINE( 592)						value6 = true;
            					}
HXDLIN( 592)					if (!(!(value6))) {
HXLINE( 592)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 592)				int topdict3;
HXDLIN( 592)				bool topdict4;
HXDLIN( 592)				if ((o8 <= topdictidx->data->get_length())) {
HXLINE( 592)					topdict4 = (o8 < 0);
            				}
            				else {
HXLINE( 592)					topdict4 = true;
            				}
HXDLIN( 592)				if (topdict4) {
HXLINE( 592)					topdict3 = topdictidx->data->get_length();
            				}
            				else {
HXLINE( 592)					topdict3 = o8;
            				}
HXDLIN( 592)				topdictidx->cursor = topdict3;
            			}
HXDLIN( 592)			int v10 = 0;
HXDLIN( 592)			bool topdict5;
HXDLIN( 592)			if ((offsize2 >= 1)) {
HXLINE( 592)				topdict5 = (offsize2 <= 4);
            			}
            			else {
HXLINE( 592)				topdict5 = false;
            			}
HXDLIN( 592)			if (!(topdict5)) {
HXLINE( 592)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 592)			{
HXLINE( 592)				int _g6 = 0;
HXDLIN( 592)				int _g15 = offsize2;
HXDLIN( 592)				while((_g6 < _g15)){
HXLINE( 592)					_g6 = (_g6 + 1);
HXDLIN( 592)					int i5 = (_g6 - 1);
HXDLIN( 592)					int v11;
HXDLIN( 592)					int topdictidx11 = topdictidx->cursor;
HXDLIN( 592)					if ((topdictidx11 >= topdictidx->data->get_length())) {
HXLINE( 592)						v11 = 0;
            					}
            					else {
HXLINE( 592)						v11 = topdictidx->data->readU8(topdictidx->cursor++);
            					}
HXDLIN( 592)					v10 = ((v10 << 8) | v11);
            				}
            			}
HXDLIN( 592)			int start2 = v10;
HXDLIN( 592)			int v12 = 0;
HXDLIN( 592)			bool topdict6;
HXDLIN( 592)			if ((offsize2 >= 1)) {
HXLINE( 592)				topdict6 = (offsize2 <= 4);
            			}
            			else {
HXLINE( 592)				topdict6 = false;
            			}
HXDLIN( 592)			if (!(topdict6)) {
HXLINE( 592)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN( 592)			{
HXLINE( 592)				int _g7 = 0;
HXDLIN( 592)				int _g16 = offsize2;
HXDLIN( 592)				while((_g7 < _g16)){
HXLINE( 592)					_g7 = (_g7 + 1);
HXDLIN( 592)					int i6 = (_g7 - 1);
HXDLIN( 592)					int v13;
HXDLIN( 592)					int topdictidx12 = topdictidx->cursor;
HXDLIN( 592)					if ((topdictidx12 >= topdictidx->data->get_length())) {
HXLINE( 592)						v13 = 0;
            					}
            					else {
HXLINE( 592)						v13 = topdictidx->data->readU8(topdictidx->cursor++);
            					}
HXDLIN( 592)					v12 = ((v12 << 8) | v13);
            				}
            			}
HXDLIN( 592)			int end = v12;
HXDLIN( 592)			int o9 = ((2 + ((count2 + 1) * offsize2)) + start2);
HXDLIN( 592)			int s2 = (end - start2);
HXDLIN( 592)			 ::kha::internal::BytesBlob p5 = null();
HXDLIN( 592)			 ::kha::graphics2::truetype::Stbtt__buf r8 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 592)			r8->_hx_set_data(HX_CTX, p5);
HXDLIN( 592)			r8->cursor = 0;
HXDLIN( 592)			 ::kha::graphics2::truetype::Stbtt__buf r9 = r8;
HXDLIN( 592)			bool topdict7;
HXDLIN( 592)			bool topdict8;
HXDLIN( 592)			bool topdict9;
HXDLIN( 592)			if ((o9 >= 0)) {
HXLINE( 592)				topdict9 = (s2 < 0);
            			}
            			else {
HXLINE( 592)				topdict9 = true;
            			}
HXDLIN( 592)			if (!(topdict9)) {
HXLINE( 592)				topdict8 = (o9 > topdictidx->data->get_length());
            			}
            			else {
HXLINE( 592)				topdict8 = true;
            			}
HXDLIN( 592)			if (!(topdict8)) {
HXLINE( 592)				topdict7 = (s2 > (topdictidx->data->get_length() - o9));
            			}
            			else {
HXLINE( 592)				topdict7 = true;
            			}
HXDLIN( 592)			if (topdict7) {
HXLINE( 592)				topdict = r9;
            			}
            			else {
HXLINE( 592)				r9->_hx_set_data(HX_CTX, topdictidx->data->sub(o9,s2));
HXDLIN( 592)				topdict = r9;
            			}
HXLINE( 593)			{
HXLINE( 593)				int start3 = b->cursor;
HXDLIN( 593)				int v14 = 0;
HXDLIN( 593)				{
HXLINE( 593)					int _g8 = 0;
HXDLIN( 593)					int _g17 = 2;
HXDLIN( 593)					while((_g8 < _g17)){
HXLINE( 593)						_g8 = (_g8 + 1);
HXDLIN( 593)						int i7 = (_g8 - 1);
HXDLIN( 593)						int v15;
HXDLIN( 593)						int b8 = b->cursor;
HXDLIN( 593)						if ((b8 >= b->data->get_length())) {
HXLINE( 593)							v15 = 0;
            						}
            						else {
HXLINE( 593)							v15 = b->data->readU8(b->cursor++);
            						}
HXDLIN( 593)						v14 = ((v14 << 8) | v15);
            					}
            				}
HXDLIN( 593)				int count3 = v14;
HXDLIN( 593)				if ((count3 > 0)) {
HXLINE( 593)					int offsize3;
HXDLIN( 593)					int b9 = b->cursor;
HXDLIN( 593)					if ((b9 >= b->data->get_length())) {
HXLINE( 593)						offsize3 = 0;
            					}
            					else {
HXLINE( 593)						offsize3 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 593)					bool _hx_tmp15;
HXDLIN( 593)					if ((offsize3 >= 1)) {
HXLINE( 593)						_hx_tmp15 = (offsize3 <= 4);
            					}
            					else {
HXLINE( 593)						_hx_tmp15 = false;
            					}
HXDLIN( 593)					if (!(_hx_tmp15)) {
HXLINE( 593)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 593)					{
HXLINE( 593)						int o10 = (b->cursor + (offsize3 * count3));
HXDLIN( 593)						{
HXLINE( 593)							bool value7;
HXDLIN( 593)							if ((o10 <= b->data->get_length())) {
HXLINE( 593)								value7 = (o10 < 0);
            							}
            							else {
HXLINE( 593)								value7 = true;
            							}
HXDLIN( 593)							if (!(!(value7))) {
HXLINE( 593)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 593)						int _hx_tmp16;
HXDLIN( 593)						bool _hx_tmp17;
HXDLIN( 593)						if ((o10 <= b->data->get_length())) {
HXLINE( 593)							_hx_tmp17 = (o10 < 0);
            						}
            						else {
HXLINE( 593)							_hx_tmp17 = true;
            						}
HXDLIN( 593)						if (_hx_tmp17) {
HXLINE( 593)							_hx_tmp16 = b->data->get_length();
            						}
            						else {
HXLINE( 593)							_hx_tmp16 = o10;
            						}
HXDLIN( 593)						b->cursor = _hx_tmp16;
            					}
HXDLIN( 593)					{
HXLINE( 593)						int v16 = 0;
HXDLIN( 593)						bool o11;
HXDLIN( 593)						if ((offsize3 >= 1)) {
HXLINE( 593)							o11 = (offsize3 <= 4);
            						}
            						else {
HXLINE( 593)							o11 = false;
            						}
HXDLIN( 593)						if (!(o11)) {
HXLINE( 593)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 593)						{
HXLINE( 593)							int _g9 = 0;
HXDLIN( 593)							int _g18 = offsize3;
HXDLIN( 593)							while((_g9 < _g18)){
HXLINE( 593)								_g9 = (_g9 + 1);
HXDLIN( 593)								int i8 = (_g9 - 1);
HXDLIN( 593)								int v17;
HXDLIN( 593)								int b10 = b->cursor;
HXDLIN( 593)								if ((b10 >= b->data->get_length())) {
HXLINE( 593)									v17 = 0;
            								}
            								else {
HXLINE( 593)									v17 = b->data->readU8(b->cursor++);
            								}
HXDLIN( 593)								v16 = ((v16 << 8) | v17);
            							}
            						}
HXDLIN( 593)						{
HXLINE( 593)							int o12 = (b->cursor + (v16 - 1));
HXDLIN( 593)							{
HXLINE( 593)								bool value8;
HXDLIN( 593)								if ((o12 <= b->data->get_length())) {
HXLINE( 593)									value8 = (o12 < 0);
            								}
            								else {
HXLINE( 593)									value8 = true;
            								}
HXDLIN( 593)								if (!(!(value8))) {
HXLINE( 593)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN( 593)							int _hx_tmp18;
HXDLIN( 593)							bool _hx_tmp19;
HXDLIN( 593)							if ((o12 <= b->data->get_length())) {
HXLINE( 593)								_hx_tmp19 = (o12 < 0);
            							}
            							else {
HXLINE( 593)								_hx_tmp19 = true;
            							}
HXDLIN( 593)							if (_hx_tmp19) {
HXLINE( 593)								_hx_tmp18 = b->data->get_length();
            							}
            							else {
HXLINE( 593)								_hx_tmp18 = o12;
            							}
HXDLIN( 593)							b->cursor = _hx_tmp18;
            						}
            					}
HXDLIN( 593)					{
HXLINE( 593)						int s3 = (b->cursor - start3);
HXDLIN( 593)						 ::kha::internal::BytesBlob p6 = null();
HXDLIN( 593)						 ::kha::graphics2::truetype::Stbtt__buf r10 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 593)						r10->_hx_set_data(HX_CTX, p6);
HXDLIN( 593)						r10->cursor = 0;
HXDLIN( 593)						 ::kha::graphics2::truetype::Stbtt__buf r11 = r10;
HXDLIN( 593)						bool _hx_tmp20;
HXDLIN( 593)						bool _hx_tmp21;
HXDLIN( 593)						bool _hx_tmp22;
HXDLIN( 593)						if ((start3 >= 0)) {
HXLINE( 593)							_hx_tmp22 = (s3 < 0);
            						}
            						else {
HXLINE( 593)							_hx_tmp22 = true;
            						}
HXDLIN( 593)						if (!(_hx_tmp22)) {
HXLINE( 593)							_hx_tmp21 = (start3 > b->data->get_length());
            						}
            						else {
HXLINE( 593)							_hx_tmp21 = true;
            						}
HXDLIN( 593)						if (!(_hx_tmp21)) {
HXLINE( 593)							_hx_tmp20 = (s3 > (b->data->get_length() - start3));
            						}
            						else {
HXLINE( 593)							_hx_tmp20 = true;
            						}
HXDLIN( 593)						if (!(_hx_tmp20)) {
HXLINE( 593)							r11->_hx_set_data(HX_CTX, b->data->sub(start3,s3));
            						}
            					}
            				}
            			}
HXLINE( 594)			int start4 = b->cursor;
HXDLIN( 594)			int v18 = 0;
HXDLIN( 594)			{
HXLINE( 594)				int _g10 = 0;
HXDLIN( 594)				int _g19 = 2;
HXDLIN( 594)				while((_g10 < _g19)){
HXLINE( 594)					_g10 = (_g10 + 1);
HXDLIN( 594)					int i9 = (_g10 - 1);
HXDLIN( 594)					int v19;
HXDLIN( 594)					int b11 = b->cursor;
HXDLIN( 594)					if ((b11 >= b->data->get_length())) {
HXLINE( 594)						v19 = 0;
            					}
            					else {
HXLINE( 594)						v19 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 594)					v18 = ((v18 << 8) | v19);
            				}
            			}
HXDLIN( 594)			int count4 = v18;
HXDLIN( 594)			 ::kha::graphics2::truetype::Stbtt__buf _hx_tmp23;
HXDLIN( 594)			if ((count4 > 0)) {
HXLINE( 594)				int offsize4;
HXDLIN( 594)				int b12 = b->cursor;
HXDLIN( 594)				if ((b12 >= b->data->get_length())) {
HXLINE( 594)					offsize4 = 0;
            				}
            				else {
HXLINE( 594)					offsize4 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 594)				bool _hx_tmp24;
HXDLIN( 594)				if ((offsize4 >= 1)) {
HXLINE( 594)					_hx_tmp24 = (offsize4 <= 4);
            				}
            				else {
HXLINE( 594)					_hx_tmp24 = false;
            				}
HXDLIN( 594)				if (!(_hx_tmp24)) {
HXLINE( 594)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 594)				{
HXLINE( 594)					int o13 = (b->cursor + (offsize4 * count4));
HXDLIN( 594)					{
HXLINE( 594)						bool value9;
HXDLIN( 594)						if ((o13 <= b->data->get_length())) {
HXLINE( 594)							value9 = (o13 < 0);
            						}
            						else {
HXLINE( 594)							value9 = true;
            						}
HXDLIN( 594)						if (!(!(value9))) {
HXLINE( 594)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN( 594)					int _hx_tmp25;
HXDLIN( 594)					bool _hx_tmp26;
HXDLIN( 594)					if ((o13 <= b->data->get_length())) {
HXLINE( 594)						_hx_tmp26 = (o13 < 0);
            					}
            					else {
HXLINE( 594)						_hx_tmp26 = true;
            					}
HXDLIN( 594)					if (_hx_tmp26) {
HXLINE( 594)						_hx_tmp25 = b->data->get_length();
            					}
            					else {
HXLINE( 594)						_hx_tmp25 = o13;
            					}
HXDLIN( 594)					b->cursor = _hx_tmp25;
            				}
HXDLIN( 594)				{
HXLINE( 594)					int v20 = 0;
HXDLIN( 594)					bool o14;
HXDLIN( 594)					if ((offsize4 >= 1)) {
HXLINE( 594)						o14 = (offsize4 <= 4);
            					}
            					else {
HXLINE( 594)						o14 = false;
            					}
HXDLIN( 594)					if (!(o14)) {
HXLINE( 594)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 594)					{
HXLINE( 594)						int _g20 = 0;
HXDLIN( 594)						int _g110 = offsize4;
HXDLIN( 594)						while((_g20 < _g110)){
HXLINE( 594)							_g20 = (_g20 + 1);
HXDLIN( 594)							int i10 = (_g20 - 1);
HXDLIN( 594)							int v21;
HXDLIN( 594)							int b13 = b->cursor;
HXDLIN( 594)							if ((b13 >= b->data->get_length())) {
HXLINE( 594)								v21 = 0;
            							}
            							else {
HXLINE( 594)								v21 = b->data->readU8(b->cursor++);
            							}
HXDLIN( 594)							v20 = ((v20 << 8) | v21);
            						}
            					}
HXDLIN( 594)					{
HXLINE( 594)						int o15 = (b->cursor + (v20 - 1));
HXDLIN( 594)						{
HXLINE( 594)							bool value10;
HXDLIN( 594)							if ((o15 <= b->data->get_length())) {
HXLINE( 594)								value10 = (o15 < 0);
            							}
            							else {
HXLINE( 594)								value10 = true;
            							}
HXDLIN( 594)							if (!(!(value10))) {
HXLINE( 594)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 594)						int _hx_tmp27;
HXDLIN( 594)						bool _hx_tmp28;
HXDLIN( 594)						if ((o15 <= b->data->get_length())) {
HXLINE( 594)							_hx_tmp28 = (o15 < 0);
            						}
            						else {
HXLINE( 594)							_hx_tmp28 = true;
            						}
HXDLIN( 594)						if (_hx_tmp28) {
HXLINE( 594)							_hx_tmp27 = b->data->get_length();
            						}
            						else {
HXLINE( 594)							_hx_tmp27 = o15;
            						}
HXDLIN( 594)						b->cursor = _hx_tmp27;
            					}
            				}
HXDLIN( 594)				int s4 = (b->cursor - start4);
HXDLIN( 594)				 ::kha::internal::BytesBlob p7 = null();
HXDLIN( 594)				 ::kha::graphics2::truetype::Stbtt__buf r12 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 594)				r12->_hx_set_data(HX_CTX, p7);
HXDLIN( 594)				r12->cursor = 0;
HXDLIN( 594)				 ::kha::graphics2::truetype::Stbtt__buf r13 = r12;
HXDLIN( 594)				bool _hx_tmp29;
HXDLIN( 594)				bool _hx_tmp30;
HXDLIN( 594)				bool _hx_tmp31;
HXDLIN( 594)				if ((start4 >= 0)) {
HXLINE( 594)					_hx_tmp31 = (s4 < 0);
            				}
            				else {
HXLINE( 594)					_hx_tmp31 = true;
            				}
HXDLIN( 594)				if (!(_hx_tmp31)) {
HXLINE( 594)					_hx_tmp30 = (start4 > b->data->get_length());
            				}
            				else {
HXLINE( 594)					_hx_tmp30 = true;
            				}
HXDLIN( 594)				if (!(_hx_tmp30)) {
HXLINE( 594)					_hx_tmp29 = (s4 > (b->data->get_length() - start4));
            				}
            				else {
HXLINE( 594)					_hx_tmp29 = true;
            				}
HXDLIN( 594)				if (_hx_tmp29) {
HXLINE( 594)					_hx_tmp23 = r13;
            				}
            				else {
HXLINE( 594)					r13->_hx_set_data(HX_CTX, b->data->sub(start4,s4));
HXDLIN( 594)					_hx_tmp23 = r13;
            				}
            			}
            			else {
HXLINE( 594)				_hx_tmp23 = b;
            			}
HXDLIN( 594)			info->_hx_set_gsubrs(HX_CTX, _hx_tmp23);
HXLINE( 596)			{
HXLINE( 596)				int i11 = 0;
HXDLIN( 596)				{
HXLINE( 596)					if ((0 > topdict->data->get_length())) {
HXLINE( 596)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 596)					int _hx_tmp32;
HXDLIN( 596)					if ((0 > topdict->data->get_length())) {
HXLINE( 596)						_hx_tmp32 = topdict->data->get_length();
            					}
            					else {
HXLINE( 596)						_hx_tmp32 = 0;
            					}
HXDLIN( 596)					topdict->cursor = _hx_tmp32;
            				}
HXDLIN( 596)				 ::kha::graphics2::truetype::Stbtt__buf ret = null();
HXDLIN( 596)				while(true){
HXLINE( 596)					int topdict10 = topdict->cursor;
HXDLIN( 596)					if (!((topdict10 < topdict->data->get_length()))) {
HXLINE( 596)						goto _hx_goto_92;
            					}
HXDLIN( 596)					int start5 = topdict->cursor;
HXDLIN( 596)					int op;
HXDLIN( 596)					while(true){
HXLINE( 596)						int _hx_tmp33;
HXDLIN( 596)						int topdict11 = topdict->cursor;
HXDLIN( 596)						if ((topdict11 >= topdict->data->get_length())) {
HXLINE( 596)							_hx_tmp33 = 0;
            						}
            						else {
HXLINE( 596)							_hx_tmp33 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 596)						if (!((_hx_tmp33 >= 28))) {
HXLINE( 596)							goto _hx_goto_93;
            						}
HXDLIN( 596)						int v22;
HXDLIN( 596)						int b0;
HXDLIN( 596)						int topdict12 = topdict->cursor;
HXDLIN( 596)						if ((topdict12 >= topdict->data->get_length())) {
HXLINE( 596)							b0 = 0;
            						}
            						else {
HXLINE( 596)							b0 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 596)						if ((b0 < 28)) {
HXLINE( 596)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 596)						if ((b0 == 30)) {
HXLINE( 596)							{
HXLINE( 596)								int o16 = (topdict->cursor + 1);
HXDLIN( 596)								{
HXLINE( 596)									bool value11;
HXDLIN( 596)									if ((o16 <= topdict->data->get_length())) {
HXLINE( 596)										value11 = (o16 < 0);
            									}
            									else {
HXLINE( 596)										value11 = true;
            									}
HXDLIN( 596)									if (!(!(value11))) {
HXLINE( 596)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN( 596)								int _hx_tmp34;
HXDLIN( 596)								bool _hx_tmp35;
HXDLIN( 596)								if ((o16 <= topdict->data->get_length())) {
HXLINE( 596)									_hx_tmp35 = (o16 < 0);
            								}
            								else {
HXLINE( 596)									_hx_tmp35 = true;
            								}
HXDLIN( 596)								if (_hx_tmp35) {
HXLINE( 596)									_hx_tmp34 = topdict->data->get_length();
            								}
            								else {
HXLINE( 596)									_hx_tmp34 = o16;
            								}
HXDLIN( 596)								topdict->cursor = _hx_tmp34;
            							}
HXDLIN( 596)							while(true){
HXLINE( 596)								int topdict13 = topdict->cursor;
HXDLIN( 596)								if (!((topdict13 < topdict->data->get_length()))) {
HXLINE( 596)									goto _hx_goto_94;
            								}
HXDLIN( 596)								int topdict14 = topdict->cursor;
HXDLIN( 596)								if ((topdict14 >= topdict->data->get_length())) {
HXLINE( 596)									v22 = 0;
            								}
            								else {
HXLINE( 596)									v22 = topdict->data->readU8(topdict->cursor++);
            								}
HXDLIN( 596)								bool _hx_tmp36;
HXDLIN( 596)								if (((v22 & 15) != 15)) {
HXLINE( 596)									_hx_tmp36 = ((v22 >> 4) == 15);
            								}
            								else {
HXLINE( 596)									_hx_tmp36 = true;
            								}
HXDLIN( 596)								if (_hx_tmp36) {
HXLINE( 596)									goto _hx_goto_94;
            								}
            							}
            							_hx_goto_94:;
            						}
            						else {
HXLINE( 596)							int b01;
HXDLIN( 596)							int topdict15 = topdict->cursor;
HXDLIN( 596)							if ((topdict15 >= topdict->data->get_length())) {
HXLINE( 596)								b01 = 0;
            							}
            							else {
HXLINE( 596)								b01 = topdict->data->readU8(topdict->cursor++);
            							}
HXDLIN( 596)							bool _hx_tmp37;
HXDLIN( 596)							if ((b01 >= 32)) {
HXLINE( 596)								_hx_tmp37 = (b01 <= 246);
            							}
            							else {
HXLINE( 596)								_hx_tmp37 = false;
            							}
HXDLIN( 596)							if (!(_hx_tmp37)) {
HXLINE( 596)								bool _hx_tmp38;
HXDLIN( 596)								if ((b01 >= 247)) {
HXLINE( 596)									_hx_tmp38 = (b01 <= 250);
            								}
            								else {
HXLINE( 596)									_hx_tmp38 = false;
            								}
HXDLIN( 596)								if (_hx_tmp38) {
HXLINE( 596)									int topdict16 = topdict->cursor;
HXDLIN( 596)									if ((topdict16 < topdict->data->get_length())) {
HXLINE( 596)										topdict->data->readU8(topdict->cursor++);
            									}
            								}
            								else {
HXLINE( 596)									bool _hx_tmp39;
HXDLIN( 596)									if ((b01 >= 251)) {
HXLINE( 596)										_hx_tmp39 = (b01 <= 254);
            									}
            									else {
HXLINE( 596)										_hx_tmp39 = false;
            									}
HXDLIN( 596)									if (_hx_tmp39) {
HXLINE( 596)										int topdict17 = topdict->cursor;
HXDLIN( 596)										if ((topdict17 < topdict->data->get_length())) {
HXLINE( 596)											topdict->data->readU8(topdict->cursor++);
            										}
            									}
            									else {
HXLINE( 596)										if ((b01 == 28)) {
HXLINE( 596)											int v23 = 0;
HXDLIN( 596)											{
HXLINE( 596)												int _g21 = 0;
HXDLIN( 596)												int _g111 = 2;
HXDLIN( 596)												while((_g21 < _g111)){
HXLINE( 596)													_g21 = (_g21 + 1);
HXDLIN( 596)													int i12 = (_g21 - 1);
HXDLIN( 596)													int v24;
HXDLIN( 596)													int topdict18 = topdict->cursor;
HXDLIN( 596)													if ((topdict18 >= topdict->data->get_length())) {
HXLINE( 596)														v24 = 0;
            													}
            													else {
HXLINE( 596)														v24 = topdict->data->readU8(topdict->cursor++);
            													}
HXDLIN( 596)													v23 = ((v23 << 8) | v24);
            												}
            											}
            										}
            										else {
HXLINE( 596)											if ((b01 == 29)) {
HXLINE( 596)												int v25 = 0;
HXDLIN( 596)												{
HXLINE( 596)													int _g22 = 0;
HXDLIN( 596)													int _g112 = 4;
HXDLIN( 596)													while((_g22 < _g112)){
HXLINE( 596)														_g22 = (_g22 + 1);
HXDLIN( 596)														int i13 = (_g22 - 1);
HXDLIN( 596)														int v26;
HXDLIN( 596)														int topdict19 = topdict->cursor;
HXDLIN( 596)														if ((topdict19 >= topdict->data->get_length())) {
HXLINE( 596)															v26 = 0;
            														}
            														else {
HXLINE( 596)															v26 = topdict->data->readU8(topdict->cursor++);
            														}
HXDLIN( 596)														v25 = ((v25 << 8) | v26);
            													}
            												}
            											}
            											else {
HXLINE( 596)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            					_hx_goto_93:;
HXDLIN( 596)					int end1 = topdict->cursor;
HXDLIN( 596)					int topdict20 = topdict->cursor;
HXDLIN( 596)					if ((topdict20 >= topdict->data->get_length())) {
HXLINE( 596)						op = 0;
            					}
            					else {
HXLINE( 596)						op = topdict->data->readU8(topdict->cursor++);
            					}
HXDLIN( 596)					if ((op == 12)) {
HXLINE( 596)						int op1;
HXDLIN( 596)						int topdict21 = topdict->cursor;
HXDLIN( 596)						if ((topdict21 >= topdict->data->get_length())) {
HXLINE( 596)							op1 = 0;
            						}
            						else {
HXLINE( 596)							op1 = topdict->data->readU8(topdict->cursor++);
            						}
HXDLIN( 596)						op = (op1 | 256);
            					}
HXDLIN( 596)					if ((op == 17)) {
HXLINE( 596)						int s5 = (end1 - start5);
HXDLIN( 596)						 ::kha::internal::BytesBlob p8 = null();
HXDLIN( 596)						 ::kha::graphics2::truetype::Stbtt__buf r14 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 596)						r14->_hx_set_data(HX_CTX, p8);
HXDLIN( 596)						r14->cursor = 0;
HXDLIN( 596)						 ::kha::graphics2::truetype::Stbtt__buf r15 = r14;
HXDLIN( 596)						bool ret1;
HXDLIN( 596)						bool ret2;
HXDLIN( 596)						bool ret3;
HXDLIN( 596)						if ((start5 >= 0)) {
HXLINE( 596)							ret3 = (s5 < 0);
            						}
            						else {
HXLINE( 596)							ret3 = true;
            						}
HXDLIN( 596)						if (!(ret3)) {
HXLINE( 596)							ret2 = (start5 > topdict->data->get_length());
            						}
            						else {
HXLINE( 596)							ret2 = true;
            						}
HXDLIN( 596)						if (!(ret2)) {
HXLINE( 596)							ret1 = (s5 > (topdict->data->get_length() - start5));
            						}
            						else {
HXLINE( 596)							ret1 = true;
            						}
HXDLIN( 596)						if (ret1) {
HXLINE( 596)							ret = r15;
            						}
            						else {
HXLINE( 596)							r15->_hx_set_data(HX_CTX, topdict->data->sub(start5,s5));
HXDLIN( 596)							ret = r15;
            						}
HXDLIN( 596)						goto _hx_goto_92;
            					}
            				}
            				_hx_goto_92:;
HXDLIN( 596)				 ::kha::graphics2::truetype::Stbtt__buf operands;
HXDLIN( 596)				if (hx::IsNotNull( ret )) {
HXLINE( 596)					operands = ret;
            				}
            				else {
HXLINE( 596)					 ::kha::internal::BytesBlob p9 = null();
HXDLIN( 596)					 ::kha::graphics2::truetype::Stbtt__buf r16 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 596)					r16->_hx_set_data(HX_CTX, p9);
HXDLIN( 596)					r16->cursor = 0;
HXDLIN( 596)					 ::kha::graphics2::truetype::Stbtt__buf r17 = r16;
HXDLIN( 596)					bool operands1;
HXDLIN( 596)					if ((0 <= topdict->data->get_length())) {
HXLINE( 596)						operands1 = (0 > topdict->data->get_length());
            					}
            					else {
HXLINE( 596)						operands1 = true;
            					}
HXDLIN( 596)					if (operands1) {
HXLINE( 596)						operands = r17;
            					}
            					else {
HXLINE( 596)						r17->_hx_set_data(HX_CTX, topdict->data->sub(0,0));
HXDLIN( 596)						operands = r17;
            					}
            				}
HXDLIN( 596)				while(true){
HXLINE( 596)					bool _hx_tmp40;
HXDLIN( 596)					if ((i11 < 1)) {
HXLINE( 596)						int operands2 = operands->cursor;
HXDLIN( 596)						_hx_tmp40 = (operands2 < operands->data->get_length());
            					}
            					else {
HXLINE( 596)						_hx_tmp40 = false;
            					}
HXDLIN( 596)					if (!(_hx_tmp40)) {
HXLINE( 596)						goto _hx_goto_97;
            					}
HXDLIN( 596)					int b02;
HXDLIN( 596)					int operands3 = operands->cursor;
HXDLIN( 596)					if ((operands3 >= operands->data->get_length())) {
HXLINE( 596)						b02 = 0;
            					}
            					else {
HXLINE( 596)						b02 = operands->data->readU8(operands->cursor++);
            					}
HXDLIN( 596)					int _hx_tmp41;
HXDLIN( 596)					bool _hx_tmp42;
HXDLIN( 596)					if ((b02 >= 32)) {
HXLINE( 596)						_hx_tmp42 = (b02 <= 246);
            					}
            					else {
HXLINE( 596)						_hx_tmp42 = false;
            					}
HXDLIN( 596)					if (_hx_tmp42) {
HXLINE( 596)						_hx_tmp41 = (b02 - 139);
            					}
            					else {
HXLINE( 596)						bool _hx_tmp43;
HXDLIN( 596)						if ((b02 >= 247)) {
HXLINE( 596)							_hx_tmp43 = (b02 <= 250);
            						}
            						else {
HXLINE( 596)							_hx_tmp43 = false;
            						}
HXDLIN( 596)						if (_hx_tmp43) {
HXLINE( 596)							int _hx_tmp44;
HXDLIN( 596)							int operands4 = operands->cursor;
HXDLIN( 596)							if ((operands4 >= operands->data->get_length())) {
HXLINE( 596)								_hx_tmp44 = 0;
            							}
            							else {
HXLINE( 596)								_hx_tmp44 = operands->data->readU8(operands->cursor++);
            							}
HXDLIN( 596)							_hx_tmp41 = ((((b02 - 247) * 256) + _hx_tmp44) + 108);
            						}
            						else {
HXLINE( 596)							bool _hx_tmp45;
HXDLIN( 596)							if ((b02 >= 251)) {
HXLINE( 596)								_hx_tmp45 = (b02 <= 254);
            							}
            							else {
HXLINE( 596)								_hx_tmp45 = false;
            							}
HXDLIN( 596)							if (_hx_tmp45) {
HXLINE( 596)								int _hx_tmp46;
HXDLIN( 596)								int operands5 = operands->cursor;
HXDLIN( 596)								if ((operands5 >= operands->data->get_length())) {
HXLINE( 596)									_hx_tmp46 = 0;
            								}
            								else {
HXLINE( 596)									_hx_tmp46 = operands->data->readU8(operands->cursor++);
            								}
HXDLIN( 596)								_hx_tmp41 = (((-((b02 - 251)) * 256) - _hx_tmp46) - 108);
            							}
            							else {
HXLINE( 596)								if ((b02 == 28)) {
HXLINE( 596)									int v27 = 0;
HXDLIN( 596)									{
HXLINE( 596)										int _g23 = 0;
HXDLIN( 596)										int _g113 = 2;
HXDLIN( 596)										while((_g23 < _g113)){
HXLINE( 596)											_g23 = (_g23 + 1);
HXDLIN( 596)											int i14 = (_g23 - 1);
HXDLIN( 596)											int v28;
HXDLIN( 596)											int operands6 = operands->cursor;
HXDLIN( 596)											if ((operands6 >= operands->data->get_length())) {
HXLINE( 596)												v28 = 0;
            											}
            											else {
HXLINE( 596)												v28 = operands->data->readU8(operands->cursor++);
            											}
HXDLIN( 596)											v27 = ((v27 << 8) | v28);
            										}
            									}
HXDLIN( 596)									_hx_tmp41 = v27;
            								}
            								else {
HXLINE( 596)									if ((b02 == 29)) {
HXLINE( 596)										int v29 = 0;
HXDLIN( 596)										{
HXLINE( 596)											int _g24 = 0;
HXDLIN( 596)											int _g114 = 4;
HXDLIN( 596)											while((_g24 < _g114)){
HXLINE( 596)												_g24 = (_g24 + 1);
HXDLIN( 596)												int i15 = (_g24 - 1);
HXDLIN( 596)												int v30;
HXDLIN( 596)												int operands7 = operands->cursor;
HXDLIN( 596)												if ((operands7 >= operands->data->get_length())) {
HXLINE( 596)													v30 = 0;
            												}
            												else {
HXLINE( 596)													v30 = operands->data->readU8(operands->cursor++);
            												}
HXDLIN( 596)												v29 = ((v29 << 8) | v30);
            											}
            										}
HXDLIN( 596)										_hx_tmp41 = v29;
            									}
            									else {
HXLINE( 596)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
HXDLIN( 596)					charstrings[i11] = _hx_tmp41;
HXDLIN( 596)					i11 = (i11 + 1);
            				}
            				_hx_goto_97:;
            			}
HXLINE( 597)			{
HXLINE( 597)				int i16 = 0;
HXDLIN( 597)				{
HXLINE( 597)					if ((0 > topdict->data->get_length())) {
HXLINE( 597)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 597)					int _hx_tmp47;
HXDLIN( 597)					if ((0 > topdict->data->get_length())) {
HXLINE( 597)						_hx_tmp47 = topdict->data->get_length();
            					}
            					else {
HXLINE( 597)						_hx_tmp47 = 0;
            					}
HXDLIN( 597)					topdict->cursor = _hx_tmp47;
            				}
HXDLIN( 597)				 ::kha::graphics2::truetype::Stbtt__buf ret4 = null();
HXDLIN( 597)				while(true){
HXLINE( 597)					int topdict22 = topdict->cursor;
HXDLIN( 597)					if (!((topdict22 < topdict->data->get_length()))) {
HXLINE( 597)						goto _hx_goto_100;
            					}
HXDLIN( 597)					int start6 = topdict->cursor;
HXDLIN( 597)					int op2;
HXDLIN( 597)					while(true){
HXLINE( 597)						int _hx_tmp48;
HXDLIN( 597)						int topdict23 = topdict->cursor;
HXDLIN( 597)						if ((topdict23 >= topdict->data->get_length())) {
HXLINE( 597)							_hx_tmp48 = 0;
            						}
            						else {
HXLINE( 597)							_hx_tmp48 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 597)						if (!((_hx_tmp48 >= 28))) {
HXLINE( 597)							goto _hx_goto_101;
            						}
HXDLIN( 597)						int v31;
HXDLIN( 597)						int b03;
HXDLIN( 597)						int topdict24 = topdict->cursor;
HXDLIN( 597)						if ((topdict24 >= topdict->data->get_length())) {
HXLINE( 597)							b03 = 0;
            						}
            						else {
HXLINE( 597)							b03 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 597)						if ((b03 < 28)) {
HXLINE( 597)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 597)						if ((b03 == 30)) {
HXLINE( 597)							{
HXLINE( 597)								int o17 = (topdict->cursor + 1);
HXDLIN( 597)								{
HXLINE( 597)									bool value12;
HXDLIN( 597)									if ((o17 <= topdict->data->get_length())) {
HXLINE( 597)										value12 = (o17 < 0);
            									}
            									else {
HXLINE( 597)										value12 = true;
            									}
HXDLIN( 597)									if (!(!(value12))) {
HXLINE( 597)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN( 597)								int _hx_tmp49;
HXDLIN( 597)								bool _hx_tmp50;
HXDLIN( 597)								if ((o17 <= topdict->data->get_length())) {
HXLINE( 597)									_hx_tmp50 = (o17 < 0);
            								}
            								else {
HXLINE( 597)									_hx_tmp50 = true;
            								}
HXDLIN( 597)								if (_hx_tmp50) {
HXLINE( 597)									_hx_tmp49 = topdict->data->get_length();
            								}
            								else {
HXLINE( 597)									_hx_tmp49 = o17;
            								}
HXDLIN( 597)								topdict->cursor = _hx_tmp49;
            							}
HXDLIN( 597)							while(true){
HXLINE( 597)								int topdict25 = topdict->cursor;
HXDLIN( 597)								if (!((topdict25 < topdict->data->get_length()))) {
HXLINE( 597)									goto _hx_goto_102;
            								}
HXDLIN( 597)								int topdict26 = topdict->cursor;
HXDLIN( 597)								if ((topdict26 >= topdict->data->get_length())) {
HXLINE( 597)									v31 = 0;
            								}
            								else {
HXLINE( 597)									v31 = topdict->data->readU8(topdict->cursor++);
            								}
HXDLIN( 597)								bool _hx_tmp51;
HXDLIN( 597)								if (((v31 & 15) != 15)) {
HXLINE( 597)									_hx_tmp51 = ((v31 >> 4) == 15);
            								}
            								else {
HXLINE( 597)									_hx_tmp51 = true;
            								}
HXDLIN( 597)								if (_hx_tmp51) {
HXLINE( 597)									goto _hx_goto_102;
            								}
            							}
            							_hx_goto_102:;
            						}
            						else {
HXLINE( 597)							int b04;
HXDLIN( 597)							int topdict27 = topdict->cursor;
HXDLIN( 597)							if ((topdict27 >= topdict->data->get_length())) {
HXLINE( 597)								b04 = 0;
            							}
            							else {
HXLINE( 597)								b04 = topdict->data->readU8(topdict->cursor++);
            							}
HXDLIN( 597)							bool _hx_tmp52;
HXDLIN( 597)							if ((b04 >= 32)) {
HXLINE( 597)								_hx_tmp52 = (b04 <= 246);
            							}
            							else {
HXLINE( 597)								_hx_tmp52 = false;
            							}
HXDLIN( 597)							if (!(_hx_tmp52)) {
HXLINE( 597)								bool _hx_tmp53;
HXDLIN( 597)								if ((b04 >= 247)) {
HXLINE( 597)									_hx_tmp53 = (b04 <= 250);
            								}
            								else {
HXLINE( 597)									_hx_tmp53 = false;
            								}
HXDLIN( 597)								if (_hx_tmp53) {
HXLINE( 597)									int topdict28 = topdict->cursor;
HXDLIN( 597)									if ((topdict28 < topdict->data->get_length())) {
HXLINE( 597)										topdict->data->readU8(topdict->cursor++);
            									}
            								}
            								else {
HXLINE( 597)									bool _hx_tmp54;
HXDLIN( 597)									if ((b04 >= 251)) {
HXLINE( 597)										_hx_tmp54 = (b04 <= 254);
            									}
            									else {
HXLINE( 597)										_hx_tmp54 = false;
            									}
HXDLIN( 597)									if (_hx_tmp54) {
HXLINE( 597)										int topdict29 = topdict->cursor;
HXDLIN( 597)										if ((topdict29 < topdict->data->get_length())) {
HXLINE( 597)											topdict->data->readU8(topdict->cursor++);
            										}
            									}
            									else {
HXLINE( 597)										if ((b04 == 28)) {
HXLINE( 597)											int v32 = 0;
HXDLIN( 597)											{
HXLINE( 597)												int _g25 = 0;
HXDLIN( 597)												int _g115 = 2;
HXDLIN( 597)												while((_g25 < _g115)){
HXLINE( 597)													_g25 = (_g25 + 1);
HXDLIN( 597)													int i17 = (_g25 - 1);
HXDLIN( 597)													int v33;
HXDLIN( 597)													int topdict30 = topdict->cursor;
HXDLIN( 597)													if ((topdict30 >= topdict->data->get_length())) {
HXLINE( 597)														v33 = 0;
            													}
            													else {
HXLINE( 597)														v33 = topdict->data->readU8(topdict->cursor++);
            													}
HXDLIN( 597)													v32 = ((v32 << 8) | v33);
            												}
            											}
            										}
            										else {
HXLINE( 597)											if ((b04 == 29)) {
HXLINE( 597)												int v34 = 0;
HXDLIN( 597)												{
HXLINE( 597)													int _g26 = 0;
HXDLIN( 597)													int _g116 = 4;
HXDLIN( 597)													while((_g26 < _g116)){
HXLINE( 597)														_g26 = (_g26 + 1);
HXDLIN( 597)														int i18 = (_g26 - 1);
HXDLIN( 597)														int v35;
HXDLIN( 597)														int topdict31 = topdict->cursor;
HXDLIN( 597)														if ((topdict31 >= topdict->data->get_length())) {
HXLINE( 597)															v35 = 0;
            														}
            														else {
HXLINE( 597)															v35 = topdict->data->readU8(topdict->cursor++);
            														}
HXDLIN( 597)														v34 = ((v34 << 8) | v35);
            													}
            												}
            											}
            											else {
HXLINE( 597)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            					_hx_goto_101:;
HXDLIN( 597)					int end2 = topdict->cursor;
HXDLIN( 597)					int topdict32 = topdict->cursor;
HXDLIN( 597)					if ((topdict32 >= topdict->data->get_length())) {
HXLINE( 597)						op2 = 0;
            					}
            					else {
HXLINE( 597)						op2 = topdict->data->readU8(topdict->cursor++);
            					}
HXDLIN( 597)					if ((op2 == 12)) {
HXLINE( 597)						int op3;
HXDLIN( 597)						int topdict33 = topdict->cursor;
HXDLIN( 597)						if ((topdict33 >= topdict->data->get_length())) {
HXLINE( 597)							op3 = 0;
            						}
            						else {
HXLINE( 597)							op3 = topdict->data->readU8(topdict->cursor++);
            						}
HXDLIN( 597)						op2 = (op3 | 256);
            					}
HXDLIN( 597)					if ((op2 == 262)) {
HXLINE( 597)						int s6 = (end2 - start6);
HXDLIN( 597)						 ::kha::internal::BytesBlob p10 = null();
HXDLIN( 597)						 ::kha::graphics2::truetype::Stbtt__buf r18 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 597)						r18->_hx_set_data(HX_CTX, p10);
HXDLIN( 597)						r18->cursor = 0;
HXDLIN( 597)						 ::kha::graphics2::truetype::Stbtt__buf r19 = r18;
HXDLIN( 597)						bool ret5;
HXDLIN( 597)						bool ret6;
HXDLIN( 597)						bool ret7;
HXDLIN( 597)						if ((start6 >= 0)) {
HXLINE( 597)							ret7 = (s6 < 0);
            						}
            						else {
HXLINE( 597)							ret7 = true;
            						}
HXDLIN( 597)						if (!(ret7)) {
HXLINE( 597)							ret6 = (start6 > topdict->data->get_length());
            						}
            						else {
HXLINE( 597)							ret6 = true;
            						}
HXDLIN( 597)						if (!(ret6)) {
HXLINE( 597)							ret5 = (s6 > (topdict->data->get_length() - start6));
            						}
            						else {
HXLINE( 597)							ret5 = true;
            						}
HXDLIN( 597)						if (ret5) {
HXLINE( 597)							ret4 = r19;
            						}
            						else {
HXLINE( 597)							r19->_hx_set_data(HX_CTX, topdict->data->sub(start6,s6));
HXDLIN( 597)							ret4 = r19;
            						}
HXDLIN( 597)						goto _hx_goto_100;
            					}
            				}
            				_hx_goto_100:;
HXDLIN( 597)				 ::kha::graphics2::truetype::Stbtt__buf operands8;
HXDLIN( 597)				if (hx::IsNotNull( ret4 )) {
HXLINE( 597)					operands8 = ret4;
            				}
            				else {
HXLINE( 597)					 ::kha::internal::BytesBlob p11 = null();
HXDLIN( 597)					 ::kha::graphics2::truetype::Stbtt__buf r20 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 597)					r20->_hx_set_data(HX_CTX, p11);
HXDLIN( 597)					r20->cursor = 0;
HXDLIN( 597)					 ::kha::graphics2::truetype::Stbtt__buf r21 = r20;
HXDLIN( 597)					bool operands9;
HXDLIN( 597)					if ((0 <= topdict->data->get_length())) {
HXLINE( 597)						operands9 = (0 > topdict->data->get_length());
            					}
            					else {
HXLINE( 597)						operands9 = true;
            					}
HXDLIN( 597)					if (operands9) {
HXLINE( 597)						operands8 = r21;
            					}
            					else {
HXLINE( 597)						r21->_hx_set_data(HX_CTX, topdict->data->sub(0,0));
HXDLIN( 597)						operands8 = r21;
            					}
            				}
HXDLIN( 597)				while(true){
HXLINE( 597)					bool _hx_tmp55;
HXDLIN( 597)					if ((i16 < 1)) {
HXLINE( 597)						int operands10 = operands8->cursor;
HXDLIN( 597)						_hx_tmp55 = (operands10 < operands8->data->get_length());
            					}
            					else {
HXLINE( 597)						_hx_tmp55 = false;
            					}
HXDLIN( 597)					if (!(_hx_tmp55)) {
HXLINE( 597)						goto _hx_goto_105;
            					}
HXDLIN( 597)					int b05;
HXDLIN( 597)					int operands11 = operands8->cursor;
HXDLIN( 597)					if ((operands11 >= operands8->data->get_length())) {
HXLINE( 597)						b05 = 0;
            					}
            					else {
HXLINE( 597)						b05 = operands8->data->readU8(operands8->cursor++);
            					}
HXDLIN( 597)					int _hx_tmp56;
HXDLIN( 597)					bool _hx_tmp57;
HXDLIN( 597)					if ((b05 >= 32)) {
HXLINE( 597)						_hx_tmp57 = (b05 <= 246);
            					}
            					else {
HXLINE( 597)						_hx_tmp57 = false;
            					}
HXDLIN( 597)					if (_hx_tmp57) {
HXLINE( 597)						_hx_tmp56 = (b05 - 139);
            					}
            					else {
HXLINE( 597)						bool _hx_tmp58;
HXDLIN( 597)						if ((b05 >= 247)) {
HXLINE( 597)							_hx_tmp58 = (b05 <= 250);
            						}
            						else {
HXLINE( 597)							_hx_tmp58 = false;
            						}
HXDLIN( 597)						if (_hx_tmp58) {
HXLINE( 597)							int _hx_tmp59;
HXDLIN( 597)							int operands12 = operands8->cursor;
HXDLIN( 597)							if ((operands12 >= operands8->data->get_length())) {
HXLINE( 597)								_hx_tmp59 = 0;
            							}
            							else {
HXLINE( 597)								_hx_tmp59 = operands8->data->readU8(operands8->cursor++);
            							}
HXDLIN( 597)							_hx_tmp56 = ((((b05 - 247) * 256) + _hx_tmp59) + 108);
            						}
            						else {
HXLINE( 597)							bool _hx_tmp60;
HXDLIN( 597)							if ((b05 >= 251)) {
HXLINE( 597)								_hx_tmp60 = (b05 <= 254);
            							}
            							else {
HXLINE( 597)								_hx_tmp60 = false;
            							}
HXDLIN( 597)							if (_hx_tmp60) {
HXLINE( 597)								int _hx_tmp61;
HXDLIN( 597)								int operands13 = operands8->cursor;
HXDLIN( 597)								if ((operands13 >= operands8->data->get_length())) {
HXLINE( 597)									_hx_tmp61 = 0;
            								}
            								else {
HXLINE( 597)									_hx_tmp61 = operands8->data->readU8(operands8->cursor++);
            								}
HXDLIN( 597)								_hx_tmp56 = (((-((b05 - 251)) * 256) - _hx_tmp61) - 108);
            							}
            							else {
HXLINE( 597)								if ((b05 == 28)) {
HXLINE( 597)									int v36 = 0;
HXDLIN( 597)									{
HXLINE( 597)										int _g27 = 0;
HXDLIN( 597)										int _g117 = 2;
HXDLIN( 597)										while((_g27 < _g117)){
HXLINE( 597)											_g27 = (_g27 + 1);
HXDLIN( 597)											int i19 = (_g27 - 1);
HXDLIN( 597)											int v37;
HXDLIN( 597)											int operands14 = operands8->cursor;
HXDLIN( 597)											if ((operands14 >= operands8->data->get_length())) {
HXLINE( 597)												v37 = 0;
            											}
            											else {
HXLINE( 597)												v37 = operands8->data->readU8(operands8->cursor++);
            											}
HXDLIN( 597)											v36 = ((v36 << 8) | v37);
            										}
            									}
HXDLIN( 597)									_hx_tmp56 = v36;
            								}
            								else {
HXLINE( 597)									if ((b05 == 29)) {
HXLINE( 597)										int v38 = 0;
HXDLIN( 597)										{
HXLINE( 597)											int _g28 = 0;
HXDLIN( 597)											int _g118 = 4;
HXDLIN( 597)											while((_g28 < _g118)){
HXLINE( 597)												_g28 = (_g28 + 1);
HXDLIN( 597)												int i20 = (_g28 - 1);
HXDLIN( 597)												int v39;
HXDLIN( 597)												int operands15 = operands8->cursor;
HXDLIN( 597)												if ((operands15 >= operands8->data->get_length())) {
HXLINE( 597)													v39 = 0;
            												}
            												else {
HXLINE( 597)													v39 = operands8->data->readU8(operands8->cursor++);
            												}
HXDLIN( 597)												v38 = ((v38 << 8) | v39);
            											}
            										}
HXDLIN( 597)										_hx_tmp56 = v38;
            									}
            									else {
HXLINE( 597)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
HXDLIN( 597)					cstype[i16] = _hx_tmp56;
HXDLIN( 597)					i16 = (i16 + 1);
            				}
            				_hx_goto_105:;
            			}
HXLINE( 598)			{
HXLINE( 598)				int i21 = 0;
HXDLIN( 598)				{
HXLINE( 598)					if ((0 > topdict->data->get_length())) {
HXLINE( 598)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 598)					int _hx_tmp62;
HXDLIN( 598)					if ((0 > topdict->data->get_length())) {
HXLINE( 598)						_hx_tmp62 = topdict->data->get_length();
            					}
            					else {
HXLINE( 598)						_hx_tmp62 = 0;
            					}
HXDLIN( 598)					topdict->cursor = _hx_tmp62;
            				}
HXDLIN( 598)				 ::kha::graphics2::truetype::Stbtt__buf ret8 = null();
HXDLIN( 598)				while(true){
HXLINE( 598)					int topdict34 = topdict->cursor;
HXDLIN( 598)					if (!((topdict34 < topdict->data->get_length()))) {
HXLINE( 598)						goto _hx_goto_108;
            					}
HXDLIN( 598)					int start7 = topdict->cursor;
HXDLIN( 598)					int op4;
HXDLIN( 598)					while(true){
HXLINE( 598)						int _hx_tmp63;
HXDLIN( 598)						int topdict35 = topdict->cursor;
HXDLIN( 598)						if ((topdict35 >= topdict->data->get_length())) {
HXLINE( 598)							_hx_tmp63 = 0;
            						}
            						else {
HXLINE( 598)							_hx_tmp63 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 598)						if (!((_hx_tmp63 >= 28))) {
HXLINE( 598)							goto _hx_goto_109;
            						}
HXDLIN( 598)						int v40;
HXDLIN( 598)						int b06;
HXDLIN( 598)						int topdict36 = topdict->cursor;
HXDLIN( 598)						if ((topdict36 >= topdict->data->get_length())) {
HXLINE( 598)							b06 = 0;
            						}
            						else {
HXLINE( 598)							b06 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 598)						if ((b06 < 28)) {
HXLINE( 598)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 598)						if ((b06 == 30)) {
HXLINE( 598)							{
HXLINE( 598)								int o18 = (topdict->cursor + 1);
HXDLIN( 598)								{
HXLINE( 598)									bool value13;
HXDLIN( 598)									if ((o18 <= topdict->data->get_length())) {
HXLINE( 598)										value13 = (o18 < 0);
            									}
            									else {
HXLINE( 598)										value13 = true;
            									}
HXDLIN( 598)									if (!(!(value13))) {
HXLINE( 598)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN( 598)								int _hx_tmp64;
HXDLIN( 598)								bool _hx_tmp65;
HXDLIN( 598)								if ((o18 <= topdict->data->get_length())) {
HXLINE( 598)									_hx_tmp65 = (o18 < 0);
            								}
            								else {
HXLINE( 598)									_hx_tmp65 = true;
            								}
HXDLIN( 598)								if (_hx_tmp65) {
HXLINE( 598)									_hx_tmp64 = topdict->data->get_length();
            								}
            								else {
HXLINE( 598)									_hx_tmp64 = o18;
            								}
HXDLIN( 598)								topdict->cursor = _hx_tmp64;
            							}
HXDLIN( 598)							while(true){
HXLINE( 598)								int topdict37 = topdict->cursor;
HXDLIN( 598)								if (!((topdict37 < topdict->data->get_length()))) {
HXLINE( 598)									goto _hx_goto_110;
            								}
HXDLIN( 598)								int topdict38 = topdict->cursor;
HXDLIN( 598)								if ((topdict38 >= topdict->data->get_length())) {
HXLINE( 598)									v40 = 0;
            								}
            								else {
HXLINE( 598)									v40 = topdict->data->readU8(topdict->cursor++);
            								}
HXDLIN( 598)								bool _hx_tmp66;
HXDLIN( 598)								if (((v40 & 15) != 15)) {
HXLINE( 598)									_hx_tmp66 = ((v40 >> 4) == 15);
            								}
            								else {
HXLINE( 598)									_hx_tmp66 = true;
            								}
HXDLIN( 598)								if (_hx_tmp66) {
HXLINE( 598)									goto _hx_goto_110;
            								}
            							}
            							_hx_goto_110:;
            						}
            						else {
HXLINE( 598)							int b07;
HXDLIN( 598)							int topdict39 = topdict->cursor;
HXDLIN( 598)							if ((topdict39 >= topdict->data->get_length())) {
HXLINE( 598)								b07 = 0;
            							}
            							else {
HXLINE( 598)								b07 = topdict->data->readU8(topdict->cursor++);
            							}
HXDLIN( 598)							bool _hx_tmp67;
HXDLIN( 598)							if ((b07 >= 32)) {
HXLINE( 598)								_hx_tmp67 = (b07 <= 246);
            							}
            							else {
HXLINE( 598)								_hx_tmp67 = false;
            							}
HXDLIN( 598)							if (!(_hx_tmp67)) {
HXLINE( 598)								bool _hx_tmp68;
HXDLIN( 598)								if ((b07 >= 247)) {
HXLINE( 598)									_hx_tmp68 = (b07 <= 250);
            								}
            								else {
HXLINE( 598)									_hx_tmp68 = false;
            								}
HXDLIN( 598)								if (_hx_tmp68) {
HXLINE( 598)									int topdict40 = topdict->cursor;
HXDLIN( 598)									if ((topdict40 < topdict->data->get_length())) {
HXLINE( 598)										topdict->data->readU8(topdict->cursor++);
            									}
            								}
            								else {
HXLINE( 598)									bool _hx_tmp69;
HXDLIN( 598)									if ((b07 >= 251)) {
HXLINE( 598)										_hx_tmp69 = (b07 <= 254);
            									}
            									else {
HXLINE( 598)										_hx_tmp69 = false;
            									}
HXDLIN( 598)									if (_hx_tmp69) {
HXLINE( 598)										int topdict41 = topdict->cursor;
HXDLIN( 598)										if ((topdict41 < topdict->data->get_length())) {
HXLINE( 598)											topdict->data->readU8(topdict->cursor++);
            										}
            									}
            									else {
HXLINE( 598)										if ((b07 == 28)) {
HXLINE( 598)											int v41 = 0;
HXDLIN( 598)											{
HXLINE( 598)												int _g29 = 0;
HXDLIN( 598)												int _g119 = 2;
HXDLIN( 598)												while((_g29 < _g119)){
HXLINE( 598)													_g29 = (_g29 + 1);
HXDLIN( 598)													int i22 = (_g29 - 1);
HXDLIN( 598)													int v42;
HXDLIN( 598)													int topdict42 = topdict->cursor;
HXDLIN( 598)													if ((topdict42 >= topdict->data->get_length())) {
HXLINE( 598)														v42 = 0;
            													}
            													else {
HXLINE( 598)														v42 = topdict->data->readU8(topdict->cursor++);
            													}
HXDLIN( 598)													v41 = ((v41 << 8) | v42);
            												}
            											}
            										}
            										else {
HXLINE( 598)											if ((b07 == 29)) {
HXLINE( 598)												int v43 = 0;
HXDLIN( 598)												{
HXLINE( 598)													int _g30 = 0;
HXDLIN( 598)													int _g120 = 4;
HXDLIN( 598)													while((_g30 < _g120)){
HXLINE( 598)														_g30 = (_g30 + 1);
HXDLIN( 598)														int i23 = (_g30 - 1);
HXDLIN( 598)														int v44;
HXDLIN( 598)														int topdict43 = topdict->cursor;
HXDLIN( 598)														if ((topdict43 >= topdict->data->get_length())) {
HXLINE( 598)															v44 = 0;
            														}
            														else {
HXLINE( 598)															v44 = topdict->data->readU8(topdict->cursor++);
            														}
HXDLIN( 598)														v43 = ((v43 << 8) | v44);
            													}
            												}
            											}
            											else {
HXLINE( 598)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            					_hx_goto_109:;
HXDLIN( 598)					int end3 = topdict->cursor;
HXDLIN( 598)					int topdict44 = topdict->cursor;
HXDLIN( 598)					if ((topdict44 >= topdict->data->get_length())) {
HXLINE( 598)						op4 = 0;
            					}
            					else {
HXLINE( 598)						op4 = topdict->data->readU8(topdict->cursor++);
            					}
HXDLIN( 598)					if ((op4 == 12)) {
HXLINE( 598)						int op5;
HXDLIN( 598)						int topdict45 = topdict->cursor;
HXDLIN( 598)						if ((topdict45 >= topdict->data->get_length())) {
HXLINE( 598)							op5 = 0;
            						}
            						else {
HXLINE( 598)							op5 = topdict->data->readU8(topdict->cursor++);
            						}
HXDLIN( 598)						op4 = (op5 | 256);
            					}
HXDLIN( 598)					if ((op4 == 292)) {
HXLINE( 598)						int s7 = (end3 - start7);
HXDLIN( 598)						 ::kha::internal::BytesBlob p12 = null();
HXDLIN( 598)						 ::kha::graphics2::truetype::Stbtt__buf r22 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 598)						r22->_hx_set_data(HX_CTX, p12);
HXDLIN( 598)						r22->cursor = 0;
HXDLIN( 598)						 ::kha::graphics2::truetype::Stbtt__buf r23 = r22;
HXDLIN( 598)						bool ret9;
HXDLIN( 598)						bool ret10;
HXDLIN( 598)						bool ret11;
HXDLIN( 598)						if ((start7 >= 0)) {
HXLINE( 598)							ret11 = (s7 < 0);
            						}
            						else {
HXLINE( 598)							ret11 = true;
            						}
HXDLIN( 598)						if (!(ret11)) {
HXLINE( 598)							ret10 = (start7 > topdict->data->get_length());
            						}
            						else {
HXLINE( 598)							ret10 = true;
            						}
HXDLIN( 598)						if (!(ret10)) {
HXLINE( 598)							ret9 = (s7 > (topdict->data->get_length() - start7));
            						}
            						else {
HXLINE( 598)							ret9 = true;
            						}
HXDLIN( 598)						if (ret9) {
HXLINE( 598)							ret8 = r23;
            						}
            						else {
HXLINE( 598)							r23->_hx_set_data(HX_CTX, topdict->data->sub(start7,s7));
HXDLIN( 598)							ret8 = r23;
            						}
HXDLIN( 598)						goto _hx_goto_108;
            					}
            				}
            				_hx_goto_108:;
HXDLIN( 598)				 ::kha::graphics2::truetype::Stbtt__buf operands16;
HXDLIN( 598)				if (hx::IsNotNull( ret8 )) {
HXLINE( 598)					operands16 = ret8;
            				}
            				else {
HXLINE( 598)					 ::kha::internal::BytesBlob p13 = null();
HXDLIN( 598)					 ::kha::graphics2::truetype::Stbtt__buf r24 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 598)					r24->_hx_set_data(HX_CTX, p13);
HXDLIN( 598)					r24->cursor = 0;
HXDLIN( 598)					 ::kha::graphics2::truetype::Stbtt__buf r25 = r24;
HXDLIN( 598)					bool operands17;
HXDLIN( 598)					if ((0 <= topdict->data->get_length())) {
HXLINE( 598)						operands17 = (0 > topdict->data->get_length());
            					}
            					else {
HXLINE( 598)						operands17 = true;
            					}
HXDLIN( 598)					if (operands17) {
HXLINE( 598)						operands16 = r25;
            					}
            					else {
HXLINE( 598)						r25->_hx_set_data(HX_CTX, topdict->data->sub(0,0));
HXDLIN( 598)						operands16 = r25;
            					}
            				}
HXDLIN( 598)				while(true){
HXLINE( 598)					bool _hx_tmp70;
HXDLIN( 598)					if ((i21 < 1)) {
HXLINE( 598)						int operands18 = operands16->cursor;
HXDLIN( 598)						_hx_tmp70 = (operands18 < operands16->data->get_length());
            					}
            					else {
HXLINE( 598)						_hx_tmp70 = false;
            					}
HXDLIN( 598)					if (!(_hx_tmp70)) {
HXLINE( 598)						goto _hx_goto_113;
            					}
HXDLIN( 598)					int b08;
HXDLIN( 598)					int operands19 = operands16->cursor;
HXDLIN( 598)					if ((operands19 >= operands16->data->get_length())) {
HXLINE( 598)						b08 = 0;
            					}
            					else {
HXLINE( 598)						b08 = operands16->data->readU8(operands16->cursor++);
            					}
HXDLIN( 598)					int _hx_tmp71;
HXDLIN( 598)					bool _hx_tmp72;
HXDLIN( 598)					if ((b08 >= 32)) {
HXLINE( 598)						_hx_tmp72 = (b08 <= 246);
            					}
            					else {
HXLINE( 598)						_hx_tmp72 = false;
            					}
HXDLIN( 598)					if (_hx_tmp72) {
HXLINE( 598)						_hx_tmp71 = (b08 - 139);
            					}
            					else {
HXLINE( 598)						bool _hx_tmp73;
HXDLIN( 598)						if ((b08 >= 247)) {
HXLINE( 598)							_hx_tmp73 = (b08 <= 250);
            						}
            						else {
HXLINE( 598)							_hx_tmp73 = false;
            						}
HXDLIN( 598)						if (_hx_tmp73) {
HXLINE( 598)							int _hx_tmp74;
HXDLIN( 598)							int operands20 = operands16->cursor;
HXDLIN( 598)							if ((operands20 >= operands16->data->get_length())) {
HXLINE( 598)								_hx_tmp74 = 0;
            							}
            							else {
HXLINE( 598)								_hx_tmp74 = operands16->data->readU8(operands16->cursor++);
            							}
HXDLIN( 598)							_hx_tmp71 = ((((b08 - 247) * 256) + _hx_tmp74) + 108);
            						}
            						else {
HXLINE( 598)							bool _hx_tmp75;
HXDLIN( 598)							if ((b08 >= 251)) {
HXLINE( 598)								_hx_tmp75 = (b08 <= 254);
            							}
            							else {
HXLINE( 598)								_hx_tmp75 = false;
            							}
HXDLIN( 598)							if (_hx_tmp75) {
HXLINE( 598)								int _hx_tmp76;
HXDLIN( 598)								int operands21 = operands16->cursor;
HXDLIN( 598)								if ((operands21 >= operands16->data->get_length())) {
HXLINE( 598)									_hx_tmp76 = 0;
            								}
            								else {
HXLINE( 598)									_hx_tmp76 = operands16->data->readU8(operands16->cursor++);
            								}
HXDLIN( 598)								_hx_tmp71 = (((-((b08 - 251)) * 256) - _hx_tmp76) - 108);
            							}
            							else {
HXLINE( 598)								if ((b08 == 28)) {
HXLINE( 598)									int v45 = 0;
HXDLIN( 598)									{
HXLINE( 598)										int _g31 = 0;
HXDLIN( 598)										int _g121 = 2;
HXDLIN( 598)										while((_g31 < _g121)){
HXLINE( 598)											_g31 = (_g31 + 1);
HXDLIN( 598)											int i24 = (_g31 - 1);
HXDLIN( 598)											int v46;
HXDLIN( 598)											int operands22 = operands16->cursor;
HXDLIN( 598)											if ((operands22 >= operands16->data->get_length())) {
HXLINE( 598)												v46 = 0;
            											}
            											else {
HXLINE( 598)												v46 = operands16->data->readU8(operands16->cursor++);
            											}
HXDLIN( 598)											v45 = ((v45 << 8) | v46);
            										}
            									}
HXDLIN( 598)									_hx_tmp71 = v45;
            								}
            								else {
HXLINE( 598)									if ((b08 == 29)) {
HXLINE( 598)										int v47 = 0;
HXDLIN( 598)										{
HXLINE( 598)											int _g32 = 0;
HXDLIN( 598)											int _g122 = 4;
HXDLIN( 598)											while((_g32 < _g122)){
HXLINE( 598)												_g32 = (_g32 + 1);
HXDLIN( 598)												int i25 = (_g32 - 1);
HXDLIN( 598)												int v48;
HXDLIN( 598)												int operands23 = operands16->cursor;
HXDLIN( 598)												if ((operands23 >= operands16->data->get_length())) {
HXLINE( 598)													v48 = 0;
            												}
            												else {
HXLINE( 598)													v48 = operands16->data->readU8(operands16->cursor++);
            												}
HXDLIN( 598)												v47 = ((v47 << 8) | v48);
            											}
            										}
HXDLIN( 598)										_hx_tmp71 = v47;
            									}
            									else {
HXLINE( 598)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
HXDLIN( 598)					fdarrayoff[i21] = _hx_tmp71;
HXDLIN( 598)					i21 = (i21 + 1);
            				}
            				_hx_goto_113:;
            			}
HXLINE( 599)			{
HXLINE( 599)				int i26 = 0;
HXDLIN( 599)				{
HXLINE( 599)					if ((0 > topdict->data->get_length())) {
HXLINE( 599)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 599)					int _hx_tmp77;
HXDLIN( 599)					if ((0 > topdict->data->get_length())) {
HXLINE( 599)						_hx_tmp77 = topdict->data->get_length();
            					}
            					else {
HXLINE( 599)						_hx_tmp77 = 0;
            					}
HXDLIN( 599)					topdict->cursor = _hx_tmp77;
            				}
HXDLIN( 599)				 ::kha::graphics2::truetype::Stbtt__buf ret12 = null();
HXDLIN( 599)				while(true){
HXLINE( 599)					int topdict46 = topdict->cursor;
HXDLIN( 599)					if (!((topdict46 < topdict->data->get_length()))) {
HXLINE( 599)						goto _hx_goto_116;
            					}
HXDLIN( 599)					int start8 = topdict->cursor;
HXDLIN( 599)					int op6;
HXDLIN( 599)					while(true){
HXLINE( 599)						int _hx_tmp78;
HXDLIN( 599)						int topdict47 = topdict->cursor;
HXDLIN( 599)						if ((topdict47 >= topdict->data->get_length())) {
HXLINE( 599)							_hx_tmp78 = 0;
            						}
            						else {
HXLINE( 599)							_hx_tmp78 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 599)						if (!((_hx_tmp78 >= 28))) {
HXLINE( 599)							goto _hx_goto_117;
            						}
HXDLIN( 599)						int v49;
HXDLIN( 599)						int b09;
HXDLIN( 599)						int topdict48 = topdict->cursor;
HXDLIN( 599)						if ((topdict48 >= topdict->data->get_length())) {
HXLINE( 599)							b09 = 0;
            						}
            						else {
HXLINE( 599)							b09 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 599)						if ((b09 < 28)) {
HXLINE( 599)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 599)						if ((b09 == 30)) {
HXLINE( 599)							{
HXLINE( 599)								int o19 = (topdict->cursor + 1);
HXDLIN( 599)								{
HXLINE( 599)									bool value14;
HXDLIN( 599)									if ((o19 <= topdict->data->get_length())) {
HXLINE( 599)										value14 = (o19 < 0);
            									}
            									else {
HXLINE( 599)										value14 = true;
            									}
HXDLIN( 599)									if (!(!(value14))) {
HXLINE( 599)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN( 599)								int _hx_tmp79;
HXDLIN( 599)								bool _hx_tmp80;
HXDLIN( 599)								if ((o19 <= topdict->data->get_length())) {
HXLINE( 599)									_hx_tmp80 = (o19 < 0);
            								}
            								else {
HXLINE( 599)									_hx_tmp80 = true;
            								}
HXDLIN( 599)								if (_hx_tmp80) {
HXLINE( 599)									_hx_tmp79 = topdict->data->get_length();
            								}
            								else {
HXLINE( 599)									_hx_tmp79 = o19;
            								}
HXDLIN( 599)								topdict->cursor = _hx_tmp79;
            							}
HXDLIN( 599)							while(true){
HXLINE( 599)								int topdict49 = topdict->cursor;
HXDLIN( 599)								if (!((topdict49 < topdict->data->get_length()))) {
HXLINE( 599)									goto _hx_goto_118;
            								}
HXDLIN( 599)								int topdict50 = topdict->cursor;
HXDLIN( 599)								if ((topdict50 >= topdict->data->get_length())) {
HXLINE( 599)									v49 = 0;
            								}
            								else {
HXLINE( 599)									v49 = topdict->data->readU8(topdict->cursor++);
            								}
HXDLIN( 599)								bool _hx_tmp81;
HXDLIN( 599)								if (((v49 & 15) != 15)) {
HXLINE( 599)									_hx_tmp81 = ((v49 >> 4) == 15);
            								}
            								else {
HXLINE( 599)									_hx_tmp81 = true;
            								}
HXDLIN( 599)								if (_hx_tmp81) {
HXLINE( 599)									goto _hx_goto_118;
            								}
            							}
            							_hx_goto_118:;
            						}
            						else {
HXLINE( 599)							int b010;
HXDLIN( 599)							int topdict51 = topdict->cursor;
HXDLIN( 599)							if ((topdict51 >= topdict->data->get_length())) {
HXLINE( 599)								b010 = 0;
            							}
            							else {
HXLINE( 599)								b010 = topdict->data->readU8(topdict->cursor++);
            							}
HXDLIN( 599)							bool _hx_tmp82;
HXDLIN( 599)							if ((b010 >= 32)) {
HXLINE( 599)								_hx_tmp82 = (b010 <= 246);
            							}
            							else {
HXLINE( 599)								_hx_tmp82 = false;
            							}
HXDLIN( 599)							if (!(_hx_tmp82)) {
HXLINE( 599)								bool _hx_tmp83;
HXDLIN( 599)								if ((b010 >= 247)) {
HXLINE( 599)									_hx_tmp83 = (b010 <= 250);
            								}
            								else {
HXLINE( 599)									_hx_tmp83 = false;
            								}
HXDLIN( 599)								if (_hx_tmp83) {
HXLINE( 599)									int topdict52 = topdict->cursor;
HXDLIN( 599)									if ((topdict52 < topdict->data->get_length())) {
HXLINE( 599)										topdict->data->readU8(topdict->cursor++);
            									}
            								}
            								else {
HXLINE( 599)									bool _hx_tmp84;
HXDLIN( 599)									if ((b010 >= 251)) {
HXLINE( 599)										_hx_tmp84 = (b010 <= 254);
            									}
            									else {
HXLINE( 599)										_hx_tmp84 = false;
            									}
HXDLIN( 599)									if (_hx_tmp84) {
HXLINE( 599)										int topdict53 = topdict->cursor;
HXDLIN( 599)										if ((topdict53 < topdict->data->get_length())) {
HXLINE( 599)											topdict->data->readU8(topdict->cursor++);
            										}
            									}
            									else {
HXLINE( 599)										if ((b010 == 28)) {
HXLINE( 599)											int v50 = 0;
HXDLIN( 599)											{
HXLINE( 599)												int _g33 = 0;
HXDLIN( 599)												int _g123 = 2;
HXDLIN( 599)												while((_g33 < _g123)){
HXLINE( 599)													_g33 = (_g33 + 1);
HXDLIN( 599)													int i27 = (_g33 - 1);
HXDLIN( 599)													int v51;
HXDLIN( 599)													int topdict54 = topdict->cursor;
HXDLIN( 599)													if ((topdict54 >= topdict->data->get_length())) {
HXLINE( 599)														v51 = 0;
            													}
            													else {
HXLINE( 599)														v51 = topdict->data->readU8(topdict->cursor++);
            													}
HXDLIN( 599)													v50 = ((v50 << 8) | v51);
            												}
            											}
            										}
            										else {
HXLINE( 599)											if ((b010 == 29)) {
HXLINE( 599)												int v52 = 0;
HXDLIN( 599)												{
HXLINE( 599)													int _g34 = 0;
HXDLIN( 599)													int _g124 = 4;
HXDLIN( 599)													while((_g34 < _g124)){
HXLINE( 599)														_g34 = (_g34 + 1);
HXDLIN( 599)														int i28 = (_g34 - 1);
HXDLIN( 599)														int v53;
HXDLIN( 599)														int topdict55 = topdict->cursor;
HXDLIN( 599)														if ((topdict55 >= topdict->data->get_length())) {
HXLINE( 599)															v53 = 0;
            														}
            														else {
HXLINE( 599)															v53 = topdict->data->readU8(topdict->cursor++);
            														}
HXDLIN( 599)														v52 = ((v52 << 8) | v53);
            													}
            												}
            											}
            											else {
HXLINE( 599)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            					_hx_goto_117:;
HXDLIN( 599)					int end4 = topdict->cursor;
HXDLIN( 599)					int topdict56 = topdict->cursor;
HXDLIN( 599)					if ((topdict56 >= topdict->data->get_length())) {
HXLINE( 599)						op6 = 0;
            					}
            					else {
HXLINE( 599)						op6 = topdict->data->readU8(topdict->cursor++);
            					}
HXDLIN( 599)					if ((op6 == 12)) {
HXLINE( 599)						int op7;
HXDLIN( 599)						int topdict57 = topdict->cursor;
HXDLIN( 599)						if ((topdict57 >= topdict->data->get_length())) {
HXLINE( 599)							op7 = 0;
            						}
            						else {
HXLINE( 599)							op7 = topdict->data->readU8(topdict->cursor++);
            						}
HXDLIN( 599)						op6 = (op7 | 256);
            					}
HXDLIN( 599)					if ((op6 == 293)) {
HXLINE( 599)						int s8 = (end4 - start8);
HXDLIN( 599)						 ::kha::internal::BytesBlob p14 = null();
HXDLIN( 599)						 ::kha::graphics2::truetype::Stbtt__buf r26 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 599)						r26->_hx_set_data(HX_CTX, p14);
HXDLIN( 599)						r26->cursor = 0;
HXDLIN( 599)						 ::kha::graphics2::truetype::Stbtt__buf r27 = r26;
HXDLIN( 599)						bool ret13;
HXDLIN( 599)						bool ret14;
HXDLIN( 599)						bool ret15;
HXDLIN( 599)						if ((start8 >= 0)) {
HXLINE( 599)							ret15 = (s8 < 0);
            						}
            						else {
HXLINE( 599)							ret15 = true;
            						}
HXDLIN( 599)						if (!(ret15)) {
HXLINE( 599)							ret14 = (start8 > topdict->data->get_length());
            						}
            						else {
HXLINE( 599)							ret14 = true;
            						}
HXDLIN( 599)						if (!(ret14)) {
HXLINE( 599)							ret13 = (s8 > (topdict->data->get_length() - start8));
            						}
            						else {
HXLINE( 599)							ret13 = true;
            						}
HXDLIN( 599)						if (ret13) {
HXLINE( 599)							ret12 = r27;
            						}
            						else {
HXLINE( 599)							r27->_hx_set_data(HX_CTX, topdict->data->sub(start8,s8));
HXDLIN( 599)							ret12 = r27;
            						}
HXDLIN( 599)						goto _hx_goto_116;
            					}
            				}
            				_hx_goto_116:;
HXDLIN( 599)				 ::kha::graphics2::truetype::Stbtt__buf operands24;
HXDLIN( 599)				if (hx::IsNotNull( ret12 )) {
HXLINE( 599)					operands24 = ret12;
            				}
            				else {
HXLINE( 599)					 ::kha::internal::BytesBlob p15 = null();
HXDLIN( 599)					 ::kha::graphics2::truetype::Stbtt__buf r28 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 599)					r28->_hx_set_data(HX_CTX, p15);
HXDLIN( 599)					r28->cursor = 0;
HXDLIN( 599)					 ::kha::graphics2::truetype::Stbtt__buf r29 = r28;
HXDLIN( 599)					bool operands25;
HXDLIN( 599)					if ((0 <= topdict->data->get_length())) {
HXLINE( 599)						operands25 = (0 > topdict->data->get_length());
            					}
            					else {
HXLINE( 599)						operands25 = true;
            					}
HXDLIN( 599)					if (operands25) {
HXLINE( 599)						operands24 = r29;
            					}
            					else {
HXLINE( 599)						r29->_hx_set_data(HX_CTX, topdict->data->sub(0,0));
HXDLIN( 599)						operands24 = r29;
            					}
            				}
HXDLIN( 599)				while(true){
HXLINE( 599)					bool _hx_tmp85;
HXDLIN( 599)					if ((i26 < 1)) {
HXLINE( 599)						int operands26 = operands24->cursor;
HXDLIN( 599)						_hx_tmp85 = (operands26 < operands24->data->get_length());
            					}
            					else {
HXLINE( 599)						_hx_tmp85 = false;
            					}
HXDLIN( 599)					if (!(_hx_tmp85)) {
HXLINE( 599)						goto _hx_goto_121;
            					}
HXDLIN( 599)					int b011;
HXDLIN( 599)					int operands27 = operands24->cursor;
HXDLIN( 599)					if ((operands27 >= operands24->data->get_length())) {
HXLINE( 599)						b011 = 0;
            					}
            					else {
HXLINE( 599)						b011 = operands24->data->readU8(operands24->cursor++);
            					}
HXDLIN( 599)					int _hx_tmp86;
HXDLIN( 599)					bool _hx_tmp87;
HXDLIN( 599)					if ((b011 >= 32)) {
HXLINE( 599)						_hx_tmp87 = (b011 <= 246);
            					}
            					else {
HXLINE( 599)						_hx_tmp87 = false;
            					}
HXDLIN( 599)					if (_hx_tmp87) {
HXLINE( 599)						_hx_tmp86 = (b011 - 139);
            					}
            					else {
HXLINE( 599)						bool _hx_tmp88;
HXDLIN( 599)						if ((b011 >= 247)) {
HXLINE( 599)							_hx_tmp88 = (b011 <= 250);
            						}
            						else {
HXLINE( 599)							_hx_tmp88 = false;
            						}
HXDLIN( 599)						if (_hx_tmp88) {
HXLINE( 599)							int _hx_tmp89;
HXDLIN( 599)							int operands28 = operands24->cursor;
HXDLIN( 599)							if ((operands28 >= operands24->data->get_length())) {
HXLINE( 599)								_hx_tmp89 = 0;
            							}
            							else {
HXLINE( 599)								_hx_tmp89 = operands24->data->readU8(operands24->cursor++);
            							}
HXDLIN( 599)							_hx_tmp86 = ((((b011 - 247) * 256) + _hx_tmp89) + 108);
            						}
            						else {
HXLINE( 599)							bool _hx_tmp90;
HXDLIN( 599)							if ((b011 >= 251)) {
HXLINE( 599)								_hx_tmp90 = (b011 <= 254);
            							}
            							else {
HXLINE( 599)								_hx_tmp90 = false;
            							}
HXDLIN( 599)							if (_hx_tmp90) {
HXLINE( 599)								int _hx_tmp91;
HXDLIN( 599)								int operands29 = operands24->cursor;
HXDLIN( 599)								if ((operands29 >= operands24->data->get_length())) {
HXLINE( 599)									_hx_tmp91 = 0;
            								}
            								else {
HXLINE( 599)									_hx_tmp91 = operands24->data->readU8(operands24->cursor++);
            								}
HXDLIN( 599)								_hx_tmp86 = (((-((b011 - 251)) * 256) - _hx_tmp91) - 108);
            							}
            							else {
HXLINE( 599)								if ((b011 == 28)) {
HXLINE( 599)									int v54 = 0;
HXDLIN( 599)									{
HXLINE( 599)										int _g35 = 0;
HXDLIN( 599)										int _g125 = 2;
HXDLIN( 599)										while((_g35 < _g125)){
HXLINE( 599)											_g35 = (_g35 + 1);
HXDLIN( 599)											int i29 = (_g35 - 1);
HXDLIN( 599)											int v55;
HXDLIN( 599)											int operands30 = operands24->cursor;
HXDLIN( 599)											if ((operands30 >= operands24->data->get_length())) {
HXLINE( 599)												v55 = 0;
            											}
            											else {
HXLINE( 599)												v55 = operands24->data->readU8(operands24->cursor++);
            											}
HXDLIN( 599)											v54 = ((v54 << 8) | v55);
            										}
            									}
HXDLIN( 599)									_hx_tmp86 = v54;
            								}
            								else {
HXLINE( 599)									if ((b011 == 29)) {
HXLINE( 599)										int v56 = 0;
HXDLIN( 599)										{
HXLINE( 599)											int _g36 = 0;
HXDLIN( 599)											int _g126 = 4;
HXDLIN( 599)											while((_g36 < _g126)){
HXLINE( 599)												_g36 = (_g36 + 1);
HXDLIN( 599)												int i30 = (_g36 - 1);
HXDLIN( 599)												int v57;
HXDLIN( 599)												int operands31 = operands24->cursor;
HXDLIN( 599)												if ((operands31 >= operands24->data->get_length())) {
HXLINE( 599)													v57 = 0;
            												}
            												else {
HXLINE( 599)													v57 = operands24->data->readU8(operands24->cursor++);
            												}
HXDLIN( 599)												v56 = ((v56 << 8) | v57);
            											}
            										}
HXDLIN( 599)										_hx_tmp86 = v56;
            									}
            									else {
HXLINE( 599)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
HXDLIN( 599)					fdselectoff[i26] = _hx_tmp86;
HXDLIN( 599)					i26 = (i26 + 1);
            				}
            				_hx_goto_121:;
            			}
HXLINE( 600)			::Array< int > subrsoff = ::Array_obj< int >::fromData( _hx_array_data_79db9614_152,1);
HXDLIN( 600)			::Array< int > private_loc = ::Array_obj< int >::fromData( _hx_array_data_79db9614_153,2);
HXDLIN( 600)			{
HXLINE( 600)				int i31 = 0;
HXDLIN( 600)				{
HXLINE( 600)					if ((0 > topdict->data->get_length())) {
HXLINE( 600)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 600)					int _hx_tmp92;
HXDLIN( 600)					if ((0 > topdict->data->get_length())) {
HXLINE( 600)						_hx_tmp92 = topdict->data->get_length();
            					}
            					else {
HXLINE( 600)						_hx_tmp92 = 0;
            					}
HXDLIN( 600)					topdict->cursor = _hx_tmp92;
            				}
HXDLIN( 600)				 ::kha::graphics2::truetype::Stbtt__buf ret16 = null();
HXDLIN( 600)				while(true){
HXLINE( 600)					int topdict58 = topdict->cursor;
HXDLIN( 600)					if (!((topdict58 < topdict->data->get_length()))) {
HXLINE( 600)						goto _hx_goto_124;
            					}
HXDLIN( 600)					int start9 = topdict->cursor;
HXDLIN( 600)					int op8;
HXDLIN( 600)					while(true){
HXLINE( 600)						int _hx_tmp93;
HXDLIN( 600)						int topdict59 = topdict->cursor;
HXDLIN( 600)						if ((topdict59 >= topdict->data->get_length())) {
HXLINE( 600)							_hx_tmp93 = 0;
            						}
            						else {
HXLINE( 600)							_hx_tmp93 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 600)						if (!((_hx_tmp93 >= 28))) {
HXLINE( 600)							goto _hx_goto_125;
            						}
HXDLIN( 600)						int v58;
HXDLIN( 600)						int b012;
HXDLIN( 600)						int topdict60 = topdict->cursor;
HXDLIN( 600)						if ((topdict60 >= topdict->data->get_length())) {
HXLINE( 600)							b012 = 0;
            						}
            						else {
HXLINE( 600)							b012 = topdict->data->readU8(topdict->cursor);
            						}
HXDLIN( 600)						if ((b012 < 28)) {
HXLINE( 600)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 600)						if ((b012 == 30)) {
HXLINE( 600)							{
HXLINE( 600)								int o20 = (topdict->cursor + 1);
HXDLIN( 600)								{
HXLINE( 600)									bool value15;
HXDLIN( 600)									if ((o20 <= topdict->data->get_length())) {
HXLINE( 600)										value15 = (o20 < 0);
            									}
            									else {
HXLINE( 600)										value15 = true;
            									}
HXDLIN( 600)									if (!(!(value15))) {
HXLINE( 600)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN( 600)								int _hx_tmp94;
HXDLIN( 600)								bool _hx_tmp95;
HXDLIN( 600)								if ((o20 <= topdict->data->get_length())) {
HXLINE( 600)									_hx_tmp95 = (o20 < 0);
            								}
            								else {
HXLINE( 600)									_hx_tmp95 = true;
            								}
HXDLIN( 600)								if (_hx_tmp95) {
HXLINE( 600)									_hx_tmp94 = topdict->data->get_length();
            								}
            								else {
HXLINE( 600)									_hx_tmp94 = o20;
            								}
HXDLIN( 600)								topdict->cursor = _hx_tmp94;
            							}
HXDLIN( 600)							while(true){
HXLINE( 600)								int topdict61 = topdict->cursor;
HXDLIN( 600)								if (!((topdict61 < topdict->data->get_length()))) {
HXLINE( 600)									goto _hx_goto_126;
            								}
HXDLIN( 600)								int topdict62 = topdict->cursor;
HXDLIN( 600)								if ((topdict62 >= topdict->data->get_length())) {
HXLINE( 600)									v58 = 0;
            								}
            								else {
HXLINE( 600)									v58 = topdict->data->readU8(topdict->cursor++);
            								}
HXDLIN( 600)								bool _hx_tmp96;
HXDLIN( 600)								if (((v58 & 15) != 15)) {
HXLINE( 600)									_hx_tmp96 = ((v58 >> 4) == 15);
            								}
            								else {
HXLINE( 600)									_hx_tmp96 = true;
            								}
HXDLIN( 600)								if (_hx_tmp96) {
HXLINE( 600)									goto _hx_goto_126;
            								}
            							}
            							_hx_goto_126:;
            						}
            						else {
HXLINE( 600)							int b013;
HXDLIN( 600)							int topdict63 = topdict->cursor;
HXDLIN( 600)							if ((topdict63 >= topdict->data->get_length())) {
HXLINE( 600)								b013 = 0;
            							}
            							else {
HXLINE( 600)								b013 = topdict->data->readU8(topdict->cursor++);
            							}
HXDLIN( 600)							bool _hx_tmp97;
HXDLIN( 600)							if ((b013 >= 32)) {
HXLINE( 600)								_hx_tmp97 = (b013 <= 246);
            							}
            							else {
HXLINE( 600)								_hx_tmp97 = false;
            							}
HXDLIN( 600)							if (!(_hx_tmp97)) {
HXLINE( 600)								bool _hx_tmp98;
HXDLIN( 600)								if ((b013 >= 247)) {
HXLINE( 600)									_hx_tmp98 = (b013 <= 250);
            								}
            								else {
HXLINE( 600)									_hx_tmp98 = false;
            								}
HXDLIN( 600)								if (_hx_tmp98) {
HXLINE( 600)									int topdict64 = topdict->cursor;
HXDLIN( 600)									if ((topdict64 < topdict->data->get_length())) {
HXLINE( 600)										topdict->data->readU8(topdict->cursor++);
            									}
            								}
            								else {
HXLINE( 600)									bool _hx_tmp99;
HXDLIN( 600)									if ((b013 >= 251)) {
HXLINE( 600)										_hx_tmp99 = (b013 <= 254);
            									}
            									else {
HXLINE( 600)										_hx_tmp99 = false;
            									}
HXDLIN( 600)									if (_hx_tmp99) {
HXLINE( 600)										int topdict65 = topdict->cursor;
HXDLIN( 600)										if ((topdict65 < topdict->data->get_length())) {
HXLINE( 600)											topdict->data->readU8(topdict->cursor++);
            										}
            									}
            									else {
HXLINE( 600)										if ((b013 == 28)) {
HXLINE( 600)											int v59 = 0;
HXDLIN( 600)											{
HXLINE( 600)												int _g37 = 0;
HXDLIN( 600)												int _g127 = 2;
HXDLIN( 600)												while((_g37 < _g127)){
HXLINE( 600)													_g37 = (_g37 + 1);
HXDLIN( 600)													int i32 = (_g37 - 1);
HXDLIN( 600)													int v60;
HXDLIN( 600)													int topdict66 = topdict->cursor;
HXDLIN( 600)													if ((topdict66 >= topdict->data->get_length())) {
HXLINE( 600)														v60 = 0;
            													}
            													else {
HXLINE( 600)														v60 = topdict->data->readU8(topdict->cursor++);
            													}
HXDLIN( 600)													v59 = ((v59 << 8) | v60);
            												}
            											}
            										}
            										else {
HXLINE( 600)											if ((b013 == 29)) {
HXLINE( 600)												int v61 = 0;
HXDLIN( 600)												{
HXLINE( 600)													int _g38 = 0;
HXDLIN( 600)													int _g128 = 4;
HXDLIN( 600)													while((_g38 < _g128)){
HXLINE( 600)														_g38 = (_g38 + 1);
HXDLIN( 600)														int i33 = (_g38 - 1);
HXDLIN( 600)														int v62;
HXDLIN( 600)														int topdict67 = topdict->cursor;
HXDLIN( 600)														if ((topdict67 >= topdict->data->get_length())) {
HXLINE( 600)															v62 = 0;
            														}
            														else {
HXLINE( 600)															v62 = topdict->data->readU8(topdict->cursor++);
            														}
HXDLIN( 600)														v61 = ((v61 << 8) | v62);
            													}
            												}
            											}
            											else {
HXLINE( 600)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            					_hx_goto_125:;
HXDLIN( 600)					int end5 = topdict->cursor;
HXDLIN( 600)					int topdict68 = topdict->cursor;
HXDLIN( 600)					if ((topdict68 >= topdict->data->get_length())) {
HXLINE( 600)						op8 = 0;
            					}
            					else {
HXLINE( 600)						op8 = topdict->data->readU8(topdict->cursor++);
            					}
HXDLIN( 600)					if ((op8 == 12)) {
HXLINE( 600)						int op9;
HXDLIN( 600)						int topdict69 = topdict->cursor;
HXDLIN( 600)						if ((topdict69 >= topdict->data->get_length())) {
HXLINE( 600)							op9 = 0;
            						}
            						else {
HXLINE( 600)							op9 = topdict->data->readU8(topdict->cursor++);
            						}
HXDLIN( 600)						op8 = (op9 | 256);
            					}
HXDLIN( 600)					if ((op8 == 18)) {
HXLINE( 600)						int s9 = (end5 - start9);
HXDLIN( 600)						 ::kha::internal::BytesBlob p16 = null();
HXDLIN( 600)						 ::kha::graphics2::truetype::Stbtt__buf r30 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)						r30->_hx_set_data(HX_CTX, p16);
HXDLIN( 600)						r30->cursor = 0;
HXDLIN( 600)						 ::kha::graphics2::truetype::Stbtt__buf r31 = r30;
HXDLIN( 600)						bool ret17;
HXDLIN( 600)						bool ret18;
HXDLIN( 600)						bool ret19;
HXDLIN( 600)						if ((start9 >= 0)) {
HXLINE( 600)							ret19 = (s9 < 0);
            						}
            						else {
HXLINE( 600)							ret19 = true;
            						}
HXDLIN( 600)						if (!(ret19)) {
HXLINE( 600)							ret18 = (start9 > topdict->data->get_length());
            						}
            						else {
HXLINE( 600)							ret18 = true;
            						}
HXDLIN( 600)						if (!(ret18)) {
HXLINE( 600)							ret17 = (s9 > (topdict->data->get_length() - start9));
            						}
            						else {
HXLINE( 600)							ret17 = true;
            						}
HXDLIN( 600)						if (ret17) {
HXLINE( 600)							ret16 = r31;
            						}
            						else {
HXLINE( 600)							r31->_hx_set_data(HX_CTX, topdict->data->sub(start9,s9));
HXDLIN( 600)							ret16 = r31;
            						}
HXDLIN( 600)						goto _hx_goto_124;
            					}
            				}
            				_hx_goto_124:;
HXDLIN( 600)				 ::kha::graphics2::truetype::Stbtt__buf operands32;
HXDLIN( 600)				if (hx::IsNotNull( ret16 )) {
HXLINE( 600)					operands32 = ret16;
            				}
            				else {
HXLINE( 600)					 ::kha::internal::BytesBlob p17 = null();
HXDLIN( 600)					 ::kha::graphics2::truetype::Stbtt__buf r32 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)					r32->_hx_set_data(HX_CTX, p17);
HXDLIN( 600)					r32->cursor = 0;
HXDLIN( 600)					 ::kha::graphics2::truetype::Stbtt__buf r33 = r32;
HXDLIN( 600)					bool operands33;
HXDLIN( 600)					if ((0 <= topdict->data->get_length())) {
HXLINE( 600)						operands33 = (0 > topdict->data->get_length());
            					}
            					else {
HXLINE( 600)						operands33 = true;
            					}
HXDLIN( 600)					if (operands33) {
HXLINE( 600)						operands32 = r33;
            					}
            					else {
HXLINE( 600)						r33->_hx_set_data(HX_CTX, topdict->data->sub(0,0));
HXDLIN( 600)						operands32 = r33;
            					}
            				}
HXDLIN( 600)				while(true){
HXLINE( 600)					bool _hx_tmp100;
HXDLIN( 600)					if ((i31 < 2)) {
HXLINE( 600)						int operands34 = operands32->cursor;
HXDLIN( 600)						_hx_tmp100 = (operands34 < operands32->data->get_length());
            					}
            					else {
HXLINE( 600)						_hx_tmp100 = false;
            					}
HXDLIN( 600)					if (!(_hx_tmp100)) {
HXLINE( 600)						goto _hx_goto_129;
            					}
HXDLIN( 600)					int b014;
HXDLIN( 600)					int operands35 = operands32->cursor;
HXDLIN( 600)					if ((operands35 >= operands32->data->get_length())) {
HXLINE( 600)						b014 = 0;
            					}
            					else {
HXLINE( 600)						b014 = operands32->data->readU8(operands32->cursor++);
            					}
HXDLIN( 600)					int _hx_tmp101;
HXDLIN( 600)					bool _hx_tmp102;
HXDLIN( 600)					if ((b014 >= 32)) {
HXLINE( 600)						_hx_tmp102 = (b014 <= 246);
            					}
            					else {
HXLINE( 600)						_hx_tmp102 = false;
            					}
HXDLIN( 600)					if (_hx_tmp102) {
HXLINE( 600)						_hx_tmp101 = (b014 - 139);
            					}
            					else {
HXLINE( 600)						bool _hx_tmp103;
HXDLIN( 600)						if ((b014 >= 247)) {
HXLINE( 600)							_hx_tmp103 = (b014 <= 250);
            						}
            						else {
HXLINE( 600)							_hx_tmp103 = false;
            						}
HXDLIN( 600)						if (_hx_tmp103) {
HXLINE( 600)							int _hx_tmp104;
HXDLIN( 600)							int operands36 = operands32->cursor;
HXDLIN( 600)							if ((operands36 >= operands32->data->get_length())) {
HXLINE( 600)								_hx_tmp104 = 0;
            							}
            							else {
HXLINE( 600)								_hx_tmp104 = operands32->data->readU8(operands32->cursor++);
            							}
HXDLIN( 600)							_hx_tmp101 = ((((b014 - 247) * 256) + _hx_tmp104) + 108);
            						}
            						else {
HXLINE( 600)							bool _hx_tmp105;
HXDLIN( 600)							if ((b014 >= 251)) {
HXLINE( 600)								_hx_tmp105 = (b014 <= 254);
            							}
            							else {
HXLINE( 600)								_hx_tmp105 = false;
            							}
HXDLIN( 600)							if (_hx_tmp105) {
HXLINE( 600)								int _hx_tmp106;
HXDLIN( 600)								int operands37 = operands32->cursor;
HXDLIN( 600)								if ((operands37 >= operands32->data->get_length())) {
HXLINE( 600)									_hx_tmp106 = 0;
            								}
            								else {
HXLINE( 600)									_hx_tmp106 = operands32->data->readU8(operands32->cursor++);
            								}
HXDLIN( 600)								_hx_tmp101 = (((-((b014 - 251)) * 256) - _hx_tmp106) - 108);
            							}
            							else {
HXLINE( 600)								if ((b014 == 28)) {
HXLINE( 600)									int v63 = 0;
HXDLIN( 600)									{
HXLINE( 600)										int _g39 = 0;
HXDLIN( 600)										int _g129 = 2;
HXDLIN( 600)										while((_g39 < _g129)){
HXLINE( 600)											_g39 = (_g39 + 1);
HXDLIN( 600)											int i34 = (_g39 - 1);
HXDLIN( 600)											int v64;
HXDLIN( 600)											int operands38 = operands32->cursor;
HXDLIN( 600)											if ((operands38 >= operands32->data->get_length())) {
HXLINE( 600)												v64 = 0;
            											}
            											else {
HXLINE( 600)												v64 = operands32->data->readU8(operands32->cursor++);
            											}
HXDLIN( 600)											v63 = ((v63 << 8) | v64);
            										}
            									}
HXDLIN( 600)									_hx_tmp101 = v63;
            								}
            								else {
HXLINE( 600)									if ((b014 == 29)) {
HXLINE( 600)										int v65 = 0;
HXDLIN( 600)										{
HXLINE( 600)											int _g40 = 0;
HXDLIN( 600)											int _g130 = 4;
HXDLIN( 600)											while((_g40 < _g130)){
HXLINE( 600)												_g40 = (_g40 + 1);
HXDLIN( 600)												int i35 = (_g40 - 1);
HXDLIN( 600)												int v66;
HXDLIN( 600)												int operands39 = operands32->cursor;
HXDLIN( 600)												if ((operands39 >= operands32->data->get_length())) {
HXLINE( 600)													v66 = 0;
            												}
            												else {
HXLINE( 600)													v66 = operands32->data->readU8(operands32->cursor++);
            												}
HXDLIN( 600)												v65 = ((v65 << 8) | v66);
            											}
            										}
HXDLIN( 600)										_hx_tmp101 = v65;
            									}
            									else {
HXLINE( 600)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
HXDLIN( 600)					private_loc[i31] = _hx_tmp101;
HXDLIN( 600)					i31 = (i31 + 1);
            				}
            				_hx_goto_129:;
            			}
HXDLIN( 600)			 ::kha::graphics2::truetype::Stbtt__buf _hx_tmp107;
HXDLIN( 600)			bool _hx_tmp108;
HXDLIN( 600)			if ((private_loc->__get(1) != 0)) {
HXLINE( 600)				_hx_tmp108 = (private_loc->__get(0) == 0);
            			}
            			else {
HXLINE( 600)				_hx_tmp108 = true;
            			}
HXDLIN( 600)			if (_hx_tmp108) {
HXLINE( 600)				 ::kha::internal::BytesBlob p18 = null();
HXDLIN( 600)				 ::kha::graphics2::truetype::Stbtt__buf r34 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)				r34->_hx_set_data(HX_CTX, p18);
HXDLIN( 600)				r34->cursor = 0;
HXDLIN( 600)				_hx_tmp107 = r34;
            			}
            			else {
HXLINE( 600)				int o21 = private_loc->__get(1);
HXDLIN( 600)				int s10 = private_loc->__get(0);
HXDLIN( 600)				 ::kha::internal::BytesBlob p19 = null();
HXDLIN( 600)				 ::kha::graphics2::truetype::Stbtt__buf r35 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)				r35->_hx_set_data(HX_CTX, p19);
HXDLIN( 600)				r35->cursor = 0;
HXDLIN( 600)				 ::kha::graphics2::truetype::Stbtt__buf r36 = r35;
HXDLIN( 600)				 ::kha::graphics2::truetype::Stbtt__buf pdict;
HXDLIN( 600)				bool pdict1;
HXDLIN( 600)				bool pdict2;
HXDLIN( 600)				bool pdict3;
HXDLIN( 600)				if ((o21 >= 0)) {
HXLINE( 600)					pdict3 = (s10 < 0);
            				}
            				else {
HXLINE( 600)					pdict3 = true;
            				}
HXDLIN( 600)				if (!(pdict3)) {
HXLINE( 600)					pdict2 = (o21 > b->data->get_length());
            				}
            				else {
HXLINE( 600)					pdict2 = true;
            				}
HXDLIN( 600)				if (!(pdict2)) {
HXLINE( 600)					pdict1 = (s10 > (b->data->get_length() - o21));
            				}
            				else {
HXLINE( 600)					pdict1 = true;
            				}
HXDLIN( 600)				if (pdict1) {
HXLINE( 600)					pdict = r36;
            				}
            				else {
HXLINE( 600)					r36->_hx_set_data(HX_CTX, b->data->sub(o21,s10));
HXDLIN( 600)					pdict = r36;
            				}
HXDLIN( 600)				{
HXLINE( 600)					int i36 = 0;
HXDLIN( 600)					{
HXLINE( 600)						if ((0 > pdict->data->get_length())) {
HXLINE( 600)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 600)						int _hx_tmp109;
HXDLIN( 600)						if ((0 > pdict->data->get_length())) {
HXLINE( 600)							_hx_tmp109 = pdict->data->get_length();
            						}
            						else {
HXLINE( 600)							_hx_tmp109 = 0;
            						}
HXDLIN( 600)						pdict->cursor = _hx_tmp109;
            					}
HXDLIN( 600)					 ::kha::graphics2::truetype::Stbtt__buf ret20 = null();
HXDLIN( 600)					while(true){
HXLINE( 600)						int pdict4 = pdict->cursor;
HXDLIN( 600)						if (!((pdict4 < pdict->data->get_length()))) {
HXLINE( 600)							goto _hx_goto_132;
            						}
HXDLIN( 600)						int start10 = pdict->cursor;
HXDLIN( 600)						int op10;
HXDLIN( 600)						while(true){
HXLINE( 600)							int _hx_tmp110;
HXDLIN( 600)							int pdict5 = pdict->cursor;
HXDLIN( 600)							if ((pdict5 >= pdict->data->get_length())) {
HXLINE( 600)								_hx_tmp110 = 0;
            							}
            							else {
HXLINE( 600)								_hx_tmp110 = pdict->data->readU8(pdict->cursor);
            							}
HXDLIN( 600)							if (!((_hx_tmp110 >= 28))) {
HXLINE( 600)								goto _hx_goto_133;
            							}
HXDLIN( 600)							int v67;
HXDLIN( 600)							int b015;
HXDLIN( 600)							int pdict6 = pdict->cursor;
HXDLIN( 600)							if ((pdict6 >= pdict->data->get_length())) {
HXLINE( 600)								b015 = 0;
            							}
            							else {
HXLINE( 600)								b015 = pdict->data->readU8(pdict->cursor);
            							}
HXDLIN( 600)							if ((b015 < 28)) {
HXLINE( 600)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
HXDLIN( 600)							if ((b015 == 30)) {
HXLINE( 600)								{
HXLINE( 600)									int o22 = (pdict->cursor + 1);
HXDLIN( 600)									{
HXLINE( 600)										bool value16;
HXDLIN( 600)										if ((o22 <= pdict->data->get_length())) {
HXLINE( 600)											value16 = (o22 < 0);
            										}
            										else {
HXLINE( 600)											value16 = true;
            										}
HXDLIN( 600)										if (!(!(value16))) {
HXLINE( 600)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
HXDLIN( 600)									int _hx_tmp111;
HXDLIN( 600)									bool _hx_tmp112;
HXDLIN( 600)									if ((o22 <= pdict->data->get_length())) {
HXLINE( 600)										_hx_tmp112 = (o22 < 0);
            									}
            									else {
HXLINE( 600)										_hx_tmp112 = true;
            									}
HXDLIN( 600)									if (_hx_tmp112) {
HXLINE( 600)										_hx_tmp111 = pdict->data->get_length();
            									}
            									else {
HXLINE( 600)										_hx_tmp111 = o22;
            									}
HXDLIN( 600)									pdict->cursor = _hx_tmp111;
            								}
HXDLIN( 600)								while(true){
HXLINE( 600)									int pdict7 = pdict->cursor;
HXDLIN( 600)									if (!((pdict7 < pdict->data->get_length()))) {
HXLINE( 600)										goto _hx_goto_134;
            									}
HXDLIN( 600)									int pdict8 = pdict->cursor;
HXDLIN( 600)									if ((pdict8 >= pdict->data->get_length())) {
HXLINE( 600)										v67 = 0;
            									}
            									else {
HXLINE( 600)										v67 = pdict->data->readU8(pdict->cursor++);
            									}
HXDLIN( 600)									bool _hx_tmp113;
HXDLIN( 600)									if (((v67 & 15) != 15)) {
HXLINE( 600)										_hx_tmp113 = ((v67 >> 4) == 15);
            									}
            									else {
HXLINE( 600)										_hx_tmp113 = true;
            									}
HXDLIN( 600)									if (_hx_tmp113) {
HXLINE( 600)										goto _hx_goto_134;
            									}
            								}
            								_hx_goto_134:;
            							}
            							else {
HXLINE( 600)								int b016;
HXDLIN( 600)								int pdict9 = pdict->cursor;
HXDLIN( 600)								if ((pdict9 >= pdict->data->get_length())) {
HXLINE( 600)									b016 = 0;
            								}
            								else {
HXLINE( 600)									b016 = pdict->data->readU8(pdict->cursor++);
            								}
HXDLIN( 600)								bool _hx_tmp114;
HXDLIN( 600)								if ((b016 >= 32)) {
HXLINE( 600)									_hx_tmp114 = (b016 <= 246);
            								}
            								else {
HXLINE( 600)									_hx_tmp114 = false;
            								}
HXDLIN( 600)								if (!(_hx_tmp114)) {
HXLINE( 600)									bool _hx_tmp115;
HXDLIN( 600)									if ((b016 >= 247)) {
HXLINE( 600)										_hx_tmp115 = (b016 <= 250);
            									}
            									else {
HXLINE( 600)										_hx_tmp115 = false;
            									}
HXDLIN( 600)									if (_hx_tmp115) {
HXLINE( 600)										int pdict10 = pdict->cursor;
HXDLIN( 600)										if ((pdict10 < pdict->data->get_length())) {
HXLINE( 600)											pdict->data->readU8(pdict->cursor++);
            										}
            									}
            									else {
HXLINE( 600)										bool _hx_tmp116;
HXDLIN( 600)										if ((b016 >= 251)) {
HXLINE( 600)											_hx_tmp116 = (b016 <= 254);
            										}
            										else {
HXLINE( 600)											_hx_tmp116 = false;
            										}
HXDLIN( 600)										if (_hx_tmp116) {
HXLINE( 600)											int pdict11 = pdict->cursor;
HXDLIN( 600)											if ((pdict11 < pdict->data->get_length())) {
HXLINE( 600)												pdict->data->readU8(pdict->cursor++);
            											}
            										}
            										else {
HXLINE( 600)											if ((b016 == 28)) {
HXLINE( 600)												int v68 = 0;
HXDLIN( 600)												{
HXLINE( 600)													int _g41 = 0;
HXDLIN( 600)													int _g131 = 2;
HXDLIN( 600)													while((_g41 < _g131)){
HXLINE( 600)														_g41 = (_g41 + 1);
HXDLIN( 600)														int i37 = (_g41 - 1);
HXDLIN( 600)														int v69;
HXDLIN( 600)														int pdict12 = pdict->cursor;
HXDLIN( 600)														if ((pdict12 >= pdict->data->get_length())) {
HXLINE( 600)															v69 = 0;
            														}
            														else {
HXLINE( 600)															v69 = pdict->data->readU8(pdict->cursor++);
            														}
HXDLIN( 600)														v68 = ((v68 << 8) | v69);
            													}
            												}
            											}
            											else {
HXLINE( 600)												if ((b016 == 29)) {
HXLINE( 600)													int v70 = 0;
HXDLIN( 600)													{
HXLINE( 600)														int _g42 = 0;
HXDLIN( 600)														int _g132 = 4;
HXDLIN( 600)														while((_g42 < _g132)){
HXLINE( 600)															_g42 = (_g42 + 1);
HXDLIN( 600)															int i38 = (_g42 - 1);
HXDLIN( 600)															int v71;
HXDLIN( 600)															int pdict13 = pdict->cursor;
HXDLIN( 600)															if ((pdict13 >= pdict->data->get_length())) {
HXLINE( 600)																v71 = 0;
            															}
            															else {
HXLINE( 600)																v71 = pdict->data->readU8(pdict->cursor++);
            															}
HXDLIN( 600)															v70 = ((v70 << 8) | v71);
            														}
            													}
            												}
            												else {
HXLINE( 600)													HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            						_hx_goto_133:;
HXDLIN( 600)						int end6 = pdict->cursor;
HXDLIN( 600)						int pdict14 = pdict->cursor;
HXDLIN( 600)						if ((pdict14 >= pdict->data->get_length())) {
HXLINE( 600)							op10 = 0;
            						}
            						else {
HXLINE( 600)							op10 = pdict->data->readU8(pdict->cursor++);
            						}
HXDLIN( 600)						if ((op10 == 12)) {
HXLINE( 600)							int op11;
HXDLIN( 600)							int pdict15 = pdict->cursor;
HXDLIN( 600)							if ((pdict15 >= pdict->data->get_length())) {
HXLINE( 600)								op11 = 0;
            							}
            							else {
HXLINE( 600)								op11 = pdict->data->readU8(pdict->cursor++);
            							}
HXDLIN( 600)							op10 = (op11 | 256);
            						}
HXDLIN( 600)						if ((op10 == 19)) {
HXLINE( 600)							int s11 = (end6 - start10);
HXDLIN( 600)							 ::kha::internal::BytesBlob p20 = null();
HXDLIN( 600)							 ::kha::graphics2::truetype::Stbtt__buf r37 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)							r37->_hx_set_data(HX_CTX, p20);
HXDLIN( 600)							r37->cursor = 0;
HXDLIN( 600)							 ::kha::graphics2::truetype::Stbtt__buf r38 = r37;
HXDLIN( 600)							bool ret21;
HXDLIN( 600)							bool ret22;
HXDLIN( 600)							bool ret23;
HXDLIN( 600)							if ((start10 >= 0)) {
HXLINE( 600)								ret23 = (s11 < 0);
            							}
            							else {
HXLINE( 600)								ret23 = true;
            							}
HXDLIN( 600)							if (!(ret23)) {
HXLINE( 600)								ret22 = (start10 > pdict->data->get_length());
            							}
            							else {
HXLINE( 600)								ret22 = true;
            							}
HXDLIN( 600)							if (!(ret22)) {
HXLINE( 600)								ret21 = (s11 > (pdict->data->get_length() - start10));
            							}
            							else {
HXLINE( 600)								ret21 = true;
            							}
HXDLIN( 600)							if (ret21) {
HXLINE( 600)								ret20 = r38;
            							}
            							else {
HXLINE( 600)								r38->_hx_set_data(HX_CTX, pdict->data->sub(start10,s11));
HXDLIN( 600)								ret20 = r38;
            							}
HXDLIN( 600)							goto _hx_goto_132;
            						}
            					}
            					_hx_goto_132:;
HXDLIN( 600)					 ::kha::graphics2::truetype::Stbtt__buf operands40;
HXDLIN( 600)					if (hx::IsNotNull( ret20 )) {
HXLINE( 600)						operands40 = ret20;
            					}
            					else {
HXLINE( 600)						 ::kha::internal::BytesBlob p21 = null();
HXDLIN( 600)						 ::kha::graphics2::truetype::Stbtt__buf r39 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)						r39->_hx_set_data(HX_CTX, p21);
HXDLIN( 600)						r39->cursor = 0;
HXDLIN( 600)						 ::kha::graphics2::truetype::Stbtt__buf r40 = r39;
HXDLIN( 600)						bool operands41;
HXDLIN( 600)						if ((0 <= pdict->data->get_length())) {
HXLINE( 600)							operands41 = (0 > pdict->data->get_length());
            						}
            						else {
HXLINE( 600)							operands41 = true;
            						}
HXDLIN( 600)						if (operands41) {
HXLINE( 600)							operands40 = r40;
            						}
            						else {
HXLINE( 600)							r40->_hx_set_data(HX_CTX, pdict->data->sub(0,0));
HXDLIN( 600)							operands40 = r40;
            						}
            					}
HXDLIN( 600)					while(true){
HXLINE( 600)						bool _hx_tmp117;
HXDLIN( 600)						if ((i36 < 1)) {
HXLINE( 600)							int operands42 = operands40->cursor;
HXDLIN( 600)							_hx_tmp117 = (operands42 < operands40->data->get_length());
            						}
            						else {
HXLINE( 600)							_hx_tmp117 = false;
            						}
HXDLIN( 600)						if (!(_hx_tmp117)) {
HXLINE( 600)							goto _hx_goto_137;
            						}
HXDLIN( 600)						int b017;
HXDLIN( 600)						int operands43 = operands40->cursor;
HXDLIN( 600)						if ((operands43 >= operands40->data->get_length())) {
HXLINE( 600)							b017 = 0;
            						}
            						else {
HXLINE( 600)							b017 = operands40->data->readU8(operands40->cursor++);
            						}
HXDLIN( 600)						int _hx_tmp118;
HXDLIN( 600)						bool _hx_tmp119;
HXDLIN( 600)						if ((b017 >= 32)) {
HXLINE( 600)							_hx_tmp119 = (b017 <= 246);
            						}
            						else {
HXLINE( 600)							_hx_tmp119 = false;
            						}
HXDLIN( 600)						if (_hx_tmp119) {
HXLINE( 600)							_hx_tmp118 = (b017 - 139);
            						}
            						else {
HXLINE( 600)							bool _hx_tmp120;
HXDLIN( 600)							if ((b017 >= 247)) {
HXLINE( 600)								_hx_tmp120 = (b017 <= 250);
            							}
            							else {
HXLINE( 600)								_hx_tmp120 = false;
            							}
HXDLIN( 600)							if (_hx_tmp120) {
HXLINE( 600)								int _hx_tmp121;
HXDLIN( 600)								int operands44 = operands40->cursor;
HXDLIN( 600)								if ((operands44 >= operands40->data->get_length())) {
HXLINE( 600)									_hx_tmp121 = 0;
            								}
            								else {
HXLINE( 600)									_hx_tmp121 = operands40->data->readU8(operands40->cursor++);
            								}
HXDLIN( 600)								_hx_tmp118 = ((((b017 - 247) * 256) + _hx_tmp121) + 108);
            							}
            							else {
HXLINE( 600)								bool _hx_tmp122;
HXDLIN( 600)								if ((b017 >= 251)) {
HXLINE( 600)									_hx_tmp122 = (b017 <= 254);
            								}
            								else {
HXLINE( 600)									_hx_tmp122 = false;
            								}
HXDLIN( 600)								if (_hx_tmp122) {
HXLINE( 600)									int _hx_tmp123;
HXDLIN( 600)									int operands45 = operands40->cursor;
HXDLIN( 600)									if ((operands45 >= operands40->data->get_length())) {
HXLINE( 600)										_hx_tmp123 = 0;
            									}
            									else {
HXLINE( 600)										_hx_tmp123 = operands40->data->readU8(operands40->cursor++);
            									}
HXDLIN( 600)									_hx_tmp118 = (((-((b017 - 251)) * 256) - _hx_tmp123) - 108);
            								}
            								else {
HXLINE( 600)									if ((b017 == 28)) {
HXLINE( 600)										int v72 = 0;
HXDLIN( 600)										{
HXLINE( 600)											int _g43 = 0;
HXDLIN( 600)											int _g133 = 2;
HXDLIN( 600)											while((_g43 < _g133)){
HXLINE( 600)												_g43 = (_g43 + 1);
HXDLIN( 600)												int i39 = (_g43 - 1);
HXDLIN( 600)												int v73;
HXDLIN( 600)												int operands46 = operands40->cursor;
HXDLIN( 600)												if ((operands46 >= operands40->data->get_length())) {
HXLINE( 600)													v73 = 0;
            												}
            												else {
HXLINE( 600)													v73 = operands40->data->readU8(operands40->cursor++);
            												}
HXDLIN( 600)												v72 = ((v72 << 8) | v73);
            											}
            										}
HXDLIN( 600)										_hx_tmp118 = v72;
            									}
            									else {
HXLINE( 600)										if ((b017 == 29)) {
HXLINE( 600)											int v74 = 0;
HXDLIN( 600)											{
HXLINE( 600)												int _g44 = 0;
HXDLIN( 600)												int _g134 = 4;
HXDLIN( 600)												while((_g44 < _g134)){
HXLINE( 600)													_g44 = (_g44 + 1);
HXDLIN( 600)													int i40 = (_g44 - 1);
HXDLIN( 600)													int v75;
HXDLIN( 600)													int operands47 = operands40->cursor;
HXDLIN( 600)													if ((operands47 >= operands40->data->get_length())) {
HXLINE( 600)														v75 = 0;
            													}
            													else {
HXLINE( 600)														v75 = operands40->data->readU8(operands40->cursor++);
            													}
HXDLIN( 600)													v74 = ((v74 << 8) | v75);
            												}
            											}
HXDLIN( 600)											_hx_tmp118 = v74;
            										}
            										else {
HXLINE( 600)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
            								}
            							}
            						}
HXDLIN( 600)						subrsoff[i36] = _hx_tmp118;
HXDLIN( 600)						i36 = (i36 + 1);
            					}
            					_hx_goto_137:;
            				}
HXDLIN( 600)				if ((subrsoff->__get(0) == 0)) {
HXLINE( 600)					 ::kha::internal::BytesBlob p22 = null();
HXDLIN( 600)					 ::kha::graphics2::truetype::Stbtt__buf r41 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)					r41->_hx_set_data(HX_CTX, p22);
HXDLIN( 600)					r41->cursor = 0;
HXDLIN( 600)					_hx_tmp107 = r41;
            				}
            				else {
HXLINE( 600)					{
HXLINE( 600)						int o23 = (private_loc->__get(1) + subrsoff->__get(0));
HXDLIN( 600)						{
HXLINE( 600)							bool value17;
HXDLIN( 600)							if ((o23 <= b->data->get_length())) {
HXLINE( 600)								value17 = (o23 < 0);
            							}
            							else {
HXLINE( 600)								value17 = true;
            							}
HXDLIN( 600)							if (!(!(value17))) {
HXLINE( 600)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 600)						int _hx_tmp124;
HXDLIN( 600)						bool _hx_tmp125;
HXDLIN( 600)						if ((o23 <= b->data->get_length())) {
HXLINE( 600)							_hx_tmp125 = (o23 < 0);
            						}
            						else {
HXLINE( 600)							_hx_tmp125 = true;
            						}
HXDLIN( 600)						if (_hx_tmp125) {
HXLINE( 600)							_hx_tmp124 = b->data->get_length();
            						}
            						else {
HXLINE( 600)							_hx_tmp124 = o23;
            						}
HXDLIN( 600)						b->cursor = _hx_tmp124;
            					}
HXDLIN( 600)					int start11 = b->cursor;
HXDLIN( 600)					int v76 = 0;
HXDLIN( 600)					{
HXLINE( 600)						int _g45 = 0;
HXDLIN( 600)						int _g135 = 2;
HXDLIN( 600)						while((_g45 < _g135)){
HXLINE( 600)							_g45 = (_g45 + 1);
HXDLIN( 600)							int i41 = (_g45 - 1);
HXDLIN( 600)							int v77;
HXDLIN( 600)							int b14 = b->cursor;
HXDLIN( 600)							if ((b14 >= b->data->get_length())) {
HXLINE( 600)								v77 = 0;
            							}
            							else {
HXLINE( 600)								v77 = b->data->readU8(b->cursor++);
            							}
HXDLIN( 600)							v76 = ((v76 << 8) | v77);
            						}
            					}
HXDLIN( 600)					int count5 = v76;
HXDLIN( 600)					if ((count5 > 0)) {
HXLINE( 600)						int offsize5;
HXDLIN( 600)						int b15 = b->cursor;
HXDLIN( 600)						if ((b15 >= b->data->get_length())) {
HXLINE( 600)							offsize5 = 0;
            						}
            						else {
HXLINE( 600)							offsize5 = b->data->readU8(b->cursor++);
            						}
HXDLIN( 600)						bool _hx_tmp126;
HXDLIN( 600)						if ((offsize5 >= 1)) {
HXLINE( 600)							_hx_tmp126 = (offsize5 <= 4);
            						}
            						else {
HXLINE( 600)							_hx_tmp126 = false;
            						}
HXDLIN( 600)						if (!(_hx_tmp126)) {
HXLINE( 600)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 600)						{
HXLINE( 600)							int o24 = (b->cursor + (offsize5 * count5));
HXDLIN( 600)							{
HXLINE( 600)								bool value18;
HXDLIN( 600)								if ((o24 <= b->data->get_length())) {
HXLINE( 600)									value18 = (o24 < 0);
            								}
            								else {
HXLINE( 600)									value18 = true;
            								}
HXDLIN( 600)								if (!(!(value18))) {
HXLINE( 600)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN( 600)							int _hx_tmp127;
HXDLIN( 600)							bool _hx_tmp128;
HXDLIN( 600)							if ((o24 <= b->data->get_length())) {
HXLINE( 600)								_hx_tmp128 = (o24 < 0);
            							}
            							else {
HXLINE( 600)								_hx_tmp128 = true;
            							}
HXDLIN( 600)							if (_hx_tmp128) {
HXLINE( 600)								_hx_tmp127 = b->data->get_length();
            							}
            							else {
HXLINE( 600)								_hx_tmp127 = o24;
            							}
HXDLIN( 600)							b->cursor = _hx_tmp127;
            						}
HXDLIN( 600)						{
HXLINE( 600)							int v78 = 0;
HXDLIN( 600)							bool o25;
HXDLIN( 600)							if ((offsize5 >= 1)) {
HXLINE( 600)								o25 = (offsize5 <= 4);
            							}
            							else {
HXLINE( 600)								o25 = false;
            							}
HXDLIN( 600)							if (!(o25)) {
HXLINE( 600)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
HXDLIN( 600)							{
HXLINE( 600)								int _g46 = 0;
HXDLIN( 600)								int _g136 = offsize5;
HXDLIN( 600)								while((_g46 < _g136)){
HXLINE( 600)									_g46 = (_g46 + 1);
HXDLIN( 600)									int i42 = (_g46 - 1);
HXDLIN( 600)									int v79;
HXDLIN( 600)									int b16 = b->cursor;
HXDLIN( 600)									if ((b16 >= b->data->get_length())) {
HXLINE( 600)										v79 = 0;
            									}
            									else {
HXLINE( 600)										v79 = b->data->readU8(b->cursor++);
            									}
HXDLIN( 600)									v78 = ((v78 << 8) | v79);
            								}
            							}
HXDLIN( 600)							{
HXLINE( 600)								int o26 = (b->cursor + (v78 - 1));
HXDLIN( 600)								{
HXLINE( 600)									bool value19;
HXDLIN( 600)									if ((o26 <= b->data->get_length())) {
HXLINE( 600)										value19 = (o26 < 0);
            									}
            									else {
HXLINE( 600)										value19 = true;
            									}
HXDLIN( 600)									if (!(!(value19))) {
HXLINE( 600)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN( 600)								int _hx_tmp129;
HXDLIN( 600)								bool _hx_tmp130;
HXDLIN( 600)								if ((o26 <= b->data->get_length())) {
HXLINE( 600)									_hx_tmp130 = (o26 < 0);
            								}
            								else {
HXLINE( 600)									_hx_tmp130 = true;
            								}
HXDLIN( 600)								if (_hx_tmp130) {
HXLINE( 600)									_hx_tmp129 = b->data->get_length();
            								}
            								else {
HXLINE( 600)									_hx_tmp129 = o26;
            								}
HXDLIN( 600)								b->cursor = _hx_tmp129;
            							}
            						}
HXDLIN( 600)						int s12 = (b->cursor - start11);
HXDLIN( 600)						 ::kha::internal::BytesBlob p23 = null();
HXDLIN( 600)						 ::kha::graphics2::truetype::Stbtt__buf r42 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 600)						r42->_hx_set_data(HX_CTX, p23);
HXDLIN( 600)						r42->cursor = 0;
HXDLIN( 600)						 ::kha::graphics2::truetype::Stbtt__buf r43 = r42;
HXDLIN( 600)						bool _hx_tmp131;
HXDLIN( 600)						bool _hx_tmp132;
HXDLIN( 600)						bool _hx_tmp133;
HXDLIN( 600)						if ((start11 >= 0)) {
HXLINE( 600)							_hx_tmp133 = (s12 < 0);
            						}
            						else {
HXLINE( 600)							_hx_tmp133 = true;
            						}
HXDLIN( 600)						if (!(_hx_tmp133)) {
HXLINE( 600)							_hx_tmp132 = (start11 > b->data->get_length());
            						}
            						else {
HXLINE( 600)							_hx_tmp132 = true;
            						}
HXDLIN( 600)						if (!(_hx_tmp132)) {
HXLINE( 600)							_hx_tmp131 = (s12 > (b->data->get_length() - start11));
            						}
            						else {
HXLINE( 600)							_hx_tmp131 = true;
            						}
HXDLIN( 600)						if (_hx_tmp131) {
HXLINE( 600)							_hx_tmp107 = r43;
            						}
            						else {
HXLINE( 600)							r43->_hx_set_data(HX_CTX, b->data->sub(start11,s12));
HXDLIN( 600)							_hx_tmp107 = r43;
            						}
            					}
            					else {
HXLINE( 600)						_hx_tmp107 = b;
            					}
            				}
            			}
HXDLIN( 600)			info->_hx_set_subrs(HX_CTX, _hx_tmp107);
HXLINE( 603)			if ((cstype->__get(0) != 2)) {
HXLINE( 603)				return false;
            			}
HXLINE( 604)			if ((charstrings->__get(0) == 0)) {
HXLINE( 604)				return false;
            			}
HXLINE( 606)			if ((fdarrayoff->__get(0) != 0)) {
HXLINE( 608)				if ((fdselectoff->__get(0) == 0)) {
HXLINE( 608)					return false;
            				}
HXLINE( 609)				{
HXLINE( 609)					int o27 = fdarrayoff->__get(0);
HXDLIN( 609)					{
HXLINE( 609)						bool value20;
HXDLIN( 609)						if ((o27 <= b->data->get_length())) {
HXLINE( 609)							value20 = (o27 < 0);
            						}
            						else {
HXLINE( 609)							value20 = true;
            						}
HXDLIN( 609)						if (!(!(value20))) {
HXLINE( 609)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN( 609)					int _hx_tmp134;
HXDLIN( 609)					bool _hx_tmp135;
HXDLIN( 609)					if ((o27 <= b->data->get_length())) {
HXLINE( 609)						_hx_tmp135 = (o27 < 0);
            					}
            					else {
HXLINE( 609)						_hx_tmp135 = true;
            					}
HXDLIN( 609)					if (_hx_tmp135) {
HXLINE( 609)						_hx_tmp134 = b->data->get_length();
            					}
            					else {
HXLINE( 609)						_hx_tmp134 = o27;
            					}
HXDLIN( 609)					b->cursor = _hx_tmp134;
            				}
HXLINE( 610)				int start12 = b->cursor;
HXDLIN( 610)				int v80 = 0;
HXDLIN( 610)				{
HXLINE( 610)					int _g47 = 0;
HXDLIN( 610)					int _g137 = 2;
HXDLIN( 610)					while((_g47 < _g137)){
HXLINE( 610)						_g47 = (_g47 + 1);
HXDLIN( 610)						int i43 = (_g47 - 1);
HXDLIN( 610)						int v81;
HXDLIN( 610)						int b17 = b->cursor;
HXDLIN( 610)						if ((b17 >= b->data->get_length())) {
HXLINE( 610)							v81 = 0;
            						}
            						else {
HXLINE( 610)							v81 = b->data->readU8(b->cursor++);
            						}
HXDLIN( 610)						v80 = ((v80 << 8) | v81);
            					}
            				}
HXDLIN( 610)				int count6 = v80;
HXDLIN( 610)				 ::kha::graphics2::truetype::Stbtt__buf _hx_tmp136;
HXDLIN( 610)				if ((count6 > 0)) {
HXLINE( 610)					int offsize6;
HXDLIN( 610)					int b18 = b->cursor;
HXDLIN( 610)					if ((b18 >= b->data->get_length())) {
HXLINE( 610)						offsize6 = 0;
            					}
            					else {
HXLINE( 610)						offsize6 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 610)					bool _hx_tmp137;
HXDLIN( 610)					if ((offsize6 >= 1)) {
HXLINE( 610)						_hx_tmp137 = (offsize6 <= 4);
            					}
            					else {
HXLINE( 610)						_hx_tmp137 = false;
            					}
HXDLIN( 610)					if (!(_hx_tmp137)) {
HXLINE( 610)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 610)					{
HXLINE( 610)						int o28 = (b->cursor + (offsize6 * count6));
HXDLIN( 610)						{
HXLINE( 610)							bool value21;
HXDLIN( 610)							if ((o28 <= b->data->get_length())) {
HXLINE( 610)								value21 = (o28 < 0);
            							}
            							else {
HXLINE( 610)								value21 = true;
            							}
HXDLIN( 610)							if (!(!(value21))) {
HXLINE( 610)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 610)						int _hx_tmp138;
HXDLIN( 610)						bool _hx_tmp139;
HXDLIN( 610)						if ((o28 <= b->data->get_length())) {
HXLINE( 610)							_hx_tmp139 = (o28 < 0);
            						}
            						else {
HXLINE( 610)							_hx_tmp139 = true;
            						}
HXDLIN( 610)						if (_hx_tmp139) {
HXLINE( 610)							_hx_tmp138 = b->data->get_length();
            						}
            						else {
HXLINE( 610)							_hx_tmp138 = o28;
            						}
HXDLIN( 610)						b->cursor = _hx_tmp138;
            					}
HXDLIN( 610)					{
HXLINE( 610)						int v82 = 0;
HXDLIN( 610)						bool o29;
HXDLIN( 610)						if ((offsize6 >= 1)) {
HXLINE( 610)							o29 = (offsize6 <= 4);
            						}
            						else {
HXLINE( 610)							o29 = false;
            						}
HXDLIN( 610)						if (!(o29)) {
HXLINE( 610)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN( 610)						{
HXLINE( 610)							int _g48 = 0;
HXDLIN( 610)							int _g138 = offsize6;
HXDLIN( 610)							while((_g48 < _g138)){
HXLINE( 610)								_g48 = (_g48 + 1);
HXDLIN( 610)								int i44 = (_g48 - 1);
HXDLIN( 610)								int v83;
HXDLIN( 610)								int b19 = b->cursor;
HXDLIN( 610)								if ((b19 >= b->data->get_length())) {
HXLINE( 610)									v83 = 0;
            								}
            								else {
HXLINE( 610)									v83 = b->data->readU8(b->cursor++);
            								}
HXDLIN( 610)								v82 = ((v82 << 8) | v83);
            							}
            						}
HXDLIN( 610)						{
HXLINE( 610)							int o30 = (b->cursor + (v82 - 1));
HXDLIN( 610)							{
HXLINE( 610)								bool value22;
HXDLIN( 610)								if ((o30 <= b->data->get_length())) {
HXLINE( 610)									value22 = (o30 < 0);
            								}
            								else {
HXLINE( 610)									value22 = true;
            								}
HXDLIN( 610)								if (!(!(value22))) {
HXLINE( 610)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN( 610)							int _hx_tmp140;
HXDLIN( 610)							bool _hx_tmp141;
HXDLIN( 610)							if ((o30 <= b->data->get_length())) {
HXLINE( 610)								_hx_tmp141 = (o30 < 0);
            							}
            							else {
HXLINE( 610)								_hx_tmp141 = true;
            							}
HXDLIN( 610)							if (_hx_tmp141) {
HXLINE( 610)								_hx_tmp140 = b->data->get_length();
            							}
            							else {
HXLINE( 610)								_hx_tmp140 = o30;
            							}
HXDLIN( 610)							b->cursor = _hx_tmp140;
            						}
            					}
HXDLIN( 610)					int s13 = (b->cursor - start12);
HXDLIN( 610)					 ::kha::internal::BytesBlob p24 = null();
HXDLIN( 610)					 ::kha::graphics2::truetype::Stbtt__buf r44 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 610)					r44->_hx_set_data(HX_CTX, p24);
HXDLIN( 610)					r44->cursor = 0;
HXDLIN( 610)					 ::kha::graphics2::truetype::Stbtt__buf r45 = r44;
HXDLIN( 610)					bool _hx_tmp142;
HXDLIN( 610)					bool _hx_tmp143;
HXDLIN( 610)					bool _hx_tmp144;
HXDLIN( 610)					if ((start12 >= 0)) {
HXLINE( 610)						_hx_tmp144 = (s13 < 0);
            					}
            					else {
HXLINE( 610)						_hx_tmp144 = true;
            					}
HXDLIN( 610)					if (!(_hx_tmp144)) {
HXLINE( 610)						_hx_tmp143 = (start12 > b->data->get_length());
            					}
            					else {
HXLINE( 610)						_hx_tmp143 = true;
            					}
HXDLIN( 610)					if (!(_hx_tmp143)) {
HXLINE( 610)						_hx_tmp142 = (s13 > (b->data->get_length() - start12));
            					}
            					else {
HXLINE( 610)						_hx_tmp142 = true;
            					}
HXDLIN( 610)					if (_hx_tmp142) {
HXLINE( 610)						_hx_tmp136 = r45;
            					}
            					else {
HXLINE( 610)						r45->_hx_set_data(HX_CTX, b->data->sub(start12,s13));
HXDLIN( 610)						_hx_tmp136 = r45;
            					}
            				}
            				else {
HXLINE( 610)					_hx_tmp136 = b;
            				}
HXDLIN( 610)				info->_hx_set_fontdicts(HX_CTX, _hx_tmp136);
HXLINE( 611)				int o31 = fdselectoff->__get(0);
HXDLIN( 611)				int s14 = b->data->get_length();
HXDLIN( 611)				int s15 = (s14 - fdselectoff->__get(0));
HXDLIN( 611)				 ::kha::internal::BytesBlob p25 = null();
HXDLIN( 611)				 ::kha::graphics2::truetype::Stbtt__buf r46 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 611)				r46->_hx_set_data(HX_CTX, p25);
HXDLIN( 611)				r46->cursor = 0;
HXDLIN( 611)				 ::kha::graphics2::truetype::Stbtt__buf r47 = r46;
HXDLIN( 611)				 ::kha::graphics2::truetype::Stbtt__buf _hx_tmp145;
HXDLIN( 611)				bool _hx_tmp146;
HXDLIN( 611)				bool _hx_tmp147;
HXDLIN( 611)				bool _hx_tmp148;
HXDLIN( 611)				if ((o31 >= 0)) {
HXLINE( 611)					_hx_tmp148 = (s15 < 0);
            				}
            				else {
HXLINE( 611)					_hx_tmp148 = true;
            				}
HXDLIN( 611)				if (!(_hx_tmp148)) {
HXLINE( 611)					_hx_tmp147 = (o31 > b->data->get_length());
            				}
            				else {
HXLINE( 611)					_hx_tmp147 = true;
            				}
HXDLIN( 611)				if (!(_hx_tmp147)) {
HXLINE( 611)					_hx_tmp146 = (s15 > (b->data->get_length() - o31));
            				}
            				else {
HXLINE( 611)					_hx_tmp146 = true;
            				}
HXDLIN( 611)				if (_hx_tmp146) {
HXLINE( 611)					_hx_tmp145 = r47;
            				}
            				else {
HXLINE( 611)					r47->_hx_set_data(HX_CTX, b->data->sub(o31,s15));
HXDLIN( 611)					_hx_tmp145 = r47;
            				}
HXDLIN( 611)				info->_hx_set_fdselect(HX_CTX, _hx_tmp145);
            			}
HXLINE( 614)			{
HXLINE( 614)				int o32 = charstrings->__get(0);
HXDLIN( 614)				{
HXLINE( 614)					bool value23;
HXDLIN( 614)					if ((o32 <= b->data->get_length())) {
HXLINE( 614)						value23 = (o32 < 0);
            					}
            					else {
HXLINE( 614)						value23 = true;
            					}
HXDLIN( 614)					if (!(!(value23))) {
HXLINE( 614)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN( 614)				int _hx_tmp149;
HXDLIN( 614)				bool _hx_tmp150;
HXDLIN( 614)				if ((o32 <= b->data->get_length())) {
HXLINE( 614)					_hx_tmp150 = (o32 < 0);
            				}
            				else {
HXLINE( 614)					_hx_tmp150 = true;
            				}
HXDLIN( 614)				if (_hx_tmp150) {
HXLINE( 614)					_hx_tmp149 = b->data->get_length();
            				}
            				else {
HXLINE( 614)					_hx_tmp149 = o32;
            				}
HXDLIN( 614)				b->cursor = _hx_tmp149;
            			}
HXLINE( 615)			int start13 = b->cursor;
HXDLIN( 615)			int v84 = 0;
HXDLIN( 615)			{
HXLINE( 615)				int _g49 = 0;
HXDLIN( 615)				int _g139 = 2;
HXDLIN( 615)				while((_g49 < _g139)){
HXLINE( 615)					_g49 = (_g49 + 1);
HXDLIN( 615)					int i45 = (_g49 - 1);
HXDLIN( 615)					int v85;
HXDLIN( 615)					int b20 = b->cursor;
HXDLIN( 615)					if ((b20 >= b->data->get_length())) {
HXLINE( 615)						v85 = 0;
            					}
            					else {
HXLINE( 615)						v85 = b->data->readU8(b->cursor++);
            					}
HXDLIN( 615)					v84 = ((v84 << 8) | v85);
            				}
            			}
HXDLIN( 615)			int count7 = v84;
HXDLIN( 615)			 ::kha::graphics2::truetype::Stbtt__buf _hx_tmp151;
HXDLIN( 615)			if ((count7 > 0)) {
HXLINE( 615)				int offsize7;
HXDLIN( 615)				int b21 = b->cursor;
HXDLIN( 615)				if ((b21 >= b->data->get_length())) {
HXLINE( 615)					offsize7 = 0;
            				}
            				else {
HXLINE( 615)					offsize7 = b->data->readU8(b->cursor++);
            				}
HXDLIN( 615)				bool _hx_tmp152;
HXDLIN( 615)				if ((offsize7 >= 1)) {
HXLINE( 615)					_hx_tmp152 = (offsize7 <= 4);
            				}
            				else {
HXLINE( 615)					_hx_tmp152 = false;
            				}
HXDLIN( 615)				if (!(_hx_tmp152)) {
HXLINE( 615)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN( 615)				{
HXLINE( 615)					int o33 = (b->cursor + (offsize7 * count7));
HXDLIN( 615)					{
HXLINE( 615)						bool value24;
HXDLIN( 615)						if ((o33 <= b->data->get_length())) {
HXLINE( 615)							value24 = (o33 < 0);
            						}
            						else {
HXLINE( 615)							value24 = true;
            						}
HXDLIN( 615)						if (!(!(value24))) {
HXLINE( 615)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN( 615)					int _hx_tmp153;
HXDLIN( 615)					bool _hx_tmp154;
HXDLIN( 615)					if ((o33 <= b->data->get_length())) {
HXLINE( 615)						_hx_tmp154 = (o33 < 0);
            					}
            					else {
HXLINE( 615)						_hx_tmp154 = true;
            					}
HXDLIN( 615)					if (_hx_tmp154) {
HXLINE( 615)						_hx_tmp153 = b->data->get_length();
            					}
            					else {
HXLINE( 615)						_hx_tmp153 = o33;
            					}
HXDLIN( 615)					b->cursor = _hx_tmp153;
            				}
HXDLIN( 615)				{
HXLINE( 615)					int v86 = 0;
HXDLIN( 615)					bool o34;
HXDLIN( 615)					if ((offsize7 >= 1)) {
HXLINE( 615)						o34 = (offsize7 <= 4);
            					}
            					else {
HXLINE( 615)						o34 = false;
            					}
HXDLIN( 615)					if (!(o34)) {
HXLINE( 615)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN( 615)					{
HXLINE( 615)						int _g50 = 0;
HXDLIN( 615)						int _g140 = offsize7;
HXDLIN( 615)						while((_g50 < _g140)){
HXLINE( 615)							_g50 = (_g50 + 1);
HXDLIN( 615)							int i46 = (_g50 - 1);
HXDLIN( 615)							int v87;
HXDLIN( 615)							int b22 = b->cursor;
HXDLIN( 615)							if ((b22 >= b->data->get_length())) {
HXLINE( 615)								v87 = 0;
            							}
            							else {
HXLINE( 615)								v87 = b->data->readU8(b->cursor++);
            							}
HXDLIN( 615)							v86 = ((v86 << 8) | v87);
            						}
            					}
HXDLIN( 615)					{
HXLINE( 615)						int o35 = (b->cursor + (v86 - 1));
HXDLIN( 615)						{
HXLINE( 615)							bool value25;
HXDLIN( 615)							if ((o35 <= b->data->get_length())) {
HXLINE( 615)								value25 = (o35 < 0);
            							}
            							else {
HXLINE( 615)								value25 = true;
            							}
HXDLIN( 615)							if (!(!(value25))) {
HXLINE( 615)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN( 615)						int _hx_tmp155;
HXDLIN( 615)						bool _hx_tmp156;
HXDLIN( 615)						if ((o35 <= b->data->get_length())) {
HXLINE( 615)							_hx_tmp156 = (o35 < 0);
            						}
            						else {
HXLINE( 615)							_hx_tmp156 = true;
            						}
HXDLIN( 615)						if (_hx_tmp156) {
HXLINE( 615)							_hx_tmp155 = b->data->get_length();
            						}
            						else {
HXLINE( 615)							_hx_tmp155 = o35;
            						}
HXDLIN( 615)						b->cursor = _hx_tmp155;
            					}
            				}
HXDLIN( 615)				int s16 = (b->cursor - start13);
HXDLIN( 615)				 ::kha::internal::BytesBlob p26 = null();
HXDLIN( 615)				 ::kha::graphics2::truetype::Stbtt__buf r48 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN( 615)				r48->_hx_set_data(HX_CTX, p26);
HXDLIN( 615)				r48->cursor = 0;
HXDLIN( 615)				 ::kha::graphics2::truetype::Stbtt__buf r49 = r48;
HXDLIN( 615)				bool _hx_tmp157;
HXDLIN( 615)				bool _hx_tmp158;
HXDLIN( 615)				bool _hx_tmp159;
HXDLIN( 615)				if ((start13 >= 0)) {
HXLINE( 615)					_hx_tmp159 = (s16 < 0);
            				}
            				else {
HXLINE( 615)					_hx_tmp159 = true;
            				}
HXDLIN( 615)				if (!(_hx_tmp159)) {
HXLINE( 615)					_hx_tmp158 = (start13 > b->data->get_length());
            				}
            				else {
HXLINE( 615)					_hx_tmp158 = true;
            				}
HXDLIN( 615)				if (!(_hx_tmp158)) {
HXLINE( 615)					_hx_tmp157 = (s16 > (b->data->get_length() - start13));
            				}
            				else {
HXLINE( 615)					_hx_tmp157 = true;
            				}
HXDLIN( 615)				if (_hx_tmp157) {
HXLINE( 615)					_hx_tmp151 = r49;
            				}
            				else {
HXLINE( 615)					r49->_hx_set_data(HX_CTX, b->data->sub(start13,s16));
HXDLIN( 615)					_hx_tmp151 = r49;
            				}
            			}
            			else {
HXLINE( 615)				_hx_tmp151 = b;
            			}
HXDLIN( 615)			info->_hx_set_charstrings(HX_CTX, _hx_tmp151);
            		}
HXLINE( 548)		int t = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__find_table(data,fontstart,HX_("maxp",4c,45,56,48));
HXLINE( 619)		if ((t != 0)) {
HXLINE( 620)			int pos = (t + 4);
HXDLIN( 620)			int ch1 = data->readU8(pos);
HXDLIN( 620)			int ch2 = data->readU8((pos + 1));
HXDLIN( 620)			info->numGlyphs = (ch2 | (ch1 << 8));
            		}
            		else {
HXLINE( 622)			info->numGlyphs = 65535;
            		}
HXLINE( 627)		int pos1 = (cmap + 2);
HXDLIN( 627)		int ch11 = data->readU8(pos1);
HXDLIN( 627)		int ch21 = data->readU8((pos1 + 1));
HXLINE( 549)		int numTables = (ch21 | (ch11 << 8));
HXLINE( 628)		info->index_map = 0;
HXLINE( 630)		{
HXLINE( 630)			int _g51 = 0;
HXDLIN( 630)			int _g141 = numTables;
HXDLIN( 630)			while((_g51 < _g141)){
HXLINE( 630)				_g51 = (_g51 + 1);
HXDLIN( 630)				int i47 = (_g51 - 1);
HXLINE( 631)				int encoding_record = ((cmap + 4) + (8 * i47));
HXLINE( 633)				{
HXLINE( 633)					int ch12 = data->readU8(encoding_record);
HXDLIN( 633)					int ch22 = data->readU8((encoding_record + 1));
HXDLIN( 633)					switch((int)((ch22 | (ch12 << 8)))){
            						case (int)0: {
HXLINE( 643)							int pos2 = (encoding_record + 4);
HXDLIN( 643)							int ch13 = data->readU8(pos2);
HXDLIN( 643)							int ch23 = data->readU8((pos2 + 1));
HXDLIN( 643)							int ch3 = data->readU8((pos2 + 2));
HXDLIN( 643)							int ch4 = data->readU8((pos2 + 3));
HXDLIN( 643)							info->index_map = (cmap + (((ch4 | (ch3 << 8)) | (ch23 << 16)) | (ch13 << 24)));
            						}
            						break;
            						case (int)3: {
HXLINE( 635)							int pos3 = (encoding_record + 2);
HXDLIN( 635)							int ch14 = data->readU8(pos3);
HXDLIN( 635)							int ch24 = data->readU8((pos3 + 1));
HXDLIN( 635)							switch((int)((ch24 | (ch14 << 8)))){
            								case (int)1: case (int)10: {
HXLINE( 638)									int pos4 = (encoding_record + 4);
HXDLIN( 638)									int ch15 = data->readU8(pos4);
HXDLIN( 638)									int ch25 = data->readU8((pos4 + 1));
HXDLIN( 638)									int ch31 = data->readU8((pos4 + 2));
HXDLIN( 638)									int ch41 = data->readU8((pos4 + 3));
HXDLIN( 638)									info->index_map = (cmap + (((ch41 | (ch31 << 8)) | (ch25 << 16)) | (ch15 << 24)));
            								}
            								break;
            							}
            						}
            						break;
            					}
            				}
            			}
            		}
HXLINE( 646)		if ((info->index_map == 0)) {
HXLINE( 647)			return false;
            		}
HXLINE( 649)		int pos5 = (info->head + 50);
HXDLIN( 649)		int ch16 = data->readU8(pos5);
HXDLIN( 649)		int ch26 = data->readU8((pos5 + 1));
HXDLIN( 649)		info->indexToLocFormat = (ch26 | (ch16 << 8));
HXLINE( 650)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt_InitFont,return )

int StbTruetype_obj::stbtt_FindGlyphIndex( ::kha::graphics2::truetype::Stbtt_fontinfo info,int unicode_codepoint){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_653_stbtt_FindGlyphIndex)
HXLINE( 654)		 ::kha::internal::BytesBlob data = info->data;
HXLINE( 655)		int index_map = info->index_map;
HXLINE( 657)		int ch1 = data->readU8(index_map);
HXDLIN( 657)		int ch2 = data->readU8((index_map + 1));
HXDLIN( 657)		int format = (ch2 | (ch1 << 8));
HXLINE( 658)		if ((format == 0)) {
HXLINE( 659)			int pos = (index_map + 2);
HXDLIN( 659)			int ch11 = data->readU8(pos);
HXDLIN( 659)			int ch21 = data->readU8((pos + 1));
HXDLIN( 659)			int bytes = (ch21 | (ch11 << 8));
HXLINE( 660)			if ((unicode_codepoint < (bytes - 6))) {
HXLINE( 661)				return data->readU8(((index_map + 6) + unicode_codepoint));
            			}
HXLINE( 662)			return 0;
            		}
            		else {
HXLINE( 663)			if ((format == 6)) {
HXLINE( 664)				int pos1 = (index_map + 6);
HXDLIN( 664)				int ch12 = data->readU8(pos1);
HXDLIN( 664)				int ch22 = data->readU8((pos1 + 1));
HXDLIN( 664)				int first = (ch22 | (ch12 << 8));
HXLINE( 665)				int pos2 = (index_map + 8);
HXDLIN( 665)				int ch13 = data->readU8(pos2);
HXDLIN( 665)				int ch23 = data->readU8((pos2 + 1));
HXDLIN( 665)				int count = (ch23 | (ch13 << 8));
HXLINE( 666)				bool _hx_tmp;
HXDLIN( 666)				if ((unicode_codepoint >= first)) {
HXLINE( 666)					_hx_tmp = (unicode_codepoint < (first + count));
            				}
            				else {
HXLINE( 666)					_hx_tmp = false;
            				}
HXDLIN( 666)				if (_hx_tmp) {
HXLINE( 667)					int pos3 = ((index_map + 10) + ((unicode_codepoint - first) * 2));
HXDLIN( 667)					int ch14 = data->readU8(pos3);
HXDLIN( 667)					int ch24 = data->readU8((pos3 + 1));
HXDLIN( 667)					return (ch24 | (ch14 << 8));
            				}
HXLINE( 668)				return 0;
            			}
            			else {
HXLINE( 669)				if ((format == 2)) {
HXLINE( 670)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            				else {
HXLINE( 672)					if ((format == 4)) {
HXLINE( 673)						int pos4 = (index_map + 6);
HXDLIN( 673)						int ch15 = data->readU8(pos4);
HXDLIN( 673)						int ch25 = data->readU8((pos4 + 1));
HXDLIN( 673)						int segcount = ((ch25 | (ch15 << 8)) >> 1);
HXLINE( 674)						int pos5 = (index_map + 8);
HXDLIN( 674)						int ch16 = data->readU8(pos5);
HXDLIN( 674)						int ch26 = data->readU8((pos5 + 1));
HXDLIN( 674)						int searchRange = ((ch26 | (ch16 << 8)) >> 1);
HXLINE( 675)						int pos6 = (index_map + 10);
HXDLIN( 675)						int ch17 = data->readU8(pos6);
HXDLIN( 675)						int ch27 = data->readU8((pos6 + 1));
HXDLIN( 675)						int entrySelector = (ch27 | (ch17 << 8));
HXLINE( 676)						int pos7 = (index_map + 12);
HXDLIN( 676)						int ch18 = data->readU8(pos7);
HXDLIN( 676)						int ch28 = data->readU8((pos7 + 1));
HXDLIN( 676)						int rangeShift = ((ch28 | (ch18 << 8)) >> 1);
HXLINE( 679)						int endCount = (index_map + 14);
HXLINE( 680)						int search = endCount;
HXLINE( 682)						if ((unicode_codepoint > 65535)) {
HXLINE( 683)							return 0;
            						}
HXLINE( 687)						int pos8 = (search + (rangeShift * 2));
HXDLIN( 687)						int ch19 = data->readU8(pos8);
HXDLIN( 687)						int ch29 = data->readU8((pos8 + 1));
HXDLIN( 687)						if ((unicode_codepoint >= (ch29 | (ch19 << 8)))) {
HXLINE( 688)							search = (search + (rangeShift * 2));
            						}
HXLINE( 691)						search = (search - 2);
HXLINE( 692)						while((entrySelector != 0)){
HXLINE( 694)							searchRange = (searchRange >> 1);
HXLINE( 695)							int pos9 = (search + (searchRange * 2));
HXDLIN( 695)							int ch110 = data->readU8(pos9);
HXDLIN( 695)							int ch210 = data->readU8((pos9 + 1));
HXLINE( 693)							int end = (ch210 | (ch110 << 8));
HXLINE( 696)							if ((unicode_codepoint > end)) {
HXLINE( 697)								search = (search + (searchRange * 2));
            							}
HXLINE( 698)							entrySelector = (entrySelector - 1);
            						}
HXLINE( 700)						search = (search + 2);
HXLINE( 704)						int item = (((search - endCount) >> 1) & 65535);
HXLINE( 706)						{
HXLINE( 706)							int pos10 = (endCount + (2 * item));
HXDLIN( 706)							int ch111 = data->readU8(pos10);
HXDLIN( 706)							int ch211 = data->readU8((pos10 + 1));
HXDLIN( 706)							if ((unicode_codepoint > (ch211 | (ch111 << 8)))) {
HXLINE( 706)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXLINE( 707)						int pos11 = ((((index_map + 14) + (segcount * 2)) + 2) + (2 * item));
HXDLIN( 707)						int ch112 = data->readU8(pos11);
HXDLIN( 707)						int ch212 = data->readU8((pos11 + 1));
HXLINE( 703)						int start = (ch212 | (ch112 << 8));
HXLINE( 708)						if ((unicode_codepoint < start)) {
HXLINE( 709)							return 0;
            						}
HXLINE( 711)						int pos12 = ((((index_map + 14) + (segcount * 6)) + 2) + (2 * item));
HXDLIN( 711)						int ch113 = data->readU8(pos12);
HXDLIN( 711)						int ch213 = data->readU8((pos12 + 1));
HXLINE( 703)						int offset = (ch213 | (ch113 << 8));
HXLINE( 712)						if ((offset == 0)) {
HXLINE( 713)							int pos13 = ((((index_map + 14) + (segcount * 4)) + 2) + (2 * item));
HXDLIN( 713)							int ch114 = data->readU8(pos13);
HXDLIN( 713)							int ch214 = data->readU8((pos13 + 1));
HXDLIN( 713)							int n = (ch214 | (ch114 << 8));
HXDLIN( 713)							int value;
HXDLIN( 713)							if (((n & 32768) != 0)) {
HXLINE( 713)								value = (n - 65536);
            							}
            							else {
HXLINE( 713)								value = n;
            							}
HXDLIN( 713)							return ((unicode_codepoint + value) & 65535);
            						}
HXLINE( 715)						int pos14 = ((((((offset + ((unicode_codepoint - start) * 2)) + index_map) + 14) + (segcount * 6)) + 2) + (2 * item));
HXDLIN( 715)						int ch115 = data->readU8(pos14);
HXDLIN( 715)						int ch215 = data->readU8((pos14 + 1));
HXDLIN( 715)						return (ch215 | (ch115 << 8));
            					}
            					else {
HXLINE( 717)						bool _hx_tmp1;
HXDLIN( 717)						if ((format != 12)) {
HXLINE( 717)							_hx_tmp1 = (format == 13);
            						}
            						else {
HXLINE( 717)							_hx_tmp1 = true;
            						}
HXDLIN( 717)						if (_hx_tmp1) {
HXLINE( 718)							int pos15 = (index_map + 12);
HXDLIN( 718)							int ch116 = data->readU8(pos15);
HXDLIN( 718)							int ch216 = data->readU8((pos15 + 1));
HXDLIN( 718)							int ch3 = data->readU8((pos15 + 2));
HXDLIN( 718)							int ch4 = data->readU8((pos15 + 3));
HXDLIN( 718)							int ngroups = (((ch4 | (ch3 << 8)) | (ch216 << 16)) | (ch116 << 24));
HXLINE( 719)							int low = 0;
HXDLIN( 719)							int high = ngroups;
HXLINE( 722)							while((low < high)){
HXLINE( 723)								int mid = (low + ((high - low) >> 1));
HXLINE( 724)								int pos16 = ((index_map + 16) + (mid * 12));
HXDLIN( 724)								int ch117 = data->readU8(pos16);
HXDLIN( 724)								int ch217 = data->readU8((pos16 + 1));
HXDLIN( 724)								int ch31 = data->readU8((pos16 + 2));
HXDLIN( 724)								int ch41 = data->readU8((pos16 + 3));
HXDLIN( 724)								int start_char = (((ch41 | (ch31 << 8)) | (ch217 << 16)) | (ch117 << 24));
HXLINE( 725)								int pos17 = (((index_map + 16) + (mid * 12)) + 4);
HXDLIN( 725)								int ch118 = data->readU8(pos17);
HXDLIN( 725)								int ch218 = data->readU8((pos17 + 1));
HXDLIN( 725)								int ch32 = data->readU8((pos17 + 2));
HXDLIN( 725)								int ch42 = data->readU8((pos17 + 3));
HXDLIN( 725)								int end_char = (((ch42 | (ch32 << 8)) | (ch218 << 16)) | (ch118 << 24));
HXLINE( 726)								if ((unicode_codepoint < start_char)) {
HXLINE( 727)									high = mid;
            								}
            								else {
HXLINE( 728)									if ((unicode_codepoint > end_char)) {
HXLINE( 729)										low = (mid + 1);
            									}
            									else {
HXLINE( 731)										int pos18 = (((index_map + 16) + (mid * 12)) + 8);
HXDLIN( 731)										int ch119 = data->readU8(pos18);
HXDLIN( 731)										int ch219 = data->readU8((pos18 + 1));
HXDLIN( 731)										int ch33 = data->readU8((pos18 + 2));
HXDLIN( 731)										int ch43 = data->readU8((pos18 + 3));
HXDLIN( 731)										int start_glyph = (((ch43 | (ch33 << 8)) | (ch219 << 16)) | (ch119 << 24));
HXLINE( 732)										if ((format == 12)) {
HXLINE( 733)											return ((start_glyph + unicode_codepoint) - start_char);
            										}
            										else {
HXLINE( 735)											return start_glyph;
            										}
            									}
            								}
            							}
HXLINE( 738)							return 0;
            						}
            					}
            				}
            			}
            		}
HXLINE( 741)		HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
HXDLIN( 741)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_FindGlyphIndex,return )

::Array< ::Dynamic> StbTruetype_obj::stbtt_GetCodepointShape( ::kha::graphics2::truetype::Stbtt_fontinfo info,int unicode_codepoint){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_746_stbtt_GetCodepointShape)
HXDLIN( 746)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphShape(info,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,unicode_codepoint));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_GetCodepointShape,return )

void StbTruetype_obj::stbtt_setvertex( ::kha::graphics2::truetype::Stbtt_vertex v,int type,int x,int y,int cx,int cy){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_749_stbtt_setvertex)
HXLINE( 750)		v->type = type;
HXLINE( 751)		v->x = x;
HXLINE( 752)		v->y = y;
HXLINE( 753)		v->cx = cx;
HXLINE( 754)		v->cy = cy;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(StbTruetype_obj,stbtt_setvertex,(void))

int StbTruetype_obj::stbtt__GetGlyfOffset( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_757_stbtt__GetGlyfOffset)
HXLINE( 758)		int g1;
HXDLIN( 758)		int g2;
HXLINE( 760)		{
HXLINE( 760)			bool value;
HXDLIN( 760)			if (hx::IsNotNull( info->cff->data )) {
HXLINE( 760)				value = (info->cff->data->get_length() == 0);
            			}
            			else {
HXLINE( 760)				value = true;
            			}
HXDLIN( 760)			if (!(value)) {
HXLINE( 760)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
            		}
HXLINE( 762)		if ((glyph_index >= info->numGlyphs)) {
HXLINE( 762)			return -1;
            		}
HXLINE( 763)		if ((info->indexToLocFormat >= 2)) {
HXLINE( 763)			return -1;
            		}
HXLINE( 765)		if ((info->indexToLocFormat == 0)) {
HXLINE( 766)			int info1 = info->glyf;
HXDLIN( 766)			 ::kha::internal::BytesBlob p = info->data;
HXDLIN( 766)			int pos = (info->loca + (glyph_index * 2));
HXDLIN( 766)			int ch1 = p->readU8(pos);
HXDLIN( 766)			int ch2 = p->readU8((pos + 1));
HXDLIN( 766)			g1 = (info1 + ((ch2 | (ch1 << 8)) * 2));
HXLINE( 767)			int info2 = info->glyf;
HXDLIN( 767)			 ::kha::internal::BytesBlob p1 = info->data;
HXDLIN( 767)			int pos1 = ((info->loca + (glyph_index * 2)) + 2);
HXDLIN( 767)			int ch11 = p1->readU8(pos1);
HXDLIN( 767)			int ch21 = p1->readU8((pos1 + 1));
HXDLIN( 767)			g2 = (info2 + ((ch21 | (ch11 << 8)) * 2));
            		}
            		else {
HXLINE( 769)			int info3 = info->glyf;
HXDLIN( 769)			 ::kha::internal::BytesBlob p2 = info->data;
HXDLIN( 769)			int pos2 = (info->loca + (glyph_index * 4));
HXDLIN( 769)			int ch12 = p2->readU8(pos2);
HXDLIN( 769)			int ch22 = p2->readU8((pos2 + 1));
HXDLIN( 769)			int ch3 = p2->readU8((pos2 + 2));
HXDLIN( 769)			int ch4 = p2->readU8((pos2 + 3));
HXDLIN( 769)			g1 = (info3 + (((ch4 | (ch3 << 8)) | (ch22 << 16)) | (ch12 << 24)));
HXLINE( 770)			int info4 = info->glyf;
HXDLIN( 770)			 ::kha::internal::BytesBlob p3 = info->data;
HXDLIN( 770)			int pos3 = ((info->loca + (glyph_index * 4)) + 4);
HXDLIN( 770)			int ch13 = p3->readU8(pos3);
HXDLIN( 770)			int ch23 = p3->readU8((pos3 + 1));
HXDLIN( 770)			int ch31 = p3->readU8((pos3 + 2));
HXDLIN( 770)			int ch41 = p3->readU8((pos3 + 3));
HXDLIN( 770)			g2 = (info4 + (((ch41 | (ch31 << 8)) | (ch23 << 16)) | (ch13 << 24)));
            		}
HXLINE( 773)		if ((g1 == g2)) {
HXLINE( 773)			return -1;
            		}
            		else {
HXLINE( 773)			return g1;
            		}
HXDLIN( 773)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__GetGlyfOffset,return )

bool StbTruetype_obj::stbtt_GetGlyphBox( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index, ::kha::graphics2::truetype::Stbtt_temp_rect rect){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_776_stbtt_GetGlyphBox)
HXLINE( 777)		bool _hx_tmp;
HXDLIN( 777)		if (hx::IsNotNull( info->cff->data )) {
HXLINE( 777)			_hx_tmp = (info->cff->data->get_length() > 0);
            		}
            		else {
HXLINE( 777)			_hx_tmp = false;
            		}
HXDLIN( 777)		if (_hx_tmp) {
HXLINE( 778)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyphInfoT2(info,glyph_index,rect);
            		}
            		else {
HXLINE( 780)			int g = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyfOffset(info,glyph_index);
HXLINE( 781)			if ((g < 0)) {
HXLINE( 781)				return false;
            			}
HXLINE( 783)			 ::kha::internal::BytesBlob p = info->data;
HXDLIN( 783)			int pos = (g + 2);
HXDLIN( 783)			int ch1 = p->readU8(pos);
HXDLIN( 783)			int ch2 = p->readU8((pos + 1));
HXDLIN( 783)			int n = (ch2 | (ch1 << 8));
HXDLIN( 783)			int _hx_tmp1;
HXDLIN( 783)			if (((n & 32768) != 0)) {
HXLINE( 783)				_hx_tmp1 = (n - 65536);
            			}
            			else {
HXLINE( 783)				_hx_tmp1 = n;
            			}
HXDLIN( 783)			rect->x0 = _hx_tmp1;
HXLINE( 784)			 ::kha::internal::BytesBlob p1 = info->data;
HXDLIN( 784)			int pos1 = (g + 4);
HXDLIN( 784)			int ch11 = p1->readU8(pos1);
HXDLIN( 784)			int ch21 = p1->readU8((pos1 + 1));
HXDLIN( 784)			int n1 = (ch21 | (ch11 << 8));
HXDLIN( 784)			int _hx_tmp2;
HXDLIN( 784)			if (((n1 & 32768) != 0)) {
HXLINE( 784)				_hx_tmp2 = (n1 - 65536);
            			}
            			else {
HXLINE( 784)				_hx_tmp2 = n1;
            			}
HXDLIN( 784)			rect->y0 = _hx_tmp2;
HXLINE( 785)			 ::kha::internal::BytesBlob p2 = info->data;
HXDLIN( 785)			int pos2 = (g + 6);
HXDLIN( 785)			int ch12 = p2->readU8(pos2);
HXDLIN( 785)			int ch22 = p2->readU8((pos2 + 1));
HXDLIN( 785)			int n2 = (ch22 | (ch12 << 8));
HXDLIN( 785)			int _hx_tmp3;
HXDLIN( 785)			if (((n2 & 32768) != 0)) {
HXLINE( 785)				_hx_tmp3 = (n2 - 65536);
            			}
            			else {
HXLINE( 785)				_hx_tmp3 = n2;
            			}
HXDLIN( 785)			rect->x1 = _hx_tmp3;
HXLINE( 786)			 ::kha::internal::BytesBlob p3 = info->data;
HXDLIN( 786)			int pos3 = (g + 8);
HXDLIN( 786)			int ch13 = p3->readU8(pos3);
HXDLIN( 786)			int ch23 = p3->readU8((pos3 + 1));
HXDLIN( 786)			int n3 = (ch23 | (ch13 << 8));
HXDLIN( 786)			int _hx_tmp4;
HXDLIN( 786)			if (((n3 & 32768) != 0)) {
HXLINE( 786)				_hx_tmp4 = (n3 - 65536);
            			}
            			else {
HXLINE( 786)				_hx_tmp4 = n3;
            			}
HXDLIN( 786)			rect->y1 = _hx_tmp4;
            		}
HXLINE( 788)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt_GetGlyphBox,return )

bool StbTruetype_obj::stbtt_GetCodepointBox( ::kha::graphics2::truetype::Stbtt_fontinfo info,int codepoint, ::kha::graphics2::truetype::Stbtt_temp_rect rect){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_792_stbtt_GetCodepointBox)
HXDLIN( 792)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBox(info,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,codepoint),rect);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt_GetCodepointBox,return )

bool StbTruetype_obj::stbtt_IsGlyphEmpty( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_795_stbtt_IsGlyphEmpty)
HXLINE( 796)		int numberOfContours;
HXLINE( 797)		bool _hx_tmp;
HXDLIN( 797)		if (hx::IsNotNull( info->cff->data )) {
HXLINE( 797)			_hx_tmp = (info->cff->data->get_length() > 0);
            		}
            		else {
HXLINE( 797)			_hx_tmp = false;
            		}
HXDLIN( 797)		if (_hx_tmp) {
HXLINE( 798)			return (::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyphInfoT2(info,glyph_index,null()) == 0);
            		}
HXLINE( 799)		int g = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyfOffset(info,glyph_index);
HXLINE( 800)		if ((g < 0)) {
HXLINE( 800)			return true;
            		}
HXLINE( 801)		 ::kha::internal::BytesBlob p = info->data;
HXDLIN( 801)		int ch1 = p->readU8(g);
HXDLIN( 801)		int ch2 = p->readU8((g + 1));
HXDLIN( 801)		int n = (ch2 | (ch1 << 8));
HXDLIN( 801)		if (((n & 32768) != 0)) {
HXLINE( 801)			numberOfContours = (n - 65536);
            		}
            		else {
HXLINE( 801)			numberOfContours = n;
            		}
HXLINE( 802)		return (numberOfContours == 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_IsGlyphEmpty,return )

int StbTruetype_obj::stbtt__close_shape(::Array< ::Dynamic> vertices,int num_vertices,bool was_off,bool start_off,int sx,int sy,int scx,int scy,int cx,int cy){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_806_stbtt__close_shape)
HXLINE( 807)		if (start_off) {
HXLINE( 808)			if (was_off) {
HXLINE( 809)				num_vertices = (num_vertices + 1);
HXDLIN( 809)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),3,((cx + scx) >> 1),((cy + scy) >> 1),cx,cy);
            			}
HXLINE( 810)			num_vertices = (num_vertices + 1);
HXDLIN( 810)			::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),3,sx,sy,scx,scy);
            		}
            		else {
HXLINE( 812)			if (was_off) {
HXLINE( 813)				num_vertices = (num_vertices + 1);
HXDLIN( 813)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),3,sx,sy,cx,cy);
            			}
            			else {
HXLINE( 815)				num_vertices = (num_vertices + 1);
HXDLIN( 815)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),2,sx,sy,0,0);
            			}
            		}
HXLINE( 817)		return num_vertices;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC10(StbTruetype_obj,stbtt__close_shape,return )

void StbTruetype_obj::copyVertices(::Array< ::Dynamic> from,::Array< ::Dynamic> to,int offset,int count){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_821_copyVertices)
HXDLIN( 821)		int _g = 0;
HXDLIN( 821)		int _g1 = count;
HXDLIN( 821)		while((_g < _g1)){
HXDLIN( 821)			_g = (_g + 1);
HXDLIN( 821)			int i = (_g - 1);
HXLINE( 822)			{
HXLINE( 822)				 ::kha::graphics2::truetype::Stbtt_vertex val = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(from,i)) );
HXDLIN( 822)				to->__unsafe_set((offset + i),val);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(StbTruetype_obj,copyVertices,(void))

::Array< ::Dynamic> StbTruetype_obj::stbtt__GetGlyphShapeTT( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_826_stbtt__GetGlyphShapeTT)
HXLINE( 827)		int numberOfContours;
HXLINE( 828)		 ::kha::internal::BytesBlob data = info->data;
HXLINE( 829)		::Array< ::Dynamic> vertices = null();
HXLINE( 830)		int num_vertices = 0;
HXLINE( 831)		int g = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyfOffset(info,glyph_index);
HXLINE( 833)		if ((g < 0)) {
HXLINE( 833)			return null();
            		}
HXLINE( 835)		int ch1 = data->readU8(g);
HXDLIN( 835)		int ch2 = data->readU8((g + 1));
HXDLIN( 835)		int n = (ch2 | (ch1 << 8));
HXDLIN( 835)		if (((n & 32768) != 0)) {
HXLINE( 835)			numberOfContours = (n - 65536);
            		}
            		else {
HXLINE( 835)			numberOfContours = n;
            		}
HXLINE( 837)		if ((numberOfContours > 0)) {
HXLINE( 838)			int flags = 0;
HXLINE( 839)			int j = 0;
HXDLIN( 839)			int next_move = 0;
HXDLIN( 839)			int off = 0;
HXLINE( 840)			bool was_off = false;
HXLINE( 841)			bool start_off = false;
HXLINE( 843)			int endPtsOfContoursOffset = (g + 10);
HXLINE( 844)			int pos = (endPtsOfContoursOffset + (numberOfContours * 2));
HXDLIN( 844)			int ch11 = data->readU8(pos);
HXDLIN( 844)			int ch21 = data->readU8((pos + 1));
HXLINE( 839)			int ins = (ch21 | (ch11 << 8));
HXLINE( 845)			int pointsIndex = (((endPtsOfContoursOffset + (numberOfContours * 2)) + 2) + ins);
HXLINE( 847)			int pos1 = ((endPtsOfContoursOffset + (numberOfContours * 2)) - 2);
HXDLIN( 847)			int ch12 = data->readU8(pos1);
HXDLIN( 847)			int ch22 = data->readU8((pos1 + 1));
HXLINE( 839)			int n1 = (1 + (ch22 | (ch12 << 8)));
HXDLIN( 839)			int m = (n1 + (2 * numberOfContours));
HXLINE( 850)			::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(m);
HXDLIN( 850)			vertices = this1;
HXLINE( 851)			if (hx::IsNull( vertices )) {
HXLINE( 852)				return null();
            			}
            			else {
HXLINE( 854)				int _g = 0;
HXDLIN( 854)				int _g1 = vertices->length;
HXDLIN( 854)				while((_g < _g1)){
HXLINE( 854)					_g = (_g + 1);
HXDLIN( 854)					int i = (_g - 1);
HXLINE( 855)					{
HXLINE( 855)						 ::kha::graphics2::truetype::Stbtt_vertex val =  ::kha::graphics2::truetype::Stbtt_vertex_obj::__alloc( HX_CTX );
HXDLIN( 855)						vertices->__unsafe_set(i,val);
            					}
            				}
            			}
HXLINE( 859)			next_move = 0;
HXLINE( 838)			int flagcount = 0;
HXLINE( 866)			off = (m - n1);
HXLINE( 870)			{
HXLINE( 870)				int _g2 = 0;
HXDLIN( 870)				int _g11 = n1;
HXDLIN( 870)				while((_g2 < _g11)){
HXLINE( 870)					_g2 = (_g2 + 1);
HXDLIN( 870)					int i1 = (_g2 - 1);
HXLINE( 871)					if ((flagcount == 0)) {
HXLINE( 872)						pointsIndex = (pointsIndex + 1);
HXDLIN( 872)						flags = data->readU8((pointsIndex - 1));
HXLINE( 873)						if (((flags & 8) != 0)) {
HXLINE( 874)							pointsIndex = (pointsIndex + 1);
HXDLIN( 874)							flagcount = data->readU8((pointsIndex - 1));
            						}
            					}
            					else {
HXLINE( 876)						flagcount = (flagcount - 1);
            					}
HXLINE( 877)					( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i1))) )->type = flags;
            				}
            			}
HXLINE( 842)			int x = 0;
HXLINE( 882)			{
HXLINE( 882)				int _g21 = 0;
HXDLIN( 882)				int _g3 = n1;
HXDLIN( 882)				while((_g21 < _g3)){
HXLINE( 882)					_g21 = (_g21 + 1);
HXDLIN( 882)					int i2 = (_g21 - 1);
HXLINE( 883)					flags = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i2))) )->type;
HXLINE( 884)					if (((flags & 2) != 0)) {
HXLINE( 885)						pointsIndex = (pointsIndex + 1);
HXDLIN( 885)						int dx = data->readU8((pointsIndex - 1));
HXLINE( 886)						int x1;
HXDLIN( 886)						if (((flags & 16) != 0)) {
HXLINE( 886)							x1 = dx;
            						}
            						else {
HXLINE( 886)							x1 = -(dx);
            						}
HXDLIN( 886)						x = (x + x1);
            					}
            					else {
HXLINE( 888)						if (((flags & 16) == 0)) {
HXLINE( 889)							int value;
HXLINE( 890)							int ch13 = data->readU8(pointsIndex);
HXLINE( 891)							int ch23 = data->readU8((pointsIndex + 1));
HXLINE( 892)							int n2 = (ch23 | (ch13 << 8));
HXLINE( 893)							if (((n2 & 32768) != 0)) {
HXLINE( 894)								value = (n2 - 65536);
            							}
            							else {
HXLINE( 896)								value = n2;
            							}
HXLINE( 897)							x = (x + value);
HXLINE( 898)							pointsIndex = (pointsIndex + 2);
            						}
            					}
HXLINE( 901)					( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i2))) )->x = x;
            				}
            			}
HXLINE( 842)			int y = 0;
HXLINE( 906)			{
HXLINE( 906)				int _g4 = 0;
HXDLIN( 906)				int _g5 = n1;
HXDLIN( 906)				while((_g4 < _g5)){
HXLINE( 906)					_g4 = (_g4 + 1);
HXDLIN( 906)					int i3 = (_g4 - 1);
HXLINE( 907)					flags = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i3))) )->type;
HXLINE( 908)					if (((flags & 4) != 0)) {
HXLINE( 909)						pointsIndex = (pointsIndex + 1);
HXDLIN( 909)						int dy = data->readU8((pointsIndex - 1));
HXLINE( 910)						int y1;
HXDLIN( 910)						if (((flags & 32) != 0)) {
HXLINE( 910)							y1 = dy;
            						}
            						else {
HXLINE( 910)							y1 = -(dy);
            						}
HXDLIN( 910)						y = (y + y1);
            					}
            					else {
HXLINE( 912)						if (((flags & 32) == 0)) {
HXLINE( 913)							int value1;
HXLINE( 914)							int ch14 = data->readU8(pointsIndex);
HXLINE( 915)							int ch24 = data->readU8((pointsIndex + 1));
HXLINE( 916)							int n3 = (ch24 | (ch14 << 8));
HXLINE( 917)							if (((n3 & 32768) != 0)) {
HXLINE( 918)								value1 = (n3 - 65536);
            							}
            							else {
HXLINE( 920)								value1 = n3;
            							}
HXLINE( 921)							y = (y + value1);
HXLINE( 922)							pointsIndex = (pointsIndex + 2);
            						}
            					}
HXLINE( 925)					( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i3))) )->y = y;
            				}
            			}
HXLINE( 929)			num_vertices = 0;
HXLINE( 842)			int scy = 0;
HXDLIN( 842)			int scx = scy;
HXDLIN( 842)			int cy = scx;
HXDLIN( 842)			int cx = cy;
HXDLIN( 842)			int sy = cx;
HXDLIN( 842)			int sx = sy;
HXLINE( 931)			int i4 = 0;
HXLINE( 932)			while((i4 < n1)){
HXLINE( 933)				flags = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i4))) )->type;
HXLINE( 934)				x = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i4))) )->x;
HXLINE( 935)				y = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(off + i4))) )->y;
HXLINE( 937)				if ((next_move == i4)) {
HXLINE( 938)					if ((i4 != 0)) {
HXLINE( 939)						num_vertices = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
            					}
HXLINE( 942)					start_off = ((flags & 1) == 0);
HXLINE( 943)					if (start_off) {
HXLINE( 946)						scx = x;
HXLINE( 947)						scy = y;
HXLINE( 948)						if (((( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,((off + i4) + 1))) )->type & 1) == 0)) {
HXLINE( 950)							sx = ((x + ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,((off + i4) + 1))) )->x) >> 1);
HXLINE( 951)							sy = ((y + ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,((off + i4) + 1))) )->y) >> 1);
            						}
            						else {
HXLINE( 954)							sx = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,((off + i4) + 1))) )->x;
HXLINE( 955)							sy = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,((off + i4) + 1))) )->y;
HXLINE( 956)							i4 = (i4 + 1);
            						}
            					}
            					else {
HXLINE( 959)						sx = x;
HXLINE( 960)						sy = y;
            					}
HXLINE( 962)					num_vertices = (num_vertices + 1);
HXDLIN( 962)					::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),1,sx,sy,0,0);
HXLINE( 963)					was_off = false;
HXLINE( 964)					int pos2 = (endPtsOfContoursOffset + (j * 2));
HXDLIN( 964)					int ch15 = data->readU8(pos2);
HXDLIN( 964)					int ch25 = data->readU8((pos2 + 1));
HXDLIN( 964)					next_move = (1 + (ch25 | (ch15 << 8)));
HXLINE( 965)					j = (j + 1);
            				}
            				else {
HXLINE( 967)					if (((flags & 1) == 0)) {
HXLINE( 968)						if (was_off) {
HXLINE( 969)							num_vertices = (num_vertices + 1);
HXDLIN( 969)							::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),3,((cx + x) >> 1),((cy + y) >> 1),cx,cy);
            						}
HXLINE( 970)						cx = x;
HXLINE( 971)						cy = y;
HXLINE( 972)						was_off = true;
            					}
            					else {
HXLINE( 974)						if (was_off) {
HXLINE( 975)							num_vertices = (num_vertices + 1);
HXDLIN( 975)							::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),3,x,y,cx,cy);
            						}
            						else {
HXLINE( 977)							num_vertices = (num_vertices + 1);
HXDLIN( 977)							::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,(num_vertices - 1))) ),2,x,y,0,0);
            						}
HXLINE( 978)						was_off = false;
            					}
            				}
HXLINE( 981)				i4 = (i4 + 1);
            			}
HXLINE( 983)			num_vertices = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__close_shape(vertices,num_vertices,was_off,start_off,sx,sy,scx,scy,cx,cy);
            		}
            		else {
HXLINE( 984)			if ((numberOfContours < 0)) {
HXLINE( 986)				int more = 1;
HXLINE( 987)				int compIndex = (g + 10);
HXLINE( 988)				num_vertices = 0;
HXLINE( 989)				vertices = null();
HXLINE( 990)				while((more != 0)){
HXLINE( 991)					int flags1;
HXDLIN( 991)					int gidx;
HXLINE( 992)					int comp_num_verts = 0;
HXDLIN( 992)					int i5;
HXLINE( 993)					::Array< ::Dynamic> comp_verts = null();
HXLINE( 994)					::Array< ::Dynamic> tmp = null();
HXLINE( 995)					Float mtx0 = ( (Float)(1) );
HXLINE( 996)					Float mtx1 = ( (Float)(0) );
HXLINE( 997)					Float mtx2 = ( (Float)(0) );
HXLINE( 998)					Float mtx3 = ( (Float)(1) );
HXLINE( 999)					Float mtx4 = ( (Float)(0) );
HXLINE(1000)					Float mtx5 = ( (Float)(0) );
HXLINE(1003)					int ch16 = data->readU8(compIndex);
HXDLIN(1003)					int ch26 = data->readU8((compIndex + 1));
HXDLIN(1003)					int n4 = (ch26 | (ch16 << 8));
HXDLIN(1003)					if (((n4 & 32768) != 0)) {
HXLINE(1003)						flags1 = (n4 - 65536);
            					}
            					else {
HXLINE(1003)						flags1 = n4;
            					}
HXDLIN(1003)					compIndex = (compIndex + 2);
HXLINE(1004)					int ch17 = data->readU8(compIndex);
HXDLIN(1004)					int ch27 = data->readU8((compIndex + 1));
HXDLIN(1004)					int n5 = (ch27 | (ch17 << 8));
HXDLIN(1004)					if (((n5 & 32768) != 0)) {
HXLINE(1004)						gidx = (n5 - 65536);
            					}
            					else {
HXLINE(1004)						gidx = n5;
            					}
HXDLIN(1004)					compIndex = (compIndex + 2);
HXLINE(1006)					if (((flags1 & 2) != 0)) {
HXLINE(1007)						if (((flags1 & 1) != 0)) {
HXLINE(1008)							int ch18 = data->readU8(compIndex);
HXDLIN(1008)							int ch28 = data->readU8((compIndex + 1));
HXDLIN(1008)							int n6 = (ch28 | (ch18 << 8));
HXDLIN(1008)							if (((n6 & 32768) != 0)) {
HXLINE(1008)								mtx4 = ( (Float)((n6 - 65536)) );
            							}
            							else {
HXLINE(1008)								mtx4 = ( (Float)(n6) );
            							}
HXDLIN(1008)							compIndex = (compIndex + 2);
HXLINE(1009)							int ch19 = data->readU8(compIndex);
HXDLIN(1009)							int ch29 = data->readU8((compIndex + 1));
HXDLIN(1009)							int n7 = (ch29 | (ch19 << 8));
HXDLIN(1009)							if (((n7 & 32768) != 0)) {
HXLINE(1009)								mtx5 = ( (Float)((n7 - 65536)) );
            							}
            							else {
HXLINE(1009)								mtx5 = ( (Float)(n7) );
            							}
HXDLIN(1009)							compIndex = (compIndex + 2);
            						}
            						else {
HXLINE(1011)							int n8 = data->readU8(compIndex);
HXDLIN(1011)							if ((n8 >= 128)) {
HXLINE(1011)								mtx4 = ( (Float)((n8 - 256)) );
            							}
            							else {
HXLINE(1011)								mtx4 = ( (Float)(n8) );
            							}
HXDLIN(1011)							compIndex = (compIndex + 1);
HXLINE(1012)							int n9 = data->readU8(compIndex);
HXDLIN(1012)							if ((n9 >= 128)) {
HXLINE(1012)								mtx5 = ( (Float)((n9 - 256)) );
            							}
            							else {
HXLINE(1012)								mtx5 = ( (Float)(n9) );
            							}
HXDLIN(1012)							compIndex = (compIndex + 1);
            						}
            					}
            					else {
HXLINE(1017)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXLINE(1019)					if (((flags1 & 8) != 0)) {
HXLINE(1020)						int ch110 = data->readU8(compIndex);
HXDLIN(1020)						int ch210 = data->readU8((compIndex + 1));
HXDLIN(1020)						int n10 = (ch210 | (ch110 << 8));
HXDLIN(1020)						int mtx31;
HXDLIN(1020)						if (((n10 & 32768) != 0)) {
HXLINE(1020)							mtx31 = (n10 - 65536);
            						}
            						else {
HXLINE(1020)							mtx31 = n10;
            						}
HXDLIN(1020)						mtx3 = (( (Float)(mtx31) ) / ((Float)16384.0));
HXDLIN(1020)						mtx0 = mtx3;
HXDLIN(1020)						compIndex = (compIndex + 2);
HXLINE(1021)						mtx2 = ( (Float)(0) );
HXDLIN(1021)						mtx1 = mtx2;
            					}
            					else {
HXLINE(1022)						if (((flags1 & 64) != 0)) {
HXLINE(1023)							int ch111 = data->readU8(compIndex);
HXDLIN(1023)							int ch211 = data->readU8((compIndex + 1));
HXDLIN(1023)							int n11 = (ch211 | (ch111 << 8));
HXDLIN(1023)							int mtx01;
HXDLIN(1023)							if (((n11 & 32768) != 0)) {
HXLINE(1023)								mtx01 = (n11 - 65536);
            							}
            							else {
HXLINE(1023)								mtx01 = n11;
            							}
HXDLIN(1023)							mtx0 = (( (Float)(mtx01) ) / ((Float)16384.0));
HXDLIN(1023)							compIndex = (compIndex + 2);
HXLINE(1024)							mtx2 = ( (Float)(0) );
HXDLIN(1024)							mtx1 = mtx2;
HXLINE(1025)							int ch112 = data->readU8(compIndex);
HXDLIN(1025)							int ch212 = data->readU8((compIndex + 1));
HXDLIN(1025)							int n12 = (ch212 | (ch112 << 8));
HXDLIN(1025)							int mtx32;
HXDLIN(1025)							if (((n12 & 32768) != 0)) {
HXLINE(1025)								mtx32 = (n12 - 65536);
            							}
            							else {
HXLINE(1025)								mtx32 = n12;
            							}
HXDLIN(1025)							mtx3 = (( (Float)(mtx32) ) / ((Float)16384.0));
HXDLIN(1025)							compIndex = (compIndex + 2);
            						}
            						else {
HXLINE(1026)							if (((flags1 & 128) != 0)) {
HXLINE(1027)								int ch113 = data->readU8(compIndex);
HXDLIN(1027)								int ch213 = data->readU8((compIndex + 1));
HXDLIN(1027)								int n13 = (ch213 | (ch113 << 8));
HXDLIN(1027)								int mtx02;
HXDLIN(1027)								if (((n13 & 32768) != 0)) {
HXLINE(1027)									mtx02 = (n13 - 65536);
            								}
            								else {
HXLINE(1027)									mtx02 = n13;
            								}
HXDLIN(1027)								mtx0 = (( (Float)(mtx02) ) / ((Float)16384.0));
HXDLIN(1027)								compIndex = (compIndex + 2);
HXLINE(1028)								int ch114 = data->readU8(compIndex);
HXDLIN(1028)								int ch214 = data->readU8((compIndex + 1));
HXDLIN(1028)								int n14 = (ch214 | (ch114 << 8));
HXDLIN(1028)								int mtx11;
HXDLIN(1028)								if (((n14 & 32768) != 0)) {
HXLINE(1028)									mtx11 = (n14 - 65536);
            								}
            								else {
HXLINE(1028)									mtx11 = n14;
            								}
HXDLIN(1028)								mtx1 = (( (Float)(mtx11) ) / ((Float)16384.0));
HXDLIN(1028)								compIndex = (compIndex + 2);
HXLINE(1029)								int ch115 = data->readU8(compIndex);
HXDLIN(1029)								int ch215 = data->readU8((compIndex + 1));
HXDLIN(1029)								int n15 = (ch215 | (ch115 << 8));
HXDLIN(1029)								int mtx21;
HXDLIN(1029)								if (((n15 & 32768) != 0)) {
HXLINE(1029)									mtx21 = (n15 - 65536);
            								}
            								else {
HXLINE(1029)									mtx21 = n15;
            								}
HXDLIN(1029)								mtx2 = (( (Float)(mtx21) ) / ((Float)16384.0));
HXDLIN(1029)								compIndex = (compIndex + 2);
HXLINE(1030)								int ch116 = data->readU8(compIndex);
HXDLIN(1030)								int ch216 = data->readU8((compIndex + 1));
HXDLIN(1030)								int n16 = (ch216 | (ch116 << 8));
HXDLIN(1030)								int mtx33;
HXDLIN(1030)								if (((n16 & 32768) != 0)) {
HXLINE(1030)									mtx33 = (n16 - 65536);
            								}
            								else {
HXLINE(1030)									mtx33 = n16;
            								}
HXDLIN(1030)								mtx3 = (( (Float)(mtx33) ) / ((Float)16384.0));
HXDLIN(1030)								compIndex = (compIndex + 2);
            							}
            						}
            					}
HXLINE(1001)					Float m1 = ::Math_obj::sqrt(((mtx0 * mtx0) + (mtx1 * mtx1)));
HXDLIN(1001)					Float n17 = ::Math_obj::sqrt(((mtx2 * mtx2) + (mtx3 * mtx3)));
HXLINE(1038)					comp_verts = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphShape(info,gidx);
HXLINE(1039)					if (hx::IsNull( comp_verts )) {
HXLINE(1039)						comp_num_verts = 0;
            					}
            					else {
HXLINE(1039)						comp_num_verts = comp_verts->length;
            					}
HXLINE(1040)					if ((comp_num_verts > 0)) {
HXLINE(1042)						{
HXLINE(1042)							int _g6 = 0;
HXDLIN(1042)							int _g12 = comp_num_verts;
HXDLIN(1042)							while((_g6 < _g12)){
HXLINE(1042)								_g6 = (_g6 + 1);
HXDLIN(1042)								int i6 = (_g6 - 1);
HXLINE(1043)								 ::kha::graphics2::truetype::Stbtt_vertex v = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(comp_verts,i6)) );
HXLINE(1044)								int x2 = v->x;
HXDLIN(1044)								int y2 = v->y;
HXLINE(1046)								v->x = ::Std_obj::_hx_int((m1 * (((mtx0 * ( (Float)(x2) )) + (mtx2 * ( (Float)(y2) ))) + mtx4)));
HXLINE(1047)								v->y = ::Std_obj::_hx_int((n17 * (((mtx1 * ( (Float)(x2) )) + (mtx3 * ( (Float)(y2) ))) + mtx5)));
HXLINE(1048)								x2 = v->cx;
HXDLIN(1048)								y2 = v->cy;
HXLINE(1049)								v->cx = ::Std_obj::_hx_int((m1 * (((mtx0 * ( (Float)(x2) )) + (mtx2 * ( (Float)(y2) ))) + mtx4)));
HXLINE(1050)								v->cy = ::Std_obj::_hx_int((n17 * (((mtx1 * ( (Float)(x2) )) + (mtx3 * ( (Float)(y2) ))) + mtx5)));
            							}
            						}
HXLINE(1053)						::Array< ::Dynamic> this2 = ::Array_obj< ::Dynamic>::__new((num_vertices + comp_num_verts));
HXDLIN(1053)						tmp = this2;
HXLINE(1054)						if (hx::IsNull( tmp )) {
HXLINE(1055)							return null();
            						}
HXLINE(1057)						if ((num_vertices > 0)) {
HXLINE(1057)							::kha::graphics2::truetype::StbTruetype_obj::copyVertices(vertices,tmp,0,num_vertices);
            						}
HXLINE(1058)						::kha::graphics2::truetype::StbTruetype_obj::copyVertices(comp_verts,tmp,num_vertices,comp_num_verts);
HXLINE(1059)						vertices = tmp;
HXLINE(1060)						num_vertices = (num_vertices + comp_num_verts);
            					}
HXLINE(1063)					more = (flags1 & 32);
            				}
            			}
            		}
HXLINE(1069)		if (hx::IsNull( vertices )) {
HXLINE(1069)			return null();
            		}
HXLINE(1070)		if ((vertices->length < num_vertices)) {
HXLINE(1070)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE(1071)		if ((num_vertices < vertices->length)) {
HXLINE(1072)			::Array< ::Dynamic> this3 = ::Array_obj< ::Dynamic>::__new(num_vertices);
HXDLIN(1072)			::Array< ::Dynamic> tmp1 = this3;
HXLINE(1073)			::kha::graphics2::truetype::StbTruetype_obj::copyVertices(vertices,tmp1,0,num_vertices);
HXLINE(1074)			return tmp1;
            		}
            		else {
HXLINE(1077)			return vertices;
            		}
HXLINE(1071)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__GetGlyphShapeTT,return )

 ::kha::graphics2::truetype::Stbtt__csctx StbTruetype_obj::STBTT__CSCTX_INIT(bool bounds){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1081_STBTT__CSCTX_INIT)
HXLINE(1082)		 ::kha::graphics2::truetype::Stbtt__csctx tmp =  ::kha::graphics2::truetype::Stbtt__csctx_obj::__alloc( HX_CTX );
HXLINE(1083)		tmp->bounds = bounds;
HXLINE(1084)		tmp->started = false;
HXLINE(1085)		tmp->first_x = ( (Float)(0) );
HXLINE(1086)		tmp->first_y = ( (Float)(0) );
HXLINE(1087)		tmp->x = ( (Float)(0) );
HXLINE(1088)		tmp->y = ( (Float)(0) );
HXLINE(1089)		tmp->min_x = 0;
HXLINE(1090)		tmp->min_y = 0;
HXLINE(1091)		tmp->max_x = 0;
HXLINE(1092)		tmp->max_y = 0;
HXLINE(1094)		tmp->_hx_set_pvertices(HX_CTX, null());
HXLINE(1095)		tmp->num_vertices = 0;
HXLINE(1096)		return tmp;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,STBTT__CSCTX_INIT,return )

void StbTruetype_obj::stbtt__track_vertex( ::kha::graphics2::truetype::Stbtt__csctx c,int x,int y){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1099_stbtt__track_vertex)
HXLINE(1100)		bool _hx_tmp;
HXDLIN(1100)		if ((x <= c->max_x)) {
HXLINE(1100)			_hx_tmp = !(c->started);
            		}
            		else {
HXLINE(1100)			_hx_tmp = true;
            		}
HXDLIN(1100)		if (_hx_tmp) {
HXLINE(1100)			c->max_x = x;
            		}
HXLINE(1101)		bool _hx_tmp1;
HXDLIN(1101)		if ((y <= c->max_y)) {
HXLINE(1101)			_hx_tmp1 = !(c->started);
            		}
            		else {
HXLINE(1101)			_hx_tmp1 = true;
            		}
HXDLIN(1101)		if (_hx_tmp1) {
HXLINE(1101)			c->max_y = y;
            		}
HXLINE(1102)		bool _hx_tmp2;
HXDLIN(1102)		if ((x >= c->min_x)) {
HXLINE(1102)			_hx_tmp2 = !(c->started);
            		}
            		else {
HXLINE(1102)			_hx_tmp2 = true;
            		}
HXDLIN(1102)		if (_hx_tmp2) {
HXLINE(1102)			c->min_x = x;
            		}
HXLINE(1103)		bool _hx_tmp3;
HXDLIN(1103)		if ((y >= c->min_y)) {
HXLINE(1103)			_hx_tmp3 = !(c->started);
            		}
            		else {
HXLINE(1103)			_hx_tmp3 = true;
            		}
HXDLIN(1103)		if (_hx_tmp3) {
HXLINE(1103)			c->min_y = y;
            		}
HXLINE(1104)		c->started = true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__track_vertex,(void))

void StbTruetype_obj::stbtt__csctx_v( ::kha::graphics2::truetype::Stbtt__csctx c,int type,int x,int y,int cx,int cy,int cx1,int cy1){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1107_stbtt__csctx_v)
HXLINE(1108)		if (c->bounds) {
HXLINE(1109)			{
HXLINE(1109)				bool _hx_tmp;
HXDLIN(1109)				if ((x <= c->max_x)) {
HXLINE(1109)					_hx_tmp = !(c->started);
            				}
            				else {
HXLINE(1109)					_hx_tmp = true;
            				}
HXDLIN(1109)				if (_hx_tmp) {
HXLINE(1109)					c->max_x = x;
            				}
HXDLIN(1109)				bool _hx_tmp1;
HXDLIN(1109)				if ((y <= c->max_y)) {
HXLINE(1109)					_hx_tmp1 = !(c->started);
            				}
            				else {
HXLINE(1109)					_hx_tmp1 = true;
            				}
HXDLIN(1109)				if (_hx_tmp1) {
HXLINE(1109)					c->max_y = y;
            				}
HXDLIN(1109)				bool _hx_tmp2;
HXDLIN(1109)				if ((x >= c->min_x)) {
HXLINE(1109)					_hx_tmp2 = !(c->started);
            				}
            				else {
HXLINE(1109)					_hx_tmp2 = true;
            				}
HXDLIN(1109)				if (_hx_tmp2) {
HXLINE(1109)					c->min_x = x;
            				}
HXDLIN(1109)				bool _hx_tmp3;
HXDLIN(1109)				if ((y >= c->min_y)) {
HXLINE(1109)					_hx_tmp3 = !(c->started);
            				}
            				else {
HXLINE(1109)					_hx_tmp3 = true;
            				}
HXDLIN(1109)				if (_hx_tmp3) {
HXLINE(1109)					c->min_y = y;
            				}
HXDLIN(1109)				c->started = true;
            			}
HXLINE(1110)			if ((type == 4)) {
HXLINE(1111)				{
HXLINE(1111)					bool _hx_tmp4;
HXDLIN(1111)					if ((cx <= c->max_x)) {
HXLINE(1111)						_hx_tmp4 = !(c->started);
            					}
            					else {
HXLINE(1111)						_hx_tmp4 = true;
            					}
HXDLIN(1111)					if (_hx_tmp4) {
HXLINE(1111)						c->max_x = cx;
            					}
HXDLIN(1111)					bool _hx_tmp5;
HXDLIN(1111)					if ((cy <= c->max_y)) {
HXLINE(1111)						_hx_tmp5 = !(c->started);
            					}
            					else {
HXLINE(1111)						_hx_tmp5 = true;
            					}
HXDLIN(1111)					if (_hx_tmp5) {
HXLINE(1111)						c->max_y = cy;
            					}
HXDLIN(1111)					bool _hx_tmp6;
HXDLIN(1111)					if ((cx >= c->min_x)) {
HXLINE(1111)						_hx_tmp6 = !(c->started);
            					}
            					else {
HXLINE(1111)						_hx_tmp6 = true;
            					}
HXDLIN(1111)					if (_hx_tmp6) {
HXLINE(1111)						c->min_x = cx;
            					}
HXDLIN(1111)					bool _hx_tmp7;
HXDLIN(1111)					if ((cy >= c->min_y)) {
HXLINE(1111)						_hx_tmp7 = !(c->started);
            					}
            					else {
HXLINE(1111)						_hx_tmp7 = true;
            					}
HXDLIN(1111)					if (_hx_tmp7) {
HXLINE(1111)						c->min_y = cy;
            					}
HXDLIN(1111)					c->started = true;
            				}
HXLINE(1112)				{
HXLINE(1112)					bool _hx_tmp8;
HXDLIN(1112)					if ((cx1 <= c->max_x)) {
HXLINE(1112)						_hx_tmp8 = !(c->started);
            					}
            					else {
HXLINE(1112)						_hx_tmp8 = true;
            					}
HXDLIN(1112)					if (_hx_tmp8) {
HXLINE(1112)						c->max_x = cx1;
            					}
HXDLIN(1112)					bool _hx_tmp9;
HXDLIN(1112)					if ((cy1 <= c->max_y)) {
HXLINE(1112)						_hx_tmp9 = !(c->started);
            					}
            					else {
HXLINE(1112)						_hx_tmp9 = true;
            					}
HXDLIN(1112)					if (_hx_tmp9) {
HXLINE(1112)						c->max_y = cy1;
            					}
HXDLIN(1112)					bool _hx_tmp10;
HXDLIN(1112)					if ((cx1 >= c->min_x)) {
HXLINE(1112)						_hx_tmp10 = !(c->started);
            					}
            					else {
HXLINE(1112)						_hx_tmp10 = true;
            					}
HXDLIN(1112)					if (_hx_tmp10) {
HXLINE(1112)						c->min_x = cx1;
            					}
HXDLIN(1112)					bool _hx_tmp11;
HXDLIN(1112)					if ((cy1 >= c->min_y)) {
HXLINE(1112)						_hx_tmp11 = !(c->started);
            					}
            					else {
HXLINE(1112)						_hx_tmp11 = true;
            					}
HXDLIN(1112)					if (_hx_tmp11) {
HXLINE(1112)						c->min_y = cy1;
            					}
HXDLIN(1112)					c->started = true;
            				}
            			}
            		}
            		else {
HXLINE(1115)			::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),type,x,y,cx,cy);
HXLINE(1116)			( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx1;
HXLINE(1117)			( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy1;
            		}
HXLINE(1119)		c->num_vertices++;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(StbTruetype_obj,stbtt__csctx_v,(void))

void StbTruetype_obj::stbtt__csctx_close_shape( ::kha::graphics2::truetype::Stbtt__csctx ctx){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1123_stbtt__csctx_close_shape)
HXDLIN(1123)		bool _hx_tmp;
HXDLIN(1123)		if ((ctx->first_x == ctx->x)) {
HXDLIN(1123)			_hx_tmp = (ctx->first_y != ctx->y);
            		}
            		else {
HXDLIN(1123)			_hx_tmp = true;
            		}
HXDLIN(1123)		if (_hx_tmp) {
HXLINE(1124)			int x = ::Std_obj::_hx_int(ctx->first_x);
HXDLIN(1124)			int y = ::Std_obj::_hx_int(ctx->first_y);
HXDLIN(1124)			if (ctx->bounds) {
HXLINE(1124)				bool _hx_tmp1;
HXDLIN(1124)				if ((x <= ctx->max_x)) {
HXLINE(1124)					_hx_tmp1 = !(ctx->started);
            				}
            				else {
HXLINE(1124)					_hx_tmp1 = true;
            				}
HXDLIN(1124)				if (_hx_tmp1) {
HXLINE(1124)					ctx->max_x = x;
            				}
HXDLIN(1124)				bool _hx_tmp2;
HXDLIN(1124)				if ((y <= ctx->max_y)) {
HXLINE(1124)					_hx_tmp2 = !(ctx->started);
            				}
            				else {
HXLINE(1124)					_hx_tmp2 = true;
            				}
HXDLIN(1124)				if (_hx_tmp2) {
HXLINE(1124)					ctx->max_y = y;
            				}
HXDLIN(1124)				bool _hx_tmp3;
HXDLIN(1124)				if ((x >= ctx->min_x)) {
HXLINE(1124)					_hx_tmp3 = !(ctx->started);
            				}
            				else {
HXLINE(1124)					_hx_tmp3 = true;
            				}
HXDLIN(1124)				if (_hx_tmp3) {
HXLINE(1124)					ctx->min_x = x;
            				}
HXDLIN(1124)				bool _hx_tmp4;
HXDLIN(1124)				if ((y >= ctx->min_y)) {
HXLINE(1124)					_hx_tmp4 = !(ctx->started);
            				}
            				else {
HXLINE(1124)					_hx_tmp4 = true;
            				}
HXDLIN(1124)				if (_hx_tmp4) {
HXLINE(1124)					ctx->min_y = y;
            				}
HXDLIN(1124)				ctx->started = true;
            			}
            			else {
HXLINE(1124)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) ),2,x,y,0,0);
HXDLIN(1124)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cx1 = 0;
HXDLIN(1124)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cy1 = 0;
            			}
HXDLIN(1124)			ctx->num_vertices++;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt__csctx_close_shape,(void))

void StbTruetype_obj::stbtt__csctx_rmove_to( ::kha::graphics2::truetype::Stbtt__csctx ctx,Float dx,Float dy){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1127_stbtt__csctx_rmove_to)
HXLINE(1128)		bool _hx_tmp;
HXDLIN(1128)		if ((ctx->first_x == ctx->x)) {
HXLINE(1128)			_hx_tmp = (ctx->first_y != ctx->y);
            		}
            		else {
HXLINE(1128)			_hx_tmp = true;
            		}
HXDLIN(1128)		if (_hx_tmp) {
HXLINE(1128)			int x = ::Std_obj::_hx_int(ctx->first_x);
HXDLIN(1128)			int y = ::Std_obj::_hx_int(ctx->first_y);
HXDLIN(1128)			if (ctx->bounds) {
HXLINE(1128)				bool _hx_tmp1;
HXDLIN(1128)				if ((x <= ctx->max_x)) {
HXLINE(1128)					_hx_tmp1 = !(ctx->started);
            				}
            				else {
HXLINE(1128)					_hx_tmp1 = true;
            				}
HXDLIN(1128)				if (_hx_tmp1) {
HXLINE(1128)					ctx->max_x = x;
            				}
HXDLIN(1128)				bool _hx_tmp2;
HXDLIN(1128)				if ((y <= ctx->max_y)) {
HXLINE(1128)					_hx_tmp2 = !(ctx->started);
            				}
            				else {
HXLINE(1128)					_hx_tmp2 = true;
            				}
HXDLIN(1128)				if (_hx_tmp2) {
HXLINE(1128)					ctx->max_y = y;
            				}
HXDLIN(1128)				bool _hx_tmp3;
HXDLIN(1128)				if ((x >= ctx->min_x)) {
HXLINE(1128)					_hx_tmp3 = !(ctx->started);
            				}
            				else {
HXLINE(1128)					_hx_tmp3 = true;
            				}
HXDLIN(1128)				if (_hx_tmp3) {
HXLINE(1128)					ctx->min_x = x;
            				}
HXDLIN(1128)				bool _hx_tmp4;
HXDLIN(1128)				if ((y >= ctx->min_y)) {
HXLINE(1128)					_hx_tmp4 = !(ctx->started);
            				}
            				else {
HXLINE(1128)					_hx_tmp4 = true;
            				}
HXDLIN(1128)				if (_hx_tmp4) {
HXLINE(1128)					ctx->min_y = y;
            				}
HXDLIN(1128)				ctx->started = true;
            			}
            			else {
HXLINE(1128)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) ),2,x,y,0,0);
HXDLIN(1128)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cx1 = 0;
HXDLIN(1128)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cy1 = 0;
            			}
HXDLIN(1128)			ctx->num_vertices++;
            		}
HXLINE(1129)		ctx->first_x = (ctx->x = (ctx->x + dx));
HXLINE(1130)		ctx->first_y = (ctx->y = (ctx->y + dy));
HXLINE(1131)		{
HXLINE(1131)			int x1 = ::Std_obj::_hx_int(ctx->x);
HXDLIN(1131)			int y1 = ::Std_obj::_hx_int(ctx->y);
HXDLIN(1131)			if (ctx->bounds) {
HXLINE(1131)				bool _hx_tmp5;
HXDLIN(1131)				if ((x1 <= ctx->max_x)) {
HXLINE(1131)					_hx_tmp5 = !(ctx->started);
            				}
            				else {
HXLINE(1131)					_hx_tmp5 = true;
            				}
HXDLIN(1131)				if (_hx_tmp5) {
HXLINE(1131)					ctx->max_x = x1;
            				}
HXDLIN(1131)				bool _hx_tmp6;
HXDLIN(1131)				if ((y1 <= ctx->max_y)) {
HXLINE(1131)					_hx_tmp6 = !(ctx->started);
            				}
            				else {
HXLINE(1131)					_hx_tmp6 = true;
            				}
HXDLIN(1131)				if (_hx_tmp6) {
HXLINE(1131)					ctx->max_y = y1;
            				}
HXDLIN(1131)				bool _hx_tmp7;
HXDLIN(1131)				if ((x1 >= ctx->min_x)) {
HXLINE(1131)					_hx_tmp7 = !(ctx->started);
            				}
            				else {
HXLINE(1131)					_hx_tmp7 = true;
            				}
HXDLIN(1131)				if (_hx_tmp7) {
HXLINE(1131)					ctx->min_x = x1;
            				}
HXDLIN(1131)				bool _hx_tmp8;
HXDLIN(1131)				if ((y1 >= ctx->min_y)) {
HXLINE(1131)					_hx_tmp8 = !(ctx->started);
            				}
            				else {
HXLINE(1131)					_hx_tmp8 = true;
            				}
HXDLIN(1131)				if (_hx_tmp8) {
HXLINE(1131)					ctx->min_y = y1;
            				}
HXDLIN(1131)				ctx->started = true;
            			}
            			else {
HXLINE(1131)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) ),1,x1,y1,0,0);
HXDLIN(1131)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cx1 = 0;
HXDLIN(1131)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cy1 = 0;
            			}
HXDLIN(1131)			ctx->num_vertices++;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__csctx_rmove_to,(void))

void StbTruetype_obj::stbtt__csctx_rline_to( ::kha::graphics2::truetype::Stbtt__csctx ctx,Float dx,Float dy){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1134_stbtt__csctx_rline_to)
HXLINE(1135)		 ::kha::graphics2::truetype::Stbtt__csctx ctx1 = ctx;
HXDLIN(1135)		ctx1->x = (ctx1->x + dx);
HXLINE(1136)		 ::kha::graphics2::truetype::Stbtt__csctx ctx2 = ctx;
HXDLIN(1136)		ctx2->y = (ctx2->y + dy);
HXLINE(1137)		{
HXLINE(1137)			int x = ::Std_obj::_hx_int(ctx->x);
HXDLIN(1137)			int y = ::Std_obj::_hx_int(ctx->y);
HXDLIN(1137)			if (ctx->bounds) {
HXLINE(1137)				bool _hx_tmp;
HXDLIN(1137)				if ((x <= ctx->max_x)) {
HXLINE(1137)					_hx_tmp = !(ctx->started);
            				}
            				else {
HXLINE(1137)					_hx_tmp = true;
            				}
HXDLIN(1137)				if (_hx_tmp) {
HXLINE(1137)					ctx->max_x = x;
            				}
HXDLIN(1137)				bool _hx_tmp1;
HXDLIN(1137)				if ((y <= ctx->max_y)) {
HXLINE(1137)					_hx_tmp1 = !(ctx->started);
            				}
            				else {
HXLINE(1137)					_hx_tmp1 = true;
            				}
HXDLIN(1137)				if (_hx_tmp1) {
HXLINE(1137)					ctx->max_y = y;
            				}
HXDLIN(1137)				bool _hx_tmp2;
HXDLIN(1137)				if ((x >= ctx->min_x)) {
HXLINE(1137)					_hx_tmp2 = !(ctx->started);
            				}
            				else {
HXLINE(1137)					_hx_tmp2 = true;
            				}
HXDLIN(1137)				if (_hx_tmp2) {
HXLINE(1137)					ctx->min_x = x;
            				}
HXDLIN(1137)				bool _hx_tmp3;
HXDLIN(1137)				if ((y >= ctx->min_y)) {
HXLINE(1137)					_hx_tmp3 = !(ctx->started);
            				}
            				else {
HXLINE(1137)					_hx_tmp3 = true;
            				}
HXDLIN(1137)				if (_hx_tmp3) {
HXLINE(1137)					ctx->min_y = y;
            				}
HXDLIN(1137)				ctx->started = true;
            			}
            			else {
HXLINE(1137)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) ),2,x,y,0,0);
HXDLIN(1137)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cx1 = 0;
HXDLIN(1137)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cy1 = 0;
            			}
HXDLIN(1137)			ctx->num_vertices++;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__csctx_rline_to,(void))

void StbTruetype_obj::stbtt__csctx_rccurve_to( ::kha::graphics2::truetype::Stbtt__csctx ctx,Float dx1,Float dy1,Float dx2,Float dy2,Float dx3,Float dy3){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1140_stbtt__csctx_rccurve_to)
HXLINE(1141)		Float cx1 = (ctx->x + dx1);
HXLINE(1142)		Float cy1 = (ctx->y + dy1);
HXLINE(1143)		Float cx2 = (cx1 + dx2);
HXLINE(1144)		Float cy2 = (cy1 + dy2);
HXLINE(1145)		ctx->x = (cx2 + dx3);
HXLINE(1146)		ctx->y = (cy2 + dy3);
HXLINE(1147)		{
HXLINE(1147)			int x = ::Std_obj::_hx_int(ctx->x);
HXDLIN(1147)			int y = ::Std_obj::_hx_int(ctx->y);
HXDLIN(1147)			int cx = ::Std_obj::_hx_int(cx1);
HXDLIN(1147)			int cy = ::Std_obj::_hx_int(cy1);
HXDLIN(1147)			int cx11 = ::Std_obj::_hx_int(cx2);
HXDLIN(1147)			int cy11 = ::Std_obj::_hx_int(cy2);
HXDLIN(1147)			if (ctx->bounds) {
HXLINE(1147)				{
HXLINE(1147)					bool _hx_tmp;
HXDLIN(1147)					if ((x <= ctx->max_x)) {
HXLINE(1147)						_hx_tmp = !(ctx->started);
            					}
            					else {
HXLINE(1147)						_hx_tmp = true;
            					}
HXDLIN(1147)					if (_hx_tmp) {
HXLINE(1147)						ctx->max_x = x;
            					}
HXDLIN(1147)					bool _hx_tmp1;
HXDLIN(1147)					if ((y <= ctx->max_y)) {
HXLINE(1147)						_hx_tmp1 = !(ctx->started);
            					}
            					else {
HXLINE(1147)						_hx_tmp1 = true;
            					}
HXDLIN(1147)					if (_hx_tmp1) {
HXLINE(1147)						ctx->max_y = y;
            					}
HXDLIN(1147)					bool _hx_tmp2;
HXDLIN(1147)					if ((x >= ctx->min_x)) {
HXLINE(1147)						_hx_tmp2 = !(ctx->started);
            					}
            					else {
HXLINE(1147)						_hx_tmp2 = true;
            					}
HXDLIN(1147)					if (_hx_tmp2) {
HXLINE(1147)						ctx->min_x = x;
            					}
HXDLIN(1147)					bool _hx_tmp3;
HXDLIN(1147)					if ((y >= ctx->min_y)) {
HXLINE(1147)						_hx_tmp3 = !(ctx->started);
            					}
            					else {
HXLINE(1147)						_hx_tmp3 = true;
            					}
HXDLIN(1147)					if (_hx_tmp3) {
HXLINE(1147)						ctx->min_y = y;
            					}
HXDLIN(1147)					ctx->started = true;
            				}
HXDLIN(1147)				{
HXLINE(1147)					{
HXLINE(1147)						bool _hx_tmp4;
HXDLIN(1147)						if ((cx <= ctx->max_x)) {
HXLINE(1147)							_hx_tmp4 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp4 = true;
            						}
HXDLIN(1147)						if (_hx_tmp4) {
HXLINE(1147)							ctx->max_x = cx;
            						}
HXDLIN(1147)						bool _hx_tmp5;
HXDLIN(1147)						if ((cy <= ctx->max_y)) {
HXLINE(1147)							_hx_tmp5 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp5 = true;
            						}
HXDLIN(1147)						if (_hx_tmp5) {
HXLINE(1147)							ctx->max_y = cy;
            						}
HXDLIN(1147)						bool _hx_tmp6;
HXDLIN(1147)						if ((cx >= ctx->min_x)) {
HXLINE(1147)							_hx_tmp6 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp6 = true;
            						}
HXDLIN(1147)						if (_hx_tmp6) {
HXLINE(1147)							ctx->min_x = cx;
            						}
HXDLIN(1147)						bool _hx_tmp7;
HXDLIN(1147)						if ((cy >= ctx->min_y)) {
HXLINE(1147)							_hx_tmp7 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp7 = true;
            						}
HXDLIN(1147)						if (_hx_tmp7) {
HXLINE(1147)							ctx->min_y = cy;
            						}
HXDLIN(1147)						ctx->started = true;
            					}
HXDLIN(1147)					{
HXLINE(1147)						bool _hx_tmp8;
HXDLIN(1147)						if ((cx11 <= ctx->max_x)) {
HXLINE(1147)							_hx_tmp8 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp8 = true;
            						}
HXDLIN(1147)						if (_hx_tmp8) {
HXLINE(1147)							ctx->max_x = cx11;
            						}
HXDLIN(1147)						bool _hx_tmp9;
HXDLIN(1147)						if ((cy11 <= ctx->max_y)) {
HXLINE(1147)							_hx_tmp9 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp9 = true;
            						}
HXDLIN(1147)						if (_hx_tmp9) {
HXLINE(1147)							ctx->max_y = cy11;
            						}
HXDLIN(1147)						bool _hx_tmp10;
HXDLIN(1147)						if ((cx11 >= ctx->min_x)) {
HXLINE(1147)							_hx_tmp10 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp10 = true;
            						}
HXDLIN(1147)						if (_hx_tmp10) {
HXLINE(1147)							ctx->min_x = cx11;
            						}
HXDLIN(1147)						bool _hx_tmp11;
HXDLIN(1147)						if ((cy11 >= ctx->min_y)) {
HXLINE(1147)							_hx_tmp11 = !(ctx->started);
            						}
            						else {
HXLINE(1147)							_hx_tmp11 = true;
            						}
HXDLIN(1147)						if (_hx_tmp11) {
HXLINE(1147)							ctx->min_y = cy11;
            						}
HXDLIN(1147)						ctx->started = true;
            					}
            				}
            			}
            			else {
HXLINE(1147)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) ),4,x,y,cx,cy);
HXDLIN(1147)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cx1 = cx11;
HXDLIN(1147)				( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(ctx->pvertices,ctx->num_vertices)) )->cy1 = cy11;
            			}
HXDLIN(1147)			ctx->num_vertices++;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(StbTruetype_obj,stbtt__csctx_rccurve_to,(void))

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__get_subr( ::kha::graphics2::truetype::Stbtt__buf idx,int n){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1151_stbtt__get_subr)
HXLINE(1152)		{
HXLINE(1152)			if ((0 > idx->data->get_length())) {
HXLINE(1152)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN(1152)			int _hx_tmp;
HXDLIN(1152)			if ((0 > idx->data->get_length())) {
HXLINE(1152)				_hx_tmp = idx->data->get_length();
            			}
            			else {
HXLINE(1152)				_hx_tmp = 0;
            			}
HXDLIN(1152)			idx->cursor = _hx_tmp;
            		}
HXDLIN(1152)		int v = 0;
HXDLIN(1152)		{
HXLINE(1152)			int _g = 0;
HXDLIN(1152)			int _g1 = 2;
HXDLIN(1152)			while((_g < _g1)){
HXLINE(1152)				_g = (_g + 1);
HXDLIN(1152)				int i = (_g - 1);
HXDLIN(1152)				int v1;
HXDLIN(1152)				int idx1 = idx->cursor;
HXDLIN(1152)				if ((idx1 >= idx->data->get_length())) {
HXLINE(1152)					v1 = 0;
            				}
            				else {
HXLINE(1152)					v1 = idx->data->readU8(idx->cursor++);
            				}
HXDLIN(1152)				v = ((v << 8) | v1);
            			}
            		}
HXDLIN(1152)		int count = v;
HXLINE(1153)		int bias = 107;
HXLINE(1154)		if ((count >= 33900)) {
HXLINE(1155)			bias = 32768;
            		}
            		else {
HXLINE(1156)			if ((count >= 1240)) {
HXLINE(1157)				bias = 1131;
            			}
            		}
HXLINE(1158)		n = (n + bias);
HXLINE(1159)		bool _hx_tmp1;
HXDLIN(1159)		if ((n >= 0)) {
HXLINE(1159)			_hx_tmp1 = (n >= count);
            		}
            		else {
HXLINE(1159)			_hx_tmp1 = true;
            		}
HXDLIN(1159)		if (_hx_tmp1) {
HXLINE(1160)			 ::kha::internal::BytesBlob p = null();
HXDLIN(1160)			 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1160)			r->_hx_set_data(HX_CTX, p);
HXDLIN(1160)			r->cursor = 0;
HXDLIN(1160)			return r;
            		}
HXLINE(1161)		{
HXLINE(1161)			if ((0 > idx->data->get_length())) {
HXLINE(1161)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN(1161)			int _hx_tmp2;
HXDLIN(1161)			if ((0 > idx->data->get_length())) {
HXLINE(1161)				_hx_tmp2 = idx->data->get_length();
            			}
            			else {
HXLINE(1161)				_hx_tmp2 = 0;
            			}
HXDLIN(1161)			idx->cursor = _hx_tmp2;
            		}
HXDLIN(1161)		int v2 = 0;
HXDLIN(1161)		{
HXLINE(1161)			int _g2 = 0;
HXDLIN(1161)			int _g11 = 2;
HXDLIN(1161)			while((_g2 < _g11)){
HXLINE(1161)				_g2 = (_g2 + 1);
HXDLIN(1161)				int i1 = (_g2 - 1);
HXDLIN(1161)				int v3;
HXDLIN(1161)				int idx2 = idx->cursor;
HXDLIN(1161)				if ((idx2 >= idx->data->get_length())) {
HXLINE(1161)					v3 = 0;
            				}
            				else {
HXLINE(1161)					v3 = idx->data->readU8(idx->cursor++);
            				}
HXDLIN(1161)				v2 = ((v2 << 8) | v3);
            			}
            		}
HXDLIN(1161)		int count1 = v2;
HXDLIN(1161)		int offsize;
HXDLIN(1161)		int idx3 = idx->cursor;
HXDLIN(1161)		if ((idx3 >= idx->data->get_length())) {
HXLINE(1161)			offsize = 0;
            		}
            		else {
HXLINE(1161)			offsize = idx->data->readU8(idx->cursor++);
            		}
HXDLIN(1161)		bool _hx_tmp3;
HXDLIN(1161)		if ((n >= 0)) {
HXLINE(1161)			_hx_tmp3 = (n < count1);
            		}
            		else {
HXLINE(1161)			_hx_tmp3 = false;
            		}
HXDLIN(1161)		if (!(_hx_tmp3)) {
HXLINE(1161)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1161)		bool _hx_tmp4;
HXDLIN(1161)		if ((offsize >= 1)) {
HXLINE(1161)			_hx_tmp4 = (offsize <= 4);
            		}
            		else {
HXLINE(1161)			_hx_tmp4 = false;
            		}
HXDLIN(1161)		if (!(_hx_tmp4)) {
HXLINE(1161)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1161)		{
HXLINE(1161)			int o = (idx->cursor + (n * offsize));
HXDLIN(1161)			{
HXLINE(1161)				bool value;
HXDLIN(1161)				if ((o <= idx->data->get_length())) {
HXLINE(1161)					value = (o < 0);
            				}
            				else {
HXLINE(1161)					value = true;
            				}
HXDLIN(1161)				if (!(!(value))) {
HXLINE(1161)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            			}
HXDLIN(1161)			int _hx_tmp5;
HXDLIN(1161)			bool _hx_tmp6;
HXDLIN(1161)			if ((o <= idx->data->get_length())) {
HXLINE(1161)				_hx_tmp6 = (o < 0);
            			}
            			else {
HXLINE(1161)				_hx_tmp6 = true;
            			}
HXDLIN(1161)			if (_hx_tmp6) {
HXLINE(1161)				_hx_tmp5 = idx->data->get_length();
            			}
            			else {
HXLINE(1161)				_hx_tmp5 = o;
            			}
HXDLIN(1161)			idx->cursor = _hx_tmp5;
            		}
HXDLIN(1161)		int v4 = 0;
HXDLIN(1161)		bool _hx_tmp7;
HXDLIN(1161)		if ((offsize >= 1)) {
HXLINE(1161)			_hx_tmp7 = (offsize <= 4);
            		}
            		else {
HXLINE(1161)			_hx_tmp7 = false;
            		}
HXDLIN(1161)		if (!(_hx_tmp7)) {
HXLINE(1161)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1161)		{
HXLINE(1161)			int _g3 = 0;
HXDLIN(1161)			int _g12 = offsize;
HXDLIN(1161)			while((_g3 < _g12)){
HXLINE(1161)				_g3 = (_g3 + 1);
HXDLIN(1161)				int i2 = (_g3 - 1);
HXDLIN(1161)				int v5;
HXDLIN(1161)				int idx4 = idx->cursor;
HXDLIN(1161)				if ((idx4 >= idx->data->get_length())) {
HXLINE(1161)					v5 = 0;
            				}
            				else {
HXLINE(1161)					v5 = idx->data->readU8(idx->cursor++);
            				}
HXDLIN(1161)				v4 = ((v4 << 8) | v5);
            			}
            		}
HXDLIN(1161)		int start = v4;
HXDLIN(1161)		int v6 = 0;
HXDLIN(1161)		bool _hx_tmp8;
HXDLIN(1161)		if ((offsize >= 1)) {
HXLINE(1161)			_hx_tmp8 = (offsize <= 4);
            		}
            		else {
HXLINE(1161)			_hx_tmp8 = false;
            		}
HXDLIN(1161)		if (!(_hx_tmp8)) {
HXLINE(1161)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1161)		{
HXLINE(1161)			int _g4 = 0;
HXDLIN(1161)			int _g13 = offsize;
HXDLIN(1161)			while((_g4 < _g13)){
HXLINE(1161)				_g4 = (_g4 + 1);
HXDLIN(1161)				int i3 = (_g4 - 1);
HXDLIN(1161)				int v7;
HXDLIN(1161)				int idx5 = idx->cursor;
HXDLIN(1161)				if ((idx5 >= idx->data->get_length())) {
HXLINE(1161)					v7 = 0;
            				}
            				else {
HXLINE(1161)					v7 = idx->data->readU8(idx->cursor++);
            				}
HXDLIN(1161)				v6 = ((v6 << 8) | v7);
            			}
            		}
HXDLIN(1161)		int end = v6;
HXDLIN(1161)		int o1 = ((2 + ((count1 + 1) * offsize)) + start);
HXDLIN(1161)		int s = (end - start);
HXDLIN(1161)		 ::kha::internal::BytesBlob p1 = null();
HXDLIN(1161)		 ::kha::graphics2::truetype::Stbtt__buf r1 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1161)		r1->_hx_set_data(HX_CTX, p1);
HXDLIN(1161)		r1->cursor = 0;
HXDLIN(1161)		 ::kha::graphics2::truetype::Stbtt__buf r2 = r1;
HXDLIN(1161)		bool _hx_tmp9;
HXDLIN(1161)		bool _hx_tmp10;
HXDLIN(1161)		bool _hx_tmp11;
HXDLIN(1161)		if ((o1 >= 0)) {
HXLINE(1161)			_hx_tmp11 = (s < 0);
            		}
            		else {
HXLINE(1161)			_hx_tmp11 = true;
            		}
HXDLIN(1161)		if (!(_hx_tmp11)) {
HXLINE(1161)			_hx_tmp10 = (o1 > idx->data->get_length());
            		}
            		else {
HXLINE(1161)			_hx_tmp10 = true;
            		}
HXDLIN(1161)		if (!(_hx_tmp10)) {
HXLINE(1161)			_hx_tmp9 = (s > (idx->data->get_length() - o1));
            		}
            		else {
HXLINE(1161)			_hx_tmp9 = true;
            		}
HXDLIN(1161)		if (_hx_tmp9) {
HXLINE(1161)			return r2;
            		}
            		else {
HXLINE(1161)			r2->_hx_set_data(HX_CTX, idx->data->sub(o1,s));
HXDLIN(1161)			return r2;
            		}
HXDLIN(1161)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__get_subr,return )

 ::kha::graphics2::truetype::Stbtt__buf StbTruetype_obj::stbtt__cid_get_glyph_subrs( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1164_stbtt__cid_get_glyph_subrs)
HXLINE(1165)		 ::kha::graphics2::truetype::Stbtt__buf fdselect = info->fdselect;
HXLINE(1166)		int nranges;
HXDLIN(1166)		int start;
HXDLIN(1166)		int end;
HXDLIN(1166)		int v;
HXDLIN(1166)		int fmt;
HXDLIN(1166)		int fdselector = -1;
HXDLIN(1166)		 ::Dynamic i;
HXLINE(1168)		{
HXLINE(1168)			if ((0 > fdselect->data->get_length())) {
HXLINE(1168)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN(1168)			int _hx_tmp;
HXDLIN(1168)			if ((0 > fdselect->data->get_length())) {
HXLINE(1168)				_hx_tmp = fdselect->data->get_length();
            			}
            			else {
HXLINE(1168)				_hx_tmp = 0;
            			}
HXDLIN(1168)			fdselect->cursor = _hx_tmp;
            		}
HXLINE(1169)		int fdselect1 = fdselect->cursor;
HXDLIN(1169)		if ((fdselect1 >= fdselect->data->get_length())) {
HXLINE(1169)			fmt = 0;
            		}
            		else {
HXLINE(1169)			fmt = fdselect->data->readU8(fdselect->cursor++);
            		}
HXLINE(1170)		if ((fmt == 0)) {
HXLINE(1172)			{
HXLINE(1172)				int o = (fdselect->cursor + glyph_index);
HXDLIN(1172)				{
HXLINE(1172)					bool value;
HXDLIN(1172)					if ((o <= fdselect->data->get_length())) {
HXLINE(1172)						value = (o < 0);
            					}
            					else {
HXLINE(1172)						value = true;
            					}
HXDLIN(1172)					if (!(!(value))) {
HXLINE(1172)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
HXDLIN(1172)				int _hx_tmp1;
HXDLIN(1172)				bool _hx_tmp2;
HXDLIN(1172)				if ((o <= fdselect->data->get_length())) {
HXLINE(1172)					_hx_tmp2 = (o < 0);
            				}
            				else {
HXLINE(1172)					_hx_tmp2 = true;
            				}
HXDLIN(1172)				if (_hx_tmp2) {
HXLINE(1172)					_hx_tmp1 = fdselect->data->get_length();
            				}
            				else {
HXLINE(1172)					_hx_tmp1 = o;
            				}
HXDLIN(1172)				fdselect->cursor = _hx_tmp1;
            			}
HXLINE(1173)			int fdselect2 = fdselect->cursor;
HXDLIN(1173)			if ((fdselect2 >= fdselect->data->get_length())) {
HXLINE(1173)				fdselector = 0;
            			}
            			else {
HXLINE(1173)				fdselector = fdselect->data->readU8(fdselect->cursor++);
            			}
            		}
            		else {
HXLINE(1174)			if ((fmt == 3)) {
HXLINE(1175)				int v1 = 0;
HXDLIN(1175)				{
HXLINE(1175)					int _g = 0;
HXDLIN(1175)					int _g1 = 2;
HXDLIN(1175)					while((_g < _g1)){
HXLINE(1175)						_g = (_g + 1);
HXDLIN(1175)						int i1 = (_g - 1);
HXDLIN(1175)						int v2;
HXDLIN(1175)						int fdselect3 = fdselect->cursor;
HXDLIN(1175)						if ((fdselect3 >= fdselect->data->get_length())) {
HXLINE(1175)							v2 = 0;
            						}
            						else {
HXLINE(1175)							v2 = fdselect->data->readU8(fdselect->cursor++);
            						}
HXDLIN(1175)						v1 = ((v1 << 8) | v2);
            					}
            				}
HXDLIN(1175)				nranges = v1;
HXLINE(1176)				int v3 = 0;
HXDLIN(1176)				{
HXLINE(1176)					int _g2 = 0;
HXDLIN(1176)					int _g11 = 2;
HXDLIN(1176)					while((_g2 < _g11)){
HXLINE(1176)						_g2 = (_g2 + 1);
HXDLIN(1176)						int i2 = (_g2 - 1);
HXDLIN(1176)						int v4;
HXDLIN(1176)						int fdselect4 = fdselect->cursor;
HXDLIN(1176)						if ((fdselect4 >= fdselect->data->get_length())) {
HXLINE(1176)							v4 = 0;
            						}
            						else {
HXLINE(1176)							v4 = fdselect->data->readU8(fdselect->cursor++);
            						}
HXDLIN(1176)						v3 = ((v3 << 8) | v4);
            					}
            				}
HXDLIN(1176)				start = v3;
HXLINE(1177)				{
HXLINE(1177)					int _g3 = 0;
HXDLIN(1177)					int _g12 = nranges;
HXDLIN(1177)					while((_g3 < _g12)){
HXLINE(1177)						_g3 = (_g3 + 1);
HXDLIN(1177)						int i3 = (_g3 - 1);
HXLINE(1178)						int fdselect5 = fdselect->cursor;
HXDLIN(1178)						if ((fdselect5 >= fdselect->data->get_length())) {
HXLINE(1178)							v = 0;
            						}
            						else {
HXLINE(1178)							v = fdselect->data->readU8(fdselect->cursor++);
            						}
HXLINE(1179)						int v5 = 0;
HXDLIN(1179)						{
HXLINE(1179)							int _g4 = 0;
HXDLIN(1179)							int _g13 = 2;
HXDLIN(1179)							while((_g4 < _g13)){
HXLINE(1179)								_g4 = (_g4 + 1);
HXDLIN(1179)								int i4 = (_g4 - 1);
HXDLIN(1179)								int v6;
HXDLIN(1179)								int fdselect6 = fdselect->cursor;
HXDLIN(1179)								if ((fdselect6 >= fdselect->data->get_length())) {
HXLINE(1179)									v6 = 0;
            								}
            								else {
HXLINE(1179)									v6 = fdselect->data->readU8(fdselect->cursor++);
            								}
HXDLIN(1179)								v5 = ((v5 << 8) | v6);
            							}
            						}
HXDLIN(1179)						end = v5;
HXLINE(1180)						bool _hx_tmp3;
HXDLIN(1180)						if ((glyph_index >= start)) {
HXLINE(1180)							_hx_tmp3 = (glyph_index < end);
            						}
            						else {
HXLINE(1180)							_hx_tmp3 = false;
            						}
HXDLIN(1180)						if (_hx_tmp3) {
HXLINE(1181)							fdselector = v;
HXLINE(1182)							goto _hx_goto_188;
            						}
HXLINE(1184)						start = end;
            					}
            					_hx_goto_188:;
            				}
            			}
            		}
HXLINE(1187)		if ((fdselector == -1)) {
HXLINE(1187)			 ::kha::internal::BytesBlob p = null();
HXDLIN(1187)			 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1187)			r->_hx_set_data(HX_CTX, p);
HXDLIN(1187)			r->cursor = 0;
            		}
HXLINE(1188)		 ::kha::graphics2::truetype::Stbtt__buf cff = info->cff;
HXDLIN(1188)		 ::kha::graphics2::truetype::Stbtt__buf b = info->fontdicts;
HXDLIN(1188)		{
HXLINE(1188)			if ((0 > b->data->get_length())) {
HXLINE(1188)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN(1188)			int _hx_tmp4;
HXDLIN(1188)			if ((0 > b->data->get_length())) {
HXLINE(1188)				_hx_tmp4 = b->data->get_length();
            			}
            			else {
HXLINE(1188)				_hx_tmp4 = 0;
            			}
HXDLIN(1188)			b->cursor = _hx_tmp4;
            		}
HXDLIN(1188)		int v7 = 0;
HXDLIN(1188)		{
HXLINE(1188)			int _g5 = 0;
HXDLIN(1188)			int _g14 = 2;
HXDLIN(1188)			while((_g5 < _g14)){
HXLINE(1188)				_g5 = (_g5 + 1);
HXDLIN(1188)				int i5 = (_g5 - 1);
HXDLIN(1188)				int v8;
HXDLIN(1188)				int b1 = b->cursor;
HXDLIN(1188)				if ((b1 >= b->data->get_length())) {
HXLINE(1188)					v8 = 0;
            				}
            				else {
HXLINE(1188)					v8 = b->data->readU8(b->cursor++);
            				}
HXDLIN(1188)				v7 = ((v7 << 8) | v8);
            			}
            		}
HXDLIN(1188)		int count = v7;
HXDLIN(1188)		int offsize;
HXDLIN(1188)		int b2 = b->cursor;
HXDLIN(1188)		if ((b2 >= b->data->get_length())) {
HXLINE(1188)			offsize = 0;
            		}
            		else {
HXLINE(1188)			offsize = b->data->readU8(b->cursor++);
            		}
HXDLIN(1188)		bool _hx_tmp5;
HXDLIN(1188)		if ((fdselector >= 0)) {
HXLINE(1188)			_hx_tmp5 = (fdselector < count);
            		}
            		else {
HXLINE(1188)			_hx_tmp5 = false;
            		}
HXDLIN(1188)		if (!(_hx_tmp5)) {
HXLINE(1188)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1188)		bool _hx_tmp6;
HXDLIN(1188)		if ((offsize >= 1)) {
HXLINE(1188)			_hx_tmp6 = (offsize <= 4);
            		}
            		else {
HXLINE(1188)			_hx_tmp6 = false;
            		}
HXDLIN(1188)		if (!(_hx_tmp6)) {
HXLINE(1188)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1188)		{
HXLINE(1188)			int o1 = (b->cursor + (fdselector * offsize));
HXDLIN(1188)			{
HXLINE(1188)				bool value1;
HXDLIN(1188)				if ((o1 <= b->data->get_length())) {
HXLINE(1188)					value1 = (o1 < 0);
            				}
            				else {
HXLINE(1188)					value1 = true;
            				}
HXDLIN(1188)				if (!(!(value1))) {
HXLINE(1188)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            			}
HXDLIN(1188)			int _hx_tmp7;
HXDLIN(1188)			bool _hx_tmp8;
HXDLIN(1188)			if ((o1 <= b->data->get_length())) {
HXLINE(1188)				_hx_tmp8 = (o1 < 0);
            			}
            			else {
HXLINE(1188)				_hx_tmp8 = true;
            			}
HXDLIN(1188)			if (_hx_tmp8) {
HXLINE(1188)				_hx_tmp7 = b->data->get_length();
            			}
            			else {
HXLINE(1188)				_hx_tmp7 = o1;
            			}
HXDLIN(1188)			b->cursor = _hx_tmp7;
            		}
HXDLIN(1188)		int v9 = 0;
HXDLIN(1188)		bool _hx_tmp9;
HXDLIN(1188)		if ((offsize >= 1)) {
HXLINE(1188)			_hx_tmp9 = (offsize <= 4);
            		}
            		else {
HXLINE(1188)			_hx_tmp9 = false;
            		}
HXDLIN(1188)		if (!(_hx_tmp9)) {
HXLINE(1188)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1188)		{
HXLINE(1188)			int _g6 = 0;
HXDLIN(1188)			int _g15 = offsize;
HXDLIN(1188)			while((_g6 < _g15)){
HXLINE(1188)				_g6 = (_g6 + 1);
HXDLIN(1188)				int i6 = (_g6 - 1);
HXDLIN(1188)				int v10;
HXDLIN(1188)				int b3 = b->cursor;
HXDLIN(1188)				if ((b3 >= b->data->get_length())) {
HXLINE(1188)					v10 = 0;
            				}
            				else {
HXLINE(1188)					v10 = b->data->readU8(b->cursor++);
            				}
HXDLIN(1188)				v9 = ((v9 << 8) | v10);
            			}
            		}
HXDLIN(1188)		int start1 = v9;
HXDLIN(1188)		int v11 = 0;
HXDLIN(1188)		bool _hx_tmp10;
HXDLIN(1188)		if ((offsize >= 1)) {
HXLINE(1188)			_hx_tmp10 = (offsize <= 4);
            		}
            		else {
HXLINE(1188)			_hx_tmp10 = false;
            		}
HXDLIN(1188)		if (!(_hx_tmp10)) {
HXLINE(1188)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1188)		{
HXLINE(1188)			int _g7 = 0;
HXDLIN(1188)			int _g16 = offsize;
HXDLIN(1188)			while((_g7 < _g16)){
HXLINE(1188)				_g7 = (_g7 + 1);
HXDLIN(1188)				int i7 = (_g7 - 1);
HXDLIN(1188)				int v12;
HXDLIN(1188)				int b4 = b->cursor;
HXDLIN(1188)				if ((b4 >= b->data->get_length())) {
HXLINE(1188)					v12 = 0;
            				}
            				else {
HXLINE(1188)					v12 = b->data->readU8(b->cursor++);
            				}
HXDLIN(1188)				v11 = ((v11 << 8) | v12);
            			}
            		}
HXDLIN(1188)		int end1 = v11;
HXDLIN(1188)		int o2 = ((2 + ((count + 1) * offsize)) + start1);
HXDLIN(1188)		int s = (end1 - start1);
HXDLIN(1188)		 ::kha::internal::BytesBlob p1 = null();
HXDLIN(1188)		 ::kha::graphics2::truetype::Stbtt__buf r1 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)		r1->_hx_set_data(HX_CTX, p1);
HXDLIN(1188)		r1->cursor = 0;
HXDLIN(1188)		 ::kha::graphics2::truetype::Stbtt__buf r2 = r1;
HXDLIN(1188)		 ::kha::graphics2::truetype::Stbtt__buf fontdict;
HXDLIN(1188)		bool fontdict1;
HXDLIN(1188)		bool fontdict2;
HXDLIN(1188)		bool fontdict3;
HXDLIN(1188)		if ((o2 >= 0)) {
HXLINE(1188)			fontdict3 = (s < 0);
            		}
            		else {
HXLINE(1188)			fontdict3 = true;
            		}
HXDLIN(1188)		if (!(fontdict3)) {
HXLINE(1188)			fontdict2 = (o2 > b->data->get_length());
            		}
            		else {
HXLINE(1188)			fontdict2 = true;
            		}
HXDLIN(1188)		if (!(fontdict2)) {
HXLINE(1188)			fontdict1 = (s > (b->data->get_length() - o2));
            		}
            		else {
HXLINE(1188)			fontdict1 = true;
            		}
HXDLIN(1188)		if (fontdict1) {
HXLINE(1188)			fontdict = r2;
            		}
            		else {
HXLINE(1188)			r2->_hx_set_data(HX_CTX, b->data->sub(o2,s));
HXDLIN(1188)			fontdict = r2;
            		}
HXDLIN(1188)		::Array< int > subrsoff = ::Array_obj< int >::fromData( _hx_array_data_79db9614_212,1);
HXDLIN(1188)		::Array< int > private_loc = ::Array_obj< int >::fromData( _hx_array_data_79db9614_213,2);
HXDLIN(1188)		{
HXLINE(1188)			int i8 = 0;
HXDLIN(1188)			{
HXLINE(1188)				if ((0 > fontdict->data->get_length())) {
HXLINE(1188)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXDLIN(1188)				int _hx_tmp11;
HXDLIN(1188)				if ((0 > fontdict->data->get_length())) {
HXLINE(1188)					_hx_tmp11 = fontdict->data->get_length();
            				}
            				else {
HXLINE(1188)					_hx_tmp11 = 0;
            				}
HXDLIN(1188)				fontdict->cursor = _hx_tmp11;
            			}
HXDLIN(1188)			 ::kha::graphics2::truetype::Stbtt__buf ret = null();
HXDLIN(1188)			while(true){
HXLINE(1188)				int fontdict4 = fontdict->cursor;
HXDLIN(1188)				if (!((fontdict4 < fontdict->data->get_length()))) {
HXLINE(1188)					goto _hx_goto_193;
            				}
HXDLIN(1188)				int start2 = fontdict->cursor;
HXDLIN(1188)				int op;
HXDLIN(1188)				while(true){
HXLINE(1188)					int _hx_tmp12;
HXDLIN(1188)					int fontdict5 = fontdict->cursor;
HXDLIN(1188)					if ((fontdict5 >= fontdict->data->get_length())) {
HXLINE(1188)						_hx_tmp12 = 0;
            					}
            					else {
HXLINE(1188)						_hx_tmp12 = fontdict->data->readU8(fontdict->cursor);
            					}
HXDLIN(1188)					if (!((_hx_tmp12 >= 28))) {
HXLINE(1188)						goto _hx_goto_194;
            					}
HXDLIN(1188)					int v13;
HXDLIN(1188)					int b0;
HXDLIN(1188)					int fontdict6 = fontdict->cursor;
HXDLIN(1188)					if ((fontdict6 >= fontdict->data->get_length())) {
HXLINE(1188)						b0 = 0;
            					}
            					else {
HXLINE(1188)						b0 = fontdict->data->readU8(fontdict->cursor);
            					}
HXDLIN(1188)					if ((b0 < 28)) {
HXLINE(1188)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN(1188)					if ((b0 == 30)) {
HXLINE(1188)						{
HXLINE(1188)							int o3 = (fontdict->cursor + 1);
HXDLIN(1188)							{
HXLINE(1188)								bool value2;
HXDLIN(1188)								if ((o3 <= fontdict->data->get_length())) {
HXLINE(1188)									value2 = (o3 < 0);
            								}
            								else {
HXLINE(1188)									value2 = true;
            								}
HXDLIN(1188)								if (!(!(value2))) {
HXLINE(1188)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN(1188)							int _hx_tmp13;
HXDLIN(1188)							bool _hx_tmp14;
HXDLIN(1188)							if ((o3 <= fontdict->data->get_length())) {
HXLINE(1188)								_hx_tmp14 = (o3 < 0);
            							}
            							else {
HXLINE(1188)								_hx_tmp14 = true;
            							}
HXDLIN(1188)							if (_hx_tmp14) {
HXLINE(1188)								_hx_tmp13 = fontdict->data->get_length();
            							}
            							else {
HXLINE(1188)								_hx_tmp13 = o3;
            							}
HXDLIN(1188)							fontdict->cursor = _hx_tmp13;
            						}
HXDLIN(1188)						while(true){
HXLINE(1188)							int fontdict7 = fontdict->cursor;
HXDLIN(1188)							if (!((fontdict7 < fontdict->data->get_length()))) {
HXLINE(1188)								goto _hx_goto_195;
            							}
HXDLIN(1188)							int fontdict8 = fontdict->cursor;
HXDLIN(1188)							if ((fontdict8 >= fontdict->data->get_length())) {
HXLINE(1188)								v13 = 0;
            							}
            							else {
HXLINE(1188)								v13 = fontdict->data->readU8(fontdict->cursor++);
            							}
HXDLIN(1188)							bool _hx_tmp15;
HXDLIN(1188)							if (((v13 & 15) != 15)) {
HXLINE(1188)								_hx_tmp15 = ((v13 >> 4) == 15);
            							}
            							else {
HXLINE(1188)								_hx_tmp15 = true;
            							}
HXDLIN(1188)							if (_hx_tmp15) {
HXLINE(1188)								goto _hx_goto_195;
            							}
            						}
            						_hx_goto_195:;
            					}
            					else {
HXLINE(1188)						int b01;
HXDLIN(1188)						int fontdict9 = fontdict->cursor;
HXDLIN(1188)						if ((fontdict9 >= fontdict->data->get_length())) {
HXLINE(1188)							b01 = 0;
            						}
            						else {
HXLINE(1188)							b01 = fontdict->data->readU8(fontdict->cursor++);
            						}
HXDLIN(1188)						bool _hx_tmp16;
HXDLIN(1188)						if ((b01 >= 32)) {
HXLINE(1188)							_hx_tmp16 = (b01 <= 246);
            						}
            						else {
HXLINE(1188)							_hx_tmp16 = false;
            						}
HXDLIN(1188)						if (!(_hx_tmp16)) {
HXLINE(1188)							bool _hx_tmp17;
HXDLIN(1188)							if ((b01 >= 247)) {
HXLINE(1188)								_hx_tmp17 = (b01 <= 250);
            							}
            							else {
HXLINE(1188)								_hx_tmp17 = false;
            							}
HXDLIN(1188)							if (_hx_tmp17) {
HXLINE(1188)								int fontdict10 = fontdict->cursor;
HXDLIN(1188)								if ((fontdict10 < fontdict->data->get_length())) {
HXLINE(1188)									fontdict->data->readU8(fontdict->cursor++);
            								}
            							}
            							else {
HXLINE(1188)								bool _hx_tmp18;
HXDLIN(1188)								if ((b01 >= 251)) {
HXLINE(1188)									_hx_tmp18 = (b01 <= 254);
            								}
            								else {
HXLINE(1188)									_hx_tmp18 = false;
            								}
HXDLIN(1188)								if (_hx_tmp18) {
HXLINE(1188)									int fontdict11 = fontdict->cursor;
HXDLIN(1188)									if ((fontdict11 < fontdict->data->get_length())) {
HXLINE(1188)										fontdict->data->readU8(fontdict->cursor++);
            									}
            								}
            								else {
HXLINE(1188)									if ((b01 == 28)) {
HXLINE(1188)										int v14 = 0;
HXDLIN(1188)										{
HXLINE(1188)											int _g8 = 0;
HXDLIN(1188)											int _g17 = 2;
HXDLIN(1188)											while((_g8 < _g17)){
HXLINE(1188)												_g8 = (_g8 + 1);
HXDLIN(1188)												int i9 = (_g8 - 1);
HXDLIN(1188)												int v15;
HXDLIN(1188)												int fontdict12 = fontdict->cursor;
HXDLIN(1188)												if ((fontdict12 >= fontdict->data->get_length())) {
HXLINE(1188)													v15 = 0;
            												}
            												else {
HXLINE(1188)													v15 = fontdict->data->readU8(fontdict->cursor++);
            												}
HXDLIN(1188)												v14 = ((v14 << 8) | v15);
            											}
            										}
            									}
            									else {
HXLINE(1188)										if ((b01 == 29)) {
HXLINE(1188)											int v16 = 0;
HXDLIN(1188)											{
HXLINE(1188)												int _g9 = 0;
HXDLIN(1188)												int _g18 = 4;
HXDLIN(1188)												while((_g9 < _g18)){
HXLINE(1188)													_g9 = (_g9 + 1);
HXDLIN(1188)													int i10 = (_g9 - 1);
HXDLIN(1188)													int v17;
HXDLIN(1188)													int fontdict13 = fontdict->cursor;
HXDLIN(1188)													if ((fontdict13 >= fontdict->data->get_length())) {
HXLINE(1188)														v17 = 0;
            													}
            													else {
HXLINE(1188)														v17 = fontdict->data->readU8(fontdict->cursor++);
            													}
HXDLIN(1188)													v16 = ((v16 << 8) | v17);
            												}
            											}
            										}
            										else {
HXLINE(1188)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            				_hx_goto_194:;
HXDLIN(1188)				int end2 = fontdict->cursor;
HXDLIN(1188)				int fontdict14 = fontdict->cursor;
HXDLIN(1188)				if ((fontdict14 >= fontdict->data->get_length())) {
HXLINE(1188)					op = 0;
            				}
            				else {
HXLINE(1188)					op = fontdict->data->readU8(fontdict->cursor++);
            				}
HXDLIN(1188)				if ((op == 12)) {
HXLINE(1188)					int op1;
HXDLIN(1188)					int fontdict15 = fontdict->cursor;
HXDLIN(1188)					if ((fontdict15 >= fontdict->data->get_length())) {
HXLINE(1188)						op1 = 0;
            					}
            					else {
HXLINE(1188)						op1 = fontdict->data->readU8(fontdict->cursor++);
            					}
HXDLIN(1188)					op = (op1 | 256);
            				}
HXDLIN(1188)				if ((op == 18)) {
HXLINE(1188)					int s1 = (end2 - start2);
HXDLIN(1188)					 ::kha::internal::BytesBlob p2 = null();
HXDLIN(1188)					 ::kha::graphics2::truetype::Stbtt__buf r3 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)					r3->_hx_set_data(HX_CTX, p2);
HXDLIN(1188)					r3->cursor = 0;
HXDLIN(1188)					 ::kha::graphics2::truetype::Stbtt__buf r4 = r3;
HXDLIN(1188)					bool ret1;
HXDLIN(1188)					bool ret2;
HXDLIN(1188)					bool ret3;
HXDLIN(1188)					if ((start2 >= 0)) {
HXLINE(1188)						ret3 = (s1 < 0);
            					}
            					else {
HXLINE(1188)						ret3 = true;
            					}
HXDLIN(1188)					if (!(ret3)) {
HXLINE(1188)						ret2 = (start2 > fontdict->data->get_length());
            					}
            					else {
HXLINE(1188)						ret2 = true;
            					}
HXDLIN(1188)					if (!(ret2)) {
HXLINE(1188)						ret1 = (s1 > (fontdict->data->get_length() - start2));
            					}
            					else {
HXLINE(1188)						ret1 = true;
            					}
HXDLIN(1188)					if (ret1) {
HXLINE(1188)						ret = r4;
            					}
            					else {
HXLINE(1188)						r4->_hx_set_data(HX_CTX, fontdict->data->sub(start2,s1));
HXDLIN(1188)						ret = r4;
            					}
HXDLIN(1188)					goto _hx_goto_193;
            				}
            			}
            			_hx_goto_193:;
HXDLIN(1188)			 ::kha::graphics2::truetype::Stbtt__buf operands;
HXDLIN(1188)			if (hx::IsNotNull( ret )) {
HXLINE(1188)				operands = ret;
            			}
            			else {
HXLINE(1188)				 ::kha::internal::BytesBlob p3 = null();
HXDLIN(1188)				 ::kha::graphics2::truetype::Stbtt__buf r5 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)				r5->_hx_set_data(HX_CTX, p3);
HXDLIN(1188)				r5->cursor = 0;
HXDLIN(1188)				 ::kha::graphics2::truetype::Stbtt__buf r6 = r5;
HXDLIN(1188)				bool operands1;
HXDLIN(1188)				if ((0 <= fontdict->data->get_length())) {
HXLINE(1188)					operands1 = (0 > fontdict->data->get_length());
            				}
            				else {
HXLINE(1188)					operands1 = true;
            				}
HXDLIN(1188)				if (operands1) {
HXLINE(1188)					operands = r6;
            				}
            				else {
HXLINE(1188)					r6->_hx_set_data(HX_CTX, fontdict->data->sub(0,0));
HXDLIN(1188)					operands = r6;
            				}
            			}
HXDLIN(1188)			while(true){
HXLINE(1188)				bool _hx_tmp19;
HXDLIN(1188)				if ((i8 < 2)) {
HXLINE(1188)					int operands2 = operands->cursor;
HXDLIN(1188)					_hx_tmp19 = (operands2 < operands->data->get_length());
            				}
            				else {
HXLINE(1188)					_hx_tmp19 = false;
            				}
HXDLIN(1188)				if (!(_hx_tmp19)) {
HXLINE(1188)					goto _hx_goto_198;
            				}
HXDLIN(1188)				int b02;
HXDLIN(1188)				int operands3 = operands->cursor;
HXDLIN(1188)				if ((operands3 >= operands->data->get_length())) {
HXLINE(1188)					b02 = 0;
            				}
            				else {
HXLINE(1188)					b02 = operands->data->readU8(operands->cursor++);
            				}
HXDLIN(1188)				int _hx_tmp20;
HXDLIN(1188)				bool _hx_tmp21;
HXDLIN(1188)				if ((b02 >= 32)) {
HXLINE(1188)					_hx_tmp21 = (b02 <= 246);
            				}
            				else {
HXLINE(1188)					_hx_tmp21 = false;
            				}
HXDLIN(1188)				if (_hx_tmp21) {
HXLINE(1188)					_hx_tmp20 = (b02 - 139);
            				}
            				else {
HXLINE(1188)					bool _hx_tmp22;
HXDLIN(1188)					if ((b02 >= 247)) {
HXLINE(1188)						_hx_tmp22 = (b02 <= 250);
            					}
            					else {
HXLINE(1188)						_hx_tmp22 = false;
            					}
HXDLIN(1188)					if (_hx_tmp22) {
HXLINE(1188)						int _hx_tmp23;
HXDLIN(1188)						int operands4 = operands->cursor;
HXDLIN(1188)						if ((operands4 >= operands->data->get_length())) {
HXLINE(1188)							_hx_tmp23 = 0;
            						}
            						else {
HXLINE(1188)							_hx_tmp23 = operands->data->readU8(operands->cursor++);
            						}
HXDLIN(1188)						_hx_tmp20 = ((((b02 - 247) * 256) + _hx_tmp23) + 108);
            					}
            					else {
HXLINE(1188)						bool _hx_tmp24;
HXDLIN(1188)						if ((b02 >= 251)) {
HXLINE(1188)							_hx_tmp24 = (b02 <= 254);
            						}
            						else {
HXLINE(1188)							_hx_tmp24 = false;
            						}
HXDLIN(1188)						if (_hx_tmp24) {
HXLINE(1188)							int _hx_tmp25;
HXDLIN(1188)							int operands5 = operands->cursor;
HXDLIN(1188)							if ((operands5 >= operands->data->get_length())) {
HXLINE(1188)								_hx_tmp25 = 0;
            							}
            							else {
HXLINE(1188)								_hx_tmp25 = operands->data->readU8(operands->cursor++);
            							}
HXDLIN(1188)							_hx_tmp20 = (((-((b02 - 251)) * 256) - _hx_tmp25) - 108);
            						}
            						else {
HXLINE(1188)							if ((b02 == 28)) {
HXLINE(1188)								int v18 = 0;
HXDLIN(1188)								{
HXLINE(1188)									int _g10 = 0;
HXDLIN(1188)									int _g19 = 2;
HXDLIN(1188)									while((_g10 < _g19)){
HXLINE(1188)										_g10 = (_g10 + 1);
HXDLIN(1188)										int i11 = (_g10 - 1);
HXDLIN(1188)										int v19;
HXDLIN(1188)										int operands6 = operands->cursor;
HXDLIN(1188)										if ((operands6 >= operands->data->get_length())) {
HXLINE(1188)											v19 = 0;
            										}
            										else {
HXLINE(1188)											v19 = operands->data->readU8(operands->cursor++);
            										}
HXDLIN(1188)										v18 = ((v18 << 8) | v19);
            									}
            								}
HXDLIN(1188)								_hx_tmp20 = v18;
            							}
            							else {
HXLINE(1188)								if ((b02 == 29)) {
HXLINE(1188)									int v20 = 0;
HXDLIN(1188)									{
HXLINE(1188)										int _g20 = 0;
HXDLIN(1188)										int _g110 = 4;
HXDLIN(1188)										while((_g20 < _g110)){
HXLINE(1188)											_g20 = (_g20 + 1);
HXDLIN(1188)											int i12 = (_g20 - 1);
HXDLIN(1188)											int v21;
HXDLIN(1188)											int operands7 = operands->cursor;
HXDLIN(1188)											if ((operands7 >= operands->data->get_length())) {
HXLINE(1188)												v21 = 0;
            											}
            											else {
HXLINE(1188)												v21 = operands->data->readU8(operands->cursor++);
            											}
HXDLIN(1188)											v20 = ((v20 << 8) | v21);
            										}
            									}
HXDLIN(1188)									_hx_tmp20 = v20;
            								}
            								else {
HXLINE(1188)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
            						}
            					}
            				}
HXDLIN(1188)				private_loc[i8] = _hx_tmp20;
HXDLIN(1188)				i8 = (i8 + 1);
            			}
            			_hx_goto_198:;
            		}
HXDLIN(1188)		bool _hx_tmp26;
HXDLIN(1188)		if ((private_loc->__get(1) != 0)) {
HXLINE(1188)			_hx_tmp26 = (private_loc->__get(0) == 0);
            		}
            		else {
HXLINE(1188)			_hx_tmp26 = true;
            		}
HXDLIN(1188)		if (_hx_tmp26) {
HXLINE(1188)			 ::kha::internal::BytesBlob p4 = null();
HXDLIN(1188)			 ::kha::graphics2::truetype::Stbtt__buf r7 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)			r7->_hx_set_data(HX_CTX, p4);
HXDLIN(1188)			r7->cursor = 0;
HXDLIN(1188)			return r7;
            		}
            		else {
HXLINE(1188)			int o4 = private_loc->__get(1);
HXDLIN(1188)			int s2 = private_loc->__get(0);
HXDLIN(1188)			 ::kha::internal::BytesBlob p5 = null();
HXDLIN(1188)			 ::kha::graphics2::truetype::Stbtt__buf r8 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)			r8->_hx_set_data(HX_CTX, p5);
HXDLIN(1188)			r8->cursor = 0;
HXDLIN(1188)			 ::kha::graphics2::truetype::Stbtt__buf r9 = r8;
HXDLIN(1188)			 ::kha::graphics2::truetype::Stbtt__buf pdict;
HXDLIN(1188)			bool pdict1;
HXDLIN(1188)			bool pdict2;
HXDLIN(1188)			bool pdict3;
HXDLIN(1188)			if ((o4 >= 0)) {
HXLINE(1188)				pdict3 = (s2 < 0);
            			}
            			else {
HXLINE(1188)				pdict3 = true;
            			}
HXDLIN(1188)			if (!(pdict3)) {
HXLINE(1188)				pdict2 = (o4 > cff->data->get_length());
            			}
            			else {
HXLINE(1188)				pdict2 = true;
            			}
HXDLIN(1188)			if (!(pdict2)) {
HXLINE(1188)				pdict1 = (s2 > (cff->data->get_length() - o4));
            			}
            			else {
HXLINE(1188)				pdict1 = true;
            			}
HXDLIN(1188)			if (pdict1) {
HXLINE(1188)				pdict = r9;
            			}
            			else {
HXLINE(1188)				r9->_hx_set_data(HX_CTX, cff->data->sub(o4,s2));
HXDLIN(1188)				pdict = r9;
            			}
HXDLIN(1188)			{
HXLINE(1188)				int i13 = 0;
HXDLIN(1188)				{
HXLINE(1188)					if ((0 > pdict->data->get_length())) {
HXLINE(1188)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN(1188)					int _hx_tmp27;
HXDLIN(1188)					if ((0 > pdict->data->get_length())) {
HXLINE(1188)						_hx_tmp27 = pdict->data->get_length();
            					}
            					else {
HXLINE(1188)						_hx_tmp27 = 0;
            					}
HXDLIN(1188)					pdict->cursor = _hx_tmp27;
            				}
HXDLIN(1188)				 ::kha::graphics2::truetype::Stbtt__buf ret4 = null();
HXDLIN(1188)				while(true){
HXLINE(1188)					int pdict4 = pdict->cursor;
HXDLIN(1188)					if (!((pdict4 < pdict->data->get_length()))) {
HXLINE(1188)						goto _hx_goto_201;
            					}
HXDLIN(1188)					int start3 = pdict->cursor;
HXDLIN(1188)					int op2;
HXDLIN(1188)					while(true){
HXLINE(1188)						int _hx_tmp28;
HXDLIN(1188)						int pdict5 = pdict->cursor;
HXDLIN(1188)						if ((pdict5 >= pdict->data->get_length())) {
HXLINE(1188)							_hx_tmp28 = 0;
            						}
            						else {
HXLINE(1188)							_hx_tmp28 = pdict->data->readU8(pdict->cursor);
            						}
HXDLIN(1188)						if (!((_hx_tmp28 >= 28))) {
HXLINE(1188)							goto _hx_goto_202;
            						}
HXDLIN(1188)						int v22;
HXDLIN(1188)						int b03;
HXDLIN(1188)						int pdict6 = pdict->cursor;
HXDLIN(1188)						if ((pdict6 >= pdict->data->get_length())) {
HXLINE(1188)							b03 = 0;
            						}
            						else {
HXLINE(1188)							b03 = pdict->data->readU8(pdict->cursor);
            						}
HXDLIN(1188)						if ((b03 < 28)) {
HXLINE(1188)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1188)						if ((b03 == 30)) {
HXLINE(1188)							{
HXLINE(1188)								int o5 = (pdict->cursor + 1);
HXDLIN(1188)								{
HXLINE(1188)									bool value3;
HXDLIN(1188)									if ((o5 <= pdict->data->get_length())) {
HXLINE(1188)										value3 = (o5 < 0);
            									}
            									else {
HXLINE(1188)										value3 = true;
            									}
HXDLIN(1188)									if (!(!(value3))) {
HXLINE(1188)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
HXDLIN(1188)								int _hx_tmp29;
HXDLIN(1188)								bool _hx_tmp30;
HXDLIN(1188)								if ((o5 <= pdict->data->get_length())) {
HXLINE(1188)									_hx_tmp30 = (o5 < 0);
            								}
            								else {
HXLINE(1188)									_hx_tmp30 = true;
            								}
HXDLIN(1188)								if (_hx_tmp30) {
HXLINE(1188)									_hx_tmp29 = pdict->data->get_length();
            								}
            								else {
HXLINE(1188)									_hx_tmp29 = o5;
            								}
HXDLIN(1188)								pdict->cursor = _hx_tmp29;
            							}
HXDLIN(1188)							while(true){
HXLINE(1188)								int pdict7 = pdict->cursor;
HXDLIN(1188)								if (!((pdict7 < pdict->data->get_length()))) {
HXLINE(1188)									goto _hx_goto_203;
            								}
HXDLIN(1188)								int pdict8 = pdict->cursor;
HXDLIN(1188)								if ((pdict8 >= pdict->data->get_length())) {
HXLINE(1188)									v22 = 0;
            								}
            								else {
HXLINE(1188)									v22 = pdict->data->readU8(pdict->cursor++);
            								}
HXDLIN(1188)								bool _hx_tmp31;
HXDLIN(1188)								if (((v22 & 15) != 15)) {
HXLINE(1188)									_hx_tmp31 = ((v22 >> 4) == 15);
            								}
            								else {
HXLINE(1188)									_hx_tmp31 = true;
            								}
HXDLIN(1188)								if (_hx_tmp31) {
HXLINE(1188)									goto _hx_goto_203;
            								}
            							}
            							_hx_goto_203:;
            						}
            						else {
HXLINE(1188)							int b04;
HXDLIN(1188)							int pdict9 = pdict->cursor;
HXDLIN(1188)							if ((pdict9 >= pdict->data->get_length())) {
HXLINE(1188)								b04 = 0;
            							}
            							else {
HXLINE(1188)								b04 = pdict->data->readU8(pdict->cursor++);
            							}
HXDLIN(1188)							bool _hx_tmp32;
HXDLIN(1188)							if ((b04 >= 32)) {
HXLINE(1188)								_hx_tmp32 = (b04 <= 246);
            							}
            							else {
HXLINE(1188)								_hx_tmp32 = false;
            							}
HXDLIN(1188)							if (!(_hx_tmp32)) {
HXLINE(1188)								bool _hx_tmp33;
HXDLIN(1188)								if ((b04 >= 247)) {
HXLINE(1188)									_hx_tmp33 = (b04 <= 250);
            								}
            								else {
HXLINE(1188)									_hx_tmp33 = false;
            								}
HXDLIN(1188)								if (_hx_tmp33) {
HXLINE(1188)									int pdict10 = pdict->cursor;
HXDLIN(1188)									if ((pdict10 < pdict->data->get_length())) {
HXLINE(1188)										pdict->data->readU8(pdict->cursor++);
            									}
            								}
            								else {
HXLINE(1188)									bool _hx_tmp34;
HXDLIN(1188)									if ((b04 >= 251)) {
HXLINE(1188)										_hx_tmp34 = (b04 <= 254);
            									}
            									else {
HXLINE(1188)										_hx_tmp34 = false;
            									}
HXDLIN(1188)									if (_hx_tmp34) {
HXLINE(1188)										int pdict11 = pdict->cursor;
HXDLIN(1188)										if ((pdict11 < pdict->data->get_length())) {
HXLINE(1188)											pdict->data->readU8(pdict->cursor++);
            										}
            									}
            									else {
HXLINE(1188)										if ((b04 == 28)) {
HXLINE(1188)											int v23 = 0;
HXDLIN(1188)											{
HXLINE(1188)												int _g21 = 0;
HXDLIN(1188)												int _g111 = 2;
HXDLIN(1188)												while((_g21 < _g111)){
HXLINE(1188)													_g21 = (_g21 + 1);
HXDLIN(1188)													int i14 = (_g21 - 1);
HXDLIN(1188)													int v24;
HXDLIN(1188)													int pdict12 = pdict->cursor;
HXDLIN(1188)													if ((pdict12 >= pdict->data->get_length())) {
HXLINE(1188)														v24 = 0;
            													}
            													else {
HXLINE(1188)														v24 = pdict->data->readU8(pdict->cursor++);
            													}
HXDLIN(1188)													v23 = ((v23 << 8) | v24);
            												}
            											}
            										}
            										else {
HXLINE(1188)											if ((b04 == 29)) {
HXLINE(1188)												int v25 = 0;
HXDLIN(1188)												{
HXLINE(1188)													int _g22 = 0;
HXDLIN(1188)													int _g112 = 4;
HXDLIN(1188)													while((_g22 < _g112)){
HXLINE(1188)														_g22 = (_g22 + 1);
HXDLIN(1188)														int i15 = (_g22 - 1);
HXDLIN(1188)														int v26;
HXDLIN(1188)														int pdict13 = pdict->cursor;
HXDLIN(1188)														if ((pdict13 >= pdict->data->get_length())) {
HXLINE(1188)															v26 = 0;
            														}
            														else {
HXLINE(1188)															v26 = pdict->data->readU8(pdict->cursor++);
            														}
HXDLIN(1188)														v25 = ((v25 << 8) | v26);
            													}
            												}
            											}
            											else {
HXLINE(1188)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            					_hx_goto_202:;
HXDLIN(1188)					int end3 = pdict->cursor;
HXDLIN(1188)					int pdict14 = pdict->cursor;
HXDLIN(1188)					if ((pdict14 >= pdict->data->get_length())) {
HXLINE(1188)						op2 = 0;
            					}
            					else {
HXLINE(1188)						op2 = pdict->data->readU8(pdict->cursor++);
            					}
HXDLIN(1188)					if ((op2 == 12)) {
HXLINE(1188)						int op3;
HXDLIN(1188)						int pdict15 = pdict->cursor;
HXDLIN(1188)						if ((pdict15 >= pdict->data->get_length())) {
HXLINE(1188)							op3 = 0;
            						}
            						else {
HXLINE(1188)							op3 = pdict->data->readU8(pdict->cursor++);
            						}
HXDLIN(1188)						op2 = (op3 | 256);
            					}
HXDLIN(1188)					if ((op2 == 19)) {
HXLINE(1188)						int s3 = (end3 - start3);
HXDLIN(1188)						 ::kha::internal::BytesBlob p6 = null();
HXDLIN(1188)						 ::kha::graphics2::truetype::Stbtt__buf r10 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)						r10->_hx_set_data(HX_CTX, p6);
HXDLIN(1188)						r10->cursor = 0;
HXDLIN(1188)						 ::kha::graphics2::truetype::Stbtt__buf r11 = r10;
HXDLIN(1188)						bool ret5;
HXDLIN(1188)						bool ret6;
HXDLIN(1188)						bool ret7;
HXDLIN(1188)						if ((start3 >= 0)) {
HXLINE(1188)							ret7 = (s3 < 0);
            						}
            						else {
HXLINE(1188)							ret7 = true;
            						}
HXDLIN(1188)						if (!(ret7)) {
HXLINE(1188)							ret6 = (start3 > pdict->data->get_length());
            						}
            						else {
HXLINE(1188)							ret6 = true;
            						}
HXDLIN(1188)						if (!(ret6)) {
HXLINE(1188)							ret5 = (s3 > (pdict->data->get_length() - start3));
            						}
            						else {
HXLINE(1188)							ret5 = true;
            						}
HXDLIN(1188)						if (ret5) {
HXLINE(1188)							ret4 = r11;
            						}
            						else {
HXLINE(1188)							r11->_hx_set_data(HX_CTX, pdict->data->sub(start3,s3));
HXDLIN(1188)							ret4 = r11;
            						}
HXDLIN(1188)						goto _hx_goto_201;
            					}
            				}
            				_hx_goto_201:;
HXDLIN(1188)				 ::kha::graphics2::truetype::Stbtt__buf operands8;
HXDLIN(1188)				if (hx::IsNotNull( ret4 )) {
HXLINE(1188)					operands8 = ret4;
            				}
            				else {
HXLINE(1188)					 ::kha::internal::BytesBlob p7 = null();
HXDLIN(1188)					 ::kha::graphics2::truetype::Stbtt__buf r12 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)					r12->_hx_set_data(HX_CTX, p7);
HXDLIN(1188)					r12->cursor = 0;
HXDLIN(1188)					 ::kha::graphics2::truetype::Stbtt__buf r13 = r12;
HXDLIN(1188)					bool operands9;
HXDLIN(1188)					if ((0 <= pdict->data->get_length())) {
HXLINE(1188)						operands9 = (0 > pdict->data->get_length());
            					}
            					else {
HXLINE(1188)						operands9 = true;
            					}
HXDLIN(1188)					if (operands9) {
HXLINE(1188)						operands8 = r13;
            					}
            					else {
HXLINE(1188)						r13->_hx_set_data(HX_CTX, pdict->data->sub(0,0));
HXDLIN(1188)						operands8 = r13;
            					}
            				}
HXDLIN(1188)				while(true){
HXLINE(1188)					bool _hx_tmp35;
HXDLIN(1188)					if ((i13 < 1)) {
HXLINE(1188)						int operands10 = operands8->cursor;
HXDLIN(1188)						_hx_tmp35 = (operands10 < operands8->data->get_length());
            					}
            					else {
HXLINE(1188)						_hx_tmp35 = false;
            					}
HXDLIN(1188)					if (!(_hx_tmp35)) {
HXLINE(1188)						goto _hx_goto_206;
            					}
HXDLIN(1188)					int b05;
HXDLIN(1188)					int operands11 = operands8->cursor;
HXDLIN(1188)					if ((operands11 >= operands8->data->get_length())) {
HXLINE(1188)						b05 = 0;
            					}
            					else {
HXLINE(1188)						b05 = operands8->data->readU8(operands8->cursor++);
            					}
HXDLIN(1188)					int _hx_tmp36;
HXDLIN(1188)					bool _hx_tmp37;
HXDLIN(1188)					if ((b05 >= 32)) {
HXLINE(1188)						_hx_tmp37 = (b05 <= 246);
            					}
            					else {
HXLINE(1188)						_hx_tmp37 = false;
            					}
HXDLIN(1188)					if (_hx_tmp37) {
HXLINE(1188)						_hx_tmp36 = (b05 - 139);
            					}
            					else {
HXLINE(1188)						bool _hx_tmp38;
HXDLIN(1188)						if ((b05 >= 247)) {
HXLINE(1188)							_hx_tmp38 = (b05 <= 250);
            						}
            						else {
HXLINE(1188)							_hx_tmp38 = false;
            						}
HXDLIN(1188)						if (_hx_tmp38) {
HXLINE(1188)							int _hx_tmp39;
HXDLIN(1188)							int operands12 = operands8->cursor;
HXDLIN(1188)							if ((operands12 >= operands8->data->get_length())) {
HXLINE(1188)								_hx_tmp39 = 0;
            							}
            							else {
HXLINE(1188)								_hx_tmp39 = operands8->data->readU8(operands8->cursor++);
            							}
HXDLIN(1188)							_hx_tmp36 = ((((b05 - 247) * 256) + _hx_tmp39) + 108);
            						}
            						else {
HXLINE(1188)							bool _hx_tmp40;
HXDLIN(1188)							if ((b05 >= 251)) {
HXLINE(1188)								_hx_tmp40 = (b05 <= 254);
            							}
            							else {
HXLINE(1188)								_hx_tmp40 = false;
            							}
HXDLIN(1188)							if (_hx_tmp40) {
HXLINE(1188)								int _hx_tmp41;
HXDLIN(1188)								int operands13 = operands8->cursor;
HXDLIN(1188)								if ((operands13 >= operands8->data->get_length())) {
HXLINE(1188)									_hx_tmp41 = 0;
            								}
            								else {
HXLINE(1188)									_hx_tmp41 = operands8->data->readU8(operands8->cursor++);
            								}
HXDLIN(1188)								_hx_tmp36 = (((-((b05 - 251)) * 256) - _hx_tmp41) - 108);
            							}
            							else {
HXLINE(1188)								if ((b05 == 28)) {
HXLINE(1188)									int v27 = 0;
HXDLIN(1188)									{
HXLINE(1188)										int _g23 = 0;
HXDLIN(1188)										int _g113 = 2;
HXDLIN(1188)										while((_g23 < _g113)){
HXLINE(1188)											_g23 = (_g23 + 1);
HXDLIN(1188)											int i16 = (_g23 - 1);
HXDLIN(1188)											int v28;
HXDLIN(1188)											int operands14 = operands8->cursor;
HXDLIN(1188)											if ((operands14 >= operands8->data->get_length())) {
HXLINE(1188)												v28 = 0;
            											}
            											else {
HXLINE(1188)												v28 = operands8->data->readU8(operands8->cursor++);
            											}
HXDLIN(1188)											v27 = ((v27 << 8) | v28);
            										}
            									}
HXDLIN(1188)									_hx_tmp36 = v27;
            								}
            								else {
HXLINE(1188)									if ((b05 == 29)) {
HXLINE(1188)										int v29 = 0;
HXDLIN(1188)										{
HXLINE(1188)											int _g24 = 0;
HXDLIN(1188)											int _g114 = 4;
HXDLIN(1188)											while((_g24 < _g114)){
HXLINE(1188)												_g24 = (_g24 + 1);
HXDLIN(1188)												int i17 = (_g24 - 1);
HXDLIN(1188)												int v30;
HXDLIN(1188)												int operands15 = operands8->cursor;
HXDLIN(1188)												if ((operands15 >= operands8->data->get_length())) {
HXLINE(1188)													v30 = 0;
            												}
            												else {
HXLINE(1188)													v30 = operands8->data->readU8(operands8->cursor++);
            												}
HXDLIN(1188)												v29 = ((v29 << 8) | v30);
            											}
            										}
HXDLIN(1188)										_hx_tmp36 = v29;
            									}
            									else {
HXLINE(1188)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
            								}
            							}
            						}
            					}
HXDLIN(1188)					subrsoff[i13] = _hx_tmp36;
HXDLIN(1188)					i13 = (i13 + 1);
            				}
            				_hx_goto_206:;
            			}
HXDLIN(1188)			if ((subrsoff->__get(0) == 0)) {
HXLINE(1188)				 ::kha::internal::BytesBlob p8 = null();
HXDLIN(1188)				 ::kha::graphics2::truetype::Stbtt__buf r14 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)				r14->_hx_set_data(HX_CTX, p8);
HXDLIN(1188)				r14->cursor = 0;
HXDLIN(1188)				return r14;
            			}
            			else {
HXLINE(1188)				{
HXLINE(1188)					int o6 = (private_loc->__get(1) + subrsoff->__get(0));
HXDLIN(1188)					{
HXLINE(1188)						bool value4;
HXDLIN(1188)						if ((o6 <= cff->data->get_length())) {
HXLINE(1188)							value4 = (o6 < 0);
            						}
            						else {
HXLINE(1188)							value4 = true;
            						}
HXDLIN(1188)						if (!(!(value4))) {
HXLINE(1188)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXDLIN(1188)					int _hx_tmp42;
HXDLIN(1188)					bool _hx_tmp43;
HXDLIN(1188)					if ((o6 <= cff->data->get_length())) {
HXLINE(1188)						_hx_tmp43 = (o6 < 0);
            					}
            					else {
HXLINE(1188)						_hx_tmp43 = true;
            					}
HXDLIN(1188)					if (_hx_tmp43) {
HXLINE(1188)						_hx_tmp42 = cff->data->get_length();
            					}
            					else {
HXLINE(1188)						_hx_tmp42 = o6;
            					}
HXDLIN(1188)					cff->cursor = _hx_tmp42;
            				}
HXDLIN(1188)				int start4 = cff->cursor;
HXDLIN(1188)				int v31 = 0;
HXDLIN(1188)				{
HXLINE(1188)					int _g25 = 0;
HXDLIN(1188)					int _g115 = 2;
HXDLIN(1188)					while((_g25 < _g115)){
HXLINE(1188)						_g25 = (_g25 + 1);
HXDLIN(1188)						int i18 = (_g25 - 1);
HXDLIN(1188)						int v32;
HXDLIN(1188)						int cff1 = cff->cursor;
HXDLIN(1188)						if ((cff1 >= cff->data->get_length())) {
HXLINE(1188)							v32 = 0;
            						}
            						else {
HXLINE(1188)							v32 = cff->data->readU8(cff->cursor++);
            						}
HXDLIN(1188)						v31 = ((v31 << 8) | v32);
            					}
            				}
HXDLIN(1188)				int count1 = v31;
HXDLIN(1188)				if ((count1 > 0)) {
HXLINE(1188)					int offsize1;
HXDLIN(1188)					int cff2 = cff->cursor;
HXDLIN(1188)					if ((cff2 >= cff->data->get_length())) {
HXLINE(1188)						offsize1 = 0;
            					}
            					else {
HXLINE(1188)						offsize1 = cff->data->readU8(cff->cursor++);
            					}
HXDLIN(1188)					bool _hx_tmp44;
HXDLIN(1188)					if ((offsize1 >= 1)) {
HXLINE(1188)						_hx_tmp44 = (offsize1 <= 4);
            					}
            					else {
HXLINE(1188)						_hx_tmp44 = false;
            					}
HXDLIN(1188)					if (!(_hx_tmp44)) {
HXLINE(1188)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXDLIN(1188)					{
HXLINE(1188)						int o7 = (cff->cursor + (offsize1 * count1));
HXDLIN(1188)						{
HXLINE(1188)							bool value5;
HXDLIN(1188)							if ((o7 <= cff->data->get_length())) {
HXLINE(1188)								value5 = (o7 < 0);
            							}
            							else {
HXLINE(1188)								value5 = true;
            							}
HXDLIN(1188)							if (!(!(value5))) {
HXLINE(1188)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
            						}
HXDLIN(1188)						int _hx_tmp45;
HXDLIN(1188)						bool _hx_tmp46;
HXDLIN(1188)						if ((o7 <= cff->data->get_length())) {
HXLINE(1188)							_hx_tmp46 = (o7 < 0);
            						}
            						else {
HXLINE(1188)							_hx_tmp46 = true;
            						}
HXDLIN(1188)						if (_hx_tmp46) {
HXLINE(1188)							_hx_tmp45 = cff->data->get_length();
            						}
            						else {
HXLINE(1188)							_hx_tmp45 = o7;
            						}
HXDLIN(1188)						cff->cursor = _hx_tmp45;
            					}
HXDLIN(1188)					{
HXLINE(1188)						int v33 = 0;
HXDLIN(1188)						bool o8;
HXDLIN(1188)						if ((offsize1 >= 1)) {
HXLINE(1188)							o8 = (offsize1 <= 4);
            						}
            						else {
HXLINE(1188)							o8 = false;
            						}
HXDLIN(1188)						if (!(o8)) {
HXLINE(1188)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1188)						{
HXLINE(1188)							int _g26 = 0;
HXDLIN(1188)							int _g116 = offsize1;
HXDLIN(1188)							while((_g26 < _g116)){
HXLINE(1188)								_g26 = (_g26 + 1);
HXDLIN(1188)								int i19 = (_g26 - 1);
HXDLIN(1188)								int v34;
HXDLIN(1188)								int cff3 = cff->cursor;
HXDLIN(1188)								if ((cff3 >= cff->data->get_length())) {
HXLINE(1188)									v34 = 0;
            								}
            								else {
HXLINE(1188)									v34 = cff->data->readU8(cff->cursor++);
            								}
HXDLIN(1188)								v33 = ((v33 << 8) | v34);
            							}
            						}
HXDLIN(1188)						{
HXLINE(1188)							int o9 = (cff->cursor + (v33 - 1));
HXDLIN(1188)							{
HXLINE(1188)								bool value6;
HXDLIN(1188)								if ((o9 <= cff->data->get_length())) {
HXLINE(1188)									value6 = (o9 < 0);
            								}
            								else {
HXLINE(1188)									value6 = true;
            								}
HXDLIN(1188)								if (!(!(value6))) {
HXLINE(1188)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN(1188)							int _hx_tmp47;
HXDLIN(1188)							bool _hx_tmp48;
HXDLIN(1188)							if ((o9 <= cff->data->get_length())) {
HXLINE(1188)								_hx_tmp48 = (o9 < 0);
            							}
            							else {
HXLINE(1188)								_hx_tmp48 = true;
            							}
HXDLIN(1188)							if (_hx_tmp48) {
HXLINE(1188)								_hx_tmp47 = cff->data->get_length();
            							}
            							else {
HXLINE(1188)								_hx_tmp47 = o9;
            							}
HXDLIN(1188)							cff->cursor = _hx_tmp47;
            						}
            					}
HXDLIN(1188)					int s4 = (cff->cursor - start4);
HXDLIN(1188)					 ::kha::internal::BytesBlob p9 = null();
HXDLIN(1188)					 ::kha::graphics2::truetype::Stbtt__buf r15 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1188)					r15->_hx_set_data(HX_CTX, p9);
HXDLIN(1188)					r15->cursor = 0;
HXDLIN(1188)					 ::kha::graphics2::truetype::Stbtt__buf r16 = r15;
HXDLIN(1188)					bool _hx_tmp49;
HXDLIN(1188)					bool _hx_tmp50;
HXDLIN(1188)					bool _hx_tmp51;
HXDLIN(1188)					if ((start4 >= 0)) {
HXLINE(1188)						_hx_tmp51 = (s4 < 0);
            					}
            					else {
HXLINE(1188)						_hx_tmp51 = true;
            					}
HXDLIN(1188)					if (!(_hx_tmp51)) {
HXLINE(1188)						_hx_tmp50 = (start4 > cff->data->get_length());
            					}
            					else {
HXLINE(1188)						_hx_tmp50 = true;
            					}
HXDLIN(1188)					if (!(_hx_tmp50)) {
HXLINE(1188)						_hx_tmp49 = (s4 > (cff->data->get_length() - start4));
            					}
            					else {
HXLINE(1188)						_hx_tmp49 = true;
            					}
HXDLIN(1188)					if (_hx_tmp49) {
HXLINE(1188)						return r16;
            					}
            					else {
HXLINE(1188)						r16->_hx_set_data(HX_CTX, cff->data->sub(start4,s4));
HXDLIN(1188)						return r16;
            					}
            				}
            				else {
HXLINE(1188)					return cff;
            				}
            			}
            		}
HXDLIN(1188)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__cid_get_glyph_subrs,return )

bool StbTruetype_obj::STBTT__CSERR(::String s){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1192_STBTT__CSERR)
HXDLIN(1192)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,STBTT__CSERR,return )

bool StbTruetype_obj::stbtt__run_charstring( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index, ::kha::graphics2::truetype::Stbtt__csctx c){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1195_stbtt__run_charstring)
HXLINE(1196)		bool in_header = true;
HXLINE(1197)		int maskbits = 0;
HXDLIN(1197)		int subr_stack_height = 0;
HXDLIN(1197)		int sp = 0;
HXDLIN(1197)		int v;
HXDLIN(1197)		int i;
HXDLIN(1197)		int b0;
HXLINE(1198)		bool has_subrs = false;
HXDLIN(1198)		bool clear_stack;
HXLINE(1199)		::Array< Float > _g = ::Array_obj< Float >::__new(0);
HXDLIN(1199)		{
HXLINE(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
HXDLIN(1199)			_g->push(0);
            		}
HXDLIN(1199)		::Array< Float > s = _g;
HXLINE(1200)		::Array< ::Dynamic> _g1 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN(1200)		{
HXLINE(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
HXDLIN(1200)			_g1->push( ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX ));
            		}
HXDLIN(1200)		::Array< ::Dynamic> subr_stack = _g1;
HXLINE(1201)		 ::kha::graphics2::truetype::Stbtt__buf subrs = info->subrs;
HXDLIN(1201)		 ::kha::graphics2::truetype::Stbtt__buf b;
HXLINE(1202)		Float f;
HXLINE(1205)		 ::kha::graphics2::truetype::Stbtt__buf b1 = info->charstrings;
HXDLIN(1205)		{
HXLINE(1205)			if ((0 > b1->data->get_length())) {
HXLINE(1205)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXDLIN(1205)			int b2;
HXDLIN(1205)			if ((0 > b1->data->get_length())) {
HXLINE(1205)				b2 = b1->data->get_length();
            			}
            			else {
HXLINE(1205)				b2 = 0;
            			}
HXDLIN(1205)			b1->cursor = b2;
            		}
HXDLIN(1205)		int v1 = 0;
HXDLIN(1205)		{
HXLINE(1205)			int _g2 = 0;
HXDLIN(1205)			int _g11 = 2;
HXDLIN(1205)			while((_g2 < _g11)){
HXLINE(1205)				_g2 = (_g2 + 1);
HXDLIN(1205)				int i1 = (_g2 - 1);
HXDLIN(1205)				int v2;
HXDLIN(1205)				int b3 = b1->cursor;
HXDLIN(1205)				if ((b3 >= b1->data->get_length())) {
HXLINE(1205)					v2 = 0;
            				}
            				else {
HXLINE(1205)					v2 = b1->data->readU8(b1->cursor++);
            				}
HXDLIN(1205)				v1 = ((v1 << 8) | v2);
            			}
            		}
HXDLIN(1205)		int count = v1;
HXDLIN(1205)		int offsize;
HXDLIN(1205)		int b4 = b1->cursor;
HXDLIN(1205)		if ((b4 >= b1->data->get_length())) {
HXLINE(1205)			offsize = 0;
            		}
            		else {
HXLINE(1205)			offsize = b1->data->readU8(b1->cursor++);
            		}
HXDLIN(1205)		bool b5;
HXDLIN(1205)		if ((glyph_index >= 0)) {
HXLINE(1205)			b5 = (glyph_index < count);
            		}
            		else {
HXLINE(1205)			b5 = false;
            		}
HXDLIN(1205)		if (!(b5)) {
HXLINE(1205)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1205)		bool b6;
HXDLIN(1205)		if ((offsize >= 1)) {
HXLINE(1205)			b6 = (offsize <= 4);
            		}
            		else {
HXLINE(1205)			b6 = false;
            		}
HXDLIN(1205)		if (!(b6)) {
HXLINE(1205)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1205)		{
HXLINE(1205)			int o = (b1->cursor + (glyph_index * offsize));
HXDLIN(1205)			{
HXLINE(1205)				bool value;
HXDLIN(1205)				if ((o <= b1->data->get_length())) {
HXLINE(1205)					value = (o < 0);
            				}
            				else {
HXLINE(1205)					value = true;
            				}
HXDLIN(1205)				if (!(!(value))) {
HXLINE(1205)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            			}
HXDLIN(1205)			int b7;
HXDLIN(1205)			bool b8;
HXDLIN(1205)			if ((o <= b1->data->get_length())) {
HXLINE(1205)				b8 = (o < 0);
            			}
            			else {
HXLINE(1205)				b8 = true;
            			}
HXDLIN(1205)			if (b8) {
HXLINE(1205)				b7 = b1->data->get_length();
            			}
            			else {
HXLINE(1205)				b7 = o;
            			}
HXDLIN(1205)			b1->cursor = b7;
            		}
HXDLIN(1205)		int v3 = 0;
HXDLIN(1205)		bool b9;
HXDLIN(1205)		if ((offsize >= 1)) {
HXLINE(1205)			b9 = (offsize <= 4);
            		}
            		else {
HXLINE(1205)			b9 = false;
            		}
HXDLIN(1205)		if (!(b9)) {
HXLINE(1205)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1205)		{
HXLINE(1205)			int _g3 = 0;
HXDLIN(1205)			int _g12 = offsize;
HXDLIN(1205)			while((_g3 < _g12)){
HXLINE(1205)				_g3 = (_g3 + 1);
HXDLIN(1205)				int i2 = (_g3 - 1);
HXDLIN(1205)				int v4;
HXDLIN(1205)				int b10 = b1->cursor;
HXDLIN(1205)				if ((b10 >= b1->data->get_length())) {
HXLINE(1205)					v4 = 0;
            				}
            				else {
HXLINE(1205)					v4 = b1->data->readU8(b1->cursor++);
            				}
HXDLIN(1205)				v3 = ((v3 << 8) | v4);
            			}
            		}
HXDLIN(1205)		int start = v3;
HXDLIN(1205)		int v5 = 0;
HXDLIN(1205)		bool b11;
HXDLIN(1205)		if ((offsize >= 1)) {
HXLINE(1205)			b11 = (offsize <= 4);
            		}
            		else {
HXLINE(1205)			b11 = false;
            		}
HXDLIN(1205)		if (!(b11)) {
HXLINE(1205)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXDLIN(1205)		{
HXLINE(1205)			int _g4 = 0;
HXDLIN(1205)			int _g13 = offsize;
HXDLIN(1205)			while((_g4 < _g13)){
HXLINE(1205)				_g4 = (_g4 + 1);
HXDLIN(1205)				int i3 = (_g4 - 1);
HXDLIN(1205)				int v6;
HXDLIN(1205)				int b12 = b1->cursor;
HXDLIN(1205)				if ((b12 >= b1->data->get_length())) {
HXLINE(1205)					v6 = 0;
            				}
            				else {
HXLINE(1205)					v6 = b1->data->readU8(b1->cursor++);
            				}
HXDLIN(1205)				v5 = ((v5 << 8) | v6);
            			}
            		}
HXDLIN(1205)		int end = v5;
HXDLIN(1205)		int o1 = ((2 + ((count + 1) * offsize)) + start);
HXDLIN(1205)		int s1 = (end - start);
HXDLIN(1205)		 ::kha::internal::BytesBlob p = null();
HXDLIN(1205)		 ::kha::graphics2::truetype::Stbtt__buf r =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1205)		r->_hx_set_data(HX_CTX, p);
HXDLIN(1205)		r->cursor = 0;
HXDLIN(1205)		 ::kha::graphics2::truetype::Stbtt__buf r1 = r;
HXDLIN(1205)		bool b13;
HXDLIN(1205)		bool b14;
HXDLIN(1205)		bool b15;
HXDLIN(1205)		if ((o1 >= 0)) {
HXLINE(1205)			b15 = (s1 < 0);
            		}
            		else {
HXLINE(1205)			b15 = true;
            		}
HXDLIN(1205)		if (!(b15)) {
HXLINE(1205)			b14 = (o1 > b1->data->get_length());
            		}
            		else {
HXLINE(1205)			b14 = true;
            		}
HXDLIN(1205)		if (!(b14)) {
HXLINE(1205)			b13 = (s1 > (b1->data->get_length() - o1));
            		}
            		else {
HXLINE(1205)			b13 = true;
            		}
HXDLIN(1205)		if (b13) {
HXLINE(1205)			b = r1;
            		}
            		else {
HXLINE(1205)			r1->_hx_set_data(HX_CTX, b1->data->sub(o1,s1));
HXDLIN(1205)			b = r1;
            		}
HXLINE(1206)		while(true){
HXLINE(1206)			int b16 = b->cursor;
HXDLIN(1206)			if (!((b16 < b->data->get_length()))) {
HXLINE(1206)				goto _hx_goto_218;
            			}
HXLINE(1207)			i = 0;
HXLINE(1208)			clear_stack = true;
HXLINE(1209)			int b17 = b->cursor;
HXDLIN(1209)			if ((b17 >= b->data->get_length())) {
HXLINE(1209)				b0 = 0;
            			}
            			else {
HXLINE(1209)				b0 = b->data->readU8(b->cursor++);
            			}
HXLINE(1210)			switch((int)(b0)){
            				case (int)1: case (int)3: case (int)18: case (int)23: {
HXLINE(1223)					maskbits = (maskbits + ::Std_obj::_hx_int((( (Float)(sp) ) / ( (Float)(2) ))));
            				}
            				break;
            				case (int)4: {
HXLINE(1230)					in_header = false;
HXLINE(1231)					if ((sp < 1)) {
HXLINE(1231)						return false;
            					}
HXLINE(1232)					{
HXLINE(1232)						bool _hx_tmp;
HXDLIN(1232)						if ((c->first_x == c->x)) {
HXLINE(1232)							_hx_tmp = (c->first_y != c->y);
            						}
            						else {
HXLINE(1232)							_hx_tmp = true;
            						}
HXDLIN(1232)						if (_hx_tmp) {
HXLINE(1232)							int x = ::Std_obj::_hx_int(c->first_x);
HXDLIN(1232)							int y = ::Std_obj::_hx_int(c->first_y);
HXDLIN(1232)							if (c->bounds) {
HXLINE(1232)								bool _hx_tmp1;
HXDLIN(1232)								if ((x <= c->max_x)) {
HXLINE(1232)									_hx_tmp1 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp1 = true;
            								}
HXDLIN(1232)								if (_hx_tmp1) {
HXLINE(1232)									c->max_x = x;
            								}
HXDLIN(1232)								bool _hx_tmp2;
HXDLIN(1232)								if ((y <= c->max_y)) {
HXLINE(1232)									_hx_tmp2 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp2 = true;
            								}
HXDLIN(1232)								if (_hx_tmp2) {
HXLINE(1232)									c->max_y = y;
            								}
HXDLIN(1232)								bool _hx_tmp3;
HXDLIN(1232)								if ((x >= c->min_x)) {
HXLINE(1232)									_hx_tmp3 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp3 = true;
            								}
HXDLIN(1232)								if (_hx_tmp3) {
HXLINE(1232)									c->min_x = x;
            								}
HXDLIN(1232)								bool _hx_tmp4;
HXDLIN(1232)								if ((y >= c->min_y)) {
HXLINE(1232)									_hx_tmp4 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp4 = true;
            								}
HXDLIN(1232)								if (_hx_tmp4) {
HXLINE(1232)									c->min_y = y;
            								}
HXDLIN(1232)								c->started = true;
            							}
            							else {
HXLINE(1232)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x,y,0,0);
HXDLIN(1232)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1232)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1232)							c->num_vertices++;
            						}
HXDLIN(1232)						c->first_x = (c->x = c->x);
HXDLIN(1232)						c->first_y = (c->y = (c->y + s->__get((sp - 1))));
HXDLIN(1232)						{
HXLINE(1232)							int x1 = ::Std_obj::_hx_int(c->x);
HXDLIN(1232)							int y1 = ::Std_obj::_hx_int(c->y);
HXDLIN(1232)							if (c->bounds) {
HXLINE(1232)								bool _hx_tmp5;
HXDLIN(1232)								if ((x1 <= c->max_x)) {
HXLINE(1232)									_hx_tmp5 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp5 = true;
            								}
HXDLIN(1232)								if (_hx_tmp5) {
HXLINE(1232)									c->max_x = x1;
            								}
HXDLIN(1232)								bool _hx_tmp6;
HXDLIN(1232)								if ((y1 <= c->max_y)) {
HXLINE(1232)									_hx_tmp6 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp6 = true;
            								}
HXDLIN(1232)								if (_hx_tmp6) {
HXLINE(1232)									c->max_y = y1;
            								}
HXDLIN(1232)								bool _hx_tmp7;
HXDLIN(1232)								if ((x1 >= c->min_x)) {
HXLINE(1232)									_hx_tmp7 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp7 = true;
            								}
HXDLIN(1232)								if (_hx_tmp7) {
HXLINE(1232)									c->min_x = x1;
            								}
HXDLIN(1232)								bool _hx_tmp8;
HXDLIN(1232)								if ((y1 >= c->min_y)) {
HXLINE(1232)									_hx_tmp8 = !(c->started);
            								}
            								else {
HXLINE(1232)									_hx_tmp8 = true;
            								}
HXDLIN(1232)								if (_hx_tmp8) {
HXLINE(1232)									c->min_y = y1;
            								}
HXDLIN(1232)								c->started = true;
            							}
            							else {
HXLINE(1232)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),1,x1,y1,0,0);
HXDLIN(1232)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1232)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1232)							c->num_vertices++;
            						}
            					}
            				}
            				break;
            				case (int)5: {
HXLINE(1239)					if ((sp < 2)) {
HXLINE(1239)						return false;
            					}
HXLINE(1240)					while(((i + 1) < sp)){
HXLINE(1241)						{
HXLINE(1241)							 ::kha::graphics2::truetype::Stbtt__csctx c1 = c;
HXDLIN(1241)							c1->x = (c1->x + s->__get(i));
HXDLIN(1241)							 ::kha::graphics2::truetype::Stbtt__csctx c2 = c;
HXDLIN(1241)							c2->y = (c2->y + s->__get((i + 1)));
HXDLIN(1241)							{
HXLINE(1241)								int x2 = ::Std_obj::_hx_int(c->x);
HXDLIN(1241)								int y2 = ::Std_obj::_hx_int(c->y);
HXDLIN(1241)								if (c->bounds) {
HXLINE(1241)									bool _hx_tmp9;
HXDLIN(1241)									if ((x2 <= c->max_x)) {
HXLINE(1241)										_hx_tmp9 = !(c->started);
            									}
            									else {
HXLINE(1241)										_hx_tmp9 = true;
            									}
HXDLIN(1241)									if (_hx_tmp9) {
HXLINE(1241)										c->max_x = x2;
            									}
HXDLIN(1241)									bool _hx_tmp10;
HXDLIN(1241)									if ((y2 <= c->max_y)) {
HXLINE(1241)										_hx_tmp10 = !(c->started);
            									}
            									else {
HXLINE(1241)										_hx_tmp10 = true;
            									}
HXDLIN(1241)									if (_hx_tmp10) {
HXLINE(1241)										c->max_y = y2;
            									}
HXDLIN(1241)									bool _hx_tmp11;
HXDLIN(1241)									if ((x2 >= c->min_x)) {
HXLINE(1241)										_hx_tmp11 = !(c->started);
            									}
            									else {
HXLINE(1241)										_hx_tmp11 = true;
            									}
HXDLIN(1241)									if (_hx_tmp11) {
HXLINE(1241)										c->min_x = x2;
            									}
HXDLIN(1241)									bool _hx_tmp12;
HXDLIN(1241)									if ((y2 >= c->min_y)) {
HXLINE(1241)										_hx_tmp12 = !(c->started);
            									}
            									else {
HXLINE(1241)										_hx_tmp12 = true;
            									}
HXDLIN(1241)									if (_hx_tmp12) {
HXLINE(1241)										c->min_y = y2;
            									}
HXDLIN(1241)									c->started = true;
            								}
            								else {
HXLINE(1241)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x2,y2,0,0);
HXDLIN(1241)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1241)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            								}
HXDLIN(1241)								c->num_vertices++;
            							}
            						}
HXLINE(1242)						i = (i + 2);
            					}
            				}
            				break;
            				case (int)6: {
HXLINE(1260)					if ((sp < 1)) {
HXLINE(1260)						return false;
            					}
HXLINE(1261)					while((i < sp)){
HXLINE(1263)						{
HXLINE(1263)							 ::kha::graphics2::truetype::Stbtt__csctx c3 = c;
HXDLIN(1263)							c3->x = (c3->x + s->__get(i));
HXDLIN(1263)							 ::kha::graphics2::truetype::Stbtt__csctx c4 = c;
HXDLIN(1263)							c4->y = c4->y;
HXDLIN(1263)							{
HXLINE(1263)								int x3 = ::Std_obj::_hx_int(c->x);
HXDLIN(1263)								int y3 = ::Std_obj::_hx_int(c->y);
HXDLIN(1263)								if (c->bounds) {
HXLINE(1263)									bool _hx_tmp13;
HXDLIN(1263)									if ((x3 <= c->max_x)) {
HXLINE(1263)										_hx_tmp13 = !(c->started);
            									}
            									else {
HXLINE(1263)										_hx_tmp13 = true;
            									}
HXDLIN(1263)									if (_hx_tmp13) {
HXLINE(1263)										c->max_x = x3;
            									}
HXDLIN(1263)									bool _hx_tmp14;
HXDLIN(1263)									if ((y3 <= c->max_y)) {
HXLINE(1263)										_hx_tmp14 = !(c->started);
            									}
            									else {
HXLINE(1263)										_hx_tmp14 = true;
            									}
HXDLIN(1263)									if (_hx_tmp14) {
HXLINE(1263)										c->max_y = y3;
            									}
HXDLIN(1263)									bool _hx_tmp15;
HXDLIN(1263)									if ((x3 >= c->min_x)) {
HXLINE(1263)										_hx_tmp15 = !(c->started);
            									}
            									else {
HXLINE(1263)										_hx_tmp15 = true;
            									}
HXDLIN(1263)									if (_hx_tmp15) {
HXLINE(1263)										c->min_x = x3;
            									}
HXDLIN(1263)									bool _hx_tmp16;
HXDLIN(1263)									if ((y3 >= c->min_y)) {
HXLINE(1263)										_hx_tmp16 = !(c->started);
            									}
            									else {
HXLINE(1263)										_hx_tmp16 = true;
            									}
HXDLIN(1263)									if (_hx_tmp16) {
HXLINE(1263)										c->min_y = y3;
            									}
HXDLIN(1263)									c->started = true;
            								}
            								else {
HXLINE(1263)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x3,y3,0,0);
HXDLIN(1263)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1263)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            								}
HXDLIN(1263)								c->num_vertices++;
            							}
            						}
HXLINE(1264)						i = (i + 1);
HXLINE(1266)						if ((i >= sp)) {
HXLINE(1266)							goto _hx_goto_223;
            						}
HXLINE(1267)						{
HXLINE(1267)							 ::kha::graphics2::truetype::Stbtt__csctx c5 = c;
HXDLIN(1267)							c5->x = c5->x;
HXDLIN(1267)							 ::kha::graphics2::truetype::Stbtt__csctx c6 = c;
HXDLIN(1267)							c6->y = (c6->y + s->__get(i));
HXDLIN(1267)							{
HXLINE(1267)								int x4 = ::Std_obj::_hx_int(c->x);
HXDLIN(1267)								int y4 = ::Std_obj::_hx_int(c->y);
HXDLIN(1267)								if (c->bounds) {
HXLINE(1267)									bool _hx_tmp17;
HXDLIN(1267)									if ((x4 <= c->max_x)) {
HXLINE(1267)										_hx_tmp17 = !(c->started);
            									}
            									else {
HXLINE(1267)										_hx_tmp17 = true;
            									}
HXDLIN(1267)									if (_hx_tmp17) {
HXLINE(1267)										c->max_x = x4;
            									}
HXDLIN(1267)									bool _hx_tmp18;
HXDLIN(1267)									if ((y4 <= c->max_y)) {
HXLINE(1267)										_hx_tmp18 = !(c->started);
            									}
            									else {
HXLINE(1267)										_hx_tmp18 = true;
            									}
HXDLIN(1267)									if (_hx_tmp18) {
HXLINE(1267)										c->max_y = y4;
            									}
HXDLIN(1267)									bool _hx_tmp19;
HXDLIN(1267)									if ((x4 >= c->min_x)) {
HXLINE(1267)										_hx_tmp19 = !(c->started);
            									}
            									else {
HXLINE(1267)										_hx_tmp19 = true;
            									}
HXDLIN(1267)									if (_hx_tmp19) {
HXLINE(1267)										c->min_x = x4;
            									}
HXDLIN(1267)									bool _hx_tmp20;
HXDLIN(1267)									if ((y4 >= c->min_y)) {
HXLINE(1267)										_hx_tmp20 = !(c->started);
            									}
            									else {
HXLINE(1267)										_hx_tmp20 = true;
            									}
HXDLIN(1267)									if (_hx_tmp20) {
HXLINE(1267)										c->min_y = y4;
            									}
HXDLIN(1267)									c->started = true;
            								}
            								else {
HXLINE(1267)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x4,y4,0,0);
HXDLIN(1267)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1267)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            								}
HXDLIN(1267)								c->num_vertices++;
            							}
            						}
HXLINE(1268)						i = (i + 1);
            					}
            					_hx_goto_223:;
            				}
            				break;
            				case (int)7: {
HXLINE(1249)					if ((sp < 1)) {
HXLINE(1249)						return false;
            					}
HXLINE(1250)					while((i < sp)){
HXLINE(1252)						{
HXLINE(1252)							 ::kha::graphics2::truetype::Stbtt__csctx c7 = c;
HXDLIN(1252)							c7->x = c7->x;
HXDLIN(1252)							 ::kha::graphics2::truetype::Stbtt__csctx c8 = c;
HXDLIN(1252)							c8->y = (c8->y + s->__get(i));
HXDLIN(1252)							{
HXLINE(1252)								int x5 = ::Std_obj::_hx_int(c->x);
HXDLIN(1252)								int y5 = ::Std_obj::_hx_int(c->y);
HXDLIN(1252)								if (c->bounds) {
HXLINE(1252)									bool _hx_tmp21;
HXDLIN(1252)									if ((x5 <= c->max_x)) {
HXLINE(1252)										_hx_tmp21 = !(c->started);
            									}
            									else {
HXLINE(1252)										_hx_tmp21 = true;
            									}
HXDLIN(1252)									if (_hx_tmp21) {
HXLINE(1252)										c->max_x = x5;
            									}
HXDLIN(1252)									bool _hx_tmp22;
HXDLIN(1252)									if ((y5 <= c->max_y)) {
HXLINE(1252)										_hx_tmp22 = !(c->started);
            									}
            									else {
HXLINE(1252)										_hx_tmp22 = true;
            									}
HXDLIN(1252)									if (_hx_tmp22) {
HXLINE(1252)										c->max_y = y5;
            									}
HXDLIN(1252)									bool _hx_tmp23;
HXDLIN(1252)									if ((x5 >= c->min_x)) {
HXLINE(1252)										_hx_tmp23 = !(c->started);
            									}
            									else {
HXLINE(1252)										_hx_tmp23 = true;
            									}
HXDLIN(1252)									if (_hx_tmp23) {
HXLINE(1252)										c->min_x = x5;
            									}
HXDLIN(1252)									bool _hx_tmp24;
HXDLIN(1252)									if ((y5 >= c->min_y)) {
HXLINE(1252)										_hx_tmp24 = !(c->started);
            									}
            									else {
HXLINE(1252)										_hx_tmp24 = true;
            									}
HXDLIN(1252)									if (_hx_tmp24) {
HXLINE(1252)										c->min_y = y5;
            									}
HXDLIN(1252)									c->started = true;
            								}
            								else {
HXLINE(1252)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x5,y5,0,0);
HXDLIN(1252)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1252)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            								}
HXDLIN(1252)								c->num_vertices++;
            							}
            						}
HXLINE(1253)						i = (i + 1);
HXLINE(1255)						if ((i >= sp)) {
HXLINE(1255)							goto _hx_goto_224;
            						}
HXLINE(1256)						{
HXLINE(1256)							 ::kha::graphics2::truetype::Stbtt__csctx c9 = c;
HXDLIN(1256)							c9->x = (c9->x + s->__get(i));
HXDLIN(1256)							 ::kha::graphics2::truetype::Stbtt__csctx c10 = c;
HXDLIN(1256)							c10->y = c10->y;
HXDLIN(1256)							{
HXLINE(1256)								int x6 = ::Std_obj::_hx_int(c->x);
HXDLIN(1256)								int y6 = ::Std_obj::_hx_int(c->y);
HXDLIN(1256)								if (c->bounds) {
HXLINE(1256)									bool _hx_tmp25;
HXDLIN(1256)									if ((x6 <= c->max_x)) {
HXLINE(1256)										_hx_tmp25 = !(c->started);
            									}
            									else {
HXLINE(1256)										_hx_tmp25 = true;
            									}
HXDLIN(1256)									if (_hx_tmp25) {
HXLINE(1256)										c->max_x = x6;
            									}
HXDLIN(1256)									bool _hx_tmp26;
HXDLIN(1256)									if ((y6 <= c->max_y)) {
HXLINE(1256)										_hx_tmp26 = !(c->started);
            									}
            									else {
HXLINE(1256)										_hx_tmp26 = true;
            									}
HXDLIN(1256)									if (_hx_tmp26) {
HXLINE(1256)										c->max_y = y6;
            									}
HXDLIN(1256)									bool _hx_tmp27;
HXDLIN(1256)									if ((x6 >= c->min_x)) {
HXLINE(1256)										_hx_tmp27 = !(c->started);
            									}
            									else {
HXLINE(1256)										_hx_tmp27 = true;
            									}
HXDLIN(1256)									if (_hx_tmp27) {
HXLINE(1256)										c->min_x = x6;
            									}
HXDLIN(1256)									bool _hx_tmp28;
HXDLIN(1256)									if ((y6 >= c->min_y)) {
HXLINE(1256)										_hx_tmp28 = !(c->started);
            									}
            									else {
HXLINE(1256)										_hx_tmp28 = true;
            									}
HXDLIN(1256)									if (_hx_tmp28) {
HXLINE(1256)										c->min_y = y6;
            									}
HXDLIN(1256)									c->started = true;
            								}
            								else {
HXLINE(1256)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x6,y6,0,0);
HXDLIN(1256)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1256)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            								}
HXDLIN(1256)								c->num_vertices++;
            							}
            						}
HXLINE(1257)						i = (i + 1);
            					}
            					_hx_goto_224:;
            				}
            				break;
            				case (int)8: {
HXLINE(1295)					if ((sp < 6)) {
HXLINE(1295)						return false;
            					}
HXLINE(1296)					while(((i + 5) < sp)){
HXLINE(1297)						{
HXLINE(1297)							Float cx1 = (c->x + s->__get(i));
HXDLIN(1297)							Float cy1 = (c->y + s->__get((i + 1)));
HXDLIN(1297)							Float cx2 = (cx1 + s->__get((i + 2)));
HXDLIN(1297)							Float cy2 = (cy1 + s->__get((i + 3)));
HXDLIN(1297)							c->x = (cx2 + s->__get((i + 4)));
HXDLIN(1297)							c->y = (cy2 + s->__get((i + 5)));
HXDLIN(1297)							{
HXLINE(1297)								int x7 = ::Std_obj::_hx_int(c->x);
HXDLIN(1297)								int y7 = ::Std_obj::_hx_int(c->y);
HXDLIN(1297)								int cx = ::Std_obj::_hx_int(cx1);
HXDLIN(1297)								int cy = ::Std_obj::_hx_int(cy1);
HXDLIN(1297)								int cx11 = ::Std_obj::_hx_int(cx2);
HXDLIN(1297)								int cy11 = ::Std_obj::_hx_int(cy2);
HXDLIN(1297)								if (c->bounds) {
HXLINE(1297)									{
HXLINE(1297)										bool _hx_tmp29;
HXDLIN(1297)										if ((x7 <= c->max_x)) {
HXLINE(1297)											_hx_tmp29 = !(c->started);
            										}
            										else {
HXLINE(1297)											_hx_tmp29 = true;
            										}
HXDLIN(1297)										if (_hx_tmp29) {
HXLINE(1297)											c->max_x = x7;
            										}
HXDLIN(1297)										bool _hx_tmp30;
HXDLIN(1297)										if ((y7 <= c->max_y)) {
HXLINE(1297)											_hx_tmp30 = !(c->started);
            										}
            										else {
HXLINE(1297)											_hx_tmp30 = true;
            										}
HXDLIN(1297)										if (_hx_tmp30) {
HXLINE(1297)											c->max_y = y7;
            										}
HXDLIN(1297)										bool _hx_tmp31;
HXDLIN(1297)										if ((x7 >= c->min_x)) {
HXLINE(1297)											_hx_tmp31 = !(c->started);
            										}
            										else {
HXLINE(1297)											_hx_tmp31 = true;
            										}
HXDLIN(1297)										if (_hx_tmp31) {
HXLINE(1297)											c->min_x = x7;
            										}
HXDLIN(1297)										bool _hx_tmp32;
HXDLIN(1297)										if ((y7 >= c->min_y)) {
HXLINE(1297)											_hx_tmp32 = !(c->started);
            										}
            										else {
HXLINE(1297)											_hx_tmp32 = true;
            										}
HXDLIN(1297)										if (_hx_tmp32) {
HXLINE(1297)											c->min_y = y7;
            										}
HXDLIN(1297)										c->started = true;
            									}
HXDLIN(1297)									{
HXLINE(1297)										{
HXLINE(1297)											bool _hx_tmp33;
HXDLIN(1297)											if ((cx <= c->max_x)) {
HXLINE(1297)												_hx_tmp33 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp33 = true;
            											}
HXDLIN(1297)											if (_hx_tmp33) {
HXLINE(1297)												c->max_x = cx;
            											}
HXDLIN(1297)											bool _hx_tmp34;
HXDLIN(1297)											if ((cy <= c->max_y)) {
HXLINE(1297)												_hx_tmp34 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp34 = true;
            											}
HXDLIN(1297)											if (_hx_tmp34) {
HXLINE(1297)												c->max_y = cy;
            											}
HXDLIN(1297)											bool _hx_tmp35;
HXDLIN(1297)											if ((cx >= c->min_x)) {
HXLINE(1297)												_hx_tmp35 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp35 = true;
            											}
HXDLIN(1297)											if (_hx_tmp35) {
HXLINE(1297)												c->min_x = cx;
            											}
HXDLIN(1297)											bool _hx_tmp36;
HXDLIN(1297)											if ((cy >= c->min_y)) {
HXLINE(1297)												_hx_tmp36 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp36 = true;
            											}
HXDLIN(1297)											if (_hx_tmp36) {
HXLINE(1297)												c->min_y = cy;
            											}
HXDLIN(1297)											c->started = true;
            										}
HXDLIN(1297)										{
HXLINE(1297)											bool _hx_tmp37;
HXDLIN(1297)											if ((cx11 <= c->max_x)) {
HXLINE(1297)												_hx_tmp37 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp37 = true;
            											}
HXDLIN(1297)											if (_hx_tmp37) {
HXLINE(1297)												c->max_x = cx11;
            											}
HXDLIN(1297)											bool _hx_tmp38;
HXDLIN(1297)											if ((cy11 <= c->max_y)) {
HXLINE(1297)												_hx_tmp38 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp38 = true;
            											}
HXDLIN(1297)											if (_hx_tmp38) {
HXLINE(1297)												c->max_y = cy11;
            											}
HXDLIN(1297)											bool _hx_tmp39;
HXDLIN(1297)											if ((cx11 >= c->min_x)) {
HXLINE(1297)												_hx_tmp39 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp39 = true;
            											}
HXDLIN(1297)											if (_hx_tmp39) {
HXLINE(1297)												c->min_x = cx11;
            											}
HXDLIN(1297)											bool _hx_tmp40;
HXDLIN(1297)											if ((cy11 >= c->min_y)) {
HXLINE(1297)												_hx_tmp40 = !(c->started);
            											}
            											else {
HXLINE(1297)												_hx_tmp40 = true;
            											}
HXDLIN(1297)											if (_hx_tmp40) {
HXLINE(1297)												c->min_y = cy11;
            											}
HXDLIN(1297)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1297)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x7,y7,cx,cy);
HXDLIN(1297)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx11;
HXDLIN(1297)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy11;
            								}
HXDLIN(1297)								c->num_vertices++;
            							}
            						}
HXLINE(1298)						i = (i + 6);
            					}
            				}
            				break;
            				case (int)11: {
HXLINE(1352)					if ((subr_stack_height <= 0)) {
HXLINE(1352)						return false;
            					}
HXLINE(1353)					subr_stack_height = (subr_stack_height - 1);
HXDLIN(1353)					b = subr_stack->__get(subr_stack_height).StaticCast<  ::kha::graphics2::truetype::Stbtt__buf >();
HXLINE(1354)					clear_stack = false;
            				}
            				break;
            				case (int)12: {
HXLINE(1361)					Float dx1;
HXDLIN(1361)					Float dx2;
HXDLIN(1361)					Float dx3;
HXDLIN(1361)					Float dx4;
HXDLIN(1361)					Float dx5;
HXDLIN(1361)					Float dx6;
HXDLIN(1361)					Float dy1;
HXDLIN(1361)					Float dy2;
HXDLIN(1361)					Float dy3;
HXDLIN(1361)					Float dy4;
HXDLIN(1361)					Float dy5;
HXDLIN(1361)					Float dy6;
HXLINE(1362)					Float dx;
HXDLIN(1362)					Float dy;
HXLINE(1363)					int b18;
HXDLIN(1363)					int b19 = b->cursor;
HXDLIN(1363)					if ((b19 >= b->data->get_length())) {
HXLINE(1363)						b18 = 0;
            					}
            					else {
HXLINE(1363)						b18 = b->data->readU8(b->cursor++);
            					}
HXLINE(1364)					switch((int)(b18)){
            						case (int)34: {
HXLINE(1368)							if ((sp < 7)) {
HXLINE(1368)								return false;
            							}
HXLINE(1369)							dx1 = s->__get(0);
HXLINE(1370)							dx2 = s->__get(1);
HXLINE(1371)							dy2 = s->__get(2);
HXLINE(1372)							dx3 = s->__get(3);
HXLINE(1373)							dx4 = s->__get(4);
HXLINE(1374)							dx5 = s->__get(5);
HXLINE(1375)							dx6 = s->__get(6);
HXLINE(1376)							{
HXLINE(1376)								Float cx12 = (c->x + dx1);
HXDLIN(1376)								Float cy12 = c->y;
HXDLIN(1376)								Float cx21 = (cx12 + dx2);
HXDLIN(1376)								Float cy21 = (cy12 + dy2);
HXDLIN(1376)								c->x = (cx21 + dx3);
HXDLIN(1376)								c->y = cy21;
HXDLIN(1376)								{
HXLINE(1376)									int x8 = ::Std_obj::_hx_int(c->x);
HXDLIN(1376)									int y8 = ::Std_obj::_hx_int(c->y);
HXDLIN(1376)									int cx3 = ::Std_obj::_hx_int(cx12);
HXDLIN(1376)									int cy3 = ::Std_obj::_hx_int(cy12);
HXDLIN(1376)									int cx13 = ::Std_obj::_hx_int(cx21);
HXDLIN(1376)									int cy13 = ::Std_obj::_hx_int(cy21);
HXDLIN(1376)									if (c->bounds) {
HXLINE(1376)										{
HXLINE(1376)											bool _hx_tmp41;
HXDLIN(1376)											if ((x8 <= c->max_x)) {
HXLINE(1376)												_hx_tmp41 = !(c->started);
            											}
            											else {
HXLINE(1376)												_hx_tmp41 = true;
            											}
HXDLIN(1376)											if (_hx_tmp41) {
HXLINE(1376)												c->max_x = x8;
            											}
HXDLIN(1376)											bool _hx_tmp42;
HXDLIN(1376)											if ((y8 <= c->max_y)) {
HXLINE(1376)												_hx_tmp42 = !(c->started);
            											}
            											else {
HXLINE(1376)												_hx_tmp42 = true;
            											}
HXDLIN(1376)											if (_hx_tmp42) {
HXLINE(1376)												c->max_y = y8;
            											}
HXDLIN(1376)											bool _hx_tmp43;
HXDLIN(1376)											if ((x8 >= c->min_x)) {
HXLINE(1376)												_hx_tmp43 = !(c->started);
            											}
            											else {
HXLINE(1376)												_hx_tmp43 = true;
            											}
HXDLIN(1376)											if (_hx_tmp43) {
HXLINE(1376)												c->min_x = x8;
            											}
HXDLIN(1376)											bool _hx_tmp44;
HXDLIN(1376)											if ((y8 >= c->min_y)) {
HXLINE(1376)												_hx_tmp44 = !(c->started);
            											}
            											else {
HXLINE(1376)												_hx_tmp44 = true;
            											}
HXDLIN(1376)											if (_hx_tmp44) {
HXLINE(1376)												c->min_y = y8;
            											}
HXDLIN(1376)											c->started = true;
            										}
HXDLIN(1376)										{
HXLINE(1376)											{
HXLINE(1376)												bool _hx_tmp45;
HXDLIN(1376)												if ((cx3 <= c->max_x)) {
HXLINE(1376)													_hx_tmp45 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp45 = true;
            												}
HXDLIN(1376)												if (_hx_tmp45) {
HXLINE(1376)													c->max_x = cx3;
            												}
HXDLIN(1376)												bool _hx_tmp46;
HXDLIN(1376)												if ((cy3 <= c->max_y)) {
HXLINE(1376)													_hx_tmp46 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp46 = true;
            												}
HXDLIN(1376)												if (_hx_tmp46) {
HXLINE(1376)													c->max_y = cy3;
            												}
HXDLIN(1376)												bool _hx_tmp47;
HXDLIN(1376)												if ((cx3 >= c->min_x)) {
HXLINE(1376)													_hx_tmp47 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp47 = true;
            												}
HXDLIN(1376)												if (_hx_tmp47) {
HXLINE(1376)													c->min_x = cx3;
            												}
HXDLIN(1376)												bool _hx_tmp48;
HXDLIN(1376)												if ((cy3 >= c->min_y)) {
HXLINE(1376)													_hx_tmp48 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp48 = true;
            												}
HXDLIN(1376)												if (_hx_tmp48) {
HXLINE(1376)													c->min_y = cy3;
            												}
HXDLIN(1376)												c->started = true;
            											}
HXDLIN(1376)											{
HXLINE(1376)												bool _hx_tmp49;
HXDLIN(1376)												if ((cx13 <= c->max_x)) {
HXLINE(1376)													_hx_tmp49 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp49 = true;
            												}
HXDLIN(1376)												if (_hx_tmp49) {
HXLINE(1376)													c->max_x = cx13;
            												}
HXDLIN(1376)												bool _hx_tmp50;
HXDLIN(1376)												if ((cy13 <= c->max_y)) {
HXLINE(1376)													_hx_tmp50 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp50 = true;
            												}
HXDLIN(1376)												if (_hx_tmp50) {
HXLINE(1376)													c->max_y = cy13;
            												}
HXDLIN(1376)												bool _hx_tmp51;
HXDLIN(1376)												if ((cx13 >= c->min_x)) {
HXLINE(1376)													_hx_tmp51 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp51 = true;
            												}
HXDLIN(1376)												if (_hx_tmp51) {
HXLINE(1376)													c->min_x = cx13;
            												}
HXDLIN(1376)												bool _hx_tmp52;
HXDLIN(1376)												if ((cy13 >= c->min_y)) {
HXLINE(1376)													_hx_tmp52 = !(c->started);
            												}
            												else {
HXLINE(1376)													_hx_tmp52 = true;
            												}
HXDLIN(1376)												if (_hx_tmp52) {
HXLINE(1376)													c->min_y = cy13;
            												}
HXDLIN(1376)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1376)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x8,y8,cx3,cy3);
HXDLIN(1376)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx13;
HXDLIN(1376)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy13;
            									}
HXDLIN(1376)									c->num_vertices++;
            								}
            							}
HXLINE(1377)							{
HXLINE(1377)								Float cx14 = (c->x + dx4);
HXDLIN(1377)								Float cy14 = c->y;
HXDLIN(1377)								Float cx22 = (cx14 + dx5);
HXDLIN(1377)								Float cy22 = (cy14 + -(dy2));
HXDLIN(1377)								c->x = (cx22 + dx6);
HXDLIN(1377)								c->y = cy22;
HXDLIN(1377)								{
HXLINE(1377)									int x9 = ::Std_obj::_hx_int(c->x);
HXDLIN(1377)									int y9 = ::Std_obj::_hx_int(c->y);
HXDLIN(1377)									int cx4 = ::Std_obj::_hx_int(cx14);
HXDLIN(1377)									int cy4 = ::Std_obj::_hx_int(cy14);
HXDLIN(1377)									int cx15 = ::Std_obj::_hx_int(cx22);
HXDLIN(1377)									int cy15 = ::Std_obj::_hx_int(cy22);
HXDLIN(1377)									if (c->bounds) {
HXLINE(1377)										{
HXLINE(1377)											bool _hx_tmp53;
HXDLIN(1377)											if ((x9 <= c->max_x)) {
HXLINE(1377)												_hx_tmp53 = !(c->started);
            											}
            											else {
HXLINE(1377)												_hx_tmp53 = true;
            											}
HXDLIN(1377)											if (_hx_tmp53) {
HXLINE(1377)												c->max_x = x9;
            											}
HXDLIN(1377)											bool _hx_tmp54;
HXDLIN(1377)											if ((y9 <= c->max_y)) {
HXLINE(1377)												_hx_tmp54 = !(c->started);
            											}
            											else {
HXLINE(1377)												_hx_tmp54 = true;
            											}
HXDLIN(1377)											if (_hx_tmp54) {
HXLINE(1377)												c->max_y = y9;
            											}
HXDLIN(1377)											bool _hx_tmp55;
HXDLIN(1377)											if ((x9 >= c->min_x)) {
HXLINE(1377)												_hx_tmp55 = !(c->started);
            											}
            											else {
HXLINE(1377)												_hx_tmp55 = true;
            											}
HXDLIN(1377)											if (_hx_tmp55) {
HXLINE(1377)												c->min_x = x9;
            											}
HXDLIN(1377)											bool _hx_tmp56;
HXDLIN(1377)											if ((y9 >= c->min_y)) {
HXLINE(1377)												_hx_tmp56 = !(c->started);
            											}
            											else {
HXLINE(1377)												_hx_tmp56 = true;
            											}
HXDLIN(1377)											if (_hx_tmp56) {
HXLINE(1377)												c->min_y = y9;
            											}
HXDLIN(1377)											c->started = true;
            										}
HXDLIN(1377)										{
HXLINE(1377)											{
HXLINE(1377)												bool _hx_tmp57;
HXDLIN(1377)												if ((cx4 <= c->max_x)) {
HXLINE(1377)													_hx_tmp57 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp57 = true;
            												}
HXDLIN(1377)												if (_hx_tmp57) {
HXLINE(1377)													c->max_x = cx4;
            												}
HXDLIN(1377)												bool _hx_tmp58;
HXDLIN(1377)												if ((cy4 <= c->max_y)) {
HXLINE(1377)													_hx_tmp58 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp58 = true;
            												}
HXDLIN(1377)												if (_hx_tmp58) {
HXLINE(1377)													c->max_y = cy4;
            												}
HXDLIN(1377)												bool _hx_tmp59;
HXDLIN(1377)												if ((cx4 >= c->min_x)) {
HXLINE(1377)													_hx_tmp59 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp59 = true;
            												}
HXDLIN(1377)												if (_hx_tmp59) {
HXLINE(1377)													c->min_x = cx4;
            												}
HXDLIN(1377)												bool _hx_tmp60;
HXDLIN(1377)												if ((cy4 >= c->min_y)) {
HXLINE(1377)													_hx_tmp60 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp60 = true;
            												}
HXDLIN(1377)												if (_hx_tmp60) {
HXLINE(1377)													c->min_y = cy4;
            												}
HXDLIN(1377)												c->started = true;
            											}
HXDLIN(1377)											{
HXLINE(1377)												bool _hx_tmp61;
HXDLIN(1377)												if ((cx15 <= c->max_x)) {
HXLINE(1377)													_hx_tmp61 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp61 = true;
            												}
HXDLIN(1377)												if (_hx_tmp61) {
HXLINE(1377)													c->max_x = cx15;
            												}
HXDLIN(1377)												bool _hx_tmp62;
HXDLIN(1377)												if ((cy15 <= c->max_y)) {
HXLINE(1377)													_hx_tmp62 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp62 = true;
            												}
HXDLIN(1377)												if (_hx_tmp62) {
HXLINE(1377)													c->max_y = cy15;
            												}
HXDLIN(1377)												bool _hx_tmp63;
HXDLIN(1377)												if ((cx15 >= c->min_x)) {
HXLINE(1377)													_hx_tmp63 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp63 = true;
            												}
HXDLIN(1377)												if (_hx_tmp63) {
HXLINE(1377)													c->min_x = cx15;
            												}
HXDLIN(1377)												bool _hx_tmp64;
HXDLIN(1377)												if ((cy15 >= c->min_y)) {
HXLINE(1377)													_hx_tmp64 = !(c->started);
            												}
            												else {
HXLINE(1377)													_hx_tmp64 = true;
            												}
HXDLIN(1377)												if (_hx_tmp64) {
HXLINE(1377)													c->min_y = cy15;
            												}
HXDLIN(1377)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1377)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x9,y9,cx4,cy4);
HXDLIN(1377)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx15;
HXDLIN(1377)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy15;
            									}
HXDLIN(1377)									c->num_vertices++;
            								}
            							}
            						}
            						break;
            						case (int)35: {
HXLINE(1380)							if ((sp < 13)) {
HXLINE(1380)								return false;
            							}
HXLINE(1381)							dx1 = s->__get(0);
HXLINE(1382)							dy1 = s->__get(1);
HXLINE(1383)							dx2 = s->__get(2);
HXLINE(1384)							dy2 = s->__get(3);
HXLINE(1385)							dx3 = s->__get(4);
HXLINE(1386)							dy3 = s->__get(5);
HXLINE(1387)							dx4 = s->__get(6);
HXLINE(1388)							dy4 = s->__get(7);
HXLINE(1389)							dx5 = s->__get(8);
HXLINE(1390)							dy5 = s->__get(9);
HXLINE(1391)							dx6 = s->__get(10);
HXLINE(1392)							dy6 = s->__get(11);
HXLINE(1394)							{
HXLINE(1394)								Float cx16 = (c->x + dx1);
HXDLIN(1394)								Float cy16 = (c->y + dy1);
HXDLIN(1394)								Float cx23 = (cx16 + dx2);
HXDLIN(1394)								Float cy23 = (cy16 + dy2);
HXDLIN(1394)								c->x = (cx23 + dx3);
HXDLIN(1394)								c->y = (cy23 + dy3);
HXDLIN(1394)								{
HXLINE(1394)									int x10 = ::Std_obj::_hx_int(c->x);
HXDLIN(1394)									int y10 = ::Std_obj::_hx_int(c->y);
HXDLIN(1394)									int cx5 = ::Std_obj::_hx_int(cx16);
HXDLIN(1394)									int cy5 = ::Std_obj::_hx_int(cy16);
HXDLIN(1394)									int cx17 = ::Std_obj::_hx_int(cx23);
HXDLIN(1394)									int cy17 = ::Std_obj::_hx_int(cy23);
HXDLIN(1394)									if (c->bounds) {
HXLINE(1394)										{
HXLINE(1394)											bool _hx_tmp65;
HXDLIN(1394)											if ((x10 <= c->max_x)) {
HXLINE(1394)												_hx_tmp65 = !(c->started);
            											}
            											else {
HXLINE(1394)												_hx_tmp65 = true;
            											}
HXDLIN(1394)											if (_hx_tmp65) {
HXLINE(1394)												c->max_x = x10;
            											}
HXDLIN(1394)											bool _hx_tmp66;
HXDLIN(1394)											if ((y10 <= c->max_y)) {
HXLINE(1394)												_hx_tmp66 = !(c->started);
            											}
            											else {
HXLINE(1394)												_hx_tmp66 = true;
            											}
HXDLIN(1394)											if (_hx_tmp66) {
HXLINE(1394)												c->max_y = y10;
            											}
HXDLIN(1394)											bool _hx_tmp67;
HXDLIN(1394)											if ((x10 >= c->min_x)) {
HXLINE(1394)												_hx_tmp67 = !(c->started);
            											}
            											else {
HXLINE(1394)												_hx_tmp67 = true;
            											}
HXDLIN(1394)											if (_hx_tmp67) {
HXLINE(1394)												c->min_x = x10;
            											}
HXDLIN(1394)											bool _hx_tmp68;
HXDLIN(1394)											if ((y10 >= c->min_y)) {
HXLINE(1394)												_hx_tmp68 = !(c->started);
            											}
            											else {
HXLINE(1394)												_hx_tmp68 = true;
            											}
HXDLIN(1394)											if (_hx_tmp68) {
HXLINE(1394)												c->min_y = y10;
            											}
HXDLIN(1394)											c->started = true;
            										}
HXDLIN(1394)										{
HXLINE(1394)											{
HXLINE(1394)												bool _hx_tmp69;
HXDLIN(1394)												if ((cx5 <= c->max_x)) {
HXLINE(1394)													_hx_tmp69 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp69 = true;
            												}
HXDLIN(1394)												if (_hx_tmp69) {
HXLINE(1394)													c->max_x = cx5;
            												}
HXDLIN(1394)												bool _hx_tmp70;
HXDLIN(1394)												if ((cy5 <= c->max_y)) {
HXLINE(1394)													_hx_tmp70 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp70 = true;
            												}
HXDLIN(1394)												if (_hx_tmp70) {
HXLINE(1394)													c->max_y = cy5;
            												}
HXDLIN(1394)												bool _hx_tmp71;
HXDLIN(1394)												if ((cx5 >= c->min_x)) {
HXLINE(1394)													_hx_tmp71 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp71 = true;
            												}
HXDLIN(1394)												if (_hx_tmp71) {
HXLINE(1394)													c->min_x = cx5;
            												}
HXDLIN(1394)												bool _hx_tmp72;
HXDLIN(1394)												if ((cy5 >= c->min_y)) {
HXLINE(1394)													_hx_tmp72 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp72 = true;
            												}
HXDLIN(1394)												if (_hx_tmp72) {
HXLINE(1394)													c->min_y = cy5;
            												}
HXDLIN(1394)												c->started = true;
            											}
HXDLIN(1394)											{
HXLINE(1394)												bool _hx_tmp73;
HXDLIN(1394)												if ((cx17 <= c->max_x)) {
HXLINE(1394)													_hx_tmp73 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp73 = true;
            												}
HXDLIN(1394)												if (_hx_tmp73) {
HXLINE(1394)													c->max_x = cx17;
            												}
HXDLIN(1394)												bool _hx_tmp74;
HXDLIN(1394)												if ((cy17 <= c->max_y)) {
HXLINE(1394)													_hx_tmp74 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp74 = true;
            												}
HXDLIN(1394)												if (_hx_tmp74) {
HXLINE(1394)													c->max_y = cy17;
            												}
HXDLIN(1394)												bool _hx_tmp75;
HXDLIN(1394)												if ((cx17 >= c->min_x)) {
HXLINE(1394)													_hx_tmp75 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp75 = true;
            												}
HXDLIN(1394)												if (_hx_tmp75) {
HXLINE(1394)													c->min_x = cx17;
            												}
HXDLIN(1394)												bool _hx_tmp76;
HXDLIN(1394)												if ((cy17 >= c->min_y)) {
HXLINE(1394)													_hx_tmp76 = !(c->started);
            												}
            												else {
HXLINE(1394)													_hx_tmp76 = true;
            												}
HXDLIN(1394)												if (_hx_tmp76) {
HXLINE(1394)													c->min_y = cy17;
            												}
HXDLIN(1394)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1394)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x10,y10,cx5,cy5);
HXDLIN(1394)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx17;
HXDLIN(1394)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy17;
            									}
HXDLIN(1394)									c->num_vertices++;
            								}
            							}
HXLINE(1395)							{
HXLINE(1395)								Float cx18 = (c->x + dx4);
HXDLIN(1395)								Float cy18 = (c->y + dy4);
HXDLIN(1395)								Float cx24 = (cx18 + dx5);
HXDLIN(1395)								Float cy24 = (cy18 + dy5);
HXDLIN(1395)								c->x = (cx24 + dx6);
HXDLIN(1395)								c->y = (cy24 + dy6);
HXDLIN(1395)								{
HXLINE(1395)									int x11 = ::Std_obj::_hx_int(c->x);
HXDLIN(1395)									int y11 = ::Std_obj::_hx_int(c->y);
HXDLIN(1395)									int cx6 = ::Std_obj::_hx_int(cx18);
HXDLIN(1395)									int cy6 = ::Std_obj::_hx_int(cy18);
HXDLIN(1395)									int cx19 = ::Std_obj::_hx_int(cx24);
HXDLIN(1395)									int cy19 = ::Std_obj::_hx_int(cy24);
HXDLIN(1395)									if (c->bounds) {
HXLINE(1395)										{
HXLINE(1395)											bool _hx_tmp77;
HXDLIN(1395)											if ((x11 <= c->max_x)) {
HXLINE(1395)												_hx_tmp77 = !(c->started);
            											}
            											else {
HXLINE(1395)												_hx_tmp77 = true;
            											}
HXDLIN(1395)											if (_hx_tmp77) {
HXLINE(1395)												c->max_x = x11;
            											}
HXDLIN(1395)											bool _hx_tmp78;
HXDLIN(1395)											if ((y11 <= c->max_y)) {
HXLINE(1395)												_hx_tmp78 = !(c->started);
            											}
            											else {
HXLINE(1395)												_hx_tmp78 = true;
            											}
HXDLIN(1395)											if (_hx_tmp78) {
HXLINE(1395)												c->max_y = y11;
            											}
HXDLIN(1395)											bool _hx_tmp79;
HXDLIN(1395)											if ((x11 >= c->min_x)) {
HXLINE(1395)												_hx_tmp79 = !(c->started);
            											}
            											else {
HXLINE(1395)												_hx_tmp79 = true;
            											}
HXDLIN(1395)											if (_hx_tmp79) {
HXLINE(1395)												c->min_x = x11;
            											}
HXDLIN(1395)											bool _hx_tmp80;
HXDLIN(1395)											if ((y11 >= c->min_y)) {
HXLINE(1395)												_hx_tmp80 = !(c->started);
            											}
            											else {
HXLINE(1395)												_hx_tmp80 = true;
            											}
HXDLIN(1395)											if (_hx_tmp80) {
HXLINE(1395)												c->min_y = y11;
            											}
HXDLIN(1395)											c->started = true;
            										}
HXDLIN(1395)										{
HXLINE(1395)											{
HXLINE(1395)												bool _hx_tmp81;
HXDLIN(1395)												if ((cx6 <= c->max_x)) {
HXLINE(1395)													_hx_tmp81 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp81 = true;
            												}
HXDLIN(1395)												if (_hx_tmp81) {
HXLINE(1395)													c->max_x = cx6;
            												}
HXDLIN(1395)												bool _hx_tmp82;
HXDLIN(1395)												if ((cy6 <= c->max_y)) {
HXLINE(1395)													_hx_tmp82 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp82 = true;
            												}
HXDLIN(1395)												if (_hx_tmp82) {
HXLINE(1395)													c->max_y = cy6;
            												}
HXDLIN(1395)												bool _hx_tmp83;
HXDLIN(1395)												if ((cx6 >= c->min_x)) {
HXLINE(1395)													_hx_tmp83 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp83 = true;
            												}
HXDLIN(1395)												if (_hx_tmp83) {
HXLINE(1395)													c->min_x = cx6;
            												}
HXDLIN(1395)												bool _hx_tmp84;
HXDLIN(1395)												if ((cy6 >= c->min_y)) {
HXLINE(1395)													_hx_tmp84 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp84 = true;
            												}
HXDLIN(1395)												if (_hx_tmp84) {
HXLINE(1395)													c->min_y = cy6;
            												}
HXDLIN(1395)												c->started = true;
            											}
HXDLIN(1395)											{
HXLINE(1395)												bool _hx_tmp85;
HXDLIN(1395)												if ((cx19 <= c->max_x)) {
HXLINE(1395)													_hx_tmp85 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp85 = true;
            												}
HXDLIN(1395)												if (_hx_tmp85) {
HXLINE(1395)													c->max_x = cx19;
            												}
HXDLIN(1395)												bool _hx_tmp86;
HXDLIN(1395)												if ((cy19 <= c->max_y)) {
HXLINE(1395)													_hx_tmp86 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp86 = true;
            												}
HXDLIN(1395)												if (_hx_tmp86) {
HXLINE(1395)													c->max_y = cy19;
            												}
HXDLIN(1395)												bool _hx_tmp87;
HXDLIN(1395)												if ((cx19 >= c->min_x)) {
HXLINE(1395)													_hx_tmp87 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp87 = true;
            												}
HXDLIN(1395)												if (_hx_tmp87) {
HXLINE(1395)													c->min_x = cx19;
            												}
HXDLIN(1395)												bool _hx_tmp88;
HXDLIN(1395)												if ((cy19 >= c->min_y)) {
HXLINE(1395)													_hx_tmp88 = !(c->started);
            												}
            												else {
HXLINE(1395)													_hx_tmp88 = true;
            												}
HXDLIN(1395)												if (_hx_tmp88) {
HXLINE(1395)													c->min_y = cy19;
            												}
HXDLIN(1395)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1395)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x11,y11,cx6,cy6);
HXDLIN(1395)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx19;
HXDLIN(1395)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy19;
            									}
HXDLIN(1395)									c->num_vertices++;
            								}
            							}
            						}
            						break;
            						case (int)36: {
HXLINE(1398)							if ((sp < 9)) {
HXLINE(1398)								return false;
            							}
HXLINE(1399)							dx1 = s->__get(0);
HXLINE(1400)							dy1 = s->__get(1);
HXLINE(1401)							dx2 = s->__get(2);
HXLINE(1402)							dy2 = s->__get(3);
HXLINE(1403)							dx3 = s->__get(4);
HXLINE(1404)							dx4 = s->__get(5);
HXLINE(1405)							dx5 = s->__get(6);
HXLINE(1406)							dy5 = s->__get(7);
HXLINE(1407)							dx6 = s->__get(8);
HXLINE(1408)							{
HXLINE(1408)								Float cx110 = (c->x + dx1);
HXDLIN(1408)								Float cy110 = (c->y + dy1);
HXDLIN(1408)								Float cx25 = (cx110 + dx2);
HXDLIN(1408)								Float cy25 = (cy110 + dy2);
HXDLIN(1408)								c->x = (cx25 + dx3);
HXDLIN(1408)								c->y = cy25;
HXDLIN(1408)								{
HXLINE(1408)									int x12 = ::Std_obj::_hx_int(c->x);
HXDLIN(1408)									int y12 = ::Std_obj::_hx_int(c->y);
HXDLIN(1408)									int cx7 = ::Std_obj::_hx_int(cx110);
HXDLIN(1408)									int cy7 = ::Std_obj::_hx_int(cy110);
HXDLIN(1408)									int cx111 = ::Std_obj::_hx_int(cx25);
HXDLIN(1408)									int cy111 = ::Std_obj::_hx_int(cy25);
HXDLIN(1408)									if (c->bounds) {
HXLINE(1408)										{
HXLINE(1408)											bool _hx_tmp89;
HXDLIN(1408)											if ((x12 <= c->max_x)) {
HXLINE(1408)												_hx_tmp89 = !(c->started);
            											}
            											else {
HXLINE(1408)												_hx_tmp89 = true;
            											}
HXDLIN(1408)											if (_hx_tmp89) {
HXLINE(1408)												c->max_x = x12;
            											}
HXDLIN(1408)											bool _hx_tmp90;
HXDLIN(1408)											if ((y12 <= c->max_y)) {
HXLINE(1408)												_hx_tmp90 = !(c->started);
            											}
            											else {
HXLINE(1408)												_hx_tmp90 = true;
            											}
HXDLIN(1408)											if (_hx_tmp90) {
HXLINE(1408)												c->max_y = y12;
            											}
HXDLIN(1408)											bool _hx_tmp91;
HXDLIN(1408)											if ((x12 >= c->min_x)) {
HXLINE(1408)												_hx_tmp91 = !(c->started);
            											}
            											else {
HXLINE(1408)												_hx_tmp91 = true;
            											}
HXDLIN(1408)											if (_hx_tmp91) {
HXLINE(1408)												c->min_x = x12;
            											}
HXDLIN(1408)											bool _hx_tmp92;
HXDLIN(1408)											if ((y12 >= c->min_y)) {
HXLINE(1408)												_hx_tmp92 = !(c->started);
            											}
            											else {
HXLINE(1408)												_hx_tmp92 = true;
            											}
HXDLIN(1408)											if (_hx_tmp92) {
HXLINE(1408)												c->min_y = y12;
            											}
HXDLIN(1408)											c->started = true;
            										}
HXDLIN(1408)										{
HXLINE(1408)											{
HXLINE(1408)												bool _hx_tmp93;
HXDLIN(1408)												if ((cx7 <= c->max_x)) {
HXLINE(1408)													_hx_tmp93 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp93 = true;
            												}
HXDLIN(1408)												if (_hx_tmp93) {
HXLINE(1408)													c->max_x = cx7;
            												}
HXDLIN(1408)												bool _hx_tmp94;
HXDLIN(1408)												if ((cy7 <= c->max_y)) {
HXLINE(1408)													_hx_tmp94 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp94 = true;
            												}
HXDLIN(1408)												if (_hx_tmp94) {
HXLINE(1408)													c->max_y = cy7;
            												}
HXDLIN(1408)												bool _hx_tmp95;
HXDLIN(1408)												if ((cx7 >= c->min_x)) {
HXLINE(1408)													_hx_tmp95 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp95 = true;
            												}
HXDLIN(1408)												if (_hx_tmp95) {
HXLINE(1408)													c->min_x = cx7;
            												}
HXDLIN(1408)												bool _hx_tmp96;
HXDLIN(1408)												if ((cy7 >= c->min_y)) {
HXLINE(1408)													_hx_tmp96 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp96 = true;
            												}
HXDLIN(1408)												if (_hx_tmp96) {
HXLINE(1408)													c->min_y = cy7;
            												}
HXDLIN(1408)												c->started = true;
            											}
HXDLIN(1408)											{
HXLINE(1408)												bool _hx_tmp97;
HXDLIN(1408)												if ((cx111 <= c->max_x)) {
HXLINE(1408)													_hx_tmp97 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp97 = true;
            												}
HXDLIN(1408)												if (_hx_tmp97) {
HXLINE(1408)													c->max_x = cx111;
            												}
HXDLIN(1408)												bool _hx_tmp98;
HXDLIN(1408)												if ((cy111 <= c->max_y)) {
HXLINE(1408)													_hx_tmp98 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp98 = true;
            												}
HXDLIN(1408)												if (_hx_tmp98) {
HXLINE(1408)													c->max_y = cy111;
            												}
HXDLIN(1408)												bool _hx_tmp99;
HXDLIN(1408)												if ((cx111 >= c->min_x)) {
HXLINE(1408)													_hx_tmp99 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp99 = true;
            												}
HXDLIN(1408)												if (_hx_tmp99) {
HXLINE(1408)													c->min_x = cx111;
            												}
HXDLIN(1408)												bool _hx_tmp100;
HXDLIN(1408)												if ((cy111 >= c->min_y)) {
HXLINE(1408)													_hx_tmp100 = !(c->started);
            												}
            												else {
HXLINE(1408)													_hx_tmp100 = true;
            												}
HXDLIN(1408)												if (_hx_tmp100) {
HXLINE(1408)													c->min_y = cy111;
            												}
HXDLIN(1408)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1408)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x12,y12,cx7,cy7);
HXDLIN(1408)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx111;
HXDLIN(1408)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy111;
            									}
HXDLIN(1408)									c->num_vertices++;
            								}
            							}
HXLINE(1409)							{
HXLINE(1409)								Float cx112 = (c->x + dx4);
HXDLIN(1409)								Float cy112 = c->y;
HXDLIN(1409)								Float cx26 = (cx112 + dx5);
HXDLIN(1409)								Float cy26 = (cy112 + dy5);
HXDLIN(1409)								c->x = (cx26 + dx6);
HXDLIN(1409)								c->y = (cy26 + -(((dy1 + dy2) + dy5)));
HXDLIN(1409)								{
HXLINE(1409)									int x13 = ::Std_obj::_hx_int(c->x);
HXDLIN(1409)									int y13 = ::Std_obj::_hx_int(c->y);
HXDLIN(1409)									int cx8 = ::Std_obj::_hx_int(cx112);
HXDLIN(1409)									int cy8 = ::Std_obj::_hx_int(cy112);
HXDLIN(1409)									int cx113 = ::Std_obj::_hx_int(cx26);
HXDLIN(1409)									int cy113 = ::Std_obj::_hx_int(cy26);
HXDLIN(1409)									if (c->bounds) {
HXLINE(1409)										{
HXLINE(1409)											bool _hx_tmp101;
HXDLIN(1409)											if ((x13 <= c->max_x)) {
HXLINE(1409)												_hx_tmp101 = !(c->started);
            											}
            											else {
HXLINE(1409)												_hx_tmp101 = true;
            											}
HXDLIN(1409)											if (_hx_tmp101) {
HXLINE(1409)												c->max_x = x13;
            											}
HXDLIN(1409)											bool _hx_tmp102;
HXDLIN(1409)											if ((y13 <= c->max_y)) {
HXLINE(1409)												_hx_tmp102 = !(c->started);
            											}
            											else {
HXLINE(1409)												_hx_tmp102 = true;
            											}
HXDLIN(1409)											if (_hx_tmp102) {
HXLINE(1409)												c->max_y = y13;
            											}
HXDLIN(1409)											bool _hx_tmp103;
HXDLIN(1409)											if ((x13 >= c->min_x)) {
HXLINE(1409)												_hx_tmp103 = !(c->started);
            											}
            											else {
HXLINE(1409)												_hx_tmp103 = true;
            											}
HXDLIN(1409)											if (_hx_tmp103) {
HXLINE(1409)												c->min_x = x13;
            											}
HXDLIN(1409)											bool _hx_tmp104;
HXDLIN(1409)											if ((y13 >= c->min_y)) {
HXLINE(1409)												_hx_tmp104 = !(c->started);
            											}
            											else {
HXLINE(1409)												_hx_tmp104 = true;
            											}
HXDLIN(1409)											if (_hx_tmp104) {
HXLINE(1409)												c->min_y = y13;
            											}
HXDLIN(1409)											c->started = true;
            										}
HXDLIN(1409)										{
HXLINE(1409)											{
HXLINE(1409)												bool _hx_tmp105;
HXDLIN(1409)												if ((cx8 <= c->max_x)) {
HXLINE(1409)													_hx_tmp105 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp105 = true;
            												}
HXDLIN(1409)												if (_hx_tmp105) {
HXLINE(1409)													c->max_x = cx8;
            												}
HXDLIN(1409)												bool _hx_tmp106;
HXDLIN(1409)												if ((cy8 <= c->max_y)) {
HXLINE(1409)													_hx_tmp106 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp106 = true;
            												}
HXDLIN(1409)												if (_hx_tmp106) {
HXLINE(1409)													c->max_y = cy8;
            												}
HXDLIN(1409)												bool _hx_tmp107;
HXDLIN(1409)												if ((cx8 >= c->min_x)) {
HXLINE(1409)													_hx_tmp107 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp107 = true;
            												}
HXDLIN(1409)												if (_hx_tmp107) {
HXLINE(1409)													c->min_x = cx8;
            												}
HXDLIN(1409)												bool _hx_tmp108;
HXDLIN(1409)												if ((cy8 >= c->min_y)) {
HXLINE(1409)													_hx_tmp108 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp108 = true;
            												}
HXDLIN(1409)												if (_hx_tmp108) {
HXLINE(1409)													c->min_y = cy8;
            												}
HXDLIN(1409)												c->started = true;
            											}
HXDLIN(1409)											{
HXLINE(1409)												bool _hx_tmp109;
HXDLIN(1409)												if ((cx113 <= c->max_x)) {
HXLINE(1409)													_hx_tmp109 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp109 = true;
            												}
HXDLIN(1409)												if (_hx_tmp109) {
HXLINE(1409)													c->max_x = cx113;
            												}
HXDLIN(1409)												bool _hx_tmp110;
HXDLIN(1409)												if ((cy113 <= c->max_y)) {
HXLINE(1409)													_hx_tmp110 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp110 = true;
            												}
HXDLIN(1409)												if (_hx_tmp110) {
HXLINE(1409)													c->max_y = cy113;
            												}
HXDLIN(1409)												bool _hx_tmp111;
HXDLIN(1409)												if ((cx113 >= c->min_x)) {
HXLINE(1409)													_hx_tmp111 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp111 = true;
            												}
HXDLIN(1409)												if (_hx_tmp111) {
HXLINE(1409)													c->min_x = cx113;
            												}
HXDLIN(1409)												bool _hx_tmp112;
HXDLIN(1409)												if ((cy113 >= c->min_y)) {
HXLINE(1409)													_hx_tmp112 = !(c->started);
            												}
            												else {
HXLINE(1409)													_hx_tmp112 = true;
            												}
HXDLIN(1409)												if (_hx_tmp112) {
HXLINE(1409)													c->min_y = cy113;
            												}
HXDLIN(1409)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1409)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x13,y13,cx8,cy8);
HXDLIN(1409)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx113;
HXDLIN(1409)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy113;
            									}
HXDLIN(1409)									c->num_vertices++;
            								}
            							}
            						}
            						break;
            						case (int)37: {
HXLINE(1412)							if ((sp < 11)) {
HXLINE(1412)								return false;
            							}
HXLINE(1413)							dx1 = s->__get(0);
HXLINE(1414)							dy1 = s->__get(1);
HXLINE(1415)							dx2 = s->__get(2);
HXLINE(1416)							dy2 = s->__get(3);
HXLINE(1417)							dx3 = s->__get(4);
HXLINE(1418)							dy3 = s->__get(5);
HXLINE(1419)							dx4 = s->__get(6);
HXLINE(1420)							dy4 = s->__get(7);
HXLINE(1421)							dx5 = s->__get(8);
HXLINE(1422)							dy5 = s->__get(9);
HXLINE(1423)							dy6 = s->__get(10);
HXDLIN(1423)							dx6 = dy6;
HXLINE(1424)							dx = ((((dx1 + dx2) + dx3) + dx4) + dx5);
HXLINE(1425)							dy = ((((dy1 + dy2) + dy3) + dy4) + dy5);
HXLINE(1426)							if ((::Math_obj::abs(dx) > ::Math_obj::abs(dy))) {
HXLINE(1427)								dy6 = -(dy);
            							}
            							else {
HXLINE(1429)								dx6 = -(dx);
            							}
HXLINE(1430)							{
HXLINE(1430)								Float cx114 = (c->x + dx1);
HXDLIN(1430)								Float cy114 = (c->y + dy1);
HXDLIN(1430)								Float cx27 = (cx114 + dx2);
HXDLIN(1430)								Float cy27 = (cy114 + dy2);
HXDLIN(1430)								c->x = (cx27 + dx3);
HXDLIN(1430)								c->y = (cy27 + dy3);
HXDLIN(1430)								{
HXLINE(1430)									int x14 = ::Std_obj::_hx_int(c->x);
HXDLIN(1430)									int y14 = ::Std_obj::_hx_int(c->y);
HXDLIN(1430)									int cx9 = ::Std_obj::_hx_int(cx114);
HXDLIN(1430)									int cy9 = ::Std_obj::_hx_int(cy114);
HXDLIN(1430)									int cx115 = ::Std_obj::_hx_int(cx27);
HXDLIN(1430)									int cy115 = ::Std_obj::_hx_int(cy27);
HXDLIN(1430)									if (c->bounds) {
HXLINE(1430)										{
HXLINE(1430)											bool _hx_tmp113;
HXDLIN(1430)											if ((x14 <= c->max_x)) {
HXLINE(1430)												_hx_tmp113 = !(c->started);
            											}
            											else {
HXLINE(1430)												_hx_tmp113 = true;
            											}
HXDLIN(1430)											if (_hx_tmp113) {
HXLINE(1430)												c->max_x = x14;
            											}
HXDLIN(1430)											bool _hx_tmp114;
HXDLIN(1430)											if ((y14 <= c->max_y)) {
HXLINE(1430)												_hx_tmp114 = !(c->started);
            											}
            											else {
HXLINE(1430)												_hx_tmp114 = true;
            											}
HXDLIN(1430)											if (_hx_tmp114) {
HXLINE(1430)												c->max_y = y14;
            											}
HXDLIN(1430)											bool _hx_tmp115;
HXDLIN(1430)											if ((x14 >= c->min_x)) {
HXLINE(1430)												_hx_tmp115 = !(c->started);
            											}
            											else {
HXLINE(1430)												_hx_tmp115 = true;
            											}
HXDLIN(1430)											if (_hx_tmp115) {
HXLINE(1430)												c->min_x = x14;
            											}
HXDLIN(1430)											bool _hx_tmp116;
HXDLIN(1430)											if ((y14 >= c->min_y)) {
HXLINE(1430)												_hx_tmp116 = !(c->started);
            											}
            											else {
HXLINE(1430)												_hx_tmp116 = true;
            											}
HXDLIN(1430)											if (_hx_tmp116) {
HXLINE(1430)												c->min_y = y14;
            											}
HXDLIN(1430)											c->started = true;
            										}
HXDLIN(1430)										{
HXLINE(1430)											{
HXLINE(1430)												bool _hx_tmp117;
HXDLIN(1430)												if ((cx9 <= c->max_x)) {
HXLINE(1430)													_hx_tmp117 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp117 = true;
            												}
HXDLIN(1430)												if (_hx_tmp117) {
HXLINE(1430)													c->max_x = cx9;
            												}
HXDLIN(1430)												bool _hx_tmp118;
HXDLIN(1430)												if ((cy9 <= c->max_y)) {
HXLINE(1430)													_hx_tmp118 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp118 = true;
            												}
HXDLIN(1430)												if (_hx_tmp118) {
HXLINE(1430)													c->max_y = cy9;
            												}
HXDLIN(1430)												bool _hx_tmp119;
HXDLIN(1430)												if ((cx9 >= c->min_x)) {
HXLINE(1430)													_hx_tmp119 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp119 = true;
            												}
HXDLIN(1430)												if (_hx_tmp119) {
HXLINE(1430)													c->min_x = cx9;
            												}
HXDLIN(1430)												bool _hx_tmp120;
HXDLIN(1430)												if ((cy9 >= c->min_y)) {
HXLINE(1430)													_hx_tmp120 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp120 = true;
            												}
HXDLIN(1430)												if (_hx_tmp120) {
HXLINE(1430)													c->min_y = cy9;
            												}
HXDLIN(1430)												c->started = true;
            											}
HXDLIN(1430)											{
HXLINE(1430)												bool _hx_tmp121;
HXDLIN(1430)												if ((cx115 <= c->max_x)) {
HXLINE(1430)													_hx_tmp121 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp121 = true;
            												}
HXDLIN(1430)												if (_hx_tmp121) {
HXLINE(1430)													c->max_x = cx115;
            												}
HXDLIN(1430)												bool _hx_tmp122;
HXDLIN(1430)												if ((cy115 <= c->max_y)) {
HXLINE(1430)													_hx_tmp122 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp122 = true;
            												}
HXDLIN(1430)												if (_hx_tmp122) {
HXLINE(1430)													c->max_y = cy115;
            												}
HXDLIN(1430)												bool _hx_tmp123;
HXDLIN(1430)												if ((cx115 >= c->min_x)) {
HXLINE(1430)													_hx_tmp123 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp123 = true;
            												}
HXDLIN(1430)												if (_hx_tmp123) {
HXLINE(1430)													c->min_x = cx115;
            												}
HXDLIN(1430)												bool _hx_tmp124;
HXDLIN(1430)												if ((cy115 >= c->min_y)) {
HXLINE(1430)													_hx_tmp124 = !(c->started);
            												}
            												else {
HXLINE(1430)													_hx_tmp124 = true;
            												}
HXDLIN(1430)												if (_hx_tmp124) {
HXLINE(1430)													c->min_y = cy115;
            												}
HXDLIN(1430)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1430)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x14,y14,cx9,cy9);
HXDLIN(1430)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx115;
HXDLIN(1430)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy115;
            									}
HXDLIN(1430)									c->num_vertices++;
            								}
            							}
HXLINE(1431)							{
HXLINE(1431)								Float cx116 = (c->x + dx4);
HXDLIN(1431)								Float cy116 = (c->y + dy4);
HXDLIN(1431)								Float cx28 = (cx116 + dx5);
HXDLIN(1431)								Float cy28 = (cy116 + dy5);
HXDLIN(1431)								c->x = (cx28 + dx6);
HXDLIN(1431)								c->y = (cy28 + dy6);
HXDLIN(1431)								{
HXLINE(1431)									int x15 = ::Std_obj::_hx_int(c->x);
HXDLIN(1431)									int y15 = ::Std_obj::_hx_int(c->y);
HXDLIN(1431)									int cx10 = ::Std_obj::_hx_int(cx116);
HXDLIN(1431)									int cy10 = ::Std_obj::_hx_int(cy116);
HXDLIN(1431)									int cx117 = ::Std_obj::_hx_int(cx28);
HXDLIN(1431)									int cy117 = ::Std_obj::_hx_int(cy28);
HXDLIN(1431)									if (c->bounds) {
HXLINE(1431)										{
HXLINE(1431)											bool _hx_tmp125;
HXDLIN(1431)											if ((x15 <= c->max_x)) {
HXLINE(1431)												_hx_tmp125 = !(c->started);
            											}
            											else {
HXLINE(1431)												_hx_tmp125 = true;
            											}
HXDLIN(1431)											if (_hx_tmp125) {
HXLINE(1431)												c->max_x = x15;
            											}
HXDLIN(1431)											bool _hx_tmp126;
HXDLIN(1431)											if ((y15 <= c->max_y)) {
HXLINE(1431)												_hx_tmp126 = !(c->started);
            											}
            											else {
HXLINE(1431)												_hx_tmp126 = true;
            											}
HXDLIN(1431)											if (_hx_tmp126) {
HXLINE(1431)												c->max_y = y15;
            											}
HXDLIN(1431)											bool _hx_tmp127;
HXDLIN(1431)											if ((x15 >= c->min_x)) {
HXLINE(1431)												_hx_tmp127 = !(c->started);
            											}
            											else {
HXLINE(1431)												_hx_tmp127 = true;
            											}
HXDLIN(1431)											if (_hx_tmp127) {
HXLINE(1431)												c->min_x = x15;
            											}
HXDLIN(1431)											bool _hx_tmp128;
HXDLIN(1431)											if ((y15 >= c->min_y)) {
HXLINE(1431)												_hx_tmp128 = !(c->started);
            											}
            											else {
HXLINE(1431)												_hx_tmp128 = true;
            											}
HXDLIN(1431)											if (_hx_tmp128) {
HXLINE(1431)												c->min_y = y15;
            											}
HXDLIN(1431)											c->started = true;
            										}
HXDLIN(1431)										{
HXLINE(1431)											{
HXLINE(1431)												bool _hx_tmp129;
HXDLIN(1431)												if ((cx10 <= c->max_x)) {
HXLINE(1431)													_hx_tmp129 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp129 = true;
            												}
HXDLIN(1431)												if (_hx_tmp129) {
HXLINE(1431)													c->max_x = cx10;
            												}
HXDLIN(1431)												bool _hx_tmp130;
HXDLIN(1431)												if ((cy10 <= c->max_y)) {
HXLINE(1431)													_hx_tmp130 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp130 = true;
            												}
HXDLIN(1431)												if (_hx_tmp130) {
HXLINE(1431)													c->max_y = cy10;
            												}
HXDLIN(1431)												bool _hx_tmp131;
HXDLIN(1431)												if ((cx10 >= c->min_x)) {
HXLINE(1431)													_hx_tmp131 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp131 = true;
            												}
HXDLIN(1431)												if (_hx_tmp131) {
HXLINE(1431)													c->min_x = cx10;
            												}
HXDLIN(1431)												bool _hx_tmp132;
HXDLIN(1431)												if ((cy10 >= c->min_y)) {
HXLINE(1431)													_hx_tmp132 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp132 = true;
            												}
HXDLIN(1431)												if (_hx_tmp132) {
HXLINE(1431)													c->min_y = cy10;
            												}
HXDLIN(1431)												c->started = true;
            											}
HXDLIN(1431)											{
HXLINE(1431)												bool _hx_tmp133;
HXDLIN(1431)												if ((cx117 <= c->max_x)) {
HXLINE(1431)													_hx_tmp133 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp133 = true;
            												}
HXDLIN(1431)												if (_hx_tmp133) {
HXLINE(1431)													c->max_x = cx117;
            												}
HXDLIN(1431)												bool _hx_tmp134;
HXDLIN(1431)												if ((cy117 <= c->max_y)) {
HXLINE(1431)													_hx_tmp134 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp134 = true;
            												}
HXDLIN(1431)												if (_hx_tmp134) {
HXLINE(1431)													c->max_y = cy117;
            												}
HXDLIN(1431)												bool _hx_tmp135;
HXDLIN(1431)												if ((cx117 >= c->min_x)) {
HXLINE(1431)													_hx_tmp135 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp135 = true;
            												}
HXDLIN(1431)												if (_hx_tmp135) {
HXLINE(1431)													c->min_x = cx117;
            												}
HXDLIN(1431)												bool _hx_tmp136;
HXDLIN(1431)												if ((cy117 >= c->min_y)) {
HXLINE(1431)													_hx_tmp136 = !(c->started);
            												}
            												else {
HXLINE(1431)													_hx_tmp136 = true;
            												}
HXDLIN(1431)												if (_hx_tmp136) {
HXLINE(1431)													c->min_y = cy117;
            												}
HXDLIN(1431)												c->started = true;
            											}
            										}
            									}
            									else {
HXLINE(1431)										::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x15,y15,cx10,cy10);
HXDLIN(1431)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx117;
HXDLIN(1431)										( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy117;
            									}
HXDLIN(1431)									c->num_vertices++;
            								}
            							}
            						}
            						break;
            						default:{
HXLINE(1434)							return false;
            						}
            					}
            				}
            				break;
            				case (int)14: {
HXLINE(1357)					bool _hx_tmp137;
HXDLIN(1357)					if ((c->first_x == c->x)) {
HXLINE(1357)						_hx_tmp137 = (c->first_y != c->y);
            					}
            					else {
HXLINE(1357)						_hx_tmp137 = true;
            					}
HXDLIN(1357)					if (_hx_tmp137) {
HXLINE(1357)						int x16 = ::Std_obj::_hx_int(c->first_x);
HXDLIN(1357)						int y16 = ::Std_obj::_hx_int(c->first_y);
HXDLIN(1357)						if (c->bounds) {
HXLINE(1357)							bool _hx_tmp138;
HXDLIN(1357)							if ((x16 <= c->max_x)) {
HXLINE(1357)								_hx_tmp138 = !(c->started);
            							}
            							else {
HXLINE(1357)								_hx_tmp138 = true;
            							}
HXDLIN(1357)							if (_hx_tmp138) {
HXLINE(1357)								c->max_x = x16;
            							}
HXDLIN(1357)							bool _hx_tmp139;
HXDLIN(1357)							if ((y16 <= c->max_y)) {
HXLINE(1357)								_hx_tmp139 = !(c->started);
            							}
            							else {
HXLINE(1357)								_hx_tmp139 = true;
            							}
HXDLIN(1357)							if (_hx_tmp139) {
HXLINE(1357)								c->max_y = y16;
            							}
HXDLIN(1357)							bool _hx_tmp140;
HXDLIN(1357)							if ((x16 >= c->min_x)) {
HXLINE(1357)								_hx_tmp140 = !(c->started);
            							}
            							else {
HXLINE(1357)								_hx_tmp140 = true;
            							}
HXDLIN(1357)							if (_hx_tmp140) {
HXLINE(1357)								c->min_x = x16;
            							}
HXDLIN(1357)							bool _hx_tmp141;
HXDLIN(1357)							if ((y16 >= c->min_y)) {
HXLINE(1357)								_hx_tmp141 = !(c->started);
            							}
            							else {
HXLINE(1357)								_hx_tmp141 = true;
            							}
HXDLIN(1357)							if (_hx_tmp141) {
HXLINE(1357)								c->min_y = y16;
            							}
HXDLIN(1357)							c->started = true;
            						}
            						else {
HXLINE(1357)							::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x16,y16,0,0);
HXDLIN(1357)							( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1357)							( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            						}
HXDLIN(1357)						c->num_vertices++;
            					}
HXLINE(1358)					return true;
            				}
            				break;
            				case (int)19: case (int)20: {
HXLINE(1214)					if (in_header) {
HXLINE(1215)						maskbits = (maskbits + ::Std_obj::_hx_int((( (Float)(sp) ) / ( (Float)(2) ))));
            					}
HXLINE(1216)					in_header = false;
HXLINE(1217)					{
HXLINE(1217)						int o2 = ::Std_obj::_hx_int((( (Float)((maskbits + 7)) ) / ( (Float)(8) )));
HXDLIN(1217)						{
HXLINE(1217)							int o3 = (b->cursor + o2);
HXDLIN(1217)							{
HXLINE(1217)								bool value1;
HXDLIN(1217)								if ((o3 <= b->data->get_length())) {
HXLINE(1217)									value1 = (o3 < 0);
            								}
            								else {
HXLINE(1217)									value1 = true;
            								}
HXDLIN(1217)								if (!(!(value1))) {
HXLINE(1217)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN(1217)							int _hx_tmp142;
HXDLIN(1217)							bool _hx_tmp143;
HXDLIN(1217)							if ((o3 <= b->data->get_length())) {
HXLINE(1217)								_hx_tmp143 = (o3 < 0);
            							}
            							else {
HXLINE(1217)								_hx_tmp143 = true;
            							}
HXDLIN(1217)							if (_hx_tmp143) {
HXLINE(1217)								_hx_tmp142 = b->data->get_length();
            							}
            							else {
HXLINE(1217)								_hx_tmp142 = o3;
            							}
HXDLIN(1217)							b->cursor = _hx_tmp142;
            						}
            					}
            				}
            				break;
            				case (int)21: {
HXLINE(1226)					in_header = false;
HXLINE(1227)					if ((sp < 2)) {
HXLINE(1227)						return false;
            					}
HXLINE(1228)					{
HXLINE(1228)						bool _hx_tmp144;
HXDLIN(1228)						if ((c->first_x == c->x)) {
HXLINE(1228)							_hx_tmp144 = (c->first_y != c->y);
            						}
            						else {
HXLINE(1228)							_hx_tmp144 = true;
            						}
HXDLIN(1228)						if (_hx_tmp144) {
HXLINE(1228)							int x17 = ::Std_obj::_hx_int(c->first_x);
HXDLIN(1228)							int y17 = ::Std_obj::_hx_int(c->first_y);
HXDLIN(1228)							if (c->bounds) {
HXLINE(1228)								bool _hx_tmp145;
HXDLIN(1228)								if ((x17 <= c->max_x)) {
HXLINE(1228)									_hx_tmp145 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp145 = true;
            								}
HXDLIN(1228)								if (_hx_tmp145) {
HXLINE(1228)									c->max_x = x17;
            								}
HXDLIN(1228)								bool _hx_tmp146;
HXDLIN(1228)								if ((y17 <= c->max_y)) {
HXLINE(1228)									_hx_tmp146 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp146 = true;
            								}
HXDLIN(1228)								if (_hx_tmp146) {
HXLINE(1228)									c->max_y = y17;
            								}
HXDLIN(1228)								bool _hx_tmp147;
HXDLIN(1228)								if ((x17 >= c->min_x)) {
HXLINE(1228)									_hx_tmp147 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp147 = true;
            								}
HXDLIN(1228)								if (_hx_tmp147) {
HXLINE(1228)									c->min_x = x17;
            								}
HXDLIN(1228)								bool _hx_tmp148;
HXDLIN(1228)								if ((y17 >= c->min_y)) {
HXLINE(1228)									_hx_tmp148 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp148 = true;
            								}
HXDLIN(1228)								if (_hx_tmp148) {
HXLINE(1228)									c->min_y = y17;
            								}
HXDLIN(1228)								c->started = true;
            							}
            							else {
HXLINE(1228)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x17,y17,0,0);
HXDLIN(1228)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1228)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1228)							c->num_vertices++;
            						}
HXDLIN(1228)						c->first_x = (c->x = (c->x + s->__get((sp - 2))));
HXDLIN(1228)						c->first_y = (c->y = (c->y + s->__get((sp - 1))));
HXDLIN(1228)						{
HXLINE(1228)							int x18 = ::Std_obj::_hx_int(c->x);
HXDLIN(1228)							int y18 = ::Std_obj::_hx_int(c->y);
HXDLIN(1228)							if (c->bounds) {
HXLINE(1228)								bool _hx_tmp149;
HXDLIN(1228)								if ((x18 <= c->max_x)) {
HXLINE(1228)									_hx_tmp149 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp149 = true;
            								}
HXDLIN(1228)								if (_hx_tmp149) {
HXLINE(1228)									c->max_x = x18;
            								}
HXDLIN(1228)								bool _hx_tmp150;
HXDLIN(1228)								if ((y18 <= c->max_y)) {
HXLINE(1228)									_hx_tmp150 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp150 = true;
            								}
HXDLIN(1228)								if (_hx_tmp150) {
HXLINE(1228)									c->max_y = y18;
            								}
HXDLIN(1228)								bool _hx_tmp151;
HXDLIN(1228)								if ((x18 >= c->min_x)) {
HXLINE(1228)									_hx_tmp151 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp151 = true;
            								}
HXDLIN(1228)								if (_hx_tmp151) {
HXLINE(1228)									c->min_x = x18;
            								}
HXDLIN(1228)								bool _hx_tmp152;
HXDLIN(1228)								if ((y18 >= c->min_y)) {
HXLINE(1228)									_hx_tmp152 = !(c->started);
            								}
            								else {
HXLINE(1228)									_hx_tmp152 = true;
            								}
HXDLIN(1228)								if (_hx_tmp152) {
HXLINE(1228)									c->min_y = y18;
            								}
HXDLIN(1228)								c->started = true;
            							}
            							else {
HXLINE(1228)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),1,x18,y18,0,0);
HXDLIN(1228)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1228)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1228)							c->num_vertices++;
            						}
            					}
            				}
            				break;
            				case (int)22: {
HXLINE(1234)					in_header = false;
HXLINE(1235)					if ((sp < 1)) {
HXLINE(1235)						return false;
            					}
HXLINE(1236)					{
HXLINE(1236)						bool _hx_tmp153;
HXDLIN(1236)						if ((c->first_x == c->x)) {
HXLINE(1236)							_hx_tmp153 = (c->first_y != c->y);
            						}
            						else {
HXLINE(1236)							_hx_tmp153 = true;
            						}
HXDLIN(1236)						if (_hx_tmp153) {
HXLINE(1236)							int x19 = ::Std_obj::_hx_int(c->first_x);
HXDLIN(1236)							int y19 = ::Std_obj::_hx_int(c->first_y);
HXDLIN(1236)							if (c->bounds) {
HXLINE(1236)								bool _hx_tmp154;
HXDLIN(1236)								if ((x19 <= c->max_x)) {
HXLINE(1236)									_hx_tmp154 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp154 = true;
            								}
HXDLIN(1236)								if (_hx_tmp154) {
HXLINE(1236)									c->max_x = x19;
            								}
HXDLIN(1236)								bool _hx_tmp155;
HXDLIN(1236)								if ((y19 <= c->max_y)) {
HXLINE(1236)									_hx_tmp155 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp155 = true;
            								}
HXDLIN(1236)								if (_hx_tmp155) {
HXLINE(1236)									c->max_y = y19;
            								}
HXDLIN(1236)								bool _hx_tmp156;
HXDLIN(1236)								if ((x19 >= c->min_x)) {
HXLINE(1236)									_hx_tmp156 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp156 = true;
            								}
HXDLIN(1236)								if (_hx_tmp156) {
HXLINE(1236)									c->min_x = x19;
            								}
HXDLIN(1236)								bool _hx_tmp157;
HXDLIN(1236)								if ((y19 >= c->min_y)) {
HXLINE(1236)									_hx_tmp157 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp157 = true;
            								}
HXDLIN(1236)								if (_hx_tmp157) {
HXLINE(1236)									c->min_y = y19;
            								}
HXDLIN(1236)								c->started = true;
            							}
            							else {
HXLINE(1236)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x19,y19,0,0);
HXDLIN(1236)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1236)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1236)							c->num_vertices++;
            						}
HXDLIN(1236)						c->first_x = (c->x = (c->x + s->__get((sp - 1))));
HXDLIN(1236)						c->first_y = (c->y = c->y);
HXDLIN(1236)						{
HXLINE(1236)							int x20 = ::Std_obj::_hx_int(c->x);
HXDLIN(1236)							int y20 = ::Std_obj::_hx_int(c->y);
HXDLIN(1236)							if (c->bounds) {
HXLINE(1236)								bool _hx_tmp158;
HXDLIN(1236)								if ((x20 <= c->max_x)) {
HXLINE(1236)									_hx_tmp158 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp158 = true;
            								}
HXDLIN(1236)								if (_hx_tmp158) {
HXLINE(1236)									c->max_x = x20;
            								}
HXDLIN(1236)								bool _hx_tmp159;
HXDLIN(1236)								if ((y20 <= c->max_y)) {
HXLINE(1236)									_hx_tmp159 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp159 = true;
            								}
HXDLIN(1236)								if (_hx_tmp159) {
HXLINE(1236)									c->max_y = y20;
            								}
HXDLIN(1236)								bool _hx_tmp160;
HXDLIN(1236)								if ((x20 >= c->min_x)) {
HXLINE(1236)									_hx_tmp160 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp160 = true;
            								}
HXDLIN(1236)								if (_hx_tmp160) {
HXLINE(1236)									c->min_x = x20;
            								}
HXDLIN(1236)								bool _hx_tmp161;
HXDLIN(1236)								if ((y20 >= c->min_y)) {
HXLINE(1236)									_hx_tmp161 = !(c->started);
            								}
            								else {
HXLINE(1236)									_hx_tmp161 = true;
            								}
HXDLIN(1236)								if (_hx_tmp161) {
HXLINE(1236)									c->min_y = y20;
            								}
HXDLIN(1236)								c->started = true;
            							}
            							else {
HXLINE(1236)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),1,x20,y20,0,0);
HXDLIN(1236)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1236)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1236)							c->num_vertices++;
            						}
            					}
            				}
            				break;
            				case (int)24: {
HXLINE(1302)					if ((sp < 8)) {
HXLINE(1302)						return false;
            					}
HXLINE(1303)					while(((i + 5) < (sp - 2))){
HXLINE(1304)						{
HXLINE(1304)							Float cx118 = (c->x + s->__get(i));
HXDLIN(1304)							Float cy118 = (c->y + s->__get((i + 1)));
HXDLIN(1304)							Float cx29 = (cx118 + s->__get((i + 2)));
HXDLIN(1304)							Float cy29 = (cy118 + s->__get((i + 3)));
HXDLIN(1304)							c->x = (cx29 + s->__get((i + 4)));
HXDLIN(1304)							c->y = (cy29 + s->__get((i + 5)));
HXDLIN(1304)							{
HXLINE(1304)								int x21 = ::Std_obj::_hx_int(c->x);
HXDLIN(1304)								int y21 = ::Std_obj::_hx_int(c->y);
HXDLIN(1304)								int cx20 = ::Std_obj::_hx_int(cx118);
HXDLIN(1304)								int cy20 = ::Std_obj::_hx_int(cy118);
HXDLIN(1304)								int cx119 = ::Std_obj::_hx_int(cx29);
HXDLIN(1304)								int cy119 = ::Std_obj::_hx_int(cy29);
HXDLIN(1304)								if (c->bounds) {
HXLINE(1304)									{
HXLINE(1304)										bool _hx_tmp162;
HXDLIN(1304)										if ((x21 <= c->max_x)) {
HXLINE(1304)											_hx_tmp162 = !(c->started);
            										}
            										else {
HXLINE(1304)											_hx_tmp162 = true;
            										}
HXDLIN(1304)										if (_hx_tmp162) {
HXLINE(1304)											c->max_x = x21;
            										}
HXDLIN(1304)										bool _hx_tmp163;
HXDLIN(1304)										if ((y21 <= c->max_y)) {
HXLINE(1304)											_hx_tmp163 = !(c->started);
            										}
            										else {
HXLINE(1304)											_hx_tmp163 = true;
            										}
HXDLIN(1304)										if (_hx_tmp163) {
HXLINE(1304)											c->max_y = y21;
            										}
HXDLIN(1304)										bool _hx_tmp164;
HXDLIN(1304)										if ((x21 >= c->min_x)) {
HXLINE(1304)											_hx_tmp164 = !(c->started);
            										}
            										else {
HXLINE(1304)											_hx_tmp164 = true;
            										}
HXDLIN(1304)										if (_hx_tmp164) {
HXLINE(1304)											c->min_x = x21;
            										}
HXDLIN(1304)										bool _hx_tmp165;
HXDLIN(1304)										if ((y21 >= c->min_y)) {
HXLINE(1304)											_hx_tmp165 = !(c->started);
            										}
            										else {
HXLINE(1304)											_hx_tmp165 = true;
            										}
HXDLIN(1304)										if (_hx_tmp165) {
HXLINE(1304)											c->min_y = y21;
            										}
HXDLIN(1304)										c->started = true;
            									}
HXDLIN(1304)									{
HXLINE(1304)										{
HXLINE(1304)											bool _hx_tmp166;
HXDLIN(1304)											if ((cx20 <= c->max_x)) {
HXLINE(1304)												_hx_tmp166 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp166 = true;
            											}
HXDLIN(1304)											if (_hx_tmp166) {
HXLINE(1304)												c->max_x = cx20;
            											}
HXDLIN(1304)											bool _hx_tmp167;
HXDLIN(1304)											if ((cy20 <= c->max_y)) {
HXLINE(1304)												_hx_tmp167 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp167 = true;
            											}
HXDLIN(1304)											if (_hx_tmp167) {
HXLINE(1304)												c->max_y = cy20;
            											}
HXDLIN(1304)											bool _hx_tmp168;
HXDLIN(1304)											if ((cx20 >= c->min_x)) {
HXLINE(1304)												_hx_tmp168 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp168 = true;
            											}
HXDLIN(1304)											if (_hx_tmp168) {
HXLINE(1304)												c->min_x = cx20;
            											}
HXDLIN(1304)											bool _hx_tmp169;
HXDLIN(1304)											if ((cy20 >= c->min_y)) {
HXLINE(1304)												_hx_tmp169 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp169 = true;
            											}
HXDLIN(1304)											if (_hx_tmp169) {
HXLINE(1304)												c->min_y = cy20;
            											}
HXDLIN(1304)											c->started = true;
            										}
HXDLIN(1304)										{
HXLINE(1304)											bool _hx_tmp170;
HXDLIN(1304)											if ((cx119 <= c->max_x)) {
HXLINE(1304)												_hx_tmp170 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp170 = true;
            											}
HXDLIN(1304)											if (_hx_tmp170) {
HXLINE(1304)												c->max_x = cx119;
            											}
HXDLIN(1304)											bool _hx_tmp171;
HXDLIN(1304)											if ((cy119 <= c->max_y)) {
HXLINE(1304)												_hx_tmp171 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp171 = true;
            											}
HXDLIN(1304)											if (_hx_tmp171) {
HXLINE(1304)												c->max_y = cy119;
            											}
HXDLIN(1304)											bool _hx_tmp172;
HXDLIN(1304)											if ((cx119 >= c->min_x)) {
HXLINE(1304)												_hx_tmp172 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp172 = true;
            											}
HXDLIN(1304)											if (_hx_tmp172) {
HXLINE(1304)												c->min_x = cx119;
            											}
HXDLIN(1304)											bool _hx_tmp173;
HXDLIN(1304)											if ((cy119 >= c->min_y)) {
HXLINE(1304)												_hx_tmp173 = !(c->started);
            											}
            											else {
HXLINE(1304)												_hx_tmp173 = true;
            											}
HXDLIN(1304)											if (_hx_tmp173) {
HXLINE(1304)												c->min_y = cy119;
            											}
HXDLIN(1304)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1304)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x21,y21,cx20,cy20);
HXDLIN(1304)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx119;
HXDLIN(1304)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy119;
            								}
HXDLIN(1304)								c->num_vertices++;
            							}
            						}
HXLINE(1305)						i = (i + 6);
            					}
HXLINE(1307)					if (((i + 1) >= sp)) {
HXLINE(1307)						return false;
            					}
HXLINE(1308)					{
HXLINE(1308)						 ::kha::graphics2::truetype::Stbtt__csctx c11 = c;
HXDLIN(1308)						c11->x = (c11->x + s->__get(i));
HXDLIN(1308)						 ::kha::graphics2::truetype::Stbtt__csctx c12 = c;
HXDLIN(1308)						c12->y = (c12->y + s->__get((i + 1)));
HXDLIN(1308)						{
HXLINE(1308)							int x22 = ::Std_obj::_hx_int(c->x);
HXDLIN(1308)							int y22 = ::Std_obj::_hx_int(c->y);
HXDLIN(1308)							if (c->bounds) {
HXLINE(1308)								bool _hx_tmp174;
HXDLIN(1308)								if ((x22 <= c->max_x)) {
HXLINE(1308)									_hx_tmp174 = !(c->started);
            								}
            								else {
HXLINE(1308)									_hx_tmp174 = true;
            								}
HXDLIN(1308)								if (_hx_tmp174) {
HXLINE(1308)									c->max_x = x22;
            								}
HXDLIN(1308)								bool _hx_tmp175;
HXDLIN(1308)								if ((y22 <= c->max_y)) {
HXLINE(1308)									_hx_tmp175 = !(c->started);
            								}
            								else {
HXLINE(1308)									_hx_tmp175 = true;
            								}
HXDLIN(1308)								if (_hx_tmp175) {
HXLINE(1308)									c->max_y = y22;
            								}
HXDLIN(1308)								bool _hx_tmp176;
HXDLIN(1308)								if ((x22 >= c->min_x)) {
HXLINE(1308)									_hx_tmp176 = !(c->started);
            								}
            								else {
HXLINE(1308)									_hx_tmp176 = true;
            								}
HXDLIN(1308)								if (_hx_tmp176) {
HXLINE(1308)									c->min_x = x22;
            								}
HXDLIN(1308)								bool _hx_tmp177;
HXDLIN(1308)								if ((y22 >= c->min_y)) {
HXLINE(1308)									_hx_tmp177 = !(c->started);
            								}
            								else {
HXLINE(1308)									_hx_tmp177 = true;
            								}
HXDLIN(1308)								if (_hx_tmp177) {
HXLINE(1308)									c->min_y = y22;
            								}
HXDLIN(1308)								c->started = true;
            							}
            							else {
HXLINE(1308)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x22,y22,0,0);
HXDLIN(1308)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1308)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            							}
HXDLIN(1308)							c->num_vertices++;
            						}
            					}
            				}
            				break;
            				case (int)25: {
HXLINE(1311)					if ((sp < 8)) {
HXLINE(1311)						return false;
            					}
HXLINE(1312)					while(((i + 1) < (sp - 6))){
HXLINE(1313)						{
HXLINE(1313)							 ::kha::graphics2::truetype::Stbtt__csctx c13 = c;
HXDLIN(1313)							c13->x = (c13->x + s->__get(i));
HXDLIN(1313)							 ::kha::graphics2::truetype::Stbtt__csctx c14 = c;
HXDLIN(1313)							c14->y = (c14->y + s->__get((i + 1)));
HXDLIN(1313)							{
HXLINE(1313)								int x23 = ::Std_obj::_hx_int(c->x);
HXDLIN(1313)								int y23 = ::Std_obj::_hx_int(c->y);
HXDLIN(1313)								if (c->bounds) {
HXLINE(1313)									bool _hx_tmp178;
HXDLIN(1313)									if ((x23 <= c->max_x)) {
HXLINE(1313)										_hx_tmp178 = !(c->started);
            									}
            									else {
HXLINE(1313)										_hx_tmp178 = true;
            									}
HXDLIN(1313)									if (_hx_tmp178) {
HXLINE(1313)										c->max_x = x23;
            									}
HXDLIN(1313)									bool _hx_tmp179;
HXDLIN(1313)									if ((y23 <= c->max_y)) {
HXLINE(1313)										_hx_tmp179 = !(c->started);
            									}
            									else {
HXLINE(1313)										_hx_tmp179 = true;
            									}
HXDLIN(1313)									if (_hx_tmp179) {
HXLINE(1313)										c->max_y = y23;
            									}
HXDLIN(1313)									bool _hx_tmp180;
HXDLIN(1313)									if ((x23 >= c->min_x)) {
HXLINE(1313)										_hx_tmp180 = !(c->started);
            									}
            									else {
HXLINE(1313)										_hx_tmp180 = true;
            									}
HXDLIN(1313)									if (_hx_tmp180) {
HXLINE(1313)										c->min_x = x23;
            									}
HXDLIN(1313)									bool _hx_tmp181;
HXDLIN(1313)									if ((y23 >= c->min_y)) {
HXLINE(1313)										_hx_tmp181 = !(c->started);
            									}
            									else {
HXLINE(1313)										_hx_tmp181 = true;
            									}
HXDLIN(1313)									if (_hx_tmp181) {
HXLINE(1313)										c->min_y = y23;
            									}
HXDLIN(1313)									c->started = true;
            								}
            								else {
HXLINE(1313)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),2,x23,y23,0,0);
HXDLIN(1313)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = 0;
HXDLIN(1313)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = 0;
            								}
HXDLIN(1313)								c->num_vertices++;
            							}
            						}
HXLINE(1314)						i = (i + 2);
            					}
HXLINE(1316)					if (((i + 5) >= sp)) {
HXLINE(1316)						return false;
            					}
HXLINE(1317)					{
HXLINE(1317)						Float cx120 = (c->x + s->__get(i));
HXDLIN(1317)						Float cy120 = (c->y + s->__get((i + 1)));
HXDLIN(1317)						Float cx210 = (cx120 + s->__get((i + 2)));
HXDLIN(1317)						Float cy210 = (cy120 + s->__get((i + 3)));
HXDLIN(1317)						c->x = (cx210 + s->__get((i + 4)));
HXDLIN(1317)						c->y = (cy210 + s->__get((i + 5)));
HXDLIN(1317)						{
HXLINE(1317)							int x24 = ::Std_obj::_hx_int(c->x);
HXDLIN(1317)							int y24 = ::Std_obj::_hx_int(c->y);
HXDLIN(1317)							int cx30 = ::Std_obj::_hx_int(cx120);
HXDLIN(1317)							int cy30 = ::Std_obj::_hx_int(cy120);
HXDLIN(1317)							int cx121 = ::Std_obj::_hx_int(cx210);
HXDLIN(1317)							int cy121 = ::Std_obj::_hx_int(cy210);
HXDLIN(1317)							if (c->bounds) {
HXLINE(1317)								{
HXLINE(1317)									bool _hx_tmp182;
HXDLIN(1317)									if ((x24 <= c->max_x)) {
HXLINE(1317)										_hx_tmp182 = !(c->started);
            									}
            									else {
HXLINE(1317)										_hx_tmp182 = true;
            									}
HXDLIN(1317)									if (_hx_tmp182) {
HXLINE(1317)										c->max_x = x24;
            									}
HXDLIN(1317)									bool _hx_tmp183;
HXDLIN(1317)									if ((y24 <= c->max_y)) {
HXLINE(1317)										_hx_tmp183 = !(c->started);
            									}
            									else {
HXLINE(1317)										_hx_tmp183 = true;
            									}
HXDLIN(1317)									if (_hx_tmp183) {
HXLINE(1317)										c->max_y = y24;
            									}
HXDLIN(1317)									bool _hx_tmp184;
HXDLIN(1317)									if ((x24 >= c->min_x)) {
HXLINE(1317)										_hx_tmp184 = !(c->started);
            									}
            									else {
HXLINE(1317)										_hx_tmp184 = true;
            									}
HXDLIN(1317)									if (_hx_tmp184) {
HXLINE(1317)										c->min_x = x24;
            									}
HXDLIN(1317)									bool _hx_tmp185;
HXDLIN(1317)									if ((y24 >= c->min_y)) {
HXLINE(1317)										_hx_tmp185 = !(c->started);
            									}
            									else {
HXLINE(1317)										_hx_tmp185 = true;
            									}
HXDLIN(1317)									if (_hx_tmp185) {
HXLINE(1317)										c->min_y = y24;
            									}
HXDLIN(1317)									c->started = true;
            								}
HXDLIN(1317)								{
HXLINE(1317)									{
HXLINE(1317)										bool _hx_tmp186;
HXDLIN(1317)										if ((cx30 <= c->max_x)) {
HXLINE(1317)											_hx_tmp186 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp186 = true;
            										}
HXDLIN(1317)										if (_hx_tmp186) {
HXLINE(1317)											c->max_x = cx30;
            										}
HXDLIN(1317)										bool _hx_tmp187;
HXDLIN(1317)										if ((cy30 <= c->max_y)) {
HXLINE(1317)											_hx_tmp187 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp187 = true;
            										}
HXDLIN(1317)										if (_hx_tmp187) {
HXLINE(1317)											c->max_y = cy30;
            										}
HXDLIN(1317)										bool _hx_tmp188;
HXDLIN(1317)										if ((cx30 >= c->min_x)) {
HXLINE(1317)											_hx_tmp188 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp188 = true;
            										}
HXDLIN(1317)										if (_hx_tmp188) {
HXLINE(1317)											c->min_x = cx30;
            										}
HXDLIN(1317)										bool _hx_tmp189;
HXDLIN(1317)										if ((cy30 >= c->min_y)) {
HXLINE(1317)											_hx_tmp189 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp189 = true;
            										}
HXDLIN(1317)										if (_hx_tmp189) {
HXLINE(1317)											c->min_y = cy30;
            										}
HXDLIN(1317)										c->started = true;
            									}
HXDLIN(1317)									{
HXLINE(1317)										bool _hx_tmp190;
HXDLIN(1317)										if ((cx121 <= c->max_x)) {
HXLINE(1317)											_hx_tmp190 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp190 = true;
            										}
HXDLIN(1317)										if (_hx_tmp190) {
HXLINE(1317)											c->max_x = cx121;
            										}
HXDLIN(1317)										bool _hx_tmp191;
HXDLIN(1317)										if ((cy121 <= c->max_y)) {
HXLINE(1317)											_hx_tmp191 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp191 = true;
            										}
HXDLIN(1317)										if (_hx_tmp191) {
HXLINE(1317)											c->max_y = cy121;
            										}
HXDLIN(1317)										bool _hx_tmp192;
HXDLIN(1317)										if ((cx121 >= c->min_x)) {
HXLINE(1317)											_hx_tmp192 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp192 = true;
            										}
HXDLIN(1317)										if (_hx_tmp192) {
HXLINE(1317)											c->min_x = cx121;
            										}
HXDLIN(1317)										bool _hx_tmp193;
HXDLIN(1317)										if ((cy121 >= c->min_y)) {
HXLINE(1317)											_hx_tmp193 = !(c->started);
            										}
            										else {
HXLINE(1317)											_hx_tmp193 = true;
            										}
HXDLIN(1317)										if (_hx_tmp193) {
HXLINE(1317)											c->min_y = cy121;
            										}
HXDLIN(1317)										c->started = true;
            									}
            								}
            							}
            							else {
HXLINE(1317)								::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x24,y24,cx30,cy30);
HXDLIN(1317)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx121;
HXDLIN(1317)								( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy121;
            							}
HXDLIN(1317)							c->num_vertices++;
            						}
            					}
            				}
            				break;
            				case (int)26: case (int)27: {
HXLINE(1321)					if ((sp < 4)) {
HXLINE(1321)						return false;
            					}
HXLINE(1322)					f = ((Float)0.0);
HXLINE(1323)					if (((sp & 1) != 0)) {
HXLINE(1323)						f = s->__get(i);
HXDLIN(1323)						i = (i + 1);
            					}
HXLINE(1324)					while(((i + 3) < sp)){
HXLINE(1325)						if ((b0 == 27)) {
HXLINE(1326)							Float cx122 = (c->x + s->__get(i));
HXDLIN(1326)							Float cy122 = (c->y + f);
HXDLIN(1326)							Float cx211 = (cx122 + s->__get((i + 1)));
HXDLIN(1326)							Float cy211 = (cy122 + s->__get((i + 2)));
HXDLIN(1326)							c->x = (cx211 + s->__get((i + 3)));
HXDLIN(1326)							c->y = cy211;
HXDLIN(1326)							{
HXLINE(1326)								int x25 = ::Std_obj::_hx_int(c->x);
HXDLIN(1326)								int y25 = ::Std_obj::_hx_int(c->y);
HXDLIN(1326)								int cx31 = ::Std_obj::_hx_int(cx122);
HXDLIN(1326)								int cy31 = ::Std_obj::_hx_int(cy122);
HXDLIN(1326)								int cx123 = ::Std_obj::_hx_int(cx211);
HXDLIN(1326)								int cy123 = ::Std_obj::_hx_int(cy211);
HXDLIN(1326)								if (c->bounds) {
HXLINE(1326)									{
HXLINE(1326)										bool _hx_tmp194;
HXDLIN(1326)										if ((x25 <= c->max_x)) {
HXLINE(1326)											_hx_tmp194 = !(c->started);
            										}
            										else {
HXLINE(1326)											_hx_tmp194 = true;
            										}
HXDLIN(1326)										if (_hx_tmp194) {
HXLINE(1326)											c->max_x = x25;
            										}
HXDLIN(1326)										bool _hx_tmp195;
HXDLIN(1326)										if ((y25 <= c->max_y)) {
HXLINE(1326)											_hx_tmp195 = !(c->started);
            										}
            										else {
HXLINE(1326)											_hx_tmp195 = true;
            										}
HXDLIN(1326)										if (_hx_tmp195) {
HXLINE(1326)											c->max_y = y25;
            										}
HXDLIN(1326)										bool _hx_tmp196;
HXDLIN(1326)										if ((x25 >= c->min_x)) {
HXLINE(1326)											_hx_tmp196 = !(c->started);
            										}
            										else {
HXLINE(1326)											_hx_tmp196 = true;
            										}
HXDLIN(1326)										if (_hx_tmp196) {
HXLINE(1326)											c->min_x = x25;
            										}
HXDLIN(1326)										bool _hx_tmp197;
HXDLIN(1326)										if ((y25 >= c->min_y)) {
HXLINE(1326)											_hx_tmp197 = !(c->started);
            										}
            										else {
HXLINE(1326)											_hx_tmp197 = true;
            										}
HXDLIN(1326)										if (_hx_tmp197) {
HXLINE(1326)											c->min_y = y25;
            										}
HXDLIN(1326)										c->started = true;
            									}
HXDLIN(1326)									{
HXLINE(1326)										{
HXLINE(1326)											bool _hx_tmp198;
HXDLIN(1326)											if ((cx31 <= c->max_x)) {
HXLINE(1326)												_hx_tmp198 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp198 = true;
            											}
HXDLIN(1326)											if (_hx_tmp198) {
HXLINE(1326)												c->max_x = cx31;
            											}
HXDLIN(1326)											bool _hx_tmp199;
HXDLIN(1326)											if ((cy31 <= c->max_y)) {
HXLINE(1326)												_hx_tmp199 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp199 = true;
            											}
HXDLIN(1326)											if (_hx_tmp199) {
HXLINE(1326)												c->max_y = cy31;
            											}
HXDLIN(1326)											bool _hx_tmp200;
HXDLIN(1326)											if ((cx31 >= c->min_x)) {
HXLINE(1326)												_hx_tmp200 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp200 = true;
            											}
HXDLIN(1326)											if (_hx_tmp200) {
HXLINE(1326)												c->min_x = cx31;
            											}
HXDLIN(1326)											bool _hx_tmp201;
HXDLIN(1326)											if ((cy31 >= c->min_y)) {
HXLINE(1326)												_hx_tmp201 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp201 = true;
            											}
HXDLIN(1326)											if (_hx_tmp201) {
HXLINE(1326)												c->min_y = cy31;
            											}
HXDLIN(1326)											c->started = true;
            										}
HXDLIN(1326)										{
HXLINE(1326)											bool _hx_tmp202;
HXDLIN(1326)											if ((cx123 <= c->max_x)) {
HXLINE(1326)												_hx_tmp202 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp202 = true;
            											}
HXDLIN(1326)											if (_hx_tmp202) {
HXLINE(1326)												c->max_x = cx123;
            											}
HXDLIN(1326)											bool _hx_tmp203;
HXDLIN(1326)											if ((cy123 <= c->max_y)) {
HXLINE(1326)												_hx_tmp203 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp203 = true;
            											}
HXDLIN(1326)											if (_hx_tmp203) {
HXLINE(1326)												c->max_y = cy123;
            											}
HXDLIN(1326)											bool _hx_tmp204;
HXDLIN(1326)											if ((cx123 >= c->min_x)) {
HXLINE(1326)												_hx_tmp204 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp204 = true;
            											}
HXDLIN(1326)											if (_hx_tmp204) {
HXLINE(1326)												c->min_x = cx123;
            											}
HXDLIN(1326)											bool _hx_tmp205;
HXDLIN(1326)											if ((cy123 >= c->min_y)) {
HXLINE(1326)												_hx_tmp205 = !(c->started);
            											}
            											else {
HXLINE(1326)												_hx_tmp205 = true;
            											}
HXDLIN(1326)											if (_hx_tmp205) {
HXLINE(1326)												c->min_y = cy123;
            											}
HXDLIN(1326)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1326)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x25,y25,cx31,cy31);
HXDLIN(1326)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx123;
HXDLIN(1326)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy123;
            								}
HXDLIN(1326)								c->num_vertices++;
            							}
            						}
            						else {
HXLINE(1328)							Float cx124 = (c->x + f);
HXDLIN(1328)							Float cy124 = (c->y + s->__get(i));
HXDLIN(1328)							Float cx212 = (cx124 + s->__get((i + 1)));
HXDLIN(1328)							Float cy212 = (cy124 + s->__get((i + 2)));
HXDLIN(1328)							c->x = cx212;
HXDLIN(1328)							c->y = (cy212 + s->__get((i + 3)));
HXDLIN(1328)							{
HXLINE(1328)								int x26 = ::Std_obj::_hx_int(c->x);
HXDLIN(1328)								int y26 = ::Std_obj::_hx_int(c->y);
HXDLIN(1328)								int cx32 = ::Std_obj::_hx_int(cx124);
HXDLIN(1328)								int cy32 = ::Std_obj::_hx_int(cy124);
HXDLIN(1328)								int cx125 = ::Std_obj::_hx_int(cx212);
HXDLIN(1328)								int cy125 = ::Std_obj::_hx_int(cy212);
HXDLIN(1328)								if (c->bounds) {
HXLINE(1328)									{
HXLINE(1328)										bool _hx_tmp206;
HXDLIN(1328)										if ((x26 <= c->max_x)) {
HXLINE(1328)											_hx_tmp206 = !(c->started);
            										}
            										else {
HXLINE(1328)											_hx_tmp206 = true;
            										}
HXDLIN(1328)										if (_hx_tmp206) {
HXLINE(1328)											c->max_x = x26;
            										}
HXDLIN(1328)										bool _hx_tmp207;
HXDLIN(1328)										if ((y26 <= c->max_y)) {
HXLINE(1328)											_hx_tmp207 = !(c->started);
            										}
            										else {
HXLINE(1328)											_hx_tmp207 = true;
            										}
HXDLIN(1328)										if (_hx_tmp207) {
HXLINE(1328)											c->max_y = y26;
            										}
HXDLIN(1328)										bool _hx_tmp208;
HXDLIN(1328)										if ((x26 >= c->min_x)) {
HXLINE(1328)											_hx_tmp208 = !(c->started);
            										}
            										else {
HXLINE(1328)											_hx_tmp208 = true;
            										}
HXDLIN(1328)										if (_hx_tmp208) {
HXLINE(1328)											c->min_x = x26;
            										}
HXDLIN(1328)										bool _hx_tmp209;
HXDLIN(1328)										if ((y26 >= c->min_y)) {
HXLINE(1328)											_hx_tmp209 = !(c->started);
            										}
            										else {
HXLINE(1328)											_hx_tmp209 = true;
            										}
HXDLIN(1328)										if (_hx_tmp209) {
HXLINE(1328)											c->min_y = y26;
            										}
HXDLIN(1328)										c->started = true;
            									}
HXDLIN(1328)									{
HXLINE(1328)										{
HXLINE(1328)											bool _hx_tmp210;
HXDLIN(1328)											if ((cx32 <= c->max_x)) {
HXLINE(1328)												_hx_tmp210 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp210 = true;
            											}
HXDLIN(1328)											if (_hx_tmp210) {
HXLINE(1328)												c->max_x = cx32;
            											}
HXDLIN(1328)											bool _hx_tmp211;
HXDLIN(1328)											if ((cy32 <= c->max_y)) {
HXLINE(1328)												_hx_tmp211 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp211 = true;
            											}
HXDLIN(1328)											if (_hx_tmp211) {
HXLINE(1328)												c->max_y = cy32;
            											}
HXDLIN(1328)											bool _hx_tmp212;
HXDLIN(1328)											if ((cx32 >= c->min_x)) {
HXLINE(1328)												_hx_tmp212 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp212 = true;
            											}
HXDLIN(1328)											if (_hx_tmp212) {
HXLINE(1328)												c->min_x = cx32;
            											}
HXDLIN(1328)											bool _hx_tmp213;
HXDLIN(1328)											if ((cy32 >= c->min_y)) {
HXLINE(1328)												_hx_tmp213 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp213 = true;
            											}
HXDLIN(1328)											if (_hx_tmp213) {
HXLINE(1328)												c->min_y = cy32;
            											}
HXDLIN(1328)											c->started = true;
            										}
HXDLIN(1328)										{
HXLINE(1328)											bool _hx_tmp214;
HXDLIN(1328)											if ((cx125 <= c->max_x)) {
HXLINE(1328)												_hx_tmp214 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp214 = true;
            											}
HXDLIN(1328)											if (_hx_tmp214) {
HXLINE(1328)												c->max_x = cx125;
            											}
HXDLIN(1328)											bool _hx_tmp215;
HXDLIN(1328)											if ((cy125 <= c->max_y)) {
HXLINE(1328)												_hx_tmp215 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp215 = true;
            											}
HXDLIN(1328)											if (_hx_tmp215) {
HXLINE(1328)												c->max_y = cy125;
            											}
HXDLIN(1328)											bool _hx_tmp216;
HXDLIN(1328)											if ((cx125 >= c->min_x)) {
HXLINE(1328)												_hx_tmp216 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp216 = true;
            											}
HXDLIN(1328)											if (_hx_tmp216) {
HXLINE(1328)												c->min_x = cx125;
            											}
HXDLIN(1328)											bool _hx_tmp217;
HXDLIN(1328)											if ((cy125 >= c->min_y)) {
HXLINE(1328)												_hx_tmp217 = !(c->started);
            											}
            											else {
HXLINE(1328)												_hx_tmp217 = true;
            											}
HXDLIN(1328)											if (_hx_tmp217) {
HXLINE(1328)												c->min_y = cy125;
            											}
HXDLIN(1328)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1328)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x26,y26,cx32,cy32);
HXDLIN(1328)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx125;
HXDLIN(1328)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy125;
            								}
HXDLIN(1328)								c->num_vertices++;
            							}
            						}
HXLINE(1329)						f = ((Float)0.0);
HXLINE(1330)						i = (i + 4);
            					}
            				}
            				break;
            				case (int)10: case (int)29: {
HXLINE(1335)					if ((b0 == 10)) {
HXLINE(1336)						if (!(has_subrs)) {
HXLINE(1337)							if ((info->fdselect->data->get_length() != 0)) {
HXLINE(1338)								 ::kha::graphics2::truetype::Stbtt__buf fdselect = info->fdselect;
HXDLIN(1338)								int nranges;
HXDLIN(1338)								int start1;
HXDLIN(1338)								int end1;
HXDLIN(1338)								int v7;
HXDLIN(1338)								int fmt;
HXDLIN(1338)								int fdselector = -1;
HXDLIN(1338)								 ::Dynamic i4;
HXDLIN(1338)								{
HXLINE(1338)									if ((0 > fdselect->data->get_length())) {
HXLINE(1338)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
HXDLIN(1338)									int subrs1;
HXDLIN(1338)									if ((0 > fdselect->data->get_length())) {
HXLINE(1338)										subrs1 = fdselect->data->get_length();
            									}
            									else {
HXLINE(1338)										subrs1 = 0;
            									}
HXDLIN(1338)									fdselect->cursor = subrs1;
            								}
HXDLIN(1338)								int fdselect1 = fdselect->cursor;
HXDLIN(1338)								if ((fdselect1 >= fdselect->data->get_length())) {
HXLINE(1338)									fmt = 0;
            								}
            								else {
HXLINE(1338)									fmt = fdselect->data->readU8(fdselect->cursor++);
            								}
HXDLIN(1338)								if ((fmt == 0)) {
HXLINE(1338)									{
HXLINE(1338)										int o4 = (fdselect->cursor + glyph_index);
HXDLIN(1338)										{
HXLINE(1338)											bool value2;
HXDLIN(1338)											if ((o4 <= fdselect->data->get_length())) {
HXLINE(1338)												value2 = (o4 < 0);
            											}
            											else {
HXLINE(1338)												value2 = true;
            											}
HXDLIN(1338)											if (!(!(value2))) {
HXLINE(1338)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
            										}
HXDLIN(1338)										int subrs2;
HXDLIN(1338)										bool subrs3;
HXDLIN(1338)										if ((o4 <= fdselect->data->get_length())) {
HXLINE(1338)											subrs3 = (o4 < 0);
            										}
            										else {
HXLINE(1338)											subrs3 = true;
            										}
HXDLIN(1338)										if (subrs3) {
HXLINE(1338)											subrs2 = fdselect->data->get_length();
            										}
            										else {
HXLINE(1338)											subrs2 = o4;
            										}
HXDLIN(1338)										fdselect->cursor = subrs2;
            									}
HXDLIN(1338)									int fdselect2 = fdselect->cursor;
HXDLIN(1338)									if ((fdselect2 >= fdselect->data->get_length())) {
HXLINE(1338)										fdselector = 0;
            									}
            									else {
HXLINE(1338)										fdselector = fdselect->data->readU8(fdselect->cursor++);
            									}
            								}
            								else {
HXLINE(1338)									if ((fmt == 3)) {
HXLINE(1338)										int v8 = 0;
HXDLIN(1338)										{
HXLINE(1338)											int _g5 = 0;
HXDLIN(1338)											int _g14 = 2;
HXDLIN(1338)											while((_g5 < _g14)){
HXLINE(1338)												_g5 = (_g5 + 1);
HXDLIN(1338)												int i5 = (_g5 - 1);
HXDLIN(1338)												int v9;
HXDLIN(1338)												int fdselect3 = fdselect->cursor;
HXDLIN(1338)												if ((fdselect3 >= fdselect->data->get_length())) {
HXLINE(1338)													v9 = 0;
            												}
            												else {
HXLINE(1338)													v9 = fdselect->data->readU8(fdselect->cursor++);
            												}
HXDLIN(1338)												v8 = ((v8 << 8) | v9);
            											}
            										}
HXDLIN(1338)										nranges = v8;
HXDLIN(1338)										int v10 = 0;
HXDLIN(1338)										{
HXLINE(1338)											int _g6 = 0;
HXDLIN(1338)											int _g15 = 2;
HXDLIN(1338)											while((_g6 < _g15)){
HXLINE(1338)												_g6 = (_g6 + 1);
HXDLIN(1338)												int i6 = (_g6 - 1);
HXDLIN(1338)												int v11;
HXDLIN(1338)												int fdselect4 = fdselect->cursor;
HXDLIN(1338)												if ((fdselect4 >= fdselect->data->get_length())) {
HXLINE(1338)													v11 = 0;
            												}
            												else {
HXLINE(1338)													v11 = fdselect->data->readU8(fdselect->cursor++);
            												}
HXDLIN(1338)												v10 = ((v10 << 8) | v11);
            											}
            										}
HXDLIN(1338)										start1 = v10;
HXDLIN(1338)										{
HXLINE(1338)											int _g7 = 0;
HXDLIN(1338)											int _g16 = nranges;
HXDLIN(1338)											while((_g7 < _g16)){
HXLINE(1338)												_g7 = (_g7 + 1);
HXDLIN(1338)												int i7 = (_g7 - 1);
HXDLIN(1338)												int fdselect5 = fdselect->cursor;
HXDLIN(1338)												if ((fdselect5 >= fdselect->data->get_length())) {
HXLINE(1338)													v7 = 0;
            												}
            												else {
HXLINE(1338)													v7 = fdselect->data->readU8(fdselect->cursor++);
            												}
HXDLIN(1338)												int v12 = 0;
HXDLIN(1338)												{
HXLINE(1338)													int _g8 = 0;
HXDLIN(1338)													int _g17 = 2;
HXDLIN(1338)													while((_g8 < _g17)){
HXLINE(1338)														_g8 = (_g8 + 1);
HXDLIN(1338)														int i8 = (_g8 - 1);
HXDLIN(1338)														int v13;
HXDLIN(1338)														int fdselect6 = fdselect->cursor;
HXDLIN(1338)														if ((fdselect6 >= fdselect->data->get_length())) {
HXLINE(1338)															v13 = 0;
            														}
            														else {
HXLINE(1338)															v13 = fdselect->data->readU8(fdselect->cursor++);
            														}
HXDLIN(1338)														v12 = ((v12 << 8) | v13);
            													}
            												}
HXDLIN(1338)												end1 = v12;
HXDLIN(1338)												bool subrs4;
HXDLIN(1338)												if ((glyph_index >= start1)) {
HXLINE(1338)													subrs4 = (glyph_index < end1);
            												}
            												else {
HXLINE(1338)													subrs4 = false;
            												}
HXDLIN(1338)												if (subrs4) {
HXLINE(1338)													fdselector = v7;
HXDLIN(1338)													goto _hx_goto_231;
            												}
HXDLIN(1338)												start1 = end1;
            											}
            											_hx_goto_231:;
            										}
            									}
            								}
HXDLIN(1338)								if ((fdselector == -1)) {
HXLINE(1338)									 ::kha::internal::BytesBlob p1 = null();
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf r2 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)									r2->_hx_set_data(HX_CTX, p1);
HXDLIN(1338)									r2->cursor = 0;
            								}
HXDLIN(1338)								 ::kha::graphics2::truetype::Stbtt__buf cff = info->cff;
HXDLIN(1338)								 ::kha::graphics2::truetype::Stbtt__buf b20 = info->fontdicts;
HXDLIN(1338)								{
HXLINE(1338)									if ((0 > b20->data->get_length())) {
HXLINE(1338)										HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            									}
HXDLIN(1338)									int subrs5;
HXDLIN(1338)									if ((0 > b20->data->get_length())) {
HXLINE(1338)										subrs5 = b20->data->get_length();
            									}
            									else {
HXLINE(1338)										subrs5 = 0;
            									}
HXDLIN(1338)									b20->cursor = subrs5;
            								}
HXDLIN(1338)								int v14 = 0;
HXDLIN(1338)								{
HXLINE(1338)									int _g9 = 0;
HXDLIN(1338)									int _g18 = 2;
HXDLIN(1338)									while((_g9 < _g18)){
HXLINE(1338)										_g9 = (_g9 + 1);
HXDLIN(1338)										int i9 = (_g9 - 1);
HXDLIN(1338)										int v15;
HXDLIN(1338)										int b21 = b20->cursor;
HXDLIN(1338)										if ((b21 >= b20->data->get_length())) {
HXLINE(1338)											v15 = 0;
            										}
            										else {
HXLINE(1338)											v15 = b20->data->readU8(b20->cursor++);
            										}
HXDLIN(1338)										v14 = ((v14 << 8) | v15);
            									}
            								}
HXDLIN(1338)								int count1 = v14;
HXDLIN(1338)								int offsize1;
HXDLIN(1338)								int b22 = b20->cursor;
HXDLIN(1338)								if ((b22 >= b20->data->get_length())) {
HXLINE(1338)									offsize1 = 0;
            								}
            								else {
HXLINE(1338)									offsize1 = b20->data->readU8(b20->cursor++);
            								}
HXDLIN(1338)								bool subrs6;
HXDLIN(1338)								if ((fdselector >= 0)) {
HXLINE(1338)									subrs6 = (fdselector < count1);
            								}
            								else {
HXLINE(1338)									subrs6 = false;
            								}
HXDLIN(1338)								if (!(subrs6)) {
HXLINE(1338)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
HXDLIN(1338)								bool subrs7;
HXDLIN(1338)								if ((offsize1 >= 1)) {
HXLINE(1338)									subrs7 = (offsize1 <= 4);
            								}
            								else {
HXLINE(1338)									subrs7 = false;
            								}
HXDLIN(1338)								if (!(subrs7)) {
HXLINE(1338)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
HXDLIN(1338)								{
HXLINE(1338)									int o5 = (b20->cursor + (fdselector * offsize1));
HXDLIN(1338)									{
HXLINE(1338)										bool value3;
HXDLIN(1338)										if ((o5 <= b20->data->get_length())) {
HXLINE(1338)											value3 = (o5 < 0);
            										}
            										else {
HXLINE(1338)											value3 = true;
            										}
HXDLIN(1338)										if (!(!(value3))) {
HXLINE(1338)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
HXDLIN(1338)									int subrs8;
HXDLIN(1338)									bool subrs9;
HXDLIN(1338)									if ((o5 <= b20->data->get_length())) {
HXLINE(1338)										subrs9 = (o5 < 0);
            									}
            									else {
HXLINE(1338)										subrs9 = true;
            									}
HXDLIN(1338)									if (subrs9) {
HXLINE(1338)										subrs8 = b20->data->get_length();
            									}
            									else {
HXLINE(1338)										subrs8 = o5;
            									}
HXDLIN(1338)									b20->cursor = subrs8;
            								}
HXDLIN(1338)								int v16 = 0;
HXDLIN(1338)								bool subrs10;
HXDLIN(1338)								if ((offsize1 >= 1)) {
HXLINE(1338)									subrs10 = (offsize1 <= 4);
            								}
            								else {
HXLINE(1338)									subrs10 = false;
            								}
HXDLIN(1338)								if (!(subrs10)) {
HXLINE(1338)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
HXDLIN(1338)								{
HXLINE(1338)									int _g10 = 0;
HXDLIN(1338)									int _g19 = offsize1;
HXDLIN(1338)									while((_g10 < _g19)){
HXLINE(1338)										_g10 = (_g10 + 1);
HXDLIN(1338)										int i10 = (_g10 - 1);
HXDLIN(1338)										int v17;
HXDLIN(1338)										int b23 = b20->cursor;
HXDLIN(1338)										if ((b23 >= b20->data->get_length())) {
HXLINE(1338)											v17 = 0;
            										}
            										else {
HXLINE(1338)											v17 = b20->data->readU8(b20->cursor++);
            										}
HXDLIN(1338)										v16 = ((v16 << 8) | v17);
            									}
            								}
HXDLIN(1338)								int start2 = v16;
HXDLIN(1338)								int v18 = 0;
HXDLIN(1338)								bool subrs11;
HXDLIN(1338)								if ((offsize1 >= 1)) {
HXLINE(1338)									subrs11 = (offsize1 <= 4);
            								}
            								else {
HXLINE(1338)									subrs11 = false;
            								}
HXDLIN(1338)								if (!(subrs11)) {
HXLINE(1338)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
HXDLIN(1338)								{
HXLINE(1338)									int _g20 = 0;
HXDLIN(1338)									int _g110 = offsize1;
HXDLIN(1338)									while((_g20 < _g110)){
HXLINE(1338)										_g20 = (_g20 + 1);
HXDLIN(1338)										int i11 = (_g20 - 1);
HXDLIN(1338)										int v19;
HXDLIN(1338)										int b24 = b20->cursor;
HXDLIN(1338)										if ((b24 >= b20->data->get_length())) {
HXLINE(1338)											v19 = 0;
            										}
            										else {
HXLINE(1338)											v19 = b20->data->readU8(b20->cursor++);
            										}
HXDLIN(1338)										v18 = ((v18 << 8) | v19);
            									}
            								}
HXDLIN(1338)								int end2 = v18;
HXDLIN(1338)								int o6 = ((2 + ((count1 + 1) * offsize1)) + start2);
HXDLIN(1338)								int s2 = (end2 - start2);
HXDLIN(1338)								 ::kha::internal::BytesBlob p2 = null();
HXDLIN(1338)								 ::kha::graphics2::truetype::Stbtt__buf r3 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)								r3->_hx_set_data(HX_CTX, p2);
HXDLIN(1338)								r3->cursor = 0;
HXDLIN(1338)								 ::kha::graphics2::truetype::Stbtt__buf r4 = r3;
HXDLIN(1338)								 ::kha::graphics2::truetype::Stbtt__buf fontdict;
HXDLIN(1338)								bool fontdict1;
HXDLIN(1338)								bool fontdict2;
HXDLIN(1338)								bool fontdict3;
HXDLIN(1338)								if ((o6 >= 0)) {
HXLINE(1338)									fontdict3 = (s2 < 0);
            								}
            								else {
HXLINE(1338)									fontdict3 = true;
            								}
HXDLIN(1338)								if (!(fontdict3)) {
HXLINE(1338)									fontdict2 = (o6 > b20->data->get_length());
            								}
            								else {
HXLINE(1338)									fontdict2 = true;
            								}
HXDLIN(1338)								if (!(fontdict2)) {
HXLINE(1338)									fontdict1 = (s2 > (b20->data->get_length() - o6));
            								}
            								else {
HXLINE(1338)									fontdict1 = true;
            								}
HXDLIN(1338)								if (fontdict1) {
HXLINE(1338)									fontdict = r4;
            								}
            								else {
HXLINE(1338)									r4->_hx_set_data(HX_CTX, b20->data->sub(o6,s2));
HXDLIN(1338)									fontdict = r4;
            								}
HXDLIN(1338)								::Array< int > subrsoff = ::Array_obj< int >::fromData( _hx_array_data_79db9614_261,1);
HXDLIN(1338)								::Array< int > private_loc = ::Array_obj< int >::fromData( _hx_array_data_79db9614_262,2);
HXDLIN(1338)								{
HXLINE(1338)									int i12 = 0;
HXDLIN(1338)									{
HXLINE(1338)										if ((0 > fontdict->data->get_length())) {
HXLINE(1338)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
HXDLIN(1338)										int subrs12;
HXDLIN(1338)										if ((0 > fontdict->data->get_length())) {
HXLINE(1338)											subrs12 = fontdict->data->get_length();
            										}
            										else {
HXLINE(1338)											subrs12 = 0;
            										}
HXDLIN(1338)										fontdict->cursor = subrs12;
            									}
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf ret = null();
HXDLIN(1338)									while(true){
HXLINE(1338)										int fontdict4 = fontdict->cursor;
HXDLIN(1338)										if (!((fontdict4 < fontdict->data->get_length()))) {
HXLINE(1338)											goto _hx_goto_236;
            										}
HXDLIN(1338)										int start3 = fontdict->cursor;
HXDLIN(1338)										int op;
HXDLIN(1338)										while(true){
HXLINE(1338)											int subrs13;
HXDLIN(1338)											int fontdict5 = fontdict->cursor;
HXDLIN(1338)											if ((fontdict5 >= fontdict->data->get_length())) {
HXLINE(1338)												subrs13 = 0;
            											}
            											else {
HXLINE(1338)												subrs13 = fontdict->data->readU8(fontdict->cursor);
            											}
HXDLIN(1338)											if (!((subrs13 >= 28))) {
HXLINE(1338)												goto _hx_goto_237;
            											}
HXDLIN(1338)											int v20;
HXDLIN(1338)											int b01;
HXDLIN(1338)											int fontdict6 = fontdict->cursor;
HXDLIN(1338)											if ((fontdict6 >= fontdict->data->get_length())) {
HXLINE(1338)												b01 = 0;
            											}
            											else {
HXLINE(1338)												b01 = fontdict->data->readU8(fontdict->cursor);
            											}
HXDLIN(1338)											if ((b01 < 28)) {
HXLINE(1338)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
HXDLIN(1338)											if ((b01 == 30)) {
HXLINE(1338)												{
HXLINE(1338)													int o7 = (fontdict->cursor + 1);
HXDLIN(1338)													{
HXLINE(1338)														bool value4;
HXDLIN(1338)														if ((o7 <= fontdict->data->get_length())) {
HXLINE(1338)															value4 = (o7 < 0);
            														}
            														else {
HXLINE(1338)															value4 = true;
            														}
HXDLIN(1338)														if (!(!(value4))) {
HXLINE(1338)															HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            														}
            													}
HXDLIN(1338)													int subrs14;
HXDLIN(1338)													bool subrs15;
HXDLIN(1338)													if ((o7 <= fontdict->data->get_length())) {
HXLINE(1338)														subrs15 = (o7 < 0);
            													}
            													else {
HXLINE(1338)														subrs15 = true;
            													}
HXDLIN(1338)													if (subrs15) {
HXLINE(1338)														subrs14 = fontdict->data->get_length();
            													}
            													else {
HXLINE(1338)														subrs14 = o7;
            													}
HXDLIN(1338)													fontdict->cursor = subrs14;
            												}
HXDLIN(1338)												while(true){
HXLINE(1338)													int fontdict7 = fontdict->cursor;
HXDLIN(1338)													if (!((fontdict7 < fontdict->data->get_length()))) {
HXLINE(1338)														goto _hx_goto_238;
            													}
HXDLIN(1338)													int fontdict8 = fontdict->cursor;
HXDLIN(1338)													if ((fontdict8 >= fontdict->data->get_length())) {
HXLINE(1338)														v20 = 0;
            													}
            													else {
HXLINE(1338)														v20 = fontdict->data->readU8(fontdict->cursor++);
            													}
HXDLIN(1338)													bool subrs16;
HXDLIN(1338)													if (((v20 & 15) != 15)) {
HXLINE(1338)														subrs16 = ((v20 >> 4) == 15);
            													}
            													else {
HXLINE(1338)														subrs16 = true;
            													}
HXDLIN(1338)													if (subrs16) {
HXLINE(1338)														goto _hx_goto_238;
            													}
            												}
            												_hx_goto_238:;
            											}
            											else {
HXLINE(1338)												int b02;
HXDLIN(1338)												int fontdict9 = fontdict->cursor;
HXDLIN(1338)												if ((fontdict9 >= fontdict->data->get_length())) {
HXLINE(1338)													b02 = 0;
            												}
            												else {
HXLINE(1338)													b02 = fontdict->data->readU8(fontdict->cursor++);
            												}
HXDLIN(1338)												bool subrs17;
HXDLIN(1338)												if ((b02 >= 32)) {
HXLINE(1338)													subrs17 = (b02 <= 246);
            												}
            												else {
HXLINE(1338)													subrs17 = false;
            												}
HXDLIN(1338)												if (!(subrs17)) {
HXLINE(1338)													bool subrs18;
HXDLIN(1338)													if ((b02 >= 247)) {
HXLINE(1338)														subrs18 = (b02 <= 250);
            													}
            													else {
HXLINE(1338)														subrs18 = false;
            													}
HXDLIN(1338)													if (subrs18) {
HXLINE(1338)														int fontdict10 = fontdict->cursor;
HXDLIN(1338)														if ((fontdict10 < fontdict->data->get_length())) {
HXLINE(1338)															fontdict->data->readU8(fontdict->cursor++);
            														}
            													}
            													else {
HXLINE(1338)														bool subrs19;
HXDLIN(1338)														if ((b02 >= 251)) {
HXLINE(1338)															subrs19 = (b02 <= 254);
            														}
            														else {
HXLINE(1338)															subrs19 = false;
            														}
HXDLIN(1338)														if (subrs19) {
HXLINE(1338)															int fontdict11 = fontdict->cursor;
HXDLIN(1338)															if ((fontdict11 < fontdict->data->get_length())) {
HXLINE(1338)																fontdict->data->readU8(fontdict->cursor++);
            															}
            														}
            														else {
HXLINE(1338)															if ((b02 == 28)) {
HXLINE(1338)																int v21 = 0;
HXDLIN(1338)																{
HXLINE(1338)																	int _g21 = 0;
HXDLIN(1338)																	int _g111 = 2;
HXDLIN(1338)																	while((_g21 < _g111)){
HXLINE(1338)																		_g21 = (_g21 + 1);
HXDLIN(1338)																		int i13 = (_g21 - 1);
HXDLIN(1338)																		int v22;
HXDLIN(1338)																		int fontdict12 = fontdict->cursor;
HXDLIN(1338)																		if ((fontdict12 >= fontdict->data->get_length())) {
HXLINE(1338)																			v22 = 0;
            																		}
            																		else {
HXLINE(1338)																			v22 = fontdict->data->readU8(fontdict->cursor++);
            																		}
HXDLIN(1338)																		v21 = ((v21 << 8) | v22);
            																	}
            																}
            															}
            															else {
HXLINE(1338)																if ((b02 == 29)) {
HXLINE(1338)																	int v23 = 0;
HXDLIN(1338)																	{
HXLINE(1338)																		int _g22 = 0;
HXDLIN(1338)																		int _g112 = 4;
HXDLIN(1338)																		while((_g22 < _g112)){
HXLINE(1338)																			_g22 = (_g22 + 1);
HXDLIN(1338)																			int i14 = (_g22 - 1);
HXDLIN(1338)																			int v24;
HXDLIN(1338)																			int fontdict13 = fontdict->cursor;
HXDLIN(1338)																			if ((fontdict13 >= fontdict->data->get_length())) {
HXLINE(1338)																				v24 = 0;
            																			}
            																			else {
HXLINE(1338)																				v24 = fontdict->data->readU8(fontdict->cursor++);
            																			}
HXDLIN(1338)																			v23 = ((v23 << 8) | v24);
            																		}
            																	}
            																}
            																else {
HXLINE(1338)																	HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            										_hx_goto_237:;
HXDLIN(1338)										int end3 = fontdict->cursor;
HXDLIN(1338)										int fontdict14 = fontdict->cursor;
HXDLIN(1338)										if ((fontdict14 >= fontdict->data->get_length())) {
HXLINE(1338)											op = 0;
            										}
            										else {
HXLINE(1338)											op = fontdict->data->readU8(fontdict->cursor++);
            										}
HXDLIN(1338)										if ((op == 12)) {
HXLINE(1338)											int op1;
HXDLIN(1338)											int fontdict15 = fontdict->cursor;
HXDLIN(1338)											if ((fontdict15 >= fontdict->data->get_length())) {
HXLINE(1338)												op1 = 0;
            											}
            											else {
HXLINE(1338)												op1 = fontdict->data->readU8(fontdict->cursor++);
            											}
HXDLIN(1338)											op = (op1 | 256);
            										}
HXDLIN(1338)										if ((op == 18)) {
HXLINE(1338)											int s3 = (end3 - start3);
HXDLIN(1338)											 ::kha::internal::BytesBlob p3 = null();
HXDLIN(1338)											 ::kha::graphics2::truetype::Stbtt__buf r5 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)											r5->_hx_set_data(HX_CTX, p3);
HXDLIN(1338)											r5->cursor = 0;
HXDLIN(1338)											 ::kha::graphics2::truetype::Stbtt__buf r6 = r5;
HXDLIN(1338)											bool ret1;
HXDLIN(1338)											bool ret2;
HXDLIN(1338)											bool ret3;
HXDLIN(1338)											if ((start3 >= 0)) {
HXLINE(1338)												ret3 = (s3 < 0);
            											}
            											else {
HXLINE(1338)												ret3 = true;
            											}
HXDLIN(1338)											if (!(ret3)) {
HXLINE(1338)												ret2 = (start3 > fontdict->data->get_length());
            											}
            											else {
HXLINE(1338)												ret2 = true;
            											}
HXDLIN(1338)											if (!(ret2)) {
HXLINE(1338)												ret1 = (s3 > (fontdict->data->get_length() - start3));
            											}
            											else {
HXLINE(1338)												ret1 = true;
            											}
HXDLIN(1338)											if (ret1) {
HXLINE(1338)												ret = r6;
            											}
            											else {
HXLINE(1338)												r6->_hx_set_data(HX_CTX, fontdict->data->sub(start3,s3));
HXDLIN(1338)												ret = r6;
            											}
HXDLIN(1338)											goto _hx_goto_236;
            										}
            									}
            									_hx_goto_236:;
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf operands;
HXDLIN(1338)									if (hx::IsNotNull( ret )) {
HXLINE(1338)										operands = ret;
            									}
            									else {
HXLINE(1338)										 ::kha::internal::BytesBlob p4 = null();
HXDLIN(1338)										 ::kha::graphics2::truetype::Stbtt__buf r7 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)										r7->_hx_set_data(HX_CTX, p4);
HXDLIN(1338)										r7->cursor = 0;
HXDLIN(1338)										 ::kha::graphics2::truetype::Stbtt__buf r8 = r7;
HXDLIN(1338)										bool operands1;
HXDLIN(1338)										if ((0 <= fontdict->data->get_length())) {
HXLINE(1338)											operands1 = (0 > fontdict->data->get_length());
            										}
            										else {
HXLINE(1338)											operands1 = true;
            										}
HXDLIN(1338)										if (operands1) {
HXLINE(1338)											operands = r8;
            										}
            										else {
HXLINE(1338)											r8->_hx_set_data(HX_CTX, fontdict->data->sub(0,0));
HXDLIN(1338)											operands = r8;
            										}
            									}
HXDLIN(1338)									while(true){
HXLINE(1338)										bool subrs20;
HXDLIN(1338)										if ((i12 < 2)) {
HXLINE(1338)											int operands2 = operands->cursor;
HXDLIN(1338)											subrs20 = (operands2 < operands->data->get_length());
            										}
            										else {
HXLINE(1338)											subrs20 = false;
            										}
HXDLIN(1338)										if (!(subrs20)) {
HXLINE(1338)											goto _hx_goto_241;
            										}
HXDLIN(1338)										int b03;
HXDLIN(1338)										int operands3 = operands->cursor;
HXDLIN(1338)										if ((operands3 >= operands->data->get_length())) {
HXLINE(1338)											b03 = 0;
            										}
            										else {
HXLINE(1338)											b03 = operands->data->readU8(operands->cursor++);
            										}
HXDLIN(1338)										int subrs21;
HXDLIN(1338)										bool subrs22;
HXDLIN(1338)										if ((b03 >= 32)) {
HXLINE(1338)											subrs22 = (b03 <= 246);
            										}
            										else {
HXLINE(1338)											subrs22 = false;
            										}
HXDLIN(1338)										if (subrs22) {
HXLINE(1338)											subrs21 = (b03 - 139);
            										}
            										else {
HXLINE(1338)											bool subrs23;
HXDLIN(1338)											if ((b03 >= 247)) {
HXLINE(1338)												subrs23 = (b03 <= 250);
            											}
            											else {
HXLINE(1338)												subrs23 = false;
            											}
HXDLIN(1338)											if (subrs23) {
HXLINE(1338)												int subrs24;
HXDLIN(1338)												int operands4 = operands->cursor;
HXDLIN(1338)												if ((operands4 >= operands->data->get_length())) {
HXLINE(1338)													subrs24 = 0;
            												}
            												else {
HXLINE(1338)													subrs24 = operands->data->readU8(operands->cursor++);
            												}
HXDLIN(1338)												subrs21 = ((((b03 - 247) * 256) + subrs24) + 108);
            											}
            											else {
HXLINE(1338)												bool subrs25;
HXDLIN(1338)												if ((b03 >= 251)) {
HXLINE(1338)													subrs25 = (b03 <= 254);
            												}
            												else {
HXLINE(1338)													subrs25 = false;
            												}
HXDLIN(1338)												if (subrs25) {
HXLINE(1338)													int subrs26;
HXDLIN(1338)													int operands5 = operands->cursor;
HXDLIN(1338)													if ((operands5 >= operands->data->get_length())) {
HXLINE(1338)														subrs26 = 0;
            													}
            													else {
HXLINE(1338)														subrs26 = operands->data->readU8(operands->cursor++);
            													}
HXDLIN(1338)													subrs21 = (((-((b03 - 251)) * 256) - subrs26) - 108);
            												}
            												else {
HXLINE(1338)													if ((b03 == 28)) {
HXLINE(1338)														int v25 = 0;
HXDLIN(1338)														{
HXLINE(1338)															int _g23 = 0;
HXDLIN(1338)															int _g113 = 2;
HXDLIN(1338)															while((_g23 < _g113)){
HXLINE(1338)																_g23 = (_g23 + 1);
HXDLIN(1338)																int i15 = (_g23 - 1);
HXDLIN(1338)																int v26;
HXDLIN(1338)																int operands6 = operands->cursor;
HXDLIN(1338)																if ((operands6 >= operands->data->get_length())) {
HXLINE(1338)																	v26 = 0;
            																}
            																else {
HXLINE(1338)																	v26 = operands->data->readU8(operands->cursor++);
            																}
HXDLIN(1338)																v25 = ((v25 << 8) | v26);
            															}
            														}
HXDLIN(1338)														subrs21 = v25;
            													}
            													else {
HXLINE(1338)														if ((b03 == 29)) {
HXLINE(1338)															int v27 = 0;
HXDLIN(1338)															{
HXLINE(1338)																int _g24 = 0;
HXDLIN(1338)																int _g114 = 4;
HXDLIN(1338)																while((_g24 < _g114)){
HXLINE(1338)																	_g24 = (_g24 + 1);
HXDLIN(1338)																	int i16 = (_g24 - 1);
HXDLIN(1338)																	int v28;
HXDLIN(1338)																	int operands7 = operands->cursor;
HXDLIN(1338)																	if ((operands7 >= operands->data->get_length())) {
HXLINE(1338)																		v28 = 0;
            																	}
            																	else {
HXLINE(1338)																		v28 = operands->data->readU8(operands->cursor++);
            																	}
HXDLIN(1338)																	v27 = ((v27 << 8) | v28);
            																}
            															}
HXDLIN(1338)															subrs21 = v27;
            														}
            														else {
HXLINE(1338)															HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            														}
            													}
            												}
            											}
            										}
HXDLIN(1338)										private_loc[i12] = subrs21;
HXDLIN(1338)										i12 = (i12 + 1);
            									}
            									_hx_goto_241:;
            								}
HXDLIN(1338)								bool subrs27;
HXDLIN(1338)								if ((private_loc->__get(1) != 0)) {
HXLINE(1338)									subrs27 = (private_loc->__get(0) == 0);
            								}
            								else {
HXLINE(1338)									subrs27 = true;
            								}
HXDLIN(1338)								if (subrs27) {
HXLINE(1338)									 ::kha::internal::BytesBlob p5 = null();
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf r9 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)									r9->_hx_set_data(HX_CTX, p5);
HXDLIN(1338)									r9->cursor = 0;
HXDLIN(1338)									subrs = r9;
            								}
            								else {
HXLINE(1338)									int o8 = private_loc->__get(1);
HXDLIN(1338)									int s4 = private_loc->__get(0);
HXDLIN(1338)									 ::kha::internal::BytesBlob p6 = null();
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf r10 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)									r10->_hx_set_data(HX_CTX, p6);
HXDLIN(1338)									r10->cursor = 0;
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf r11 = r10;
HXDLIN(1338)									 ::kha::graphics2::truetype::Stbtt__buf pdict;
HXDLIN(1338)									bool pdict1;
HXDLIN(1338)									bool pdict2;
HXDLIN(1338)									bool pdict3;
HXDLIN(1338)									if ((o8 >= 0)) {
HXLINE(1338)										pdict3 = (s4 < 0);
            									}
            									else {
HXLINE(1338)										pdict3 = true;
            									}
HXDLIN(1338)									if (!(pdict3)) {
HXLINE(1338)										pdict2 = (o8 > cff->data->get_length());
            									}
            									else {
HXLINE(1338)										pdict2 = true;
            									}
HXDLIN(1338)									if (!(pdict2)) {
HXLINE(1338)										pdict1 = (s4 > (cff->data->get_length() - o8));
            									}
            									else {
HXLINE(1338)										pdict1 = true;
            									}
HXDLIN(1338)									if (pdict1) {
HXLINE(1338)										pdict = r11;
            									}
            									else {
HXLINE(1338)										r11->_hx_set_data(HX_CTX, cff->data->sub(o8,s4));
HXDLIN(1338)										pdict = r11;
            									}
HXDLIN(1338)									{
HXLINE(1338)										int i17 = 0;
HXDLIN(1338)										{
HXLINE(1338)											if ((0 > pdict->data->get_length())) {
HXLINE(1338)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
HXDLIN(1338)											int subrs28;
HXDLIN(1338)											if ((0 > pdict->data->get_length())) {
HXLINE(1338)												subrs28 = pdict->data->get_length();
            											}
            											else {
HXLINE(1338)												subrs28 = 0;
            											}
HXDLIN(1338)											pdict->cursor = subrs28;
            										}
HXDLIN(1338)										 ::kha::graphics2::truetype::Stbtt__buf ret4 = null();
HXDLIN(1338)										while(true){
HXLINE(1338)											int pdict4 = pdict->cursor;
HXDLIN(1338)											if (!((pdict4 < pdict->data->get_length()))) {
HXLINE(1338)												goto _hx_goto_244;
            											}
HXDLIN(1338)											int start4 = pdict->cursor;
HXDLIN(1338)											int op2;
HXDLIN(1338)											while(true){
HXLINE(1338)												int subrs29;
HXDLIN(1338)												int pdict5 = pdict->cursor;
HXDLIN(1338)												if ((pdict5 >= pdict->data->get_length())) {
HXLINE(1338)													subrs29 = 0;
            												}
            												else {
HXLINE(1338)													subrs29 = pdict->data->readU8(pdict->cursor);
            												}
HXDLIN(1338)												if (!((subrs29 >= 28))) {
HXLINE(1338)													goto _hx_goto_245;
            												}
HXDLIN(1338)												int v29;
HXDLIN(1338)												int b04;
HXDLIN(1338)												int pdict6 = pdict->cursor;
HXDLIN(1338)												if ((pdict6 >= pdict->data->get_length())) {
HXLINE(1338)													b04 = 0;
            												}
            												else {
HXLINE(1338)													b04 = pdict->data->readU8(pdict->cursor);
            												}
HXDLIN(1338)												if ((b04 < 28)) {
HXLINE(1338)													HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            												}
HXDLIN(1338)												if ((b04 == 30)) {
HXLINE(1338)													{
HXLINE(1338)														int o9 = (pdict->cursor + 1);
HXDLIN(1338)														{
HXLINE(1338)															bool value5;
HXDLIN(1338)															if ((o9 <= pdict->data->get_length())) {
HXLINE(1338)																value5 = (o9 < 0);
            															}
            															else {
HXLINE(1338)																value5 = true;
            															}
HXDLIN(1338)															if (!(!(value5))) {
HXLINE(1338)																HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            															}
            														}
HXDLIN(1338)														int subrs30;
HXDLIN(1338)														bool subrs31;
HXDLIN(1338)														if ((o9 <= pdict->data->get_length())) {
HXLINE(1338)															subrs31 = (o9 < 0);
            														}
            														else {
HXLINE(1338)															subrs31 = true;
            														}
HXDLIN(1338)														if (subrs31) {
HXLINE(1338)															subrs30 = pdict->data->get_length();
            														}
            														else {
HXLINE(1338)															subrs30 = o9;
            														}
HXDLIN(1338)														pdict->cursor = subrs30;
            													}
HXDLIN(1338)													while(true){
HXLINE(1338)														int pdict7 = pdict->cursor;
HXDLIN(1338)														if (!((pdict7 < pdict->data->get_length()))) {
HXLINE(1338)															goto _hx_goto_246;
            														}
HXDLIN(1338)														int pdict8 = pdict->cursor;
HXDLIN(1338)														if ((pdict8 >= pdict->data->get_length())) {
HXLINE(1338)															v29 = 0;
            														}
            														else {
HXLINE(1338)															v29 = pdict->data->readU8(pdict->cursor++);
            														}
HXDLIN(1338)														bool subrs32;
HXDLIN(1338)														if (((v29 & 15) != 15)) {
HXLINE(1338)															subrs32 = ((v29 >> 4) == 15);
            														}
            														else {
HXLINE(1338)															subrs32 = true;
            														}
HXDLIN(1338)														if (subrs32) {
HXLINE(1338)															goto _hx_goto_246;
            														}
            													}
            													_hx_goto_246:;
            												}
            												else {
HXLINE(1338)													int b05;
HXDLIN(1338)													int pdict9 = pdict->cursor;
HXDLIN(1338)													if ((pdict9 >= pdict->data->get_length())) {
HXLINE(1338)														b05 = 0;
            													}
            													else {
HXLINE(1338)														b05 = pdict->data->readU8(pdict->cursor++);
            													}
HXDLIN(1338)													bool subrs33;
HXDLIN(1338)													if ((b05 >= 32)) {
HXLINE(1338)														subrs33 = (b05 <= 246);
            													}
            													else {
HXLINE(1338)														subrs33 = false;
            													}
HXDLIN(1338)													if (!(subrs33)) {
HXLINE(1338)														bool subrs34;
HXDLIN(1338)														if ((b05 >= 247)) {
HXLINE(1338)															subrs34 = (b05 <= 250);
            														}
            														else {
HXLINE(1338)															subrs34 = false;
            														}
HXDLIN(1338)														if (subrs34) {
HXLINE(1338)															int pdict10 = pdict->cursor;
HXDLIN(1338)															if ((pdict10 < pdict->data->get_length())) {
HXLINE(1338)																pdict->data->readU8(pdict->cursor++);
            															}
            														}
            														else {
HXLINE(1338)															bool subrs35;
HXDLIN(1338)															if ((b05 >= 251)) {
HXLINE(1338)																subrs35 = (b05 <= 254);
            															}
            															else {
HXLINE(1338)																subrs35 = false;
            															}
HXDLIN(1338)															if (subrs35) {
HXLINE(1338)																int pdict11 = pdict->cursor;
HXDLIN(1338)																if ((pdict11 < pdict->data->get_length())) {
HXLINE(1338)																	pdict->data->readU8(pdict->cursor++);
            																}
            															}
            															else {
HXLINE(1338)																if ((b05 == 28)) {
HXLINE(1338)																	int v30 = 0;
HXDLIN(1338)																	{
HXLINE(1338)																		int _g25 = 0;
HXDLIN(1338)																		int _g115 = 2;
HXDLIN(1338)																		while((_g25 < _g115)){
HXLINE(1338)																			_g25 = (_g25 + 1);
HXDLIN(1338)																			int i18 = (_g25 - 1);
HXDLIN(1338)																			int v31;
HXDLIN(1338)																			int pdict12 = pdict->cursor;
HXDLIN(1338)																			if ((pdict12 >= pdict->data->get_length())) {
HXLINE(1338)																				v31 = 0;
            																			}
            																			else {
HXLINE(1338)																				v31 = pdict->data->readU8(pdict->cursor++);
            																			}
HXDLIN(1338)																			v30 = ((v30 << 8) | v31);
            																		}
            																	}
            																}
            																else {
HXLINE(1338)																	if ((b05 == 29)) {
HXLINE(1338)																		int v32 = 0;
HXDLIN(1338)																		{
HXLINE(1338)																			int _g26 = 0;
HXDLIN(1338)																			int _g116 = 4;
HXDLIN(1338)																			while((_g26 < _g116)){
HXLINE(1338)																				_g26 = (_g26 + 1);
HXDLIN(1338)																				int i19 = (_g26 - 1);
HXDLIN(1338)																				int v33;
HXDLIN(1338)																				int pdict13 = pdict->cursor;
HXDLIN(1338)																				if ((pdict13 >= pdict->data->get_length())) {
HXLINE(1338)																					v33 = 0;
            																				}
            																				else {
HXLINE(1338)																					v33 = pdict->data->readU8(pdict->cursor++);
            																				}
HXDLIN(1338)																				v32 = ((v32 << 8) | v33);
            																			}
            																		}
            																	}
            																	else {
HXLINE(1338)																		HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            											_hx_goto_245:;
HXDLIN(1338)											int end4 = pdict->cursor;
HXDLIN(1338)											int pdict14 = pdict->cursor;
HXDLIN(1338)											if ((pdict14 >= pdict->data->get_length())) {
HXLINE(1338)												op2 = 0;
            											}
            											else {
HXLINE(1338)												op2 = pdict->data->readU8(pdict->cursor++);
            											}
HXDLIN(1338)											if ((op2 == 12)) {
HXLINE(1338)												int op3;
HXDLIN(1338)												int pdict15 = pdict->cursor;
HXDLIN(1338)												if ((pdict15 >= pdict->data->get_length())) {
HXLINE(1338)													op3 = 0;
            												}
            												else {
HXLINE(1338)													op3 = pdict->data->readU8(pdict->cursor++);
            												}
HXDLIN(1338)												op2 = (op3 | 256);
            											}
HXDLIN(1338)											if ((op2 == 19)) {
HXLINE(1338)												int s5 = (end4 - start4);
HXDLIN(1338)												 ::kha::internal::BytesBlob p7 = null();
HXDLIN(1338)												 ::kha::graphics2::truetype::Stbtt__buf r12 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)												r12->_hx_set_data(HX_CTX, p7);
HXDLIN(1338)												r12->cursor = 0;
HXDLIN(1338)												 ::kha::graphics2::truetype::Stbtt__buf r13 = r12;
HXDLIN(1338)												bool ret5;
HXDLIN(1338)												bool ret6;
HXDLIN(1338)												bool ret7;
HXDLIN(1338)												if ((start4 >= 0)) {
HXLINE(1338)													ret7 = (s5 < 0);
            												}
            												else {
HXLINE(1338)													ret7 = true;
            												}
HXDLIN(1338)												if (!(ret7)) {
HXLINE(1338)													ret6 = (start4 > pdict->data->get_length());
            												}
            												else {
HXLINE(1338)													ret6 = true;
            												}
HXDLIN(1338)												if (!(ret6)) {
HXLINE(1338)													ret5 = (s5 > (pdict->data->get_length() - start4));
            												}
            												else {
HXLINE(1338)													ret5 = true;
            												}
HXDLIN(1338)												if (ret5) {
HXLINE(1338)													ret4 = r13;
            												}
            												else {
HXLINE(1338)													r13->_hx_set_data(HX_CTX, pdict->data->sub(start4,s5));
HXDLIN(1338)													ret4 = r13;
            												}
HXDLIN(1338)												goto _hx_goto_244;
            											}
            										}
            										_hx_goto_244:;
HXDLIN(1338)										 ::kha::graphics2::truetype::Stbtt__buf operands8;
HXDLIN(1338)										if (hx::IsNotNull( ret4 )) {
HXLINE(1338)											operands8 = ret4;
            										}
            										else {
HXLINE(1338)											 ::kha::internal::BytesBlob p8 = null();
HXDLIN(1338)											 ::kha::graphics2::truetype::Stbtt__buf r14 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)											r14->_hx_set_data(HX_CTX, p8);
HXDLIN(1338)											r14->cursor = 0;
HXDLIN(1338)											 ::kha::graphics2::truetype::Stbtt__buf r15 = r14;
HXDLIN(1338)											bool operands9;
HXDLIN(1338)											if ((0 <= pdict->data->get_length())) {
HXLINE(1338)												operands9 = (0 > pdict->data->get_length());
            											}
            											else {
HXLINE(1338)												operands9 = true;
            											}
HXDLIN(1338)											if (operands9) {
HXLINE(1338)												operands8 = r15;
            											}
            											else {
HXLINE(1338)												r15->_hx_set_data(HX_CTX, pdict->data->sub(0,0));
HXDLIN(1338)												operands8 = r15;
            											}
            										}
HXDLIN(1338)										while(true){
HXLINE(1338)											bool subrs36;
HXDLIN(1338)											if ((i17 < 1)) {
HXLINE(1338)												int operands10 = operands8->cursor;
HXDLIN(1338)												subrs36 = (operands10 < operands8->data->get_length());
            											}
            											else {
HXLINE(1338)												subrs36 = false;
            											}
HXDLIN(1338)											if (!(subrs36)) {
HXLINE(1338)												goto _hx_goto_249;
            											}
HXDLIN(1338)											int b06;
HXDLIN(1338)											int operands11 = operands8->cursor;
HXDLIN(1338)											if ((operands11 >= operands8->data->get_length())) {
HXLINE(1338)												b06 = 0;
            											}
            											else {
HXLINE(1338)												b06 = operands8->data->readU8(operands8->cursor++);
            											}
HXDLIN(1338)											int subrs37;
HXDLIN(1338)											bool subrs38;
HXDLIN(1338)											if ((b06 >= 32)) {
HXLINE(1338)												subrs38 = (b06 <= 246);
            											}
            											else {
HXLINE(1338)												subrs38 = false;
            											}
HXDLIN(1338)											if (subrs38) {
HXLINE(1338)												subrs37 = (b06 - 139);
            											}
            											else {
HXLINE(1338)												bool subrs39;
HXDLIN(1338)												if ((b06 >= 247)) {
HXLINE(1338)													subrs39 = (b06 <= 250);
            												}
            												else {
HXLINE(1338)													subrs39 = false;
            												}
HXDLIN(1338)												if (subrs39) {
HXLINE(1338)													int subrs40;
HXDLIN(1338)													int operands12 = operands8->cursor;
HXDLIN(1338)													if ((operands12 >= operands8->data->get_length())) {
HXLINE(1338)														subrs40 = 0;
            													}
            													else {
HXLINE(1338)														subrs40 = operands8->data->readU8(operands8->cursor++);
            													}
HXDLIN(1338)													subrs37 = ((((b06 - 247) * 256) + subrs40) + 108);
            												}
            												else {
HXLINE(1338)													bool subrs41;
HXDLIN(1338)													if ((b06 >= 251)) {
HXLINE(1338)														subrs41 = (b06 <= 254);
            													}
            													else {
HXLINE(1338)														subrs41 = false;
            													}
HXDLIN(1338)													if (subrs41) {
HXLINE(1338)														int subrs42;
HXDLIN(1338)														int operands13 = operands8->cursor;
HXDLIN(1338)														if ((operands13 >= operands8->data->get_length())) {
HXLINE(1338)															subrs42 = 0;
            														}
            														else {
HXLINE(1338)															subrs42 = operands8->data->readU8(operands8->cursor++);
            														}
HXDLIN(1338)														subrs37 = (((-((b06 - 251)) * 256) - subrs42) - 108);
            													}
            													else {
HXLINE(1338)														if ((b06 == 28)) {
HXLINE(1338)															int v34 = 0;
HXDLIN(1338)															{
HXLINE(1338)																int _g27 = 0;
HXDLIN(1338)																int _g117 = 2;
HXDLIN(1338)																while((_g27 < _g117)){
HXLINE(1338)																	_g27 = (_g27 + 1);
HXDLIN(1338)																	int i20 = (_g27 - 1);
HXDLIN(1338)																	int v35;
HXDLIN(1338)																	int operands14 = operands8->cursor;
HXDLIN(1338)																	if ((operands14 >= operands8->data->get_length())) {
HXLINE(1338)																		v35 = 0;
            																	}
            																	else {
HXLINE(1338)																		v35 = operands8->data->readU8(operands8->cursor++);
            																	}
HXDLIN(1338)																	v34 = ((v34 << 8) | v35);
            																}
            															}
HXDLIN(1338)															subrs37 = v34;
            														}
            														else {
HXLINE(1338)															if ((b06 == 29)) {
HXLINE(1338)																int v36 = 0;
HXDLIN(1338)																{
HXLINE(1338)																	int _g28 = 0;
HXDLIN(1338)																	int _g118 = 4;
HXDLIN(1338)																	while((_g28 < _g118)){
HXLINE(1338)																		_g28 = (_g28 + 1);
HXDLIN(1338)																		int i21 = (_g28 - 1);
HXDLIN(1338)																		int v37;
HXDLIN(1338)																		int operands15 = operands8->cursor;
HXDLIN(1338)																		if ((operands15 >= operands8->data->get_length())) {
HXLINE(1338)																			v37 = 0;
            																		}
            																		else {
HXLINE(1338)																			v37 = operands8->data->readU8(operands8->cursor++);
            																		}
HXDLIN(1338)																		v36 = ((v36 << 8) | v37);
            																	}
            																}
HXDLIN(1338)																subrs37 = v36;
            															}
            															else {
HXLINE(1338)																HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            															}
            														}
            													}
            												}
            											}
HXDLIN(1338)											subrsoff[i17] = subrs37;
HXDLIN(1338)											i17 = (i17 + 1);
            										}
            										_hx_goto_249:;
            									}
HXDLIN(1338)									if ((subrsoff->__get(0) == 0)) {
HXLINE(1338)										 ::kha::internal::BytesBlob p9 = null();
HXDLIN(1338)										 ::kha::graphics2::truetype::Stbtt__buf r16 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)										r16->_hx_set_data(HX_CTX, p9);
HXDLIN(1338)										r16->cursor = 0;
HXDLIN(1338)										subrs = r16;
            									}
            									else {
HXLINE(1338)										{
HXLINE(1338)											int o10 = (private_loc->__get(1) + subrsoff->__get(0));
HXDLIN(1338)											{
HXLINE(1338)												bool value6;
HXDLIN(1338)												if ((o10 <= cff->data->get_length())) {
HXLINE(1338)													value6 = (o10 < 0);
            												}
            												else {
HXLINE(1338)													value6 = true;
            												}
HXDLIN(1338)												if (!(!(value6))) {
HXLINE(1338)													HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            												}
            											}
HXDLIN(1338)											int subrs43;
HXDLIN(1338)											bool subrs44;
HXDLIN(1338)											if ((o10 <= cff->data->get_length())) {
HXLINE(1338)												subrs44 = (o10 < 0);
            											}
            											else {
HXLINE(1338)												subrs44 = true;
            											}
HXDLIN(1338)											if (subrs44) {
HXLINE(1338)												subrs43 = cff->data->get_length();
            											}
            											else {
HXLINE(1338)												subrs43 = o10;
            											}
HXDLIN(1338)											cff->cursor = subrs43;
            										}
HXDLIN(1338)										int start5 = cff->cursor;
HXDLIN(1338)										int v38 = 0;
HXDLIN(1338)										{
HXLINE(1338)											int _g29 = 0;
HXDLIN(1338)											int _g119 = 2;
HXDLIN(1338)											while((_g29 < _g119)){
HXLINE(1338)												_g29 = (_g29 + 1);
HXDLIN(1338)												int i22 = (_g29 - 1);
HXDLIN(1338)												int v39;
HXDLIN(1338)												int cff1 = cff->cursor;
HXDLIN(1338)												if ((cff1 >= cff->data->get_length())) {
HXLINE(1338)													v39 = 0;
            												}
            												else {
HXLINE(1338)													v39 = cff->data->readU8(cff->cursor++);
            												}
HXDLIN(1338)												v38 = ((v38 << 8) | v39);
            											}
            										}
HXDLIN(1338)										int count2 = v38;
HXDLIN(1338)										if ((count2 > 0)) {
HXLINE(1338)											int offsize2;
HXDLIN(1338)											int cff2 = cff->cursor;
HXDLIN(1338)											if ((cff2 >= cff->data->get_length())) {
HXLINE(1338)												offsize2 = 0;
            											}
            											else {
HXLINE(1338)												offsize2 = cff->data->readU8(cff->cursor++);
            											}
HXDLIN(1338)											bool subrs45;
HXDLIN(1338)											if ((offsize2 >= 1)) {
HXLINE(1338)												subrs45 = (offsize2 <= 4);
            											}
            											else {
HXLINE(1338)												subrs45 = false;
            											}
HXDLIN(1338)											if (!(subrs45)) {
HXLINE(1338)												HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            											}
HXDLIN(1338)											{
HXLINE(1338)												int o11 = (cff->cursor + (offsize2 * count2));
HXDLIN(1338)												{
HXLINE(1338)													bool value7;
HXDLIN(1338)													if ((o11 <= cff->data->get_length())) {
HXLINE(1338)														value7 = (o11 < 0);
            													}
            													else {
HXLINE(1338)														value7 = true;
            													}
HXDLIN(1338)													if (!(!(value7))) {
HXLINE(1338)														HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            													}
            												}
HXDLIN(1338)												int subrs46;
HXDLIN(1338)												bool subrs47;
HXDLIN(1338)												if ((o11 <= cff->data->get_length())) {
HXLINE(1338)													subrs47 = (o11 < 0);
            												}
            												else {
HXLINE(1338)													subrs47 = true;
            												}
HXDLIN(1338)												if (subrs47) {
HXLINE(1338)													subrs46 = cff->data->get_length();
            												}
            												else {
HXLINE(1338)													subrs46 = o11;
            												}
HXDLIN(1338)												cff->cursor = subrs46;
            											}
HXDLIN(1338)											{
HXLINE(1338)												int v40 = 0;
HXDLIN(1338)												bool o12;
HXDLIN(1338)												if ((offsize2 >= 1)) {
HXLINE(1338)													o12 = (offsize2 <= 4);
            												}
            												else {
HXLINE(1338)													o12 = false;
            												}
HXDLIN(1338)												if (!(o12)) {
HXLINE(1338)													HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            												}
HXDLIN(1338)												{
HXLINE(1338)													int _g30 = 0;
HXDLIN(1338)													int _g120 = offsize2;
HXDLIN(1338)													while((_g30 < _g120)){
HXLINE(1338)														_g30 = (_g30 + 1);
HXDLIN(1338)														int i23 = (_g30 - 1);
HXDLIN(1338)														int v41;
HXDLIN(1338)														int cff3 = cff->cursor;
HXDLIN(1338)														if ((cff3 >= cff->data->get_length())) {
HXLINE(1338)															v41 = 0;
            														}
            														else {
HXLINE(1338)															v41 = cff->data->readU8(cff->cursor++);
            														}
HXDLIN(1338)														v40 = ((v40 << 8) | v41);
            													}
            												}
HXDLIN(1338)												{
HXLINE(1338)													int o13 = (cff->cursor + (v40 - 1));
HXDLIN(1338)													{
HXLINE(1338)														bool value8;
HXDLIN(1338)														if ((o13 <= cff->data->get_length())) {
HXLINE(1338)															value8 = (o13 < 0);
            														}
            														else {
HXLINE(1338)															value8 = true;
            														}
HXDLIN(1338)														if (!(!(value8))) {
HXLINE(1338)															HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            														}
            													}
HXDLIN(1338)													int subrs48;
HXDLIN(1338)													bool subrs49;
HXDLIN(1338)													if ((o13 <= cff->data->get_length())) {
HXLINE(1338)														subrs49 = (o13 < 0);
            													}
            													else {
HXLINE(1338)														subrs49 = true;
            													}
HXDLIN(1338)													if (subrs49) {
HXLINE(1338)														subrs48 = cff->data->get_length();
            													}
            													else {
HXLINE(1338)														subrs48 = o13;
            													}
HXDLIN(1338)													cff->cursor = subrs48;
            												}
            											}
HXDLIN(1338)											int s6 = (cff->cursor - start5);
HXDLIN(1338)											 ::kha::internal::BytesBlob p10 = null();
HXDLIN(1338)											 ::kha::graphics2::truetype::Stbtt__buf r17 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1338)											r17->_hx_set_data(HX_CTX, p10);
HXDLIN(1338)											r17->cursor = 0;
HXDLIN(1338)											 ::kha::graphics2::truetype::Stbtt__buf r18 = r17;
HXDLIN(1338)											bool subrs50;
HXDLIN(1338)											bool subrs51;
HXDLIN(1338)											bool subrs52;
HXDLIN(1338)											if ((start5 >= 0)) {
HXLINE(1338)												subrs52 = (s6 < 0);
            											}
            											else {
HXLINE(1338)												subrs52 = true;
            											}
HXDLIN(1338)											if (!(subrs52)) {
HXLINE(1338)												subrs51 = (start5 > cff->data->get_length());
            											}
            											else {
HXLINE(1338)												subrs51 = true;
            											}
HXDLIN(1338)											if (!(subrs51)) {
HXLINE(1338)												subrs50 = (s6 > (cff->data->get_length() - start5));
            											}
            											else {
HXLINE(1338)												subrs50 = true;
            											}
HXDLIN(1338)											if (subrs50) {
HXLINE(1338)												subrs = r18;
            											}
            											else {
HXLINE(1338)												r18->_hx_set_data(HX_CTX, cff->data->sub(start5,s6));
HXDLIN(1338)												subrs = r18;
            											}
            										}
            										else {
HXLINE(1338)											subrs = cff;
            										}
            									}
            								}
            							}
HXLINE(1339)							has_subrs = true;
            						}
            					}
HXLINE(1342)					if ((sp < 1)) {
HXLINE(1342)						return false;
            					}
HXLINE(1343)					sp = (sp - 1);
HXDLIN(1343)					v = ::Std_obj::_hx_int(s->__get(sp));
HXLINE(1344)					if ((subr_stack_height >= 10)) {
HXLINE(1344)						return false;
            					}
HXLINE(1345)					subr_stack_height = (subr_stack_height + 1);
HXDLIN(1345)					subr_stack->setCtx( HX_CTX, (subr_stack_height - 1),b);
HXLINE(1346)					 ::kha::graphics2::truetype::Stbtt__buf idx;
HXDLIN(1346)					if ((b0 == 10)) {
HXLINE(1346)						idx = subrs;
            					}
            					else {
HXLINE(1346)						idx = info->gsubrs;
            					}
HXDLIN(1346)					int n = v;
HXDLIN(1346)					{
HXLINE(1346)						if ((0 > idx->data->get_length())) {
HXLINE(1346)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1346)						int b25;
HXDLIN(1346)						if ((0 > idx->data->get_length())) {
HXLINE(1346)							b25 = idx->data->get_length();
            						}
            						else {
HXLINE(1346)							b25 = 0;
            						}
HXDLIN(1346)						idx->cursor = b25;
            					}
HXDLIN(1346)					int v42 = 0;
HXDLIN(1346)					{
HXLINE(1346)						int _g31 = 0;
HXDLIN(1346)						int _g121 = 2;
HXDLIN(1346)						while((_g31 < _g121)){
HXLINE(1346)							_g31 = (_g31 + 1);
HXDLIN(1346)							int i24 = (_g31 - 1);
HXDLIN(1346)							int v43;
HXDLIN(1346)							int idx1 = idx->cursor;
HXDLIN(1346)							if ((idx1 >= idx->data->get_length())) {
HXLINE(1346)								v43 = 0;
            							}
            							else {
HXLINE(1346)								v43 = idx->data->readU8(idx->cursor++);
            							}
HXDLIN(1346)							v42 = ((v42 << 8) | v43);
            						}
            					}
HXDLIN(1346)					int count3 = v42;
HXDLIN(1346)					int bias = 107;
HXDLIN(1346)					if ((count3 >= 33900)) {
HXLINE(1346)						bias = 32768;
            					}
            					else {
HXLINE(1346)						if ((count3 >= 1240)) {
HXLINE(1346)							bias = 1131;
            						}
            					}
HXDLIN(1346)					n = (n + bias);
HXDLIN(1346)					bool b26;
HXDLIN(1346)					if ((n >= 0)) {
HXLINE(1346)						b26 = (n >= count3);
            					}
            					else {
HXLINE(1346)						b26 = true;
            					}
HXDLIN(1346)					if (b26) {
HXLINE(1346)						 ::kha::internal::BytesBlob p11 = null();
HXDLIN(1346)						 ::kha::graphics2::truetype::Stbtt__buf r19 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1346)						r19->_hx_set_data(HX_CTX, p11);
HXDLIN(1346)						r19->cursor = 0;
HXDLIN(1346)						b = r19;
            					}
            					else {
HXLINE(1346)						{
HXLINE(1346)							if ((0 > idx->data->get_length())) {
HXLINE(1346)								HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            							}
HXDLIN(1346)							int b27;
HXDLIN(1346)							if ((0 > idx->data->get_length())) {
HXLINE(1346)								b27 = idx->data->get_length();
            							}
            							else {
HXLINE(1346)								b27 = 0;
            							}
HXDLIN(1346)							idx->cursor = b27;
            						}
HXDLIN(1346)						int v44 = 0;
HXDLIN(1346)						{
HXLINE(1346)							int _g32 = 0;
HXDLIN(1346)							int _g122 = 2;
HXDLIN(1346)							while((_g32 < _g122)){
HXLINE(1346)								_g32 = (_g32 + 1);
HXDLIN(1346)								int i25 = (_g32 - 1);
HXDLIN(1346)								int v45;
HXDLIN(1346)								int idx2 = idx->cursor;
HXDLIN(1346)								if ((idx2 >= idx->data->get_length())) {
HXLINE(1346)									v45 = 0;
            								}
            								else {
HXLINE(1346)									v45 = idx->data->readU8(idx->cursor++);
            								}
HXDLIN(1346)								v44 = ((v44 << 8) | v45);
            							}
            						}
HXDLIN(1346)						int count4 = v44;
HXDLIN(1346)						int offsize3;
HXDLIN(1346)						int idx3 = idx->cursor;
HXDLIN(1346)						if ((idx3 >= idx->data->get_length())) {
HXLINE(1346)							offsize3 = 0;
            						}
            						else {
HXLINE(1346)							offsize3 = idx->data->readU8(idx->cursor++);
            						}
HXDLIN(1346)						bool b28;
HXDLIN(1346)						if ((n >= 0)) {
HXLINE(1346)							b28 = (n < count4);
            						}
            						else {
HXLINE(1346)							b28 = false;
            						}
HXDLIN(1346)						if (!(b28)) {
HXLINE(1346)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1346)						bool b29;
HXDLIN(1346)						if ((offsize3 >= 1)) {
HXLINE(1346)							b29 = (offsize3 <= 4);
            						}
            						else {
HXLINE(1346)							b29 = false;
            						}
HXDLIN(1346)						if (!(b29)) {
HXLINE(1346)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1346)						{
HXLINE(1346)							int o14 = (idx->cursor + (n * offsize3));
HXDLIN(1346)							{
HXLINE(1346)								bool value9;
HXDLIN(1346)								if ((o14 <= idx->data->get_length())) {
HXLINE(1346)									value9 = (o14 < 0);
            								}
            								else {
HXLINE(1346)									value9 = true;
            								}
HXDLIN(1346)								if (!(!(value9))) {
HXLINE(1346)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN(1346)							int b30;
HXDLIN(1346)							bool b31;
HXDLIN(1346)							if ((o14 <= idx->data->get_length())) {
HXLINE(1346)								b31 = (o14 < 0);
            							}
            							else {
HXLINE(1346)								b31 = true;
            							}
HXDLIN(1346)							if (b31) {
HXLINE(1346)								b30 = idx->data->get_length();
            							}
            							else {
HXLINE(1346)								b30 = o14;
            							}
HXDLIN(1346)							idx->cursor = b30;
            						}
HXDLIN(1346)						int v46 = 0;
HXDLIN(1346)						bool b32;
HXDLIN(1346)						if ((offsize3 >= 1)) {
HXLINE(1346)							b32 = (offsize3 <= 4);
            						}
            						else {
HXLINE(1346)							b32 = false;
            						}
HXDLIN(1346)						if (!(b32)) {
HXLINE(1346)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1346)						{
HXLINE(1346)							int _g33 = 0;
HXDLIN(1346)							int _g123 = offsize3;
HXDLIN(1346)							while((_g33 < _g123)){
HXLINE(1346)								_g33 = (_g33 + 1);
HXDLIN(1346)								int i26 = (_g33 - 1);
HXDLIN(1346)								int v47;
HXDLIN(1346)								int idx4 = idx->cursor;
HXDLIN(1346)								if ((idx4 >= idx->data->get_length())) {
HXLINE(1346)									v47 = 0;
            								}
            								else {
HXLINE(1346)									v47 = idx->data->readU8(idx->cursor++);
            								}
HXDLIN(1346)								v46 = ((v46 << 8) | v47);
            							}
            						}
HXDLIN(1346)						int start6 = v46;
HXDLIN(1346)						int v48 = 0;
HXDLIN(1346)						bool b33;
HXDLIN(1346)						if ((offsize3 >= 1)) {
HXLINE(1346)							b33 = (offsize3 <= 4);
            						}
            						else {
HXLINE(1346)							b33 = false;
            						}
HXDLIN(1346)						if (!(b33)) {
HXLINE(1346)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXDLIN(1346)						{
HXLINE(1346)							int _g34 = 0;
HXDLIN(1346)							int _g124 = offsize3;
HXDLIN(1346)							while((_g34 < _g124)){
HXLINE(1346)								_g34 = (_g34 + 1);
HXDLIN(1346)								int i27 = (_g34 - 1);
HXDLIN(1346)								int v49;
HXDLIN(1346)								int idx5 = idx->cursor;
HXDLIN(1346)								if ((idx5 >= idx->data->get_length())) {
HXLINE(1346)									v49 = 0;
            								}
            								else {
HXLINE(1346)									v49 = idx->data->readU8(idx->cursor++);
            								}
HXDLIN(1346)								v48 = ((v48 << 8) | v49);
            							}
            						}
HXDLIN(1346)						int end5 = v48;
HXDLIN(1346)						int o15 = ((2 + ((count4 + 1) * offsize3)) + start6);
HXDLIN(1346)						int s7 = (end5 - start6);
HXDLIN(1346)						 ::kha::internal::BytesBlob p12 = null();
HXDLIN(1346)						 ::kha::graphics2::truetype::Stbtt__buf r20 =  ::kha::graphics2::truetype::Stbtt__buf_obj::__alloc( HX_CTX );
HXDLIN(1346)						r20->_hx_set_data(HX_CTX, p12);
HXDLIN(1346)						r20->cursor = 0;
HXDLIN(1346)						 ::kha::graphics2::truetype::Stbtt__buf r21 = r20;
HXDLIN(1346)						bool b34;
HXDLIN(1346)						bool b35;
HXDLIN(1346)						bool b36;
HXDLIN(1346)						if ((o15 >= 0)) {
HXLINE(1346)							b36 = (s7 < 0);
            						}
            						else {
HXLINE(1346)							b36 = true;
            						}
HXDLIN(1346)						if (!(b36)) {
HXLINE(1346)							b35 = (o15 > idx->data->get_length());
            						}
            						else {
HXLINE(1346)							b35 = true;
            						}
HXDLIN(1346)						if (!(b35)) {
HXLINE(1346)							b34 = (s7 > (idx->data->get_length() - o15));
            						}
            						else {
HXLINE(1346)							b34 = true;
            						}
HXDLIN(1346)						if (b34) {
HXLINE(1346)							b = r21;
            						}
            						else {
HXLINE(1346)							r21->_hx_set_data(HX_CTX, idx->data->sub(o15,s7));
HXDLIN(1346)							b = r21;
            						}
            					}
HXLINE(1347)					if ((b->data->get_length() == 0)) {
HXLINE(1347)						return false;
            					}
HXLINE(1348)					b->cursor = 0;
HXLINE(1349)					clear_stack = false;
            				}
            				break;
            				case (int)30: {
HXLINE(1283)					if ((sp < 4)) {
HXLINE(1283)						return false;
            					}
HXLINE(1284)					while(((i + 3) < sp)){
HXLINE(1286)						{
HXLINE(1286)							Float cx126 = c->x;
HXDLIN(1286)							Float cy126 = (c->y + s->__get(i));
HXDLIN(1286)							Float cx213 = (cx126 + s->__get((i + 1)));
HXDLIN(1286)							Float cy213 = (cy126 + s->__get((i + 2)));
HXDLIN(1286)							c->x = (cx213 + s->__get((i + 3)));
HXDLIN(1286)							Float _hx_tmp218;
HXDLIN(1286)							if (((sp - i) == 5)) {
HXLINE(1286)								_hx_tmp218 = s->__get((i + 4));
            							}
            							else {
HXLINE(1286)								_hx_tmp218 = ( (Float)(0) );
            							}
HXDLIN(1286)							c->y = (cy213 + _hx_tmp218);
HXDLIN(1286)							{
HXLINE(1286)								int x27 = ::Std_obj::_hx_int(c->x);
HXDLIN(1286)								int y27 = ::Std_obj::_hx_int(c->y);
HXDLIN(1286)								int cx33 = ::Std_obj::_hx_int(cx126);
HXDLIN(1286)								int cy33 = ::Std_obj::_hx_int(cy126);
HXDLIN(1286)								int cx127 = ::Std_obj::_hx_int(cx213);
HXDLIN(1286)								int cy127 = ::Std_obj::_hx_int(cy213);
HXDLIN(1286)								if (c->bounds) {
HXLINE(1286)									{
HXLINE(1286)										bool _hx_tmp219;
HXDLIN(1286)										if ((x27 <= c->max_x)) {
HXLINE(1286)											_hx_tmp219 = !(c->started);
            										}
            										else {
HXLINE(1286)											_hx_tmp219 = true;
            										}
HXDLIN(1286)										if (_hx_tmp219) {
HXLINE(1286)											c->max_x = x27;
            										}
HXDLIN(1286)										bool _hx_tmp220;
HXDLIN(1286)										if ((y27 <= c->max_y)) {
HXLINE(1286)											_hx_tmp220 = !(c->started);
            										}
            										else {
HXLINE(1286)											_hx_tmp220 = true;
            										}
HXDLIN(1286)										if (_hx_tmp220) {
HXLINE(1286)											c->max_y = y27;
            										}
HXDLIN(1286)										bool _hx_tmp221;
HXDLIN(1286)										if ((x27 >= c->min_x)) {
HXLINE(1286)											_hx_tmp221 = !(c->started);
            										}
            										else {
HXLINE(1286)											_hx_tmp221 = true;
            										}
HXDLIN(1286)										if (_hx_tmp221) {
HXLINE(1286)											c->min_x = x27;
            										}
HXDLIN(1286)										bool _hx_tmp222;
HXDLIN(1286)										if ((y27 >= c->min_y)) {
HXLINE(1286)											_hx_tmp222 = !(c->started);
            										}
            										else {
HXLINE(1286)											_hx_tmp222 = true;
            										}
HXDLIN(1286)										if (_hx_tmp222) {
HXLINE(1286)											c->min_y = y27;
            										}
HXDLIN(1286)										c->started = true;
            									}
HXDLIN(1286)									{
HXLINE(1286)										{
HXLINE(1286)											bool _hx_tmp223;
HXDLIN(1286)											if ((cx33 <= c->max_x)) {
HXLINE(1286)												_hx_tmp223 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp223 = true;
            											}
HXDLIN(1286)											if (_hx_tmp223) {
HXLINE(1286)												c->max_x = cx33;
            											}
HXDLIN(1286)											bool _hx_tmp224;
HXDLIN(1286)											if ((cy33 <= c->max_y)) {
HXLINE(1286)												_hx_tmp224 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp224 = true;
            											}
HXDLIN(1286)											if (_hx_tmp224) {
HXLINE(1286)												c->max_y = cy33;
            											}
HXDLIN(1286)											bool _hx_tmp225;
HXDLIN(1286)											if ((cx33 >= c->min_x)) {
HXLINE(1286)												_hx_tmp225 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp225 = true;
            											}
HXDLIN(1286)											if (_hx_tmp225) {
HXLINE(1286)												c->min_x = cx33;
            											}
HXDLIN(1286)											bool _hx_tmp226;
HXDLIN(1286)											if ((cy33 >= c->min_y)) {
HXLINE(1286)												_hx_tmp226 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp226 = true;
            											}
HXDLIN(1286)											if (_hx_tmp226) {
HXLINE(1286)												c->min_y = cy33;
            											}
HXDLIN(1286)											c->started = true;
            										}
HXDLIN(1286)										{
HXLINE(1286)											bool _hx_tmp227;
HXDLIN(1286)											if ((cx127 <= c->max_x)) {
HXLINE(1286)												_hx_tmp227 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp227 = true;
            											}
HXDLIN(1286)											if (_hx_tmp227) {
HXLINE(1286)												c->max_x = cx127;
            											}
HXDLIN(1286)											bool _hx_tmp228;
HXDLIN(1286)											if ((cy127 <= c->max_y)) {
HXLINE(1286)												_hx_tmp228 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp228 = true;
            											}
HXDLIN(1286)											if (_hx_tmp228) {
HXLINE(1286)												c->max_y = cy127;
            											}
HXDLIN(1286)											bool _hx_tmp229;
HXDLIN(1286)											if ((cx127 >= c->min_x)) {
HXLINE(1286)												_hx_tmp229 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp229 = true;
            											}
HXDLIN(1286)											if (_hx_tmp229) {
HXLINE(1286)												c->min_x = cx127;
            											}
HXDLIN(1286)											bool _hx_tmp230;
HXDLIN(1286)											if ((cy127 >= c->min_y)) {
HXLINE(1286)												_hx_tmp230 = !(c->started);
            											}
            											else {
HXLINE(1286)												_hx_tmp230 = true;
            											}
HXDLIN(1286)											if (_hx_tmp230) {
HXLINE(1286)												c->min_y = cy127;
            											}
HXDLIN(1286)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1286)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x27,y27,cx33,cy33);
HXDLIN(1286)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx127;
HXDLIN(1286)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy127;
            								}
HXDLIN(1286)								c->num_vertices++;
            							}
            						}
HXLINE(1287)						i = (i + 4);
HXLINE(1289)						if (((i + 3) >= sp)) {
HXLINE(1289)							goto _hx_goto_258;
            						}
HXLINE(1290)						{
HXLINE(1290)							Float cx128 = (c->x + s->__get(i));
HXDLIN(1290)							Float cy128 = c->y;
HXDLIN(1290)							Float cx214 = (cx128 + s->__get((i + 1)));
HXDLIN(1290)							Float cy214 = (cy128 + s->__get((i + 2)));
HXDLIN(1290)							Float _hx_tmp231;
HXDLIN(1290)							if (((sp - i) == 5)) {
HXLINE(1290)								_hx_tmp231 = s->__get((i + 4));
            							}
            							else {
HXLINE(1290)								_hx_tmp231 = ( (Float)(0) );
            							}
HXDLIN(1290)							c->x = (cx214 + _hx_tmp231);
HXDLIN(1290)							c->y = (cy214 + s->__get((i + 3)));
HXDLIN(1290)							{
HXLINE(1290)								int x28 = ::Std_obj::_hx_int(c->x);
HXDLIN(1290)								int y28 = ::Std_obj::_hx_int(c->y);
HXDLIN(1290)								int cx34 = ::Std_obj::_hx_int(cx128);
HXDLIN(1290)								int cy34 = ::Std_obj::_hx_int(cy128);
HXDLIN(1290)								int cx129 = ::Std_obj::_hx_int(cx214);
HXDLIN(1290)								int cy129 = ::Std_obj::_hx_int(cy214);
HXDLIN(1290)								if (c->bounds) {
HXLINE(1290)									{
HXLINE(1290)										bool _hx_tmp232;
HXDLIN(1290)										if ((x28 <= c->max_x)) {
HXLINE(1290)											_hx_tmp232 = !(c->started);
            										}
            										else {
HXLINE(1290)											_hx_tmp232 = true;
            										}
HXDLIN(1290)										if (_hx_tmp232) {
HXLINE(1290)											c->max_x = x28;
            										}
HXDLIN(1290)										bool _hx_tmp233;
HXDLIN(1290)										if ((y28 <= c->max_y)) {
HXLINE(1290)											_hx_tmp233 = !(c->started);
            										}
            										else {
HXLINE(1290)											_hx_tmp233 = true;
            										}
HXDLIN(1290)										if (_hx_tmp233) {
HXLINE(1290)											c->max_y = y28;
            										}
HXDLIN(1290)										bool _hx_tmp234;
HXDLIN(1290)										if ((x28 >= c->min_x)) {
HXLINE(1290)											_hx_tmp234 = !(c->started);
            										}
            										else {
HXLINE(1290)											_hx_tmp234 = true;
            										}
HXDLIN(1290)										if (_hx_tmp234) {
HXLINE(1290)											c->min_x = x28;
            										}
HXDLIN(1290)										bool _hx_tmp235;
HXDLIN(1290)										if ((y28 >= c->min_y)) {
HXLINE(1290)											_hx_tmp235 = !(c->started);
            										}
            										else {
HXLINE(1290)											_hx_tmp235 = true;
            										}
HXDLIN(1290)										if (_hx_tmp235) {
HXLINE(1290)											c->min_y = y28;
            										}
HXDLIN(1290)										c->started = true;
            									}
HXDLIN(1290)									{
HXLINE(1290)										{
HXLINE(1290)											bool _hx_tmp236;
HXDLIN(1290)											if ((cx34 <= c->max_x)) {
HXLINE(1290)												_hx_tmp236 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp236 = true;
            											}
HXDLIN(1290)											if (_hx_tmp236) {
HXLINE(1290)												c->max_x = cx34;
            											}
HXDLIN(1290)											bool _hx_tmp237;
HXDLIN(1290)											if ((cy34 <= c->max_y)) {
HXLINE(1290)												_hx_tmp237 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp237 = true;
            											}
HXDLIN(1290)											if (_hx_tmp237) {
HXLINE(1290)												c->max_y = cy34;
            											}
HXDLIN(1290)											bool _hx_tmp238;
HXDLIN(1290)											if ((cx34 >= c->min_x)) {
HXLINE(1290)												_hx_tmp238 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp238 = true;
            											}
HXDLIN(1290)											if (_hx_tmp238) {
HXLINE(1290)												c->min_x = cx34;
            											}
HXDLIN(1290)											bool _hx_tmp239;
HXDLIN(1290)											if ((cy34 >= c->min_y)) {
HXLINE(1290)												_hx_tmp239 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp239 = true;
            											}
HXDLIN(1290)											if (_hx_tmp239) {
HXLINE(1290)												c->min_y = cy34;
            											}
HXDLIN(1290)											c->started = true;
            										}
HXDLIN(1290)										{
HXLINE(1290)											bool _hx_tmp240;
HXDLIN(1290)											if ((cx129 <= c->max_x)) {
HXLINE(1290)												_hx_tmp240 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp240 = true;
            											}
HXDLIN(1290)											if (_hx_tmp240) {
HXLINE(1290)												c->max_x = cx129;
            											}
HXDLIN(1290)											bool _hx_tmp241;
HXDLIN(1290)											if ((cy129 <= c->max_y)) {
HXLINE(1290)												_hx_tmp241 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp241 = true;
            											}
HXDLIN(1290)											if (_hx_tmp241) {
HXLINE(1290)												c->max_y = cy129;
            											}
HXDLIN(1290)											bool _hx_tmp242;
HXDLIN(1290)											if ((cx129 >= c->min_x)) {
HXLINE(1290)												_hx_tmp242 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp242 = true;
            											}
HXDLIN(1290)											if (_hx_tmp242) {
HXLINE(1290)												c->min_x = cx129;
            											}
HXDLIN(1290)											bool _hx_tmp243;
HXDLIN(1290)											if ((cy129 >= c->min_y)) {
HXLINE(1290)												_hx_tmp243 = !(c->started);
            											}
            											else {
HXLINE(1290)												_hx_tmp243 = true;
            											}
HXDLIN(1290)											if (_hx_tmp243) {
HXLINE(1290)												c->min_y = cy129;
            											}
HXDLIN(1290)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1290)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x28,y28,cx34,cy34);
HXDLIN(1290)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx129;
HXDLIN(1290)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy129;
            								}
HXDLIN(1290)								c->num_vertices++;
            							}
            						}
HXLINE(1291)						i = (i + 4);
            					}
            					_hx_goto_258:;
            				}
            				break;
            				case (int)31: {
HXLINE(1272)					if ((sp < 4)) {
HXLINE(1272)						return false;
            					}
HXLINE(1273)					while(((i + 3) < sp)){
HXLINE(1275)						{
HXLINE(1275)							Float cx130 = (c->x + s->__get(i));
HXDLIN(1275)							Float cy130 = c->y;
HXDLIN(1275)							Float cx215 = (cx130 + s->__get((i + 1)));
HXDLIN(1275)							Float cy215 = (cy130 + s->__get((i + 2)));
HXDLIN(1275)							Float _hx_tmp244;
HXDLIN(1275)							if (((sp - i) == 5)) {
HXLINE(1275)								_hx_tmp244 = s->__get((i + 4));
            							}
            							else {
HXLINE(1275)								_hx_tmp244 = ( (Float)(0) );
            							}
HXDLIN(1275)							c->x = (cx215 + _hx_tmp244);
HXDLIN(1275)							c->y = (cy215 + s->__get((i + 3)));
HXDLIN(1275)							{
HXLINE(1275)								int x29 = ::Std_obj::_hx_int(c->x);
HXDLIN(1275)								int y29 = ::Std_obj::_hx_int(c->y);
HXDLIN(1275)								int cx35 = ::Std_obj::_hx_int(cx130);
HXDLIN(1275)								int cy35 = ::Std_obj::_hx_int(cy130);
HXDLIN(1275)								int cx131 = ::Std_obj::_hx_int(cx215);
HXDLIN(1275)								int cy131 = ::Std_obj::_hx_int(cy215);
HXDLIN(1275)								if (c->bounds) {
HXLINE(1275)									{
HXLINE(1275)										bool _hx_tmp245;
HXDLIN(1275)										if ((x29 <= c->max_x)) {
HXLINE(1275)											_hx_tmp245 = !(c->started);
            										}
            										else {
HXLINE(1275)											_hx_tmp245 = true;
            										}
HXDLIN(1275)										if (_hx_tmp245) {
HXLINE(1275)											c->max_x = x29;
            										}
HXDLIN(1275)										bool _hx_tmp246;
HXDLIN(1275)										if ((y29 <= c->max_y)) {
HXLINE(1275)											_hx_tmp246 = !(c->started);
            										}
            										else {
HXLINE(1275)											_hx_tmp246 = true;
            										}
HXDLIN(1275)										if (_hx_tmp246) {
HXLINE(1275)											c->max_y = y29;
            										}
HXDLIN(1275)										bool _hx_tmp247;
HXDLIN(1275)										if ((x29 >= c->min_x)) {
HXLINE(1275)											_hx_tmp247 = !(c->started);
            										}
            										else {
HXLINE(1275)											_hx_tmp247 = true;
            										}
HXDLIN(1275)										if (_hx_tmp247) {
HXLINE(1275)											c->min_x = x29;
            										}
HXDLIN(1275)										bool _hx_tmp248;
HXDLIN(1275)										if ((y29 >= c->min_y)) {
HXLINE(1275)											_hx_tmp248 = !(c->started);
            										}
            										else {
HXLINE(1275)											_hx_tmp248 = true;
            										}
HXDLIN(1275)										if (_hx_tmp248) {
HXLINE(1275)											c->min_y = y29;
            										}
HXDLIN(1275)										c->started = true;
            									}
HXDLIN(1275)									{
HXLINE(1275)										{
HXLINE(1275)											bool _hx_tmp249;
HXDLIN(1275)											if ((cx35 <= c->max_x)) {
HXLINE(1275)												_hx_tmp249 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp249 = true;
            											}
HXDLIN(1275)											if (_hx_tmp249) {
HXLINE(1275)												c->max_x = cx35;
            											}
HXDLIN(1275)											bool _hx_tmp250;
HXDLIN(1275)											if ((cy35 <= c->max_y)) {
HXLINE(1275)												_hx_tmp250 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp250 = true;
            											}
HXDLIN(1275)											if (_hx_tmp250) {
HXLINE(1275)												c->max_y = cy35;
            											}
HXDLIN(1275)											bool _hx_tmp251;
HXDLIN(1275)											if ((cx35 >= c->min_x)) {
HXLINE(1275)												_hx_tmp251 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp251 = true;
            											}
HXDLIN(1275)											if (_hx_tmp251) {
HXLINE(1275)												c->min_x = cx35;
            											}
HXDLIN(1275)											bool _hx_tmp252;
HXDLIN(1275)											if ((cy35 >= c->min_y)) {
HXLINE(1275)												_hx_tmp252 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp252 = true;
            											}
HXDLIN(1275)											if (_hx_tmp252) {
HXLINE(1275)												c->min_y = cy35;
            											}
HXDLIN(1275)											c->started = true;
            										}
HXDLIN(1275)										{
HXLINE(1275)											bool _hx_tmp253;
HXDLIN(1275)											if ((cx131 <= c->max_x)) {
HXLINE(1275)												_hx_tmp253 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp253 = true;
            											}
HXDLIN(1275)											if (_hx_tmp253) {
HXLINE(1275)												c->max_x = cx131;
            											}
HXDLIN(1275)											bool _hx_tmp254;
HXDLIN(1275)											if ((cy131 <= c->max_y)) {
HXLINE(1275)												_hx_tmp254 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp254 = true;
            											}
HXDLIN(1275)											if (_hx_tmp254) {
HXLINE(1275)												c->max_y = cy131;
            											}
HXDLIN(1275)											bool _hx_tmp255;
HXDLIN(1275)											if ((cx131 >= c->min_x)) {
HXLINE(1275)												_hx_tmp255 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp255 = true;
            											}
HXDLIN(1275)											if (_hx_tmp255) {
HXLINE(1275)												c->min_x = cx131;
            											}
HXDLIN(1275)											bool _hx_tmp256;
HXDLIN(1275)											if ((cy131 >= c->min_y)) {
HXLINE(1275)												_hx_tmp256 = !(c->started);
            											}
            											else {
HXLINE(1275)												_hx_tmp256 = true;
            											}
HXDLIN(1275)											if (_hx_tmp256) {
HXLINE(1275)												c->min_y = cy131;
            											}
HXDLIN(1275)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1275)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x29,y29,cx35,cy35);
HXDLIN(1275)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx131;
HXDLIN(1275)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy131;
            								}
HXDLIN(1275)								c->num_vertices++;
            							}
            						}
HXLINE(1276)						i = (i + 4);
HXLINE(1278)						if (((i + 3) >= sp)) {
HXLINE(1278)							goto _hx_goto_259;
            						}
HXLINE(1279)						{
HXLINE(1279)							Float cx132 = c->x;
HXDLIN(1279)							Float cy132 = (c->y + s->__get(i));
HXDLIN(1279)							Float cx216 = (cx132 + s->__get((i + 1)));
HXDLIN(1279)							Float cy216 = (cy132 + s->__get((i + 2)));
HXDLIN(1279)							c->x = (cx216 + s->__get((i + 3)));
HXDLIN(1279)							Float _hx_tmp257;
HXDLIN(1279)							if (((sp - i) == 5)) {
HXLINE(1279)								_hx_tmp257 = s->__get((i + 4));
            							}
            							else {
HXLINE(1279)								_hx_tmp257 = ( (Float)(0) );
            							}
HXDLIN(1279)							c->y = (cy216 + _hx_tmp257);
HXDLIN(1279)							{
HXLINE(1279)								int x30 = ::Std_obj::_hx_int(c->x);
HXDLIN(1279)								int y30 = ::Std_obj::_hx_int(c->y);
HXDLIN(1279)								int cx36 = ::Std_obj::_hx_int(cx132);
HXDLIN(1279)								int cy36 = ::Std_obj::_hx_int(cy132);
HXDLIN(1279)								int cx133 = ::Std_obj::_hx_int(cx216);
HXDLIN(1279)								int cy133 = ::Std_obj::_hx_int(cy216);
HXDLIN(1279)								if (c->bounds) {
HXLINE(1279)									{
HXLINE(1279)										bool _hx_tmp258;
HXDLIN(1279)										if ((x30 <= c->max_x)) {
HXLINE(1279)											_hx_tmp258 = !(c->started);
            										}
            										else {
HXLINE(1279)											_hx_tmp258 = true;
            										}
HXDLIN(1279)										if (_hx_tmp258) {
HXLINE(1279)											c->max_x = x30;
            										}
HXDLIN(1279)										bool _hx_tmp259;
HXDLIN(1279)										if ((y30 <= c->max_y)) {
HXLINE(1279)											_hx_tmp259 = !(c->started);
            										}
            										else {
HXLINE(1279)											_hx_tmp259 = true;
            										}
HXDLIN(1279)										if (_hx_tmp259) {
HXLINE(1279)											c->max_y = y30;
            										}
HXDLIN(1279)										bool _hx_tmp260;
HXDLIN(1279)										if ((x30 >= c->min_x)) {
HXLINE(1279)											_hx_tmp260 = !(c->started);
            										}
            										else {
HXLINE(1279)											_hx_tmp260 = true;
            										}
HXDLIN(1279)										if (_hx_tmp260) {
HXLINE(1279)											c->min_x = x30;
            										}
HXDLIN(1279)										bool _hx_tmp261;
HXDLIN(1279)										if ((y30 >= c->min_y)) {
HXLINE(1279)											_hx_tmp261 = !(c->started);
            										}
            										else {
HXLINE(1279)											_hx_tmp261 = true;
            										}
HXDLIN(1279)										if (_hx_tmp261) {
HXLINE(1279)											c->min_y = y30;
            										}
HXDLIN(1279)										c->started = true;
            									}
HXDLIN(1279)									{
HXLINE(1279)										{
HXLINE(1279)											bool _hx_tmp262;
HXDLIN(1279)											if ((cx36 <= c->max_x)) {
HXLINE(1279)												_hx_tmp262 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp262 = true;
            											}
HXDLIN(1279)											if (_hx_tmp262) {
HXLINE(1279)												c->max_x = cx36;
            											}
HXDLIN(1279)											bool _hx_tmp263;
HXDLIN(1279)											if ((cy36 <= c->max_y)) {
HXLINE(1279)												_hx_tmp263 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp263 = true;
            											}
HXDLIN(1279)											if (_hx_tmp263) {
HXLINE(1279)												c->max_y = cy36;
            											}
HXDLIN(1279)											bool _hx_tmp264;
HXDLIN(1279)											if ((cx36 >= c->min_x)) {
HXLINE(1279)												_hx_tmp264 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp264 = true;
            											}
HXDLIN(1279)											if (_hx_tmp264) {
HXLINE(1279)												c->min_x = cx36;
            											}
HXDLIN(1279)											bool _hx_tmp265;
HXDLIN(1279)											if ((cy36 >= c->min_y)) {
HXLINE(1279)												_hx_tmp265 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp265 = true;
            											}
HXDLIN(1279)											if (_hx_tmp265) {
HXLINE(1279)												c->min_y = cy36;
            											}
HXDLIN(1279)											c->started = true;
            										}
HXDLIN(1279)										{
HXLINE(1279)											bool _hx_tmp266;
HXDLIN(1279)											if ((cx133 <= c->max_x)) {
HXLINE(1279)												_hx_tmp266 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp266 = true;
            											}
HXDLIN(1279)											if (_hx_tmp266) {
HXLINE(1279)												c->max_x = cx133;
            											}
HXDLIN(1279)											bool _hx_tmp267;
HXDLIN(1279)											if ((cy133 <= c->max_y)) {
HXLINE(1279)												_hx_tmp267 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp267 = true;
            											}
HXDLIN(1279)											if (_hx_tmp267) {
HXLINE(1279)												c->max_y = cy133;
            											}
HXDLIN(1279)											bool _hx_tmp268;
HXDLIN(1279)											if ((cx133 >= c->min_x)) {
HXLINE(1279)												_hx_tmp268 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp268 = true;
            											}
HXDLIN(1279)											if (_hx_tmp268) {
HXLINE(1279)												c->min_x = cx133;
            											}
HXDLIN(1279)											bool _hx_tmp269;
HXDLIN(1279)											if ((cy133 >= c->min_y)) {
HXLINE(1279)												_hx_tmp269 = !(c->started);
            											}
            											else {
HXLINE(1279)												_hx_tmp269 = true;
            											}
HXDLIN(1279)											if (_hx_tmp269) {
HXLINE(1279)												c->min_y = cy133;
            											}
HXDLIN(1279)											c->started = true;
            										}
            									}
            								}
            								else {
HXLINE(1279)									::kha::graphics2::truetype::StbTruetype_obj::stbtt_setvertex(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) ),4,x30,y30,cx36,cy36);
HXDLIN(1279)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cx1 = cx133;
HXDLIN(1279)									( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(c->pvertices,c->num_vertices)) )->cy1 = cy133;
            								}
HXDLIN(1279)								c->num_vertices++;
            							}
            						}
HXLINE(1280)						i = (i + 4);
            					}
            					_hx_goto_259:;
            				}
            				break;
            				default:{
HXLINE(1439)					bool _hx_tmp270;
HXDLIN(1439)					bool _hx_tmp271;
HXDLIN(1439)					if ((b0 != 255)) {
HXLINE(1439)						_hx_tmp271 = (b0 != 28);
            					}
            					else {
HXLINE(1439)						_hx_tmp271 = false;
            					}
HXDLIN(1439)					if (_hx_tmp271) {
HXLINE(1439)						if ((b0 >= 32)) {
HXLINE(1439)							_hx_tmp270 = (b0 > 254);
            						}
            						else {
HXLINE(1439)							_hx_tmp270 = true;
            						}
            					}
            					else {
HXLINE(1439)						_hx_tmp270 = false;
            					}
HXDLIN(1439)					if (_hx_tmp270) {
HXLINE(1440)						return false;
            					}
HXLINE(1443)					if ((b0 == 255)) {
HXLINE(1444)						int v50 = 0;
HXDLIN(1444)						{
HXLINE(1444)							int _g35 = 0;
HXDLIN(1444)							int _g125 = 4;
HXDLIN(1444)							while((_g35 < _g125)){
HXLINE(1444)								_g35 = (_g35 + 1);
HXDLIN(1444)								int i28 = (_g35 - 1);
HXDLIN(1444)								int v51;
HXDLIN(1444)								int b37 = b->cursor;
HXDLIN(1444)								if ((b37 >= b->data->get_length())) {
HXLINE(1444)									v51 = 0;
            								}
            								else {
HXLINE(1444)									v51 = b->data->readU8(b->cursor++);
            								}
HXDLIN(1444)								v50 = ((v50 << 8) | v51);
            							}
            						}
HXDLIN(1444)						f = (( (Float)(v50) ) / ( (Float)(65536) ));
            					}
            					else {
HXLINE(1446)						{
HXLINE(1446)							int o16 = (b->cursor + -1);
HXDLIN(1446)							{
HXLINE(1446)								bool value10;
HXDLIN(1446)								if ((o16 <= b->data->get_length())) {
HXLINE(1446)									value10 = (o16 < 0);
            								}
            								else {
HXLINE(1446)									value10 = true;
            								}
HXDLIN(1446)								if (!(!(value10))) {
HXLINE(1446)									HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            								}
            							}
HXDLIN(1446)							int _hx_tmp272;
HXDLIN(1446)							bool _hx_tmp273;
HXDLIN(1446)							if ((o16 <= b->data->get_length())) {
HXLINE(1446)								_hx_tmp273 = (o16 < 0);
            							}
            							else {
HXLINE(1446)								_hx_tmp273 = true;
            							}
HXDLIN(1446)							if (_hx_tmp273) {
HXLINE(1446)								_hx_tmp272 = b->data->get_length();
            							}
            							else {
HXLINE(1446)								_hx_tmp272 = o16;
            							}
HXDLIN(1446)							b->cursor = _hx_tmp272;
            						}
HXLINE(1447)						int b07;
HXDLIN(1447)						int b38 = b->cursor;
HXDLIN(1447)						if ((b38 >= b->data->get_length())) {
HXLINE(1447)							b07 = 0;
            						}
            						else {
HXLINE(1447)							b07 = b->data->readU8(b->cursor++);
            						}
HXDLIN(1447)						bool f1;
HXDLIN(1447)						if ((b07 >= 32)) {
HXLINE(1447)							f1 = (b07 <= 246);
            						}
            						else {
HXLINE(1447)							f1 = false;
            						}
HXDLIN(1447)						if (f1) {
HXLINE(1447)							f = ( (Float)((b07 - 139)) );
            						}
            						else {
HXLINE(1447)							bool f2;
HXDLIN(1447)							if ((b07 >= 247)) {
HXLINE(1447)								f2 = (b07 <= 250);
            							}
            							else {
HXLINE(1447)								f2 = false;
            							}
HXDLIN(1447)							if (f2) {
HXLINE(1447)								int f3;
HXDLIN(1447)								int b39 = b->cursor;
HXDLIN(1447)								if ((b39 >= b->data->get_length())) {
HXLINE(1447)									f3 = 0;
            								}
            								else {
HXLINE(1447)									f3 = b->data->readU8(b->cursor++);
            								}
HXDLIN(1447)								f = ( (Float)(((((b07 - 247) * 256) + f3) + 108)) );
            							}
            							else {
HXLINE(1447)								bool f4;
HXDLIN(1447)								if ((b07 >= 251)) {
HXLINE(1447)									f4 = (b07 <= 254);
            								}
            								else {
HXLINE(1447)									f4 = false;
            								}
HXDLIN(1447)								if (f4) {
HXLINE(1447)									int f5;
HXDLIN(1447)									int b40 = b->cursor;
HXDLIN(1447)									if ((b40 >= b->data->get_length())) {
HXLINE(1447)										f5 = 0;
            									}
            									else {
HXLINE(1447)										f5 = b->data->readU8(b->cursor++);
            									}
HXDLIN(1447)									f = ( (Float)((((-((b07 - 251)) * 256) - f5) - 108)) );
            								}
            								else {
HXLINE(1447)									if ((b07 == 28)) {
HXLINE(1447)										int v52 = 0;
HXDLIN(1447)										{
HXLINE(1447)											int _g36 = 0;
HXDLIN(1447)											int _g126 = 2;
HXDLIN(1447)											while((_g36 < _g126)){
HXLINE(1447)												_g36 = (_g36 + 1);
HXDLIN(1447)												int i29 = (_g36 - 1);
HXDLIN(1447)												int v53;
HXDLIN(1447)												int b41 = b->cursor;
HXDLIN(1447)												if ((b41 >= b->data->get_length())) {
HXLINE(1447)													v53 = 0;
            												}
            												else {
HXLINE(1447)													v53 = b->data->readU8(b->cursor++);
            												}
HXDLIN(1447)												v52 = ((v52 << 8) | v53);
            											}
            										}
HXDLIN(1447)										f = ( (Float)(v52) );
            									}
            									else {
HXLINE(1447)										if ((b07 == 29)) {
HXLINE(1447)											int v54 = 0;
HXDLIN(1447)											{
HXLINE(1447)												int _g37 = 0;
HXDLIN(1447)												int _g127 = 4;
HXDLIN(1447)												while((_g37 < _g127)){
HXLINE(1447)													_g37 = (_g37 + 1);
HXDLIN(1447)													int i30 = (_g37 - 1);
HXDLIN(1447)													int v55;
HXDLIN(1447)													int b42 = b->cursor;
HXDLIN(1447)													if ((b42 >= b->data->get_length())) {
HXLINE(1447)														v55 = 0;
            													}
            													else {
HXLINE(1447)														v55 = b->data->readU8(b->cursor++);
            													}
HXDLIN(1447)													v54 = ((v54 << 8) | v55);
            												}
            											}
HXDLIN(1447)											f = ( (Float)(v54) );
            										}
            										else {
HXLINE(1447)											HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            										}
            									}
            								}
            							}
            						}
            					}
HXLINE(1449)					if ((sp >= 48)) {
HXLINE(1449)						return false;
            					}
HXLINE(1450)					sp = (sp + 1);
HXDLIN(1450)					s[(sp - 1)] = f;
HXLINE(1451)					clear_stack = false;
            				}
            			}
HXLINE(1453)			if (clear_stack) {
HXLINE(1453)				sp = 0;
            			}
            		}
            		_hx_goto_218:;
HXLINE(1455)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__run_charstring,return )

::Array< ::Dynamic> StbTruetype_obj::stbtt__GetGlyphShapeT2( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1458_stbtt__GetGlyphShapeT2)
HXLINE(1460)		 ::kha::graphics2::truetype::Stbtt__csctx tmp =  ::kha::graphics2::truetype::Stbtt__csctx_obj::__alloc( HX_CTX );
HXDLIN(1460)		tmp->bounds = true;
HXDLIN(1460)		tmp->started = false;
HXDLIN(1460)		tmp->first_x = ( (Float)(0) );
HXDLIN(1460)		tmp->first_y = ( (Float)(0) );
HXDLIN(1460)		tmp->x = ( (Float)(0) );
HXDLIN(1460)		tmp->y = ( (Float)(0) );
HXDLIN(1460)		tmp->min_x = 0;
HXDLIN(1460)		tmp->min_y = 0;
HXDLIN(1460)		tmp->max_x = 0;
HXDLIN(1460)		tmp->max_y = 0;
HXDLIN(1460)		tmp->_hx_set_pvertices(HX_CTX, null());
HXDLIN(1460)		tmp->num_vertices = 0;
HXDLIN(1460)		 ::kha::graphics2::truetype::Stbtt__csctx count_ctx = tmp;
HXLINE(1461)		 ::kha::graphics2::truetype::Stbtt__csctx tmp1 =  ::kha::graphics2::truetype::Stbtt__csctx_obj::__alloc( HX_CTX );
HXDLIN(1461)		tmp1->bounds = false;
HXDLIN(1461)		tmp1->started = false;
HXDLIN(1461)		tmp1->first_x = ( (Float)(0) );
HXDLIN(1461)		tmp1->first_y = ( (Float)(0) );
HXDLIN(1461)		tmp1->x = ( (Float)(0) );
HXDLIN(1461)		tmp1->y = ( (Float)(0) );
HXDLIN(1461)		tmp1->min_x = 0;
HXDLIN(1461)		tmp1->min_y = 0;
HXDLIN(1461)		tmp1->max_x = 0;
HXDLIN(1461)		tmp1->max_y = 0;
HXDLIN(1461)		tmp1->_hx_set_pvertices(HX_CTX, null());
HXDLIN(1461)		tmp1->num_vertices = 0;
HXDLIN(1461)		 ::kha::graphics2::truetype::Stbtt__csctx output_ctx = tmp1;
HXLINE(1462)		if (::kha::graphics2::truetype::StbTruetype_obj::stbtt__run_charstring(info,glyph_index,count_ctx)) {
HXLINE(1463)			::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(count_ctx->num_vertices);
HXDLIN(1463)			output_ctx->_hx_set_pvertices(HX_CTX, this1);
HXLINE(1464)			{
HXLINE(1464)				int _g = 0;
HXDLIN(1464)				int _g1 = count_ctx->num_vertices;
HXDLIN(1464)				while((_g < _g1)){
HXLINE(1464)					_g = (_g + 1);
HXDLIN(1464)					int i = (_g - 1);
HXLINE(1465)					{
HXLINE(1465)						::Array< ::Dynamic> this2 = output_ctx->pvertices;
HXDLIN(1465)						 ::kha::graphics2::truetype::Stbtt_vertex val =  ::kha::graphics2::truetype::Stbtt_vertex_obj::__alloc( HX_CTX );
HXDLIN(1465)						this2->__unsafe_set(i,val);
            					}
            				}
            			}
HXLINE(1466)			if (::kha::graphics2::truetype::StbTruetype_obj::stbtt__run_charstring(info,glyph_index,output_ctx)) {
HXLINE(1467)				if ((output_ctx->num_vertices != count_ctx->num_vertices)) {
HXLINE(1467)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXLINE(1468)				return output_ctx->pvertices;
            			}
            		}
HXLINE(1471)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__GetGlyphShapeT2,return )

int StbTruetype_obj::stbtt__GetGlyphInfoT2( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index, ::kha::graphics2::truetype::Stbtt_temp_rect rect){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1474_stbtt__GetGlyphInfoT2)
HXLINE(1475)		 ::kha::graphics2::truetype::Stbtt__csctx tmp =  ::kha::graphics2::truetype::Stbtt__csctx_obj::__alloc( HX_CTX );
HXDLIN(1475)		tmp->bounds = true;
HXDLIN(1475)		tmp->started = false;
HXDLIN(1475)		tmp->first_x = ( (Float)(0) );
HXDLIN(1475)		tmp->first_y = ( (Float)(0) );
HXDLIN(1475)		tmp->x = ( (Float)(0) );
HXDLIN(1475)		tmp->y = ( (Float)(0) );
HXDLIN(1475)		tmp->min_x = 0;
HXDLIN(1475)		tmp->min_y = 0;
HXDLIN(1475)		tmp->max_x = 0;
HXDLIN(1475)		tmp->max_y = 0;
HXDLIN(1475)		tmp->_hx_set_pvertices(HX_CTX, null());
HXDLIN(1475)		tmp->num_vertices = 0;
HXDLIN(1475)		 ::kha::graphics2::truetype::Stbtt__csctx c = tmp;
HXLINE(1476)		bool r = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__run_charstring(info,glyph_index,c);
HXLINE(1477)		if (hx::IsNotNull( rect )) {
HXLINE(1478)			int _hx_tmp;
HXDLIN(1478)			if (r) {
HXLINE(1478)				_hx_tmp = c->min_x;
            			}
            			else {
HXLINE(1478)				_hx_tmp = 0;
            			}
HXDLIN(1478)			rect->x0 = _hx_tmp;
HXLINE(1479)			int _hx_tmp1;
HXDLIN(1479)			if (r) {
HXLINE(1479)				_hx_tmp1 = c->min_y;
            			}
            			else {
HXLINE(1479)				_hx_tmp1 = 0;
            			}
HXDLIN(1479)			rect->y0 = _hx_tmp1;
HXLINE(1480)			int _hx_tmp2;
HXDLIN(1480)			if (r) {
HXLINE(1480)				_hx_tmp2 = c->max_x;
            			}
            			else {
HXLINE(1480)				_hx_tmp2 = 0;
            			}
HXDLIN(1480)			rect->x1 = _hx_tmp2;
HXLINE(1481)			int _hx_tmp3;
HXDLIN(1481)			if (r) {
HXLINE(1481)				_hx_tmp3 = c->max_y;
            			}
            			else {
HXLINE(1481)				_hx_tmp3 = 0;
            			}
HXDLIN(1481)			rect->y1 = _hx_tmp3;
            		}
HXLINE(1483)		if (r) {
HXLINE(1483)			return c->num_vertices;
            		}
            		else {
HXLINE(1483)			return 0;
            		}
HXDLIN(1483)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__GetGlyphInfoT2,return )

::Array< ::Dynamic> StbTruetype_obj::stbtt_GetGlyphShape( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1487_stbtt_GetGlyphShape)
HXDLIN(1487)		bool _hx_tmp;
HXDLIN(1487)		if (hx::IsNotNull( info->cff->data )) {
HXDLIN(1487)			_hx_tmp = (info->cff->data->get_length() == 0);
            		}
            		else {
HXDLIN(1487)			_hx_tmp = true;
            		}
HXDLIN(1487)		if (_hx_tmp) {
HXLINE(1488)			return ::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyphShapeTT(info,glyph_index);
            		}
            		else {
HXLINE(1490)			return ::kha::graphics2::truetype::StbTruetype_obj::stbtt__GetGlyphShapeT2(info,glyph_index);
            		}
HXLINE(1487)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_GetGlyphShape,return )

 ::kha::graphics2::truetype::Stbtt_temp_glyph_h_metrics StbTruetype_obj::stbtt_GetGlyphHMetrics( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph_index){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1493_stbtt_GetGlyphHMetrics)
HXLINE(1494)		 ::kha::internal::BytesBlob p = info->data;
HXDLIN(1494)		int pos = (info->hhea + 34);
HXDLIN(1494)		int ch1 = p->readU8(pos);
HXDLIN(1494)		int ch2 = p->readU8((pos + 1));
HXDLIN(1494)		int numOfLongHorMetrics = (ch2 | (ch1 << 8));
HXLINE(1495)		 ::kha::graphics2::truetype::Stbtt_temp_glyph_h_metrics metrics =  ::kha::graphics2::truetype::Stbtt_temp_glyph_h_metrics_obj::__alloc( HX_CTX );
HXLINE(1496)		if ((glyph_index < numOfLongHorMetrics)) {
HXLINE(1497)			 ::kha::internal::BytesBlob p1 = info->data;
HXDLIN(1497)			int pos1 = (info->hmtx + (4 * glyph_index));
HXDLIN(1497)			int ch11 = p1->readU8(pos1);
HXDLIN(1497)			int ch21 = p1->readU8((pos1 + 1));
HXDLIN(1497)			int n = (ch21 | (ch11 << 8));
HXDLIN(1497)			int _hx_tmp;
HXDLIN(1497)			if (((n & 32768) != 0)) {
HXLINE(1497)				_hx_tmp = (n - 65536);
            			}
            			else {
HXLINE(1497)				_hx_tmp = n;
            			}
HXDLIN(1497)			metrics->advanceWidth = _hx_tmp;
HXLINE(1498)			 ::kha::internal::BytesBlob p2 = info->data;
HXDLIN(1498)			int pos2 = ((info->hmtx + (4 * glyph_index)) + 2);
HXDLIN(1498)			int ch12 = p2->readU8(pos2);
HXDLIN(1498)			int ch22 = p2->readU8((pos2 + 1));
HXDLIN(1498)			int n1 = (ch22 | (ch12 << 8));
HXDLIN(1498)			int _hx_tmp1;
HXDLIN(1498)			if (((n1 & 32768) != 0)) {
HXLINE(1498)				_hx_tmp1 = (n1 - 65536);
            			}
            			else {
HXLINE(1498)				_hx_tmp1 = n1;
            			}
HXDLIN(1498)			metrics->leftSideBearing = _hx_tmp1;
            		}
            		else {
HXLINE(1500)			 ::kha::internal::BytesBlob p3 = info->data;
HXDLIN(1500)			int pos3 = (info->hmtx + (4 * (numOfLongHorMetrics - 1)));
HXDLIN(1500)			int ch13 = p3->readU8(pos3);
HXDLIN(1500)			int ch23 = p3->readU8((pos3 + 1));
HXDLIN(1500)			int n2 = (ch23 | (ch13 << 8));
HXDLIN(1500)			int _hx_tmp2;
HXDLIN(1500)			if (((n2 & 32768) != 0)) {
HXLINE(1500)				_hx_tmp2 = (n2 - 65536);
            			}
            			else {
HXLINE(1500)				_hx_tmp2 = n2;
            			}
HXDLIN(1500)			metrics->advanceWidth = _hx_tmp2;
HXLINE(1501)			 ::kha::internal::BytesBlob p4 = info->data;
HXDLIN(1501)			int pos4 = ((info->hmtx + (4 * numOfLongHorMetrics)) + (2 * (glyph_index - numOfLongHorMetrics)));
HXDLIN(1501)			int ch14 = p4->readU8(pos4);
HXDLIN(1501)			int ch24 = p4->readU8((pos4 + 1));
HXDLIN(1501)			int n3 = (ch24 | (ch14 << 8));
HXDLIN(1501)			int _hx_tmp3;
HXDLIN(1501)			if (((n3 & 32768) != 0)) {
HXLINE(1501)				_hx_tmp3 = (n3 - 65536);
            			}
            			else {
HXLINE(1501)				_hx_tmp3 = n3;
            			}
HXDLIN(1501)			metrics->leftSideBearing = _hx_tmp3;
            		}
HXLINE(1503)		return metrics;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_GetGlyphHMetrics,return )

int StbTruetype_obj::stbtt_GetGlyphKernAdvance( ::kha::graphics2::truetype::Stbtt_fontinfo info,int glyph1,int glyph2){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1506_stbtt_GetGlyphKernAdvance)
HXLINE(1507)		int kern = info->kern;
HXLINE(1508)		 ::kha::internal::BytesBlob data = info->data;
HXLINE(1509)		int straw;
HXLINE(1510)		int m;
HXLINE(1513)		if ((info->kern == 0)) {
HXLINE(1514)			return 0;
            		}
HXLINE(1515)		int pos = (kern + 2);
HXDLIN(1515)		int ch1 = data->readU8(pos);
HXDLIN(1515)		int ch2 = data->readU8((pos + 1));
HXDLIN(1515)		if (((ch2 | (ch1 << 8)) < 1)) {
HXLINE(1516)			return 0;
            		}
HXLINE(1517)		int pos1 = (kern + 8);
HXDLIN(1517)		int ch11 = data->readU8(pos1);
HXDLIN(1517)		int ch21 = data->readU8((pos1 + 1));
HXDLIN(1517)		if (((ch21 | (ch11 << 8)) != 1)) {
HXLINE(1518)			return 0;
            		}
HXLINE(1510)		int l = 0;
HXLINE(1521)		int pos2 = (kern + 10);
HXDLIN(1521)		int ch12 = data->readU8(pos2);
HXDLIN(1521)		int ch22 = data->readU8((pos2 + 1));
HXLINE(1510)		int r = ((ch22 | (ch12 << 8)) - 1);
HXLINE(1509)		int needle = ((glyph1 << 16) | glyph2);
HXLINE(1523)		while((l <= r)){
HXLINE(1524)			m = ((l + r) >> 1);
HXLINE(1525)			int pos3 = ((kern + 18) + (m * 6));
HXDLIN(1525)			int ch13 = data->readU8(pos3);
HXDLIN(1525)			int ch23 = data->readU8((pos3 + 1));
HXDLIN(1525)			int ch3 = data->readU8((pos3 + 2));
HXDLIN(1525)			int ch4 = data->readU8((pos3 + 3));
HXDLIN(1525)			straw = (((ch4 | (ch3 << 8)) | (ch23 << 16)) | (ch13 << 24));
HXLINE(1526)			if ((needle < straw)) {
HXLINE(1527)				r = (m - 1);
            			}
            			else {
HXLINE(1528)				if ((needle > straw)) {
HXLINE(1529)					l = (m + 1);
            				}
            				else {
HXLINE(1531)					int pos4 = ((kern + 22) + (m * 6));
HXDLIN(1531)					int ch14 = data->readU8(pos4);
HXDLIN(1531)					int ch24 = data->readU8((pos4 + 1));
HXDLIN(1531)					int n = (ch24 | (ch14 << 8));
HXDLIN(1531)					if (((n & 32768) != 0)) {
HXLINE(1531)						return (n - 65536);
            					}
            					else {
HXLINE(1531)						return n;
            					}
            				}
            			}
            		}
HXLINE(1533)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt_GetGlyphKernAdvance,return )

int StbTruetype_obj::stbtt_GetCodepointKernAdvance( ::kha::graphics2::truetype::Stbtt_fontinfo info,int ch1,int ch2){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1536_stbtt_GetCodepointKernAdvance)
HXLINE(1537)		if ((info->kern == 0)) {
HXLINE(1538)			return 0;
            		}
HXLINE(1539)		int _hx_tmp = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,ch1);
HXDLIN(1539)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphKernAdvance(info,_hx_tmp,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,ch2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt_GetCodepointKernAdvance,return )

 ::kha::graphics2::truetype::Stbtt_temp_glyph_h_metrics StbTruetype_obj::stbtt_GetCodepointHMetrics( ::kha::graphics2::truetype::Stbtt_fontinfo info,int codepoint){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1543_stbtt_GetCodepointHMetrics)
HXDLIN(1543)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphHMetrics(info,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,codepoint));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_GetCodepointHMetrics,return )

 ::kha::graphics2::truetype::Stbtt_temp_font_v_metrics StbTruetype_obj::stbtt_GetFontVMetrics( ::kha::graphics2::truetype::Stbtt_fontinfo info){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1546_stbtt_GetFontVMetrics)
HXLINE(1547)		 ::kha::graphics2::truetype::Stbtt_temp_font_v_metrics metrics =  ::kha::graphics2::truetype::Stbtt_temp_font_v_metrics_obj::__alloc( HX_CTX );
HXLINE(1548)		 ::kha::internal::BytesBlob p = info->data;
HXDLIN(1548)		int pos = (info->hhea + 4);
HXDLIN(1548)		int ch1 = p->readU8(pos);
HXDLIN(1548)		int ch2 = p->readU8((pos + 1));
HXDLIN(1548)		int n = (ch2 | (ch1 << 8));
HXDLIN(1548)		int _hx_tmp;
HXDLIN(1548)		if (((n & 32768) != 0)) {
HXLINE(1548)			_hx_tmp = (n - 65536);
            		}
            		else {
HXLINE(1548)			_hx_tmp = n;
            		}
HXDLIN(1548)		metrics->ascent = _hx_tmp;
HXLINE(1549)		 ::kha::internal::BytesBlob p1 = info->data;
HXDLIN(1549)		int pos1 = (info->hhea + 6);
HXDLIN(1549)		int ch11 = p1->readU8(pos1);
HXDLIN(1549)		int ch21 = p1->readU8((pos1 + 1));
HXDLIN(1549)		int n1 = (ch21 | (ch11 << 8));
HXDLIN(1549)		int _hx_tmp1;
HXDLIN(1549)		if (((n1 & 32768) != 0)) {
HXLINE(1549)			_hx_tmp1 = (n1 - 65536);
            		}
            		else {
HXLINE(1549)			_hx_tmp1 = n1;
            		}
HXDLIN(1549)		metrics->descent = _hx_tmp1;
HXLINE(1550)		 ::kha::internal::BytesBlob p2 = info->data;
HXDLIN(1550)		int pos2 = (info->hhea + 8);
HXDLIN(1550)		int ch12 = p2->readU8(pos2);
HXDLIN(1550)		int ch22 = p2->readU8((pos2 + 1));
HXDLIN(1550)		int n2 = (ch22 | (ch12 << 8));
HXDLIN(1550)		int _hx_tmp2;
HXDLIN(1550)		if (((n2 & 32768) != 0)) {
HXLINE(1550)			_hx_tmp2 = (n2 - 65536);
            		}
            		else {
HXLINE(1550)			_hx_tmp2 = n2;
            		}
HXDLIN(1550)		metrics->lineGap = _hx_tmp2;
HXLINE(1551)		return metrics;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt_GetFontVMetrics,return )

 ::kha::graphics2::truetype::Stbtt_temp_rect StbTruetype_obj::stbtt_GetFontBoundingBox( ::kha::graphics2::truetype::Stbtt_fontinfo info){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1554_stbtt_GetFontBoundingBox)
HXLINE(1555)		 ::kha::graphics2::truetype::Stbtt_temp_rect rect =  ::kha::graphics2::truetype::Stbtt_temp_rect_obj::__alloc( HX_CTX );
HXLINE(1556)		 ::kha::internal::BytesBlob p = info->data;
HXDLIN(1556)		int pos = (info->head + 36);
HXDLIN(1556)		int ch1 = p->readU8(pos);
HXDLIN(1556)		int ch2 = p->readU8((pos + 1));
HXDLIN(1556)		int n = (ch2 | (ch1 << 8));
HXDLIN(1556)		int _hx_tmp;
HXDLIN(1556)		if (((n & 32768) != 0)) {
HXLINE(1556)			_hx_tmp = (n - 65536);
            		}
            		else {
HXLINE(1556)			_hx_tmp = n;
            		}
HXDLIN(1556)		rect->x0 = _hx_tmp;
HXLINE(1557)		 ::kha::internal::BytesBlob p1 = info->data;
HXDLIN(1557)		int pos1 = (info->head + 38);
HXDLIN(1557)		int ch11 = p1->readU8(pos1);
HXDLIN(1557)		int ch21 = p1->readU8((pos1 + 1));
HXDLIN(1557)		int n1 = (ch21 | (ch11 << 8));
HXDLIN(1557)		int _hx_tmp1;
HXDLIN(1557)		if (((n1 & 32768) != 0)) {
HXLINE(1557)			_hx_tmp1 = (n1 - 65536);
            		}
            		else {
HXLINE(1557)			_hx_tmp1 = n1;
            		}
HXDLIN(1557)		rect->y0 = _hx_tmp1;
HXLINE(1558)		 ::kha::internal::BytesBlob p2 = info->data;
HXDLIN(1558)		int pos2 = (info->head + 40);
HXDLIN(1558)		int ch12 = p2->readU8(pos2);
HXDLIN(1558)		int ch22 = p2->readU8((pos2 + 1));
HXDLIN(1558)		int n2 = (ch22 | (ch12 << 8));
HXDLIN(1558)		int _hx_tmp2;
HXDLIN(1558)		if (((n2 & 32768) != 0)) {
HXLINE(1558)			_hx_tmp2 = (n2 - 65536);
            		}
            		else {
HXLINE(1558)			_hx_tmp2 = n2;
            		}
HXDLIN(1558)		rect->x1 = _hx_tmp2;
HXLINE(1559)		 ::kha::internal::BytesBlob p3 = info->data;
HXDLIN(1559)		int pos3 = (info->head + 42);
HXDLIN(1559)		int ch13 = p3->readU8(pos3);
HXDLIN(1559)		int ch23 = p3->readU8((pos3 + 1));
HXDLIN(1559)		int n3 = (ch23 | (ch13 << 8));
HXDLIN(1559)		int _hx_tmp3;
HXDLIN(1559)		if (((n3 & 32768) != 0)) {
HXLINE(1559)			_hx_tmp3 = (n3 - 65536);
            		}
            		else {
HXLINE(1559)			_hx_tmp3 = n3;
            		}
HXDLIN(1559)		rect->y1 = _hx_tmp3;
HXLINE(1560)		return rect;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StbTruetype_obj,stbtt_GetFontBoundingBox,return )

Float StbTruetype_obj::stbtt_ScaleForPixelHeight( ::kha::graphics2::truetype::Stbtt_fontinfo info,Float height){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1563_stbtt_ScaleForPixelHeight)
HXLINE(1564)		 ::kha::internal::BytesBlob p = info->data;
HXDLIN(1564)		int pos = (info->hhea + 4);
HXDLIN(1564)		int ch1 = p->readU8(pos);
HXDLIN(1564)		int ch2 = p->readU8((pos + 1));
HXDLIN(1564)		int n = (ch2 | (ch1 << 8));
HXDLIN(1564)		int fheight;
HXDLIN(1564)		if (((n & 32768) != 0)) {
HXLINE(1564)			fheight = (n - 65536);
            		}
            		else {
HXLINE(1564)			fheight = n;
            		}
HXDLIN(1564)		 ::kha::internal::BytesBlob p1 = info->data;
HXDLIN(1564)		int pos1 = (info->hhea + 6);
HXDLIN(1564)		int ch11 = p1->readU8(pos1);
HXDLIN(1564)		int ch21 = p1->readU8((pos1 + 1));
HXDLIN(1564)		int n1 = (ch21 | (ch11 << 8));
HXDLIN(1564)		int fheight1;
HXDLIN(1564)		if (((n1 & 32768) != 0)) {
HXLINE(1564)			fheight1 = (n1 - 65536);
            		}
            		else {
HXLINE(1564)			fheight1 = n1;
            		}
HXDLIN(1564)		int fheight2 = (fheight - fheight1);
HXLINE(1565)		return (height / ( (Float)(fheight2) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_ScaleForPixelHeight,return )

Float StbTruetype_obj::stbtt_ScaleForMappingEmToPixels( ::kha::graphics2::truetype::Stbtt_fontinfo info,Float pixels){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1568_stbtt_ScaleForMappingEmToPixels)
HXLINE(1569)		 ::kha::internal::BytesBlob p = info->data;
HXDLIN(1569)		int pos = (info->head + 18);
HXDLIN(1569)		int ch1 = p->readU8(pos);
HXDLIN(1569)		int ch2 = p->readU8((pos + 1));
HXDLIN(1569)		int unitsPerEm = (ch2 | (ch1 << 8));
HXLINE(1570)		return (pixels / ( (Float)(unitsPerEm) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt_ScaleForMappingEmToPixels,return )

 ::kha::graphics2::truetype::Stbtt_temp_rect StbTruetype_obj::stbtt_GetGlyphBitmapBoxSubpixel( ::kha::graphics2::truetype::Stbtt_fontinfo font,int glyph,Float scale_x,Float scale_y,Float shift_x,Float shift_y){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1578_stbtt_GetGlyphBitmapBoxSubpixel)
HXLINE(1579)		 ::kha::graphics2::truetype::Stbtt_temp_rect rect =  ::kha::graphics2::truetype::Stbtt_temp_rect_obj::__alloc( HX_CTX );
HXLINE(1580)		if (!(::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBox(font,glyph,rect))) {
HXLINE(1582)			rect->x0 = 0;
HXLINE(1583)			rect->y0 = 0;
HXLINE(1584)			rect->x1 = 0;
HXLINE(1585)			rect->y1 = 0;
            		}
            		else {
HXLINE(1588)			int x0 = rect->x0;
HXLINE(1589)			int x1 = rect->x1;
HXLINE(1590)			int y0 = rect->y0;
HXLINE(1591)			int y1 = rect->y1;
HXLINE(1592)			rect->x0 = ::Math_obj::floor(((( (Float)(x0) ) * scale_x) + shift_x));
HXLINE(1593)			rect->y0 = ::Math_obj::floor(((( (Float)(-(y1)) ) * scale_y) + shift_y));
HXLINE(1594)			rect->x1 = ::Math_obj::ceil(((( (Float)(x1) ) * scale_x) + shift_x));
HXLINE(1595)			rect->y1 = ::Math_obj::ceil(((( (Float)(-(y0)) ) * scale_y) + shift_y));
            		}
HXLINE(1597)		return rect;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(StbTruetype_obj,stbtt_GetGlyphBitmapBoxSubpixel,return )

 ::kha::graphics2::truetype::Stbtt_temp_rect StbTruetype_obj::stbtt_GetGlyphBitmapBox( ::kha::graphics2::truetype::Stbtt_fontinfo font,int glyph,Float scale_x,Float scale_y){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1601_stbtt_GetGlyphBitmapBox)
HXDLIN(1601)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapBoxSubpixel(font,glyph,scale_x,scale_y,((Float)0.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(StbTruetype_obj,stbtt_GetGlyphBitmapBox,return )

 ::kha::graphics2::truetype::Stbtt_temp_rect StbTruetype_obj::stbtt_GetCodepointBitmapBoxSubpixel( ::kha::graphics2::truetype::Stbtt_fontinfo font,int codepoint,Float scale_x,Float scale_y,Float shift_x,Float shift_y){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1605_stbtt_GetCodepointBitmapBoxSubpixel)
HXDLIN(1605)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapBoxSubpixel(font,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(font,codepoint),scale_x,scale_y,shift_x,shift_y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(StbTruetype_obj,stbtt_GetCodepointBitmapBoxSubpixel,return )

 ::kha::graphics2::truetype::Stbtt_temp_rect StbTruetype_obj::stbtt_GetCodepointBitmapBox( ::kha::graphics2::truetype::Stbtt_fontinfo font,int codepoint,Float scale_x,Float scale_y){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1609_stbtt_GetCodepointBitmapBox)
HXDLIN(1609)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetCodepointBitmapBoxSubpixel(font,codepoint,scale_x,scale_y,((Float)0.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(StbTruetype_obj,stbtt_GetCodepointBitmapBox,return )

 ::kha::graphics2::truetype::Stbtt__active_edge StbTruetype_obj::stbtt__new_active(::Array< ::Dynamic> e,int eIndex,int off_x,Float start_point){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1616_stbtt__new_active)
HXLINE(1617)		 ::kha::graphics2::truetype::Stbtt__active_edge z =  ::kha::graphics2::truetype::Stbtt__active_edge_obj::__alloc( HX_CTX );
HXLINE(1618)		Float dxdy = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->x1;
HXDLIN(1618)		Float dxdy1 = (dxdy - ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->x0);
HXDLIN(1618)		Float dxdy2 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y1;
HXDLIN(1618)		Float dxdy3 = (dxdy1 / (dxdy2 - ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y0));
HXLINE(1619)		if (hx::IsNull( z )) {
HXLINE(1619)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE(1621)		if (hx::IsNull( z )) {
HXLINE(1621)			return z;
            		}
HXLINE(1622)		z->fdx = dxdy3;
HXLINE(1623)		Float _hx_tmp;
HXDLIN(1623)		if ((dxdy3 != ((Float)0.0))) {
HXLINE(1623)			_hx_tmp = (((Float)1.0) / dxdy3);
            		}
            		else {
HXLINE(1623)			_hx_tmp = ((Float)0.0);
            		}
HXDLIN(1623)		z->fdy = _hx_tmp;
HXLINE(1624)		Float _hx_tmp1 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->x0;
HXDLIN(1624)		z->fx = (_hx_tmp1 + (dxdy3 * (start_point - ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y0)));
HXLINE(1625)		 ::kha::graphics2::truetype::Stbtt__active_edge z1 = z;
HXDLIN(1625)		z1->fx = (z1->fx - ( (Float)(off_x) ));
HXLINE(1626)		Float _hx_tmp2;
HXDLIN(1626)		if (( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->invert) {
HXLINE(1626)			_hx_tmp2 = ((Float)1.0);
            		}
            		else {
HXLINE(1626)			_hx_tmp2 = ((Float)-1.0);
            		}
HXDLIN(1626)		z->direction = _hx_tmp2;
HXLINE(1627)		z->sy = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y0;
HXLINE(1628)		z->ey = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y1;
HXLINE(1629)		z->_hx_set_next(HX_CTX, null());
HXLINE(1630)		return z;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(StbTruetype_obj,stbtt__new_active,return )

void StbTruetype_obj::stbtt__handle_clipped_edge(::Array< Float > scanline,int scanlineIndex,int x, ::kha::graphics2::truetype::Stbtt__active_edge e,Float x0,Float y0,Float x1,Float y1){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1635_stbtt__handle_clipped_edge)
HXLINE(1636)		if ((y0 == y1)) {
HXLINE(1636)			return;
            		}
HXLINE(1637)		if (!((y0 < y1))) {
HXLINE(1637)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE(1638)		if (!((e->sy <= e->ey))) {
HXLINE(1638)			HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            		}
HXLINE(1639)		if ((y0 > e->ey)) {
HXLINE(1639)			return;
            		}
HXLINE(1640)		if ((y1 < e->sy)) {
HXLINE(1640)			return;
            		}
HXLINE(1641)		if ((y0 < e->sy)) {
HXLINE(1642)			x0 = (x0 + (((x1 - x0) * (e->sy - y0)) / (y1 - y0)));
HXLINE(1643)			y0 = e->sy;
            		}
HXLINE(1645)		if ((y1 > e->ey)) {
HXLINE(1646)			x1 = (x1 + (((x1 - x0) * (e->ey - y1)) / (y1 - y0)));
HXLINE(1647)			y1 = e->ey;
            		}
HXLINE(1650)		if ((x0 == x)) {
HXLINE(1651)			if (!((x1 <= (x + 1)))) {
HXLINE(1651)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
            		}
            		else {
HXLINE(1652)			if ((x0 == (x + 1))) {
HXLINE(1653)				if (!((x1 >= x))) {
HXLINE(1653)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
            			}
            			else {
HXLINE(1654)				if ((x0 <= x)) {
HXLINE(1655)					if (!((x1 <= x))) {
HXLINE(1655)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
            				}
            				else {
HXLINE(1656)					if ((x0 >= (x + 1))) {
HXLINE(1657)						if (!((x1 >= (x + 1)))) {
HXLINE(1657)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
            					else {
HXLINE(1659)						bool _hx_tmp;
HXDLIN(1659)						if ((x1 >= x)) {
HXLINE(1659)							_hx_tmp = (x1 <= (x + 1));
            						}
            						else {
HXLINE(1659)							_hx_tmp = false;
            						}
HXDLIN(1659)						if (!(_hx_tmp)) {
HXLINE(1659)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
            				}
            			}
            		}
HXLINE(1661)		bool _hx_tmp1;
HXDLIN(1661)		if ((x0 <= x)) {
HXLINE(1661)			_hx_tmp1 = (x1 <= x);
            		}
            		else {
HXLINE(1661)			_hx_tmp1 = false;
            		}
HXDLIN(1661)		if (_hx_tmp1) {
HXLINE(1662)			int _g = (scanlineIndex + x);
HXDLIN(1662)			::Array< Float > _g1 = scanline;
HXDLIN(1662)			{
HXLINE(1662)				Float val = ( (Float)(_hx_array_unsafe_get(_g1,_g)) );
HXDLIN(1662)				_g1->__unsafe_set(_g,(val + (e->direction * (y1 - y0))));
            			}
            		}
            		else {
HXLINE(1663)			bool _hx_tmp2;
HXDLIN(1663)			if ((x0 >= (x + 1))) {
HXLINE(1663)				_hx_tmp2 = (x1 >= (x + 1));
            			}
            			else {
HXLINE(1663)				_hx_tmp2 = false;
            			}
HXDLIN(1663)			if (!(_hx_tmp2)) {
HXLINE(1666)				bool _hx_tmp3;
HXDLIN(1666)				bool _hx_tmp4;
HXDLIN(1666)				bool _hx_tmp5;
HXDLIN(1666)				if ((x0 >= x)) {
HXLINE(1666)					_hx_tmp5 = (x0 <= (x + 1));
            				}
            				else {
HXLINE(1666)					_hx_tmp5 = false;
            				}
HXDLIN(1666)				if (_hx_tmp5) {
HXLINE(1666)					_hx_tmp4 = (x1 >= x);
            				}
            				else {
HXLINE(1666)					_hx_tmp4 = false;
            				}
HXDLIN(1666)				if (_hx_tmp4) {
HXLINE(1666)					_hx_tmp3 = (x1 <= (x + 1));
            				}
            				else {
HXLINE(1666)					_hx_tmp3 = false;
            				}
HXDLIN(1666)				if (!(_hx_tmp3)) {
HXLINE(1666)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXLINE(1667)				{
HXLINE(1667)					int _g2 = (scanlineIndex + x);
HXDLIN(1667)					::Array< Float > _g11 = scanline;
HXDLIN(1667)					{
HXLINE(1667)						Float val1 = ( (Float)(_hx_array_unsafe_get(_g11,_g2)) );
HXDLIN(1667)						_g11->__unsafe_set(_g2,(val1 + ((e->direction * (y1 - y0)) * (( (Float)(1) ) - (((x0 - ( (Float)(x) )) + (x1 - ( (Float)(x) ))) / ( (Float)(2) ))))));
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(StbTruetype_obj,stbtt__handle_clipped_edge,(void))

void StbTruetype_obj::stbtt__fill_active_edges_new(::Array< Float > scanline,::Array< Float > scanline_fill,int scanline_fillIndex,int len, ::kha::graphics2::truetype::Stbtt__active_edge e,Float y_top){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1671_stbtt__fill_active_edges_new)
HXLINE(1672)		Float y_bottom = (y_top + 1);
HXLINE(1674)		while(hx::IsNotNull( e )){
HXLINE(1678)			if (!((e->ey >= y_top))) {
HXLINE(1678)				HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            			}
HXLINE(1680)			if ((e->fdx == 0)) {
HXLINE(1681)				Float x0 = e->fx;
HXLINE(1682)				if ((x0 < len)) {
HXLINE(1683)					if ((x0 >= 0)) {
HXLINE(1684)						::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,::Std_obj::_hx_int(x0),e,x0,y_top,x0,y_bottom);
HXLINE(1685)						::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline_fill,(scanline_fillIndex - 1),::Std_obj::_hx_int((x0 + 1)),e,x0,y_top,x0,y_bottom);
            					}
            					else {
HXLINE(1687)						::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline_fill,(scanline_fillIndex - 1),0,e,x0,y_top,x0,y_bottom);
            					}
            				}
            			}
            			else {
HXLINE(1691)				Float x01 = e->fx;
HXLINE(1692)				Float dx = e->fdx;
HXLINE(1693)				Float xb = (x01 + dx);
HXLINE(1694)				Float x_top;
HXDLIN(1694)				Float x_bottom;
HXLINE(1695)				Float sy0;
HXDLIN(1695)				Float sy1;
HXLINE(1696)				Float dy = e->fdy;
HXLINE(1697)				bool _hx_tmp;
HXDLIN(1697)				if ((e->sy <= y_bottom)) {
HXLINE(1697)					_hx_tmp = (e->ey >= y_top);
            				}
            				else {
HXLINE(1697)					_hx_tmp = false;
            				}
HXDLIN(1697)				if (!(_hx_tmp)) {
HXLINE(1697)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXLINE(1702)				if ((e->sy > y_top)) {
HXLINE(1703)					x_top = (x01 + (dx * (e->sy - y_top)));
HXLINE(1704)					sy0 = e->sy;
            				}
            				else {
HXLINE(1706)					x_top = x01;
HXLINE(1707)					sy0 = y_top;
            				}
HXLINE(1709)				if ((e->ey < y_bottom)) {
HXLINE(1710)					x_bottom = (x01 + (dx * (e->ey - y_top)));
HXLINE(1711)					sy1 = e->ey;
            				}
            				else {
HXLINE(1713)					x_bottom = xb;
HXLINE(1714)					sy1 = y_bottom;
            				}
HXLINE(1717)				bool _hx_tmp1;
HXDLIN(1717)				bool _hx_tmp2;
HXDLIN(1717)				bool _hx_tmp3;
HXDLIN(1717)				if ((x_top >= 0)) {
HXLINE(1717)					_hx_tmp3 = (x_bottom >= 0);
            				}
            				else {
HXLINE(1717)					_hx_tmp3 = false;
            				}
HXDLIN(1717)				if (_hx_tmp3) {
HXLINE(1717)					_hx_tmp2 = (x_top < len);
            				}
            				else {
HXLINE(1717)					_hx_tmp2 = false;
            				}
HXDLIN(1717)				if (_hx_tmp2) {
HXLINE(1717)					_hx_tmp1 = (x_bottom < len);
            				}
            				else {
HXLINE(1717)					_hx_tmp1 = false;
            				}
HXDLIN(1717)				if (_hx_tmp1) {
HXLINE(1720)					int _hx_tmp4 = ::Std_obj::_hx_int(x_top);
HXDLIN(1720)					if ((_hx_tmp4 == ::Std_obj::_hx_int(x_bottom))) {
HXLINE(1723)						int x = ::Std_obj::_hx_int(x_top);
HXLINE(1721)						Float height = (sy1 - sy0);
HXLINE(1725)						bool _hx_tmp5;
HXDLIN(1725)						if ((x >= 0)) {
HXLINE(1725)							_hx_tmp5 = (x < len);
            						}
            						else {
HXLINE(1725)							_hx_tmp5 = false;
            						}
HXDLIN(1725)						if (!(_hx_tmp5)) {
HXLINE(1725)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXLINE(1726)						{
HXLINE(1726)							int _g = x;
HXDLIN(1726)							::Array< Float > _g1 = scanline;
HXDLIN(1726)							{
HXLINE(1726)								Float val = ( (Float)(_hx_array_unsafe_get(_g1,_g)) );
HXDLIN(1726)								_g1->__unsafe_set(_g,(val + ((e->direction * (( (Float)(1) ) - (((x_top - ( (Float)(x) )) + (x_bottom - ( (Float)(x) ))) / ( (Float)(2) )))) * height)));
            							}
            						}
HXLINE(1727)						{
HXLINE(1727)							int _g2 = (scanline_fillIndex + x);
HXDLIN(1727)							::Array< Float > _g11 = scanline_fill;
HXDLIN(1727)							{
HXLINE(1727)								Float val1 = ( (Float)(_hx_array_unsafe_get(_g11,_g2)) );
HXDLIN(1727)								_g11->__unsafe_set(_g2,(val1 + (e->direction * height)));
            							}
            						}
            					}
            					else {
HXLINE(1729)						 ::Dynamic x1;
HXLINE(1732)						if ((x_top > x_bottom)) {
HXLINE(1735)							sy0 = (y_bottom - (sy0 - y_top));
HXLINE(1736)							sy1 = (y_bottom - (sy1 - y_top));
HXLINE(1734)							Float t = sy0;
HXLINE(1737)							sy0 = sy1;
HXDLIN(1737)							sy1 = t;
HXLINE(1738)							t = x_bottom;
HXDLIN(1738)							x_bottom = x_top;
HXDLIN(1738)							x_top = t;
HXLINE(1739)							dx = -(dx);
HXLINE(1740)							dy = -(dy);
HXLINE(1741)							t = x01;
HXDLIN(1741)							x01 = xb;
HXDLIN(1741)							xb = t;
            						}
HXLINE(1729)						int x11 = ::Std_obj::_hx_int(x_top);
HXDLIN(1729)						int x2 = ::Std_obj::_hx_int(x_bottom);
HXLINE(1730)						Float y_crossing = (((( (Float)((x11 + 1)) ) - x01) * dy) + y_top);
HXDLIN(1730)						Float sign = e->direction;
HXDLIN(1730)						Float area = (sign * (y_crossing - sy0));
HXLINE(1753)						{
HXLINE(1753)							int _g3 = x11;
HXDLIN(1753)							::Array< Float > _g12 = scanline;
HXDLIN(1753)							{
HXLINE(1753)								Float val2 = (( (Float)(_hx_array_unsafe_get(_g12,_g3)) ) + (area * (( (Float)(1) ) - (((x_top - ( (Float)(x11) )) + ((x11 + 1) - x11)) / ( (Float)(2) )))));
HXDLIN(1753)								_g12->__unsafe_set(_g3,val2);
            							}
            						}
HXLINE(1730)						Float step = (sign * dy);
HXLINE(1756)						{
HXLINE(1756)							int _g4 = (x11 + 1);
HXDLIN(1756)							int _g13 = x2;
HXDLIN(1756)							while((_g4 < _g13)){
HXLINE(1756)								_g4 = (_g4 + 1);
HXDLIN(1756)								int x3 = (_g4 - 1);
HXLINE(1757)								{
HXLINE(1757)									int _g5 = x3;
HXDLIN(1757)									::Array< Float > _g14 = scanline;
HXDLIN(1757)									{
HXLINE(1757)										Float val3 = (( (Float)(_hx_array_unsafe_get(_g14,_g5)) ) + (area + (step / ( (Float)(2) ))));
HXDLIN(1757)										_g14->__unsafe_set(_g5,val3);
            									}
            								}
HXLINE(1758)								area = (area + step);
            							}
            						}
HXLINE(1760)						y_crossing = (y_crossing + (dy * ( (Float)((x2 - (x11 + 1))) )));
HXLINE(1762)						if (!((::Math_obj::abs(area) <= ((Float)1.01)))) {
HXLINE(1762)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
HXLINE(1764)						{
HXLINE(1764)							int _g21 = x2;
HXDLIN(1764)							::Array< Float > _g31 = scanline;
HXDLIN(1764)							{
HXLINE(1764)								Float val4 = (( (Float)(_hx_array_unsafe_get(_g31,_g21)) ) + (area + ((sign * (( (Float)(1) ) - (((x2 - x2) + (x_bottom - ( (Float)(x2) ))) / ( (Float)(2) )))) * (sy1 - y_crossing))));
HXDLIN(1764)								_g31->__unsafe_set(_g21,val4);
            							}
            						}
HXLINE(1766)						{
HXLINE(1766)							int _g22 = (scanline_fillIndex + x2);
HXDLIN(1766)							::Array< Float > _g32 = scanline_fill;
HXDLIN(1766)							{
HXLINE(1766)								Float val5 = (( (Float)(_hx_array_unsafe_get(_g32,_g22)) ) + (sign * (sy1 - sy0)));
HXDLIN(1766)								_g32->__unsafe_set(_g22,val5);
            							}
            						}
            					}
            				}
            				else {
HXLINE(1773)					int _g6 = 0;
HXDLIN(1773)					int _g15 = len;
HXDLIN(1773)					while((_g6 < _g15)){
HXLINE(1773)						_g6 = (_g6 + 1);
HXDLIN(1773)						int x4 = (_g6 - 1);
HXLINE(1788)						Float y0 = y_top;
HXLINE(1789)						Float x12 = ( (Float)(x4) );
HXLINE(1790)						Float x21 = ( (Float)((x4 + 1)) );
HXLINE(1791)						Float x31 = xb;
HXLINE(1792)						Float y3 = y_bottom;
HXLINE(1793)						Float y1 = (((( (Float)(x4) ) - x01) / dx) + y_top);
HXDLIN(1793)						Float y2 = (((( (Float)((x4 + 1)) ) - x01) / dx) + y_top);
HXLINE(1801)						bool _hx_tmp6;
HXDLIN(1801)						if ((x01 < x12)) {
HXLINE(1801)							_hx_tmp6 = (x31 > x21);
            						}
            						else {
HXLINE(1801)							_hx_tmp6 = false;
            						}
HXDLIN(1801)						if (_hx_tmp6) {
HXLINE(1802)							::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
HXLINE(1803)							::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x21,y2);
HXLINE(1804)							::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
            						}
            						else {
HXLINE(1805)							bool _hx_tmp7;
HXDLIN(1805)							if ((x31 < x12)) {
HXLINE(1805)								_hx_tmp7 = (x01 > x21);
            							}
            							else {
HXLINE(1805)								_hx_tmp7 = false;
            							}
HXDLIN(1805)							if (_hx_tmp7) {
HXLINE(1806)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
HXLINE(1807)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x12,y1);
HXLINE(1808)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
            							}
            							else {
HXLINE(1809)								bool _hx_tmp8;
HXDLIN(1809)								if ((x01 < x12)) {
HXLINE(1809)									_hx_tmp8 = (x31 > x12);
            								}
            								else {
HXLINE(1809)									_hx_tmp8 = false;
            								}
HXDLIN(1809)								if (_hx_tmp8) {
HXLINE(1810)									::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
HXLINE(1811)									::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
            								}
            								else {
HXLINE(1812)									bool _hx_tmp9;
HXDLIN(1812)									if ((x31 < x12)) {
HXLINE(1812)										_hx_tmp9 = (x01 > x12);
            									}
            									else {
HXLINE(1812)										_hx_tmp9 = false;
            									}
HXDLIN(1812)									if (_hx_tmp9) {
HXLINE(1813)										::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x12,y1);
HXLINE(1814)										::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x12,y1,x31,y3);
            									}
            									else {
HXLINE(1815)										bool _hx_tmp10;
HXDLIN(1815)										if ((x01 < x21)) {
HXLINE(1815)											_hx_tmp10 = (x31 > x21);
            										}
            										else {
HXLINE(1815)											_hx_tmp10 = false;
            										}
HXDLIN(1815)										if (_hx_tmp10) {
HXLINE(1816)											::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
HXLINE(1817)											::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
            										}
            										else {
HXLINE(1818)											bool _hx_tmp11;
HXDLIN(1818)											if ((x31 < x21)) {
HXLINE(1818)												_hx_tmp11 = (x01 > x21);
            											}
            											else {
HXLINE(1818)												_hx_tmp11 = false;
            											}
HXDLIN(1818)											if (_hx_tmp11) {
HXLINE(1819)												::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x21,y2);
HXLINE(1820)												::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x21,y2,x31,y3);
            											}
            											else {
HXLINE(1822)												::kha::graphics2::truetype::StbTruetype_obj::stbtt__handle_clipped_edge(scanline,0,x4,e,x01,y0,x31,y3);
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
HXLINE(1827)			e = e->next;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(StbTruetype_obj,stbtt__fill_active_edges_new,(void))

void StbTruetype_obj::stbtt__rasterize_sorted_edges( ::kha::graphics2::truetype::Stbtt__bitmap result,::Array< ::Dynamic> e,int n,int vsubsample,int off_x,int off_y){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_1832_stbtt__rasterize_sorted_edges)
HXLINE(1833)		 ::kha::graphics2::truetype::Stbtt__active_edge active = null();
HXLINE(1834)		int j = 0;
HXLINE(1835)		::Array< Float > scanline;
HXLINE(1836)		int scanline2Index = 0;
HXLINE(1837)		int eIndex = 0;
HXLINE(1839)		if ((result->w > 64)) {
HXLINE(1840)			::Array< Float > this1 = ::Array_obj< Float >::__new(((result->w * 2) + 1));
HXDLIN(1840)			scanline = this1;
            		}
            		else {
HXLINE(1842)			::Array< Float > this2 = ::Array_obj< Float >::__new(129);
HXDLIN(1842)			scanline = this2;
            		}
HXLINE(1835)		::Array< Float > scanline2 = scanline;
HXLINE(1845)		scanline2Index = result->w;
HXLINE(1834)		int y = off_y;
HXLINE(1848)		int _hx_tmp = (off_y + result->h);
HXDLIN(1848)		( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,(eIndex + n))) )->y0 = ( (Float)((_hx_tmp + 1)) );
HXLINE(1850)		while((j < result->h)){
HXLINE(1852)			Float scan_y_top = (y + ((Float)0.0));
HXLINE(1853)			Float scan_y_bottom = (y + ((Float)1.0));
HXLINE(1854)			 ::kha::graphics2::truetype::Stbtt__active_edge step_value = active;
HXDLIN(1854)			 ::Dynamic step_parent = null();
HXLINE(1856)			{
HXLINE(1856)				int _g = 0;
HXDLIN(1856)				int _g1 = result->w;
HXDLIN(1856)				while((_g < _g1)){
HXLINE(1856)					_g = (_g + 1);
HXDLIN(1856)					int i = (_g - 1);
HXDLIN(1856)					scanline->__unsafe_set(i,0);
            				}
            			}
HXLINE(1857)			{
HXLINE(1857)				int _g2 = 0;
HXDLIN(1857)				int _g3 = (result->w + 1);
HXDLIN(1857)				while((_g2 < _g3)){
HXLINE(1857)					_g2 = (_g2 + 1);
HXDLIN(1857)					int i1 = (_g2 - 1);
HXDLIN(1857)					scanline2->__unsafe_set((scanline2Index + i1),0);
            				}
            			}
HXLINE(1861)			while(hx::IsNotNull( step_value )){
HXLINE(1862)				 ::kha::graphics2::truetype::Stbtt__active_edge z = step_value;
HXLINE(1863)				if ((z->ey <= scan_y_top)) {
HXLINE(1865)					if (hx::IsNull( step_parent )) {
HXLINE(1866)						active = z->next;
HXLINE(1867)						step_value = z->next;
            					}
            					else {
HXLINE(1870)						step_parent->__SetField(HX_("next",f3,84,02,49),z->next,hx::paccDynamic);
HXLINE(1871)						step_value = z->next;
            					}
HXLINE(1874)					if ((z->direction == 0)) {
HXLINE(1874)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXLINE(1875)					z->direction = ( (Float)(0) );
            				}
            				else {
HXLINE(1878)					step_parent = step_value;
HXLINE(1879)					step_value = step_value->next;
            				}
            			}
HXLINE(1884)			while((( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y0 <= scan_y_bottom)){
HXLINE(1885)				Float _hx_tmp1 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y0;
HXDLIN(1885)				if ((_hx_tmp1 != ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,eIndex)) )->y1)) {
HXLINE(1886)					 ::kha::graphics2::truetype::Stbtt__active_edge z1 = ::kha::graphics2::truetype::StbTruetype_obj::stbtt__new_active(e,eIndex,off_x,scan_y_top);
HXLINE(1887)					if (!((z1->ey >= scan_y_top))) {
HXLINE(1887)						HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            					}
HXLINE(1888)					if (hx::IsNotNull( z1 )) {
HXLINE(1889)						bool _hx_tmp2;
HXDLIN(1889)						if ((j == 0)) {
HXLINE(1889)							_hx_tmp2 = (off_y != 0);
            						}
            						else {
HXLINE(1889)							_hx_tmp2 = false;
            						}
HXDLIN(1889)						if (_hx_tmp2) {
HXLINE(1890)							if ((z1->ey < scan_y_top)) {
HXLINE(1892)								z1->ey = scan_y_top;
            							}
            						}
HXLINE(1895)						if (!((z1->ey >= scan_y_top))) {
HXLINE(1895)							HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            						}
            					}
HXLINE(1898)					z1->_hx_set_next(HX_CTX, active);
HXLINE(1899)					active = z1;
            				}
HXLINE(1901)				eIndex = (eIndex + 1);
            			}
HXLINE(1905)			if (hx::IsNotNull( active )) {
HXLINE(1906)				::kha::graphics2::truetype::StbTruetype_obj::stbtt__fill_active_edges_new(scanline,scanline2,(scanline2Index + 1),result->w,active,scan_y_top);
            			}
HXLINE(1908)			{
HXLINE(1909)				Float sum = ( (Float)(0) );
HXLINE(1910)				{
HXLINE(1910)					int _g4 = 0;
HXDLIN(1910)					int _g5 = result->w;
HXDLIN(1910)					while((_g4 < _g5)){
HXLINE(1910)						_g4 = (_g4 + 1);
HXDLIN(1910)						int i2 = (_g4 - 1);
HXLINE(1913)						sum = (sum + ( (Float)(_hx_array_unsafe_get(scanline2,(scanline2Index + i2))) ));
HXLINE(1911)						Float k = (( (Float)(_hx_array_unsafe_get(scanline,i2)) ) + sum);
HXLINE(1915)						k = ((::Math_obj::abs(k) * ((Float)255.0)) + ((Float)0.5));
HXLINE(1912)						int m = ::Std_obj::_hx_int(k);
HXLINE(1917)						if ((m > 255)) {
HXLINE(1917)							m = 255;
            						}
HXLINE(1918)						result->pixels->writeU8(((result->pixels_offset + (j * result->stride)) + i2),m);
            					}
            				}
            			}
HXLINE(1922)			step_parent = null();
HXLINE(1923)			step_value = active;
HXLINE(1924)			while(hx::IsNotNull( step_value )){
HXLINE(1925)				 ::kha::graphics2::truetype::Stbtt__active_edge z2 = step_value;
HXLINE(1926)				 ::kha::graphics2::truetype::Stbtt__active_edge z3 = z2;
HXDLIN(1926)				z3->fx = (z3->fx + z2->fdx);
HXLINE(1928)				step_parent = step_value;
HXLINE(1929)				step_value = step_value->next;
            			}
HXLINE(1932)			y = (y + 1);
HXLINE(1933)			j = (j + 1);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(StbTruetype_obj,stbtt__rasterize_sorted_edges,(void))

bool StbTruetype_obj::STBTT__COMPARE( ::kha::graphics2::truetype::Stbtt__edge a, ::kha::graphics2::truetype::Stbtt__edge b){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1937_STBTT__COMPARE)
HXDLIN(1937)		return (a->y0 < b->y0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,STBTT__COMPARE,return )

void StbTruetype_obj::stbtt__sort_edges_ins_sort(::Array< ::Dynamic> p,int n){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1939_stbtt__sort_edges_ins_sort)
HXLINE(1940)		int i;
HXDLIN(1940)		int j;
HXLINE(1941)		{
HXLINE(1941)			int _g = 1;
HXDLIN(1941)			int _g1 = n;
HXDLIN(1941)			while((_g < _g1)){
HXLINE(1941)				_g = (_g + 1);
HXDLIN(1941)				int i1 = (_g - 1);
HXLINE(1942)				 ::kha::graphics2::truetype::Stbtt__edge t = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,i1)) );
HXLINE(1943)				 ::kha::graphics2::truetype::Stbtt__edge a = t;
HXLINE(1944)				j = i1;
HXLINE(1945)				while((j > 0)){
HXLINE(1946)					 ::kha::graphics2::truetype::Stbtt__edge b = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(j - 1))) );
HXLINE(1947)					bool c = ::kha::graphics2::truetype::StbTruetype_obj::STBTT__COMPARE(a,b);
HXLINE(1948)					if (!(c)) {
HXLINE(1948)						goto _hx_goto_296;
            					}
HXLINE(1949)					{
HXLINE(1949)						 ::kha::graphics2::truetype::Stbtt__edge val = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(j - 1))) );
HXDLIN(1949)						p->__unsafe_set(j,val);
            					}
HXLINE(1950)					j = (j - 1);
            				}
            				_hx_goto_296:;
HXLINE(1952)				if ((i1 != j)) {
HXLINE(1953)					p->__unsafe_set(j,t);
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__sort_edges_ins_sort,(void))

void StbTruetype_obj::stbtt__sort_edges_quicksort(::Array< ::Dynamic> p,int pIndex,int n){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_1959_stbtt__sort_edges_quicksort)
HXDLIN(1959)		while((n > 12)){
HXLINE(1960)			 ::kha::graphics2::truetype::Stbtt__edge t;
HXLINE(1961)			bool c;
HXLINE(1962)			int m = (n >> 1);
HXLINE(1966)			 ::kha::graphics2::truetype::Stbtt__edge c01 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,pIndex)) );
HXLINE(1961)			bool c011 = ::kha::graphics2::truetype::StbTruetype_obj::STBTT__COMPARE(c01,( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + m))) ));
HXLINE(1967)			 ::kha::graphics2::truetype::Stbtt__edge c12 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + m))) );
HXLINE(1961)			bool c121 = ::kha::graphics2::truetype::StbTruetype_obj::STBTT__COMPARE(c12,( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,((pIndex + n) - 1))) ));
HXLINE(1969)			if ((c011 != c121)) {
HXLINE(1971)				int z;
HXLINE(1972)				 ::kha::graphics2::truetype::Stbtt__edge c1 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,pIndex)) );
HXDLIN(1972)				c = ::kha::graphics2::truetype::StbTruetype_obj::STBTT__COMPARE(c1,( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,((pIndex + n) - 1))) ));
HXLINE(1975)				if ((c == c121)) {
HXLINE(1975)					z = 0;
            				}
            				else {
HXLINE(1975)					z = (n - 1);
            				}
HXLINE(1976)				t = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + z))) );
HXLINE(1977)				{
HXLINE(1977)					 ::kha::graphics2::truetype::Stbtt__edge val = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + m))) );
HXDLIN(1977)					p->__unsafe_set((pIndex + z),val);
            				}
HXLINE(1978)				p->__unsafe_set((pIndex + m),t);
            			}
HXLINE(1982)			t = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,pIndex)) );
HXLINE(1983)			{
HXLINE(1983)				 ::kha::graphics2::truetype::Stbtt__edge val1 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + m))) );
HXDLIN(1983)				p->__unsafe_set(pIndex,val1);
            			}
HXLINE(1984)			p->__unsafe_set((pIndex + m),t);
HXLINE(1962)			int i = 1;
HXDLIN(1962)			int j = (n - 1);
HXLINE(1989)			while(true){
HXLINE(1992)				while(true){
HXLINE(1993)					 ::kha::graphics2::truetype::Stbtt__edge _hx_tmp = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + i))) );
HXDLIN(1993)					if (!(::kha::graphics2::truetype::StbTruetype_obj::STBTT__COMPARE(_hx_tmp,( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,pIndex)) )))) {
HXLINE(1993)						goto _hx_goto_300;
            					}
HXLINE(1994)					i = (i + 1);
            				}
            				_hx_goto_300:;
HXLINE(1996)				while(true){
HXLINE(1997)					 ::kha::graphics2::truetype::Stbtt__edge _hx_tmp1 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,pIndex)) );
HXDLIN(1997)					if (!(::kha::graphics2::truetype::StbTruetype_obj::STBTT__COMPARE(_hx_tmp1,( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + j))) )))) {
HXLINE(1997)						goto _hx_goto_301;
            					}
HXLINE(1998)					j = (j - 1);
            				}
            				_hx_goto_301:;
HXLINE(2001)				if ((i >= j)) {
HXLINE(2001)					goto _hx_goto_299;
            				}
HXLINE(2002)				t = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + i))) );
HXLINE(2003)				{
HXLINE(2003)					 ::kha::graphics2::truetype::Stbtt__edge val2 = ( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(p,(pIndex + j))) );
HXDLIN(2003)					p->__unsafe_set((pIndex + i),val2);
            				}
HXLINE(2004)				p->__unsafe_set((pIndex + j),t);
HXLINE(2006)				i = (i + 1);
HXLINE(2007)				j = (j - 1);
            			}
            			_hx_goto_299:;
HXLINE(2010)			if ((j < (n - i))) {
HXLINE(2011)				::kha::graphics2::truetype::StbTruetype_obj::stbtt__sort_edges_quicksort(p,pIndex,j);
HXLINE(2012)				pIndex = (pIndex + i);
HXLINE(2013)				n = (n - i);
            			}
            			else {
HXLINE(2015)				::kha::graphics2::truetype::StbTruetype_obj::stbtt__sort_edges_quicksort(p,(pIndex + i),(n - i));
HXLINE(2016)				n = j;
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StbTruetype_obj,stbtt__sort_edges_quicksort,(void))

void StbTruetype_obj::stbtt__sort_edges(::Array< ::Dynamic> p,int n){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2021_stbtt__sort_edges)
HXLINE(2022)		::kha::graphics2::truetype::StbTruetype_obj::stbtt__sort_edges_quicksort(p,0,n);
HXLINE(2023)		::kha::graphics2::truetype::StbTruetype_obj::stbtt__sort_edges_ins_sort(p,n);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StbTruetype_obj,stbtt__sort_edges,(void))

void StbTruetype_obj::stbtt__rasterize( ::kha::graphics2::truetype::Stbtt__bitmap result,::Array< ::Dynamic> pts,::Array< int > wcount,int windings,Float scale_x,Float scale_y,Float shift_x,Float shift_y,int off_x,int off_y,bool invert){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_2026_stbtt__rasterize)
HXLINE(2027)		Float y_scale_inv;
HXDLIN(2027)		if (invert) {
HXLINE(2027)			y_scale_inv = -(scale_y);
            		}
            		else {
HXLINE(2027)			y_scale_inv = scale_y;
            		}
HXLINE(2029)		int i;
HXDLIN(2029)		int j;
HXDLIN(2029)		int k;
HXLINE(2030)		int vsubsample = 1;
HXLINE(2031)		int ptsIndex = 0;
HXLINE(2029)		int n = 0;
HXLINE(2037)		{
HXLINE(2037)			int _g = 0;
HXDLIN(2037)			int _g1 = windings;
HXDLIN(2037)			while((_g < _g1)){
HXLINE(2037)				_g = (_g + 1);
HXDLIN(2037)				int i1 = (_g - 1);
HXLINE(2038)				n = (n + ( (int)(_hx_array_unsafe_get(wcount,i1)) ));
            			}
            		}
HXLINE(2040)		::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new((n + 1));
HXLINE(2028)		::Array< ::Dynamic> e = this1;
HXLINE(2041)		if (hx::IsNull( e )) {
HXLINE(2041)			return;
            		}
            		else {
HXLINE(2043)			int _g2 = 0;
HXDLIN(2043)			int _g3 = e->length;
HXDLIN(2043)			while((_g2 < _g3)){
HXLINE(2043)				_g2 = (_g2 + 1);
HXDLIN(2043)				int i2 = (_g2 - 1);
HXLINE(2044)				{
HXLINE(2044)					 ::kha::graphics2::truetype::Stbtt__edge val =  ::kha::graphics2::truetype::Stbtt__edge_obj::__alloc( HX_CTX );
HXDLIN(2044)					e->__unsafe_set(i2,val);
            				}
            			}
            		}
HXLINE(2047)		n = 0;
HXLINE(2029)		int m = 0;
HXLINE(2050)		{
HXLINE(2050)			int _g21 = 0;
HXDLIN(2050)			int _g31 = windings;
HXDLIN(2050)			while((_g21 < _g31)){
HXLINE(2050)				_g21 = (_g21 + 1);
HXDLIN(2050)				int i3 = (_g21 - 1);
HXLINE(2051)				::Array< ::Dynamic> p = pts;
HXLINE(2052)				int pIndex = (ptsIndex + m);
HXLINE(2053)				m = (m + ( (int)(_hx_array_unsafe_get(wcount,i3)) ));
HXLINE(2054)				j = (( (int)(_hx_array_unsafe_get(wcount,i3)) ) - 1);
HXLINE(2055)				{
HXLINE(2055)					int _g22 = 0;
HXDLIN(2055)					int _g32 = ( (int)(_hx_array_unsafe_get(wcount,i3)) );
HXDLIN(2055)					while((_g22 < _g32)){
HXLINE(2055)						_g22 = (_g22 + 1);
HXDLIN(2055)						int k1 = (_g22 - 1);
HXLINE(2056)						int a = k1;
HXDLIN(2056)						int b = j;
HXLINE(2058)						Float _hx_tmp = ( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + j))) )->y;
HXDLIN(2058)						if ((_hx_tmp == ( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + k1))) )->y)) {
HXLINE(2059)							j = k1;
HXLINE(2060)							continue;
            						}
HXLINE(2063)						( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,n)) )->invert = false;
HXLINE(2064)						bool _hx_tmp1;
HXDLIN(2064)						if (invert) {
HXLINE(2064)							Float _hx_tmp2 = ( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + j))) )->y;
HXDLIN(2064)							_hx_tmp1 = (_hx_tmp2 > ( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + k1))) )->y);
            						}
            						else {
HXLINE(2064)							Float _hx_tmp3 = ( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + j))) )->y;
HXDLIN(2064)							_hx_tmp1 = (_hx_tmp3 < ( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + k1))) )->y);
            						}
HXDLIN(2064)						if (_hx_tmp1) {
HXLINE(2065)							( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,n)) )->invert = true;
HXLINE(2066)							a = j;
HXDLIN(2066)							b = k1;
            						}
HXLINE(2068)						Float _hx_tmp4 = (( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + a))) )->x * scale_x);
HXDLIN(2068)						( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,n)) )->x0 = (_hx_tmp4 + shift_x);
HXLINE(2069)						Float _hx_tmp5 = ((( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + a))) )->y * y_scale_inv) + shift_y);
HXDLIN(2069)						( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,n)) )->y0 = (_hx_tmp5 * ( (Float)(vsubsample) ));
HXLINE(2070)						Float _hx_tmp6 = (( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + b))) )->x * scale_x);
HXDLIN(2070)						( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,n)) )->x1 = (_hx_tmp6 + shift_x);
HXLINE(2071)						Float _hx_tmp7 = ((( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(p,(pIndex + b))) )->y * y_scale_inv) + shift_y);
HXDLIN(2071)						( ( ::kha::graphics2::truetype::Stbtt__edge)(_hx_array_unsafe_get(e,n)) )->y1 = (_hx_tmp7 * ( (Float)(vsubsample) ));
HXLINE(2072)						n = (n + 1);
HXLINE(2073)						j = k1;
            					}
            				}
            			}
            		}
HXLINE(2079)		::kha::graphics2::truetype::StbTruetype_obj::stbtt__sort_edges(e,n);
HXLINE(2082)		::kha::graphics2::truetype::StbTruetype_obj::stbtt__rasterize_sorted_edges(result,e,n,vsubsample,off_x,off_y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC11(StbTruetype_obj,stbtt__rasterize,(void))

void StbTruetype_obj::stbtt__add_point(::Array< ::Dynamic> points,int n,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2085_stbtt__add_point)
HXLINE(2086)		if (hx::IsNull( points )) {
HXLINE(2086)			return;
            		}
HXLINE(2087)		( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(points,n)) )->x = x;
HXLINE(2088)		( ( ::kha::graphics2::truetype::Stbtt__point)(_hx_array_unsafe_get(points,n)) )->y = y;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(StbTruetype_obj,stbtt__add_point,(void))

int StbTruetype_obj::stbtt__tesselate_curve(::Array< ::Dynamic> points, ::Dynamic num_points,Float x0,Float y0,Float x1,Float y1,Float x2,Float y2,Float objspace_flatness_squared,int n){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2092_stbtt__tesselate_curve)
HXLINE(2094)		Float mx = (((x0 + (( (Float)(2) ) * x1)) + x2) / ( (Float)(4) ));
HXLINE(2095)		Float my = (((y0 + (( (Float)(2) ) * y1)) + y2) / ( (Float)(4) ));
HXLINE(2097)		Float dx = (((x0 + x2) / ( (Float)(2) )) - mx);
HXLINE(2098)		Float dy = (((y0 + y2) / ( (Float)(2) )) - my);
HXLINE(2099)		if ((n > 16)) {
HXLINE(2100)			return 1;
            		}
HXLINE(2101)		if ((((dx * dx) + (dy * dy)) > objspace_flatness_squared)) {
HXLINE(2102)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__tesselate_curve(points,num_points,x0,y0,((x0 + x1) / ((Float)2.0)),((y0 + y1) / ((Float)2.0)),mx,my,objspace_flatness_squared,(n + 1));
HXLINE(2103)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__tesselate_curve(points,num_points,mx,my,((x1 + x2) / ((Float)2.0)),((y1 + y2) / ((Float)2.0)),x2,y2,objspace_flatness_squared,(n + 1));
            		}
            		else {
HXLINE(2105)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__add_point(points,( (int)(num_points->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic)) ),x2,y2);
HXLINE(2106)			num_points->__SetField(HX_("value",71,7f,b8,31),(num_points->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic) + 1),hx::paccDynamic);
            		}
HXLINE(2108)		return 1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC10(StbTruetype_obj,stbtt__tesselate_curve,return )

void StbTruetype_obj::stbtt__tesselate_cubic(::Array< ::Dynamic> points, ::Dynamic num_points,Float x0,Float y0,Float x1,Float y1,Float x2,Float y2,Float x3,Float y3,Float objspace_flatness_squared,int n){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2111_stbtt__tesselate_cubic)
HXLINE(2113)		Float dx0 = (x1 - x0);
HXLINE(2114)		Float dy0 = (y1 - y0);
HXLINE(2115)		Float dx1 = (x2 - x1);
HXLINE(2116)		Float dy1 = (y2 - y1);
HXLINE(2117)		Float dx2 = (x3 - x2);
HXLINE(2118)		Float dy2 = (y3 - y2);
HXLINE(2119)		Float dx = (x3 - x0);
HXLINE(2120)		Float dy = (y3 - y0);
HXLINE(2121)		Float longlen = ((::Math_obj::sqrt(((dx0 * dx0) + (dy0 * dy0))) + ::Math_obj::sqrt(((dx1 * dx1) + (dy1 * dy1)))) + ::Math_obj::sqrt(((dx2 * dx2) + (dy2 * dy2))));
HXLINE(2122)		Float shortlen = ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
HXLINE(2123)		Float flatness_squared = ((longlen * longlen) - (shortlen * shortlen));
HXLINE(2125)		if ((n > 16)) {
HXLINE(2126)			return;
            		}
HXLINE(2128)		if ((flatness_squared > objspace_flatness_squared)) {
HXLINE(2129)			Float x01 = ((x0 + x1) / ( (Float)(2) ));
HXLINE(2130)			Float y01 = ((y0 + y1) / ( (Float)(2) ));
HXLINE(2131)			Float x12 = ((x1 + x2) / ( (Float)(2) ));
HXLINE(2132)			Float y12 = ((y1 + y2) / ( (Float)(2) ));
HXLINE(2133)			Float x23 = ((x2 + x3) / ( (Float)(2) ));
HXLINE(2134)			Float y23 = ((y2 + y3) / ( (Float)(2) ));
HXLINE(2136)			Float xa = ((x01 + x12) / ( (Float)(2) ));
HXLINE(2137)			Float ya = ((y01 + y12) / ( (Float)(2) ));
HXLINE(2138)			Float xb = ((x12 + x23) / ( (Float)(2) ));
HXLINE(2139)			Float yb = ((y12 + y23) / ( (Float)(2) ));
HXLINE(2141)			Float mx = ((xa + xb) / ( (Float)(2) ));
HXLINE(2142)			Float my = ((ya + yb) / ( (Float)(2) ));
HXLINE(2144)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__tesselate_cubic(points,num_points,x0,y0,x01,y01,xa,ya,mx,my,objspace_flatness_squared,(n + 1));
HXLINE(2145)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__tesselate_cubic(points,num_points,mx,my,xb,yb,x23,y23,x3,y3,objspace_flatness_squared,(n + 1));
            		}
            		else {
HXLINE(2147)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__add_point(points,( (int)(num_points->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic)) ),x3,y3);
HXLINE(2148)			num_points->__SetField(HX_("value",71,7f,b8,31),(num_points->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic) + 1),hx::paccDynamic);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC12(StbTruetype_obj,stbtt__tesselate_cubic,(void))

::Array< ::Dynamic> StbTruetype_obj::stbtt_FlattenCurves(::Array< ::Dynamic> vertices,int num_verts,Float objspace_flatness, ::kha::graphics2::truetype::VectorOfIntPointer contour_lengths, ::Dynamic num_contours){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_2153_stbtt_FlattenCurves)
HXLINE(2154)		::Array< ::Dynamic> points = null();
HXLINE(2155)		int num_points = 0;
HXLINE(2157)		Float objspace_flatness_squared = (objspace_flatness * objspace_flatness);
HXLINE(2158)		int i;
HXDLIN(2158)		int n = 0;
HXDLIN(2158)		int start = 0;
HXDLIN(2158)		int pass;
HXLINE(2161)		{
HXLINE(2161)			int _g = 0;
HXDLIN(2161)			int _g1 = num_verts;
HXDLIN(2161)			while((_g < _g1)){
HXLINE(2161)				_g = (_g + 1);
HXDLIN(2161)				int i1 = (_g - 1);
HXLINE(2162)				if ((( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i1)) )->type == 1)) {
HXLINE(2163)					n = (n + 1);
            				}
            			}
            		}
HXLINE(2165)		num_contours->__SetField(HX_("value",71,7f,b8,31),n,hx::paccDynamic);
HXLINE(2166)		if ((n == 0)) {
HXLINE(2166)			return null();
            		}
HXLINE(2168)		::Array< int > this1 = ::Array_obj< int >::__new(n);
HXDLIN(2168)		contour_lengths->_hx_set_value(HX_CTX, this1);
HXLINE(2170)		if (hx::IsNull( contour_lengths->value )) {
HXLINE(2171)			num_contours->__SetField(HX_("value",71,7f,b8,31),0,hx::paccDynamic);
HXLINE(2172)			return null();
            		}
HXLINE(2176)		{
HXLINE(2176)			int _g2 = 0;
HXDLIN(2176)			while((_g2 < 2)){
HXLINE(2176)				_g2 = (_g2 + 1);
HXDLIN(2176)				int pass1 = (_g2 - 1);
HXLINE(2177)				Float x = ( (Float)(0) );
HXDLIN(2177)				Float y = ( (Float)(0) );
HXLINE(2178)				if ((pass1 == 1)) {
HXLINE(2179)					::Array< ::Dynamic> this2 = ::Array_obj< ::Dynamic>::__new(num_points);
HXDLIN(2179)					points = this2;
HXLINE(2180)					if (hx::IsNull( points )) {
HXLINE(2181)						contour_lengths->_hx_set_value(HX_CTX, null());
HXLINE(2182)						num_contours->__SetField(HX_("value",71,7f,b8,31),0,hx::paccDynamic);
HXLINE(2183)						return null();
            					}
            					else {
HXLINE(2186)						int _g21 = 0;
HXDLIN(2186)						int _g3 = points->length;
HXDLIN(2186)						while((_g21 < _g3)){
HXLINE(2186)							_g21 = (_g21 + 1);
HXDLIN(2186)							int i2 = (_g21 - 1);
HXLINE(2187)							{
HXLINE(2187)								 ::kha::graphics2::truetype::Stbtt__point val =  ::kha::graphics2::truetype::Stbtt__point_obj::__alloc( HX_CTX );
HXDLIN(2187)								points->__unsafe_set(i2,val);
            							}
            						}
            					}
            				}
HXLINE(2191)				num_points = 0;
HXLINE(2192)				n = -1;
HXLINE(2193)				{
HXLINE(2193)					int _g22 = 0;
HXDLIN(2193)					int _g31 = num_verts;
HXDLIN(2193)					while((_g22 < _g31)){
HXLINE(2193)						_g22 = (_g22 + 1);
HXDLIN(2193)						int i3 = (_g22 - 1);
HXLINE(2194)						switch((int)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->type)){
            							case (int)1: {
HXLINE(2197)								if ((n >= 0)) {
HXLINE(2198)									contour_lengths->value->__unsafe_set(n,(num_points - start));
            								}
HXLINE(2199)								n = (n + 1);
HXLINE(2200)								start = num_points;
HXLINE(2202)								x = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->x) );
HXDLIN(2202)								y = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->y) );
HXLINE(2203)								num_points = (num_points + 1);
HXDLIN(2203)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__add_point(points,(num_points - 1),x,y);
            							}
            							break;
            							case (int)2: {
HXLINE(2205)								x = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->x) );
HXDLIN(2205)								y = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->y) );
HXLINE(2206)								num_points = (num_points + 1);
HXDLIN(2206)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__add_point(points,(num_points - 1),x,y);
            							}
            							break;
            							case (int)3: {
HXLINE(2208)								 ::Dynamic num_points_reference =  ::Dynamic(hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("value",71,7f,b8,31),num_points));
HXLINE(2210)								int _hx_tmp = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->cx;
HXDLIN(2210)								int _hx_tmp1 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->cy;
HXLINE(2211)								int _hx_tmp2 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->x;
HXLINE(2209)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__tesselate_curve(points,num_points_reference,x,y,( (Float)(_hx_tmp) ),( (Float)(_hx_tmp1) ),( (Float)(_hx_tmp2) ),( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->y) ),objspace_flatness_squared,0);
HXLINE(2213)								num_points = ( (int)(num_points_reference->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic)) );
HXLINE(2214)								x = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->x) );
HXDLIN(2214)								y = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->y) );
            							}
            							break;
            							case (int)4: {
HXLINE(2216)								 ::Dynamic num_points_reference1 =  ::Dynamic(hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("value",71,7f,b8,31),num_points));
HXLINE(2218)								int _hx_tmp3 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->cx;
HXDLIN(2218)								int _hx_tmp4 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->cy;
HXLINE(2219)								int _hx_tmp5 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->cx1;
HXDLIN(2219)								int _hx_tmp6 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->cy1;
HXLINE(2220)								int _hx_tmp7 = ( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->x;
HXLINE(2217)								::kha::graphics2::truetype::StbTruetype_obj::stbtt__tesselate_cubic(points,num_points_reference1,x,y,( (Float)(_hx_tmp3) ),( (Float)(_hx_tmp4) ),( (Float)(_hx_tmp5) ),( (Float)(_hx_tmp6) ),( (Float)(_hx_tmp7) ),( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->y) ),objspace_flatness_squared,0);
HXLINE(2222)								num_points = ( (int)(num_points_reference1->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic)) );
HXLINE(2223)								x = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->x) );
HXDLIN(2223)								y = ( (Float)(( ( ::kha::graphics2::truetype::Stbtt_vertex)(_hx_array_unsafe_get(vertices,i3)) )->y) );
            							}
            							break;
            						}
            					}
            				}
HXLINE(2226)				contour_lengths->value->__unsafe_set(n,(num_points - start));
            			}
            		}
HXLINE(2229)		return points;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(StbTruetype_obj,stbtt_FlattenCurves,return )

void StbTruetype_obj::stbtt_Rasterize( ::kha::graphics2::truetype::Stbtt__bitmap result,Float flatness_in_pixels,::Array< ::Dynamic> vertices,int num_verts,Float scale_x,Float scale_y,Float shift_x,Float shift_y,int x_off,int y_off,bool invert){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_2232_stbtt_Rasterize)
HXLINE(2233)		Float scale;
HXDLIN(2233)		if ((scale_x > scale_y)) {
HXLINE(2233)			scale = scale_y;
            		}
            		else {
HXLINE(2233)			scale = scale_x;
            		}
HXLINE(2234)		int winding_count = 0;
HXLINE(2235)		::Array< int > winding_lengths = null();
HXLINE(2236)		 ::Dynamic winding_count_reference =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("value",71,7f,b8,31),winding_count));
HXLINE(2237)		 ::kha::graphics2::truetype::VectorOfIntPointer winding_lengths_reference =  ::kha::graphics2::truetype::VectorOfIntPointer_obj::__alloc( HX_CTX );
HXLINE(2238)		::Array< ::Dynamic> windings = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_FlattenCurves(vertices,num_verts,(flatness_in_pixels / scale),winding_lengths_reference,winding_count_reference);
HXLINE(2239)		winding_count = ( (int)(winding_count_reference->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic)) );
HXLINE(2240)		winding_lengths = winding_lengths_reference->value;
HXLINE(2241)		if (hx::IsNotNull( windings )) {
HXLINE(2242)			::kha::graphics2::truetype::StbTruetype_obj::stbtt__rasterize(result,windings,winding_lengths,winding_count,scale_x,scale_y,shift_x,shift_y,x_off,y_off,invert);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC11(StbTruetype_obj,stbtt_Rasterize,(void))

 ::kha::internal::BytesBlob StbTruetype_obj::stbtt_GetGlyphBitmapSubpixel( ::kha::graphics2::truetype::Stbtt_fontinfo info,Float scale_x,Float scale_y,Float shift_x,Float shift_y,int glyph, ::kha::graphics2::truetype::Stbtt_temp_region region){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_2246_stbtt_GetGlyphBitmapSubpixel)
HXLINE(2248)		 ::kha::graphics2::truetype::Stbtt__bitmap gbm =  ::kha::graphics2::truetype::Stbtt__bitmap_obj::__alloc( HX_CTX );
HXLINE(2249)		::Array< ::Dynamic> vertices = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphShape(info,glyph);
HXLINE(2250)		int num_verts = vertices->length;
HXLINE(2252)		if ((scale_x == 0)) {
HXLINE(2252)			scale_x = scale_y;
            		}
HXLINE(2253)		if ((scale_y == 0)) {
HXLINE(2254)			if ((scale_x == 0)) {
HXLINE(2254)				return null();
            			}
HXLINE(2255)			scale_y = scale_x;
            		}
HXLINE(2258)		 ::kha::graphics2::truetype::Stbtt_temp_rect rect = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
HXLINE(2247)		int ix0 = rect->x0;
HXDLIN(2247)		int iy0 = rect->y0;
HXDLIN(2247)		int ix1 = rect->x1;
HXDLIN(2247)		int iy1 = rect->y1;
HXLINE(2265)		gbm->w = (ix1 - ix0);
HXLINE(2266)		gbm->h = (iy1 - iy0);
HXLINE(2267)		gbm->_hx_set_pixels(HX_CTX, null());
HXLINE(2269)		region->width = gbm->w;
HXLINE(2270)		region->height = gbm->h;
HXLINE(2271)		region->xoff = ix0;
HXLINE(2272)		region->yoff = iy0;
HXLINE(2274)		bool _hx_tmp;
HXDLIN(2274)		if ((gbm->w != 0)) {
HXLINE(2274)			_hx_tmp = (gbm->h != 0);
            		}
            		else {
HXLINE(2274)			_hx_tmp = false;
            		}
HXDLIN(2274)		if (_hx_tmp) {
HXLINE(2275)			gbm->_hx_set_pixels(HX_CTX, ::kha::internal::BytesBlob_obj::alloc((gbm->w * gbm->h)));
HXLINE(2276)			if (hx::IsNotNull( gbm->pixels )) {
HXLINE(2277)				gbm->stride = gbm->w;
HXLINE(2279)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_Rasterize(gbm,((Float)0.35),vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
            			}
            		}
HXLINE(2282)		return gbm->pixels;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(StbTruetype_obj,stbtt_GetGlyphBitmapSubpixel,return )

 ::kha::internal::BytesBlob StbTruetype_obj::stbtt_GetGlyphBitmap( ::kha::graphics2::truetype::Stbtt_fontinfo info,Float scale_x,Float scale_y,int glyph, ::kha::graphics2::truetype::Stbtt_temp_region region){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2286_stbtt_GetGlyphBitmap)
HXDLIN(2286)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,((Float)0.0),((Float)0.0),glyph,region);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(StbTruetype_obj,stbtt_GetGlyphBitmap,return )

void StbTruetype_obj::stbtt_MakeGlyphBitmapSubpixel( ::kha::graphics2::truetype::Stbtt_fontinfo info, ::kha::internal::BytesBlob output,int output_offset,int out_w,int out_h,int out_stride,Float scale_x,Float scale_y,Float shift_x,Float shift_y,int glyph){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_2289_stbtt_MakeGlyphBitmapSubpixel)
HXLINE(2290)		int ix0 = 0;
HXDLIN(2290)		int iy0 = 0;
HXLINE(2291)		::Array< ::Dynamic> vertices = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphShape(info,glyph);
HXLINE(2292)		int num_verts;
HXDLIN(2292)		if (hx::IsNull( vertices )) {
HXLINE(2292)			num_verts = 0;
            		}
            		else {
HXLINE(2292)			num_verts = vertices->length;
            		}
HXLINE(2293)		 ::kha::graphics2::truetype::Stbtt__bitmap gbm =  ::kha::graphics2::truetype::Stbtt__bitmap_obj::__alloc( HX_CTX );
HXLINE(2295)		 ::kha::graphics2::truetype::Stbtt_temp_rect rect = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapBoxSubpixel(info,glyph,scale_x,scale_y,shift_x,shift_y);
HXLINE(2296)		ix0 = rect->x0;
HXLINE(2297)		iy0 = rect->y0;
HXLINE(2298)		gbm->_hx_set_pixels(HX_CTX, output);
HXLINE(2299)		gbm->pixels_offset = output_offset;
HXLINE(2300)		gbm->w = out_w;
HXLINE(2301)		gbm->h = out_h;
HXLINE(2302)		gbm->stride = out_stride;
HXLINE(2304)		bool _hx_tmp;
HXDLIN(2304)		if ((gbm->w != 0)) {
HXLINE(2304)			_hx_tmp = (gbm->h != 0);
            		}
            		else {
HXLINE(2304)			_hx_tmp = false;
            		}
HXDLIN(2304)		if (_hx_tmp) {
HXLINE(2305)			::kha::graphics2::truetype::StbTruetype_obj::stbtt_Rasterize(gbm,((Float)0.35),vertices,num_verts,scale_x,scale_y,shift_x,shift_y,ix0,iy0,true);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC11(StbTruetype_obj,stbtt_MakeGlyphBitmapSubpixel,(void))

void StbTruetype_obj::stbtt_MakeGlyphBitmap( ::kha::graphics2::truetype::Stbtt_fontinfo info, ::kha::internal::BytesBlob output,int output_offset,int out_w,int out_h,int out_stride,Float scale_x,Float scale_y,int glyph){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2309_stbtt_MakeGlyphBitmap)
HXDLIN(2309)		::kha::graphics2::truetype::StbTruetype_obj::stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,((Float)0.0),((Float)0.0),glyph);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(StbTruetype_obj,stbtt_MakeGlyphBitmap,(void))

 ::kha::internal::BytesBlob StbTruetype_obj::stbtt_GetCodepointBitmapSubpixel( ::kha::graphics2::truetype::Stbtt_fontinfo info,Float scale_x,Float scale_y,Float shift_x,Float shift_y,int codepoint, ::kha::graphics2::truetype::Stbtt_temp_region region){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2313_stbtt_GetCodepointBitmapSubpixel)
HXDLIN(2313)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapSubpixel(info,scale_x,scale_y,shift_x,shift_y,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,codepoint),region);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(StbTruetype_obj,stbtt_GetCodepointBitmapSubpixel,return )

void StbTruetype_obj::stbtt_MakeCodepointBitmapSubpixel( ::kha::graphics2::truetype::Stbtt_fontinfo info, ::kha::internal::BytesBlob output,int output_offset,int out_w,int out_h,int out_stride,Float scale_x,Float scale_y,Float shift_x,Float shift_y,int codepoint){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2317_stbtt_MakeCodepointBitmapSubpixel)
HXDLIN(2317)		::kha::graphics2::truetype::StbTruetype_obj::stbtt_MakeGlyphBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,shift_x,shift_y,::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(info,codepoint));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC11(StbTruetype_obj,stbtt_MakeCodepointBitmapSubpixel,(void))

 ::kha::internal::BytesBlob StbTruetype_obj::stbtt_GetCodepointBitmap( ::kha::graphics2::truetype::Stbtt_fontinfo info,Float scale_x,Float scale_y,int codepoint, ::kha::graphics2::truetype::Stbtt_temp_region region){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2321_stbtt_GetCodepointBitmap)
HXDLIN(2321)		return ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetCodepointBitmapSubpixel(info,scale_x,scale_y,((Float)0.0),((Float)0.0),codepoint,region);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(StbTruetype_obj,stbtt_GetCodepointBitmap,return )

void StbTruetype_obj::stbtt_MakeCodepointBitmap( ::kha::graphics2::truetype::Stbtt_fontinfo info, ::kha::internal::BytesBlob output,int output_offset,int out_w,int out_h,int out_stride,Float scale_x,Float scale_y,int codepoint){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2325_stbtt_MakeCodepointBitmap)
HXDLIN(2325)		::kha::graphics2::truetype::StbTruetype_obj::stbtt_MakeCodepointBitmapSubpixel(info,output,output_offset,out_w,out_h,out_stride,scale_x,scale_y,((Float)0.0),((Float)0.0),codepoint);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(StbTruetype_obj,stbtt_MakeCodepointBitmap,(void))

int StbTruetype_obj::stbtt_BakeFontBitmap( ::kha::internal::BytesBlob data,int offset,Float pixel_height, ::kha::internal::BytesBlob pixels,int pw,int ph,::Array< int > chars,::Array< ::Dynamic> chardata){
            	HX_GC_STACKFRAME(&_hx_pos_d244f07465627071_2338_stbtt_BakeFontBitmap)
HXLINE(2341)		 ::kha::graphics2::truetype::Stbtt_fontinfo f =  ::kha::graphics2::truetype::Stbtt_fontinfo_obj::__alloc( HX_CTX );
HXLINE(2342)		if (!(::kha::graphics2::truetype::StbTruetype_obj::stbtt_InitFont(f,data,offset))) {
HXLINE(2343)			return -1;
            		}
HXLINE(2340)		int y = 1;
HXDLIN(2340)		int x = y;
HXDLIN(2340)		int bottom_y = 1;
HXLINE(2339)		Float scale = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_ScaleForPixelHeight(f,pixel_height);
HXLINE(2349)		int i = 0;
HXLINE(2350)		{
HXLINE(2350)			int _g = 0;
HXDLIN(2350)			while((_g < chars->length)){
HXLINE(2350)				int index = chars->__get(_g);
HXDLIN(2350)				_g = (_g + 1);
HXLINE(2352)				int g = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(f,index);
HXLINE(2353)				 ::kha::graphics2::truetype::Stbtt_temp_glyph_h_metrics metrics = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphHMetrics(f,g);
HXLINE(2351)				int advance = metrics->advanceWidth;
HXDLIN(2351)				int lsb = metrics->leftSideBearing;
HXLINE(2356)				 ::kha::graphics2::truetype::Stbtt_temp_rect rect = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_GetGlyphBitmapBox(f,g,scale,scale);
HXLINE(2351)				int x0 = rect->x0;
HXDLIN(2351)				int y0 = rect->y0;
HXDLIN(2351)				int x1 = rect->x1;
HXDLIN(2351)				int y1 = rect->y1;
HXDLIN(2351)				int gw = (x1 - x0);
HXDLIN(2351)				int gh = (y1 - y0);
HXLINE(2363)				if ((((x + gw) + 1) >= pw)) {
HXLINE(2364)					y = bottom_y;
HXDLIN(2364)					x = 1;
            				}
HXLINE(2366)				if ((((y + gh) + 1) >= ph)) {
HXLINE(2367)					return -(i);
            				}
HXLINE(2368)				if (((x + gw) >= pw)) {
HXLINE(2368)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXLINE(2369)				if (((y + gh) >= ph)) {
HXLINE(2369)					HX_STACK_DO_THROW(HX_("Error",a8,3b,57,06));
            				}
HXLINE(2370)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->x0 = x;
HXLINE(2371)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->y0 = y;
HXLINE(2372)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->x1 = (x + gw);
HXLINE(2373)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->y1 = (y + gh);
HXLINE(2374)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->xadvance = (scale * ( (Float)(advance) ));
HXLINE(2375)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->xoff = ( (Float)(x0) );
HXLINE(2376)				( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) )->yoff = ( (Float)(y0) );
HXLINE(2377)				x = ((x + gw) + 1);
HXLINE(2378)				if ((((y + gh) + 1) > bottom_y)) {
HXLINE(2379)					bottom_y = ((y + gh) + 1);
            				}
HXLINE(2380)				i = (i + 1);
            			}
            		}
HXLINE(2382)		{
HXLINE(2382)			int _g1 = 0;
HXDLIN(2382)			int _g2 = (pw * ph);
HXDLIN(2382)			while((_g1 < _g2)){
HXLINE(2382)				_g1 = (_g1 + 1);
HXDLIN(2382)				int i1 = (_g1 - 1);
HXLINE(2383)				pixels->writeU8(i1,0);
            			}
            		}
HXLINE(2384)		i = 0;
HXLINE(2385)		 ::kha::graphics2::truetype::Stbtt_bakedchar ch;
HXLINE(2386)		{
HXLINE(2386)			int _g3 = 0;
HXDLIN(2386)			while((_g3 < chars->length)){
HXLINE(2386)				int index1 = chars->__get(_g3);
HXDLIN(2386)				_g3 = (_g3 + 1);
HXLINE(2387)				int g1 = ::kha::graphics2::truetype::StbTruetype_obj::stbtt_FindGlyphIndex(f,index1);
HXLINE(2388)				ch = ( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,i)) );
HXLINE(2389)				::kha::graphics2::truetype::StbTruetype_obj::stbtt_MakeGlyphBitmap(f,pixels,(ch->x0 + (ch->y0 * pw)),(ch->x1 - ch->x0),(ch->y1 - ch->y0),pw,scale,scale,g1);
HXLINE(2390)				i = (i + 1);
            			}
            		}
HXLINE(2392)		return bottom_y;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(StbTruetype_obj,stbtt_BakeFontBitmap,return )

void StbTruetype_obj::stbtt_GetBakedQuad(::Array< ::Dynamic> chardata,int pw,int ph,int char_index, ::Dynamic xpos, ::Dynamic ypos, ::kha::graphics2::truetype::Stbtt_aligned_quad q,bool opengl_fillrule){
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_2395_stbtt_GetBakedQuad)
HXLINE(2396)		Float d3d_bias;
HXDLIN(2396)		if (opengl_fillrule) {
HXLINE(2396)			d3d_bias = ( (Float)(0) );
            		}
            		else {
HXLINE(2396)			d3d_bias = ((Float)-0.5);
            		}
HXLINE(2397)		Float ipw = (((Float)1.0) / ( (Float)(pw) ));
HXDLIN(2397)		Float iph = (((Float)1.0) / ( (Float)(ph) ));
HXLINE(2398)		 ::kha::graphics2::truetype::Stbtt_bakedchar b = ( ( ::kha::graphics2::truetype::Stbtt_bakedchar)(_hx_array_unsafe_get(chardata,char_index)) );
HXLINE(2399)		int round_x = ::Math_obj::floor(( (Float)(((xpos->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic) + b->xoff) + ((Float)0.5))) ));
HXLINE(2400)		int round_y = ::Math_obj::floor(( (Float)(((ypos->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic) + b->yoff) + ((Float)0.5))) ));
HXLINE(2402)		q->x0 = (round_x + d3d_bias);
HXLINE(2403)		q->y0 = (round_y + d3d_bias);
HXLINE(2404)		q->x1 = (((round_x + b->x1) - b->x0) + d3d_bias);
HXLINE(2405)		q->y1 = (((round_y + b->y1) - b->y0) + d3d_bias);
HXLINE(2407)		q->s0 = (( (Float)(b->x0) ) * ipw);
HXLINE(2408)		q->t0 = (( (Float)(b->y0) ) * iph);
HXLINE(2409)		q->s1 = (( (Float)(b->x1) ) * ipw);
HXLINE(2410)		q->t1 = (( (Float)(b->y1) ) * iph);
HXLINE(2412)		 ::Dynamic xpos1 = xpos;
HXDLIN(2412)		xpos1->__SetField(HX_("value",71,7f,b8,31),(xpos1->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic) + b->xadvance),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(StbTruetype_obj,stbtt_GetBakedQuad,(void))


StbTruetype_obj::StbTruetype_obj()
{
}

bool StbTruetype_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"ttBYTE") ) { outValue = ttBYTE_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ttCHAR") ) { outValue = ttCHAR_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ttLONG") ) { outValue = ttLONG_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"ttSHORT") ) { outValue = ttSHORT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ttULONG") ) { outValue = ttULONG_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ttFixed") ) { outValue = ttFixed_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"ttUSHORT") ) { outValue = ttUSHORT_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"stbtt_tag") ) { outValue = stbtt_tag_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"stbtt_tag4") ) { outValue = stbtt_tag4_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"STBTT_assert") ) { outValue = STBTT_assert_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copyVertices") ) { outValue = copyVertices_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"STBTT__CSERR") ) { outValue = STBTT__CSERR_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"stbtt__isfont") ) { outValue = stbtt__isfont_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"stbtt__buf_get") ) { outValue = stbtt__buf_get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__new_buf") ) { outValue = stbtt__new_buf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__cff_int") ) { outValue = stbtt__cff_int_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_InitFont") ) { outValue = stbtt_InitFont_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__csctx_v") ) { outValue = stbtt__csctx_v_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"STBTT__COMPARE") ) { outValue = STBTT__COMPARE_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"stbtt__buf_get8") ) { outValue = stbtt__buf_get8_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__buf_seek") ) { outValue = stbtt__buf_seek_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__buf_skip") ) { outValue = stbtt__buf_skip_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__dict_get") ) { outValue = stbtt__dict_get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"to_stbtt_uint16") ) { outValue = to_stbtt_uint16_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_setvertex") ) { outValue = stbtt_setvertex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__get_subr") ) { outValue = stbtt__get_subr_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_Rasterize") ) { outValue = stbtt_Rasterize_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"STBTT_POINT_SIZE") ) { outValue = STBTT_POINT_SIZE_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__buf_peek8") ) { outValue = stbtt__buf_peek8_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__buf_get16") ) { outValue = stbtt__buf_get16_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__buf_get32") ) { outValue = stbtt__buf_get32_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__buf_range") ) { outValue = stbtt__buf_range_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__get_subrs") ) { outValue = stbtt__get_subrs_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__rasterize") ) { outValue = stbtt__rasterize_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__add_point") ) { outValue = stbtt__add_point_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"stbtt__find_table") ) { outValue = stbtt__find_table_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphBox") ) { outValue = stbtt_GetGlyphBox_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"STBTT__CSCTX_INIT") ) { outValue = STBTT__CSCTX_INIT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__new_active") ) { outValue = stbtt__new_active_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__sort_edges") ) { outValue = stbtt__sort_edges_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"stbtt_IsGlyphEmpty") ) { outValue = stbtt_IsGlyphEmpty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__close_shape") ) { outValue = stbtt__close_shape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetBakedQuad") ) { outValue = stbtt_GetBakedQuad_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"stbtt__track_vertex") ) { outValue = stbtt__track_vertex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphShape") ) { outValue = stbtt_GetGlyphShape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_FlattenCurves") ) { outValue = stbtt_FlattenCurves_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"stbtt__cff_get_index") ) { outValue = stbtt__cff_get_index_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__dict_get_ints") ) { outValue = stbtt__dict_get_ints_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__cff_index_get") ) { outValue = stbtt__cff_index_get_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_FindGlyphIndex") ) { outValue = stbtt_FindGlyphIndex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__GetGlyfOffset") ) { outValue = stbtt__GetGlyfOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphBitmap") ) { outValue = stbtt_GetGlyphBitmap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_BakeFontBitmap") ) { outValue = stbtt_BakeFontBitmap_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointBox") ) { outValue = stbtt_GetCodepointBox_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__csctx_rmove_to") ) { outValue = stbtt__csctx_rmove_to_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__csctx_rline_to") ) { outValue = stbtt__csctx_rline_to_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__run_charstring") ) { outValue = stbtt__run_charstring_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__GetGlyphInfoT2") ) { outValue = stbtt__GetGlyphInfoT2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetFontVMetrics") ) { outValue = stbtt_GetFontVMetrics_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_MakeGlyphBitmap") ) { outValue = stbtt_MakeGlyphBitmap_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"stbtt__cff_index_count") ) { outValue = stbtt__cff_index_count_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetNumberOfFonts") ) { outValue = stbtt_GetNumberOfFonts_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__GetGlyphShapeTT") ) { outValue = stbtt__GetGlyphShapeTT_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__GetGlyphShapeT2") ) { outValue = stbtt__GetGlyphShapeT2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphHMetrics") ) { outValue = stbtt_GetGlyphHMetrics_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__tesselate_curve") ) { outValue = stbtt__tesselate_curve_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__tesselate_cubic") ) { outValue = stbtt__tesselate_cubic_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"stbtt__cff_skip_operand") ) { outValue = stbtt__cff_skip_operand_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointShape") ) { outValue = stbtt_GetCodepointShape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__csctx_rccurve_to") ) { outValue = stbtt__csctx_rccurve_to_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphBitmapBox") ) { outValue = stbtt_GetGlyphBitmapBox_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"stbtt__csctx_close_shape") ) { outValue = stbtt__csctx_close_shape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetFontBoundingBox") ) { outValue = stbtt_GetFontBoundingBox_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointBitmap") ) { outValue = stbtt_GetCodepointBitmap_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphKernAdvance") ) { outValue = stbtt_GetGlyphKernAdvance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_ScaleForPixelHeight") ) { outValue = stbtt_ScaleForPixelHeight_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_MakeCodepointBitmap") ) { outValue = stbtt_MakeCodepointBitmap_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"stbtt__cid_get_glyph_subrs") ) { outValue = stbtt__cid_get_glyph_subrs_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointHMetrics") ) { outValue = stbtt_GetCodepointHMetrics_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__handle_clipped_edge") ) { outValue = stbtt__handle_clipped_edge_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__sort_edges_ins_sort") ) { outValue = stbtt__sort_edges_ins_sort_dyn(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"stbtt_GetFontOffsetForIndex") ) { outValue = stbtt_GetFontOffsetForIndex_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointBitmapBox") ) { outValue = stbtt_GetCodepointBitmapBox_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__sort_edges_quicksort") ) { outValue = stbtt__sort_edges_quicksort_dyn(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"stbtt__fill_active_edges_new") ) { outValue = stbtt__fill_active_edges_new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphBitmapSubpixel") ) { outValue = stbtt_GetGlyphBitmapSubpixel_dyn(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointKernAdvance") ) { outValue = stbtt_GetCodepointKernAdvance_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt__rasterize_sorted_edges") ) { outValue = stbtt__rasterize_sorted_edges_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_MakeGlyphBitmapSubpixel") ) { outValue = stbtt_MakeGlyphBitmapSubpixel_dyn(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"stbtt_ScaleForMappingEmToPixels") ) { outValue = stbtt_ScaleForMappingEmToPixels_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stbtt_GetGlyphBitmapBoxSubpixel") ) { outValue = stbtt_GetGlyphBitmapBoxSubpixel_dyn(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointBitmapSubpixel") ) { outValue = stbtt_GetCodepointBitmapSubpixel_dyn(); return true; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"stbtt_MakeCodepointBitmapSubpixel") ) { outValue = stbtt_MakeCodepointBitmapSubpixel_dyn(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"stbtt_GetCodepointBitmapBoxSubpixel") ) { outValue = stbtt_GetCodepointBitmapBoxSubpixel_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *StbTruetype_obj_sMemberStorageInfo = 0;
static hx::StaticInfo StbTruetype_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_vmove,HX_("STBTT_vmove",c9,34,f2,e1)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_vline,HX_("STBTT_vline",ac,69,44,e1)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_vcurve,HX_("STBTT_vcurve",f7,7b,ee,13)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_vcubic,HX_("STBTT_vcubic",92,4c,e2,13)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MACSTYLE_DONTCARE,HX_("STBTT_MACSTYLE_DONTCARE",01,cf,41,cc)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MACSTYLE_BOLD,HX_("STBTT_MACSTYLE_BOLD",24,22,1c,92)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MACSTYLE_ITALIC,HX_("STBTT_MACSTYLE_ITALIC",4f,59,45,11)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MACSTYLE_UNDERSCORE,HX_("STBTT_MACSTYLE_UNDERSCORE",19,f9,88,54)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MACSTYLE_NONE,HX_("STBTT_MACSTYLE_NONE",57,b3,0a,9a)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_PLATFORM_ID_UNICODE,HX_("STBTT_PLATFORM_ID_UNICODE",67,d0,88,e4)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_PLATFORM_ID_MAC,HX_("STBTT_PLATFORM_ID_MAC",d9,94,7e,ed)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_PLATFORM_ID_ISO,HX_("STBTT_PLATFORM_ID_ISO",8f,9b,7b,ed)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_PLATFORM_ID_MICROSOFT,HX_("STBTT_PLATFORM_ID_MICROSOFT",b8,1d,ef,0e)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_0,HX_("STBTT_UNICODE_EID_UNICODE_1_0",81,8f,4b,15)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_1,HX_("STBTT_UNICODE_EID_UNICODE_1_1",82,8f,4b,15)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_UNICODE_EID_ISO_10646,HX_("STBTT_UNICODE_EID_ISO_10646",40,f7,d0,91)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_BMP,HX_("STBTT_UNICODE_EID_UNICODE_2_0_BMP",e8,f7,02,13)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_FULL,HX_("STBTT_UNICODE_EID_UNICODE_2_0_FULL",6c,dc,40,92)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_EID_SYMBOL,HX_("STBTT_MS_EID_SYMBOL",52,05,3b,46)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_EID_UNICODE_BMP,HX_("STBTT_MS_EID_UNICODE_BMP",69,b0,b5,48)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_EID_SHIFTJIS,HX_("STBTT_MS_EID_SHIFTJIS",0c,48,91,83)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_EID_UNICODE_FULL,HX_("STBTT_MS_EID_UNICODE_FULL",cb,94,ef,58)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_ROMAN,HX_("STBTT_MAC_EID_ROMAN",b0,d0,49,4b)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_ARABIC,HX_("STBTT_MAC_EID_ARABIC",39,93,81,7b)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_JAPANESE,HX_("STBTT_MAC_EID_JAPANESE",fe,66,94,3c)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_HEBREW,HX_("STBTT_MAC_EID_HEBREW",8c,e6,80,cc)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_CHINESE_TRAD,HX_("STBTT_MAC_EID_CHINESE_TRAD",a0,9c,2f,3e)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_GREEK,HX_("STBTT_MAC_EID_GREEK",73,04,d7,f7)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_KOREAN,HX_("STBTT_MAC_EID_KOREAN",d1,51,1e,cc)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_EID_RUSSIAN,HX_("STBTT_MAC_EID_RUSSIAN",c6,46,51,f4)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_ENGLISH,HX_("STBTT_MS_LANG_ENGLISH",fa,ac,a2,c4)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_ITALIAN,HX_("STBTT_MS_LANG_ITALIAN",8a,27,b5,5c)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_CHINESE,HX_("STBTT_MS_LANG_CHINESE",77,22,70,33)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_JAPANESE,HX_("STBTT_MS_LANG_JAPANESE",c7,39,2b,92)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_DUTCH,HX_("STBTT_MS_LANG_DUTCH",72,d0,e3,00)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_KOREAN,HX_("STBTT_MS_LANG_KOREAN",5a,b0,39,1d)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_FRENCH,HX_("STBTT_MS_LANG_FRENCH",f0,af,13,cf)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_RUSSIAN,HX_("STBTT_MS_LANG_RUSSIAN",1d,a0,28,9b)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_GERMAN,HX_("STBTT_MS_LANG_GERMAN",dc,83,d0,c1)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_SPANISH,HX_("STBTT_MS_LANG_SPANISH",7e,d6,70,64)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_HEBREW,HX_("STBTT_MS_LANG_HEBREW",15,45,9c,1d)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MS_LANG_SWEDISH,HX_("STBTT_MS_LANG_SWEDISH",e5,8c,ee,77)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_ENGLISH,HX_("STBTT_MAC_LANG_ENGLISH",8d,78,fe,bb)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_JAPANESE,HX_("STBTT_MAC_LANG_JAPANESE",d4,8e,21,0b)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_ARABIC,HX_("STBTT_MAC_LANG_ARABIC",8f,f9,e7,d6)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_KOREAN,HX_("STBTT_MAC_LANG_KOREAN",27,b8,84,27)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_DUTCH,HX_("STBTT_MAC_LANG_DUTCH",45,81,53,78)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_RUSSIAN,HX_("STBTT_MAC_LANG_RUSSIAN",b0,6b,84,92)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_FRENCH,HX_("STBTT_MAC_LANG_FRENCH",bd,b7,5e,d9)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_SPANISH,HX_("STBTT_MAC_LANG_SPANISH",11,a2,cc,5b)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_GERMAN,HX_("STBTT_MAC_LANG_GERMAN",a9,8b,1b,cc)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_SWEDISH,HX_("STBTT_MAC_LANG_SWEDISH",78,58,4a,6f)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_HEBREW,HX_("STBTT_MAC_LANG_HEBREW",e2,4c,e7,27)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_CHINESE_SIMPLIFIED,HX_("STBTT_MAC_LANG_CHINESE_SIMPLIFIED",ed,7a,bc,aa)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_ITALIAN,HX_("STBTT_MAC_LANG_ITALIAN",1d,f3,10,54)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAC_LANG_CHINESE_TRAD,HX_("STBTT_MAC_LANG_CHINESE_TRAD",76,67,9c,af)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_MAX_OVERSAMPLE,HX_("STBTT_MAX_OVERSAMPLE",17,d3,91,a6)},
	{hx::fsInt,(void *) &StbTruetype_obj::STBTT_RASTERIZER_VERSION,HX_("STBTT_RASTERIZER_VERSION",92,1f,d8,5e)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void StbTruetype_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_vmove,"STBTT_vmove");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_vline,"STBTT_vline");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_vcurve,"STBTT_vcurve");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_vcubic,"STBTT_vcubic");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_DONTCARE,"STBTT_MACSTYLE_DONTCARE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_BOLD,"STBTT_MACSTYLE_BOLD");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_ITALIC,"STBTT_MACSTYLE_ITALIC");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_UNDERSCORE,"STBTT_MACSTYLE_UNDERSCORE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_NONE,"STBTT_MACSTYLE_NONE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_UNICODE,"STBTT_PLATFORM_ID_UNICODE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_MAC,"STBTT_PLATFORM_ID_MAC");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_ISO,"STBTT_PLATFORM_ID_ISO");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_MICROSOFT,"STBTT_PLATFORM_ID_MICROSOFT");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_0,"STBTT_UNICODE_EID_UNICODE_1_0");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_1,"STBTT_UNICODE_EID_UNICODE_1_1");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_ISO_10646,"STBTT_UNICODE_EID_ISO_10646");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_BMP,"STBTT_UNICODE_EID_UNICODE_2_0_BMP");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_FULL,"STBTT_UNICODE_EID_UNICODE_2_0_FULL");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_SYMBOL,"STBTT_MS_EID_SYMBOL");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_UNICODE_BMP,"STBTT_MS_EID_UNICODE_BMP");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_SHIFTJIS,"STBTT_MS_EID_SHIFTJIS");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_UNICODE_FULL,"STBTT_MS_EID_UNICODE_FULL");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_ROMAN,"STBTT_MAC_EID_ROMAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_ARABIC,"STBTT_MAC_EID_ARABIC");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_JAPANESE,"STBTT_MAC_EID_JAPANESE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_HEBREW,"STBTT_MAC_EID_HEBREW");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_CHINESE_TRAD,"STBTT_MAC_EID_CHINESE_TRAD");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_GREEK,"STBTT_MAC_EID_GREEK");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_KOREAN,"STBTT_MAC_EID_KOREAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_RUSSIAN,"STBTT_MAC_EID_RUSSIAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_ENGLISH,"STBTT_MS_LANG_ENGLISH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_ITALIAN,"STBTT_MS_LANG_ITALIAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_CHINESE,"STBTT_MS_LANG_CHINESE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_JAPANESE,"STBTT_MS_LANG_JAPANESE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_DUTCH,"STBTT_MS_LANG_DUTCH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_KOREAN,"STBTT_MS_LANG_KOREAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_FRENCH,"STBTT_MS_LANG_FRENCH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_RUSSIAN,"STBTT_MS_LANG_RUSSIAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_GERMAN,"STBTT_MS_LANG_GERMAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_SPANISH,"STBTT_MS_LANG_SPANISH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_HEBREW,"STBTT_MS_LANG_HEBREW");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_SWEDISH,"STBTT_MS_LANG_SWEDISH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_ENGLISH,"STBTT_MAC_LANG_ENGLISH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_JAPANESE,"STBTT_MAC_LANG_JAPANESE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_ARABIC,"STBTT_MAC_LANG_ARABIC");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_KOREAN,"STBTT_MAC_LANG_KOREAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_DUTCH,"STBTT_MAC_LANG_DUTCH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_RUSSIAN,"STBTT_MAC_LANG_RUSSIAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_FRENCH,"STBTT_MAC_LANG_FRENCH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_SPANISH,"STBTT_MAC_LANG_SPANISH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_GERMAN,"STBTT_MAC_LANG_GERMAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_SWEDISH,"STBTT_MAC_LANG_SWEDISH");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_HEBREW,"STBTT_MAC_LANG_HEBREW");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_CHINESE_SIMPLIFIED,"STBTT_MAC_LANG_CHINESE_SIMPLIFIED");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_ITALIAN,"STBTT_MAC_LANG_ITALIAN");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_CHINESE_TRAD,"STBTT_MAC_LANG_CHINESE_TRAD");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_MAX_OVERSAMPLE,"STBTT_MAX_OVERSAMPLE");
	HX_MARK_MEMBER_NAME(StbTruetype_obj::STBTT_RASTERIZER_VERSION,"STBTT_RASTERIZER_VERSION");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StbTruetype_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_vmove,"STBTT_vmove");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_vline,"STBTT_vline");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_vcurve,"STBTT_vcurve");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_vcubic,"STBTT_vcubic");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_DONTCARE,"STBTT_MACSTYLE_DONTCARE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_BOLD,"STBTT_MACSTYLE_BOLD");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_ITALIC,"STBTT_MACSTYLE_ITALIC");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_UNDERSCORE,"STBTT_MACSTYLE_UNDERSCORE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MACSTYLE_NONE,"STBTT_MACSTYLE_NONE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_UNICODE,"STBTT_PLATFORM_ID_UNICODE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_MAC,"STBTT_PLATFORM_ID_MAC");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_ISO,"STBTT_PLATFORM_ID_ISO");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_PLATFORM_ID_MICROSOFT,"STBTT_PLATFORM_ID_MICROSOFT");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_0,"STBTT_UNICODE_EID_UNICODE_1_0");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_1_1,"STBTT_UNICODE_EID_UNICODE_1_1");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_ISO_10646,"STBTT_UNICODE_EID_ISO_10646");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_BMP,"STBTT_UNICODE_EID_UNICODE_2_0_BMP");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_UNICODE_EID_UNICODE_2_0_FULL,"STBTT_UNICODE_EID_UNICODE_2_0_FULL");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_SYMBOL,"STBTT_MS_EID_SYMBOL");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_UNICODE_BMP,"STBTT_MS_EID_UNICODE_BMP");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_SHIFTJIS,"STBTT_MS_EID_SHIFTJIS");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_EID_UNICODE_FULL,"STBTT_MS_EID_UNICODE_FULL");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_ROMAN,"STBTT_MAC_EID_ROMAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_ARABIC,"STBTT_MAC_EID_ARABIC");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_JAPANESE,"STBTT_MAC_EID_JAPANESE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_HEBREW,"STBTT_MAC_EID_HEBREW");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_CHINESE_TRAD,"STBTT_MAC_EID_CHINESE_TRAD");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_GREEK,"STBTT_MAC_EID_GREEK");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_KOREAN,"STBTT_MAC_EID_KOREAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_EID_RUSSIAN,"STBTT_MAC_EID_RUSSIAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_ENGLISH,"STBTT_MS_LANG_ENGLISH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_ITALIAN,"STBTT_MS_LANG_ITALIAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_CHINESE,"STBTT_MS_LANG_CHINESE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_JAPANESE,"STBTT_MS_LANG_JAPANESE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_DUTCH,"STBTT_MS_LANG_DUTCH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_KOREAN,"STBTT_MS_LANG_KOREAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_FRENCH,"STBTT_MS_LANG_FRENCH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_RUSSIAN,"STBTT_MS_LANG_RUSSIAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_GERMAN,"STBTT_MS_LANG_GERMAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_SPANISH,"STBTT_MS_LANG_SPANISH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_HEBREW,"STBTT_MS_LANG_HEBREW");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MS_LANG_SWEDISH,"STBTT_MS_LANG_SWEDISH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_ENGLISH,"STBTT_MAC_LANG_ENGLISH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_JAPANESE,"STBTT_MAC_LANG_JAPANESE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_ARABIC,"STBTT_MAC_LANG_ARABIC");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_KOREAN,"STBTT_MAC_LANG_KOREAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_DUTCH,"STBTT_MAC_LANG_DUTCH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_RUSSIAN,"STBTT_MAC_LANG_RUSSIAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_FRENCH,"STBTT_MAC_LANG_FRENCH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_SPANISH,"STBTT_MAC_LANG_SPANISH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_GERMAN,"STBTT_MAC_LANG_GERMAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_SWEDISH,"STBTT_MAC_LANG_SWEDISH");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_HEBREW,"STBTT_MAC_LANG_HEBREW");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_CHINESE_SIMPLIFIED,"STBTT_MAC_LANG_CHINESE_SIMPLIFIED");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_ITALIAN,"STBTT_MAC_LANG_ITALIAN");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAC_LANG_CHINESE_TRAD,"STBTT_MAC_LANG_CHINESE_TRAD");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_MAX_OVERSAMPLE,"STBTT_MAX_OVERSAMPLE");
	HX_VISIT_MEMBER_NAME(StbTruetype_obj::STBTT_RASTERIZER_VERSION,"STBTT_RASTERIZER_VERSION");
};

#endif

hx::Class StbTruetype_obj::__mClass;

static ::String StbTruetype_obj_sStaticFields[] = {
	HX_("STBTT_assert",44,e2,7c,e3),
	HX_("STBTT_POINT_SIZE",ee,9c,31,9b),
	HX_("STBTT_vmove",c9,34,f2,e1),
	HX_("STBTT_vline",ac,69,44,e1),
	HX_("STBTT_vcurve",f7,7b,ee,13),
	HX_("STBTT_vcubic",92,4c,e2,13),
	HX_("STBTT_MACSTYLE_DONTCARE",01,cf,41,cc),
	HX_("STBTT_MACSTYLE_BOLD",24,22,1c,92),
	HX_("STBTT_MACSTYLE_ITALIC",4f,59,45,11),
	HX_("STBTT_MACSTYLE_UNDERSCORE",19,f9,88,54),
	HX_("STBTT_MACSTYLE_NONE",57,b3,0a,9a),
	HX_("STBTT_PLATFORM_ID_UNICODE",67,d0,88,e4),
	HX_("STBTT_PLATFORM_ID_MAC",d9,94,7e,ed),
	HX_("STBTT_PLATFORM_ID_ISO",8f,9b,7b,ed),
	HX_("STBTT_PLATFORM_ID_MICROSOFT",b8,1d,ef,0e),
	HX_("STBTT_UNICODE_EID_UNICODE_1_0",81,8f,4b,15),
	HX_("STBTT_UNICODE_EID_UNICODE_1_1",82,8f,4b,15),
	HX_("STBTT_UNICODE_EID_ISO_10646",40,f7,d0,91),
	HX_("STBTT_UNICODE_EID_UNICODE_2_0_BMP",e8,f7,02,13),
	HX_("STBTT_UNICODE_EID_UNICODE_2_0_FULL",6c,dc,40,92),
	HX_("STBTT_MS_EID_SYMBOL",52,05,3b,46),
	HX_("STBTT_MS_EID_UNICODE_BMP",69,b0,b5,48),
	HX_("STBTT_MS_EID_SHIFTJIS",0c,48,91,83),
	HX_("STBTT_MS_EID_UNICODE_FULL",cb,94,ef,58),
	HX_("STBTT_MAC_EID_ROMAN",b0,d0,49,4b),
	HX_("STBTT_MAC_EID_ARABIC",39,93,81,7b),
	HX_("STBTT_MAC_EID_JAPANESE",fe,66,94,3c),
	HX_("STBTT_MAC_EID_HEBREW",8c,e6,80,cc),
	HX_("STBTT_MAC_EID_CHINESE_TRAD",a0,9c,2f,3e),
	HX_("STBTT_MAC_EID_GREEK",73,04,d7,f7),
	HX_("STBTT_MAC_EID_KOREAN",d1,51,1e,cc),
	HX_("STBTT_MAC_EID_RUSSIAN",c6,46,51,f4),
	HX_("STBTT_MS_LANG_ENGLISH",fa,ac,a2,c4),
	HX_("STBTT_MS_LANG_ITALIAN",8a,27,b5,5c),
	HX_("STBTT_MS_LANG_CHINESE",77,22,70,33),
	HX_("STBTT_MS_LANG_JAPANESE",c7,39,2b,92),
	HX_("STBTT_MS_LANG_DUTCH",72,d0,e3,00),
	HX_("STBTT_MS_LANG_KOREAN",5a,b0,39,1d),
	HX_("STBTT_MS_LANG_FRENCH",f0,af,13,cf),
	HX_("STBTT_MS_LANG_RUSSIAN",1d,a0,28,9b),
	HX_("STBTT_MS_LANG_GERMAN",dc,83,d0,c1),
	HX_("STBTT_MS_LANG_SPANISH",7e,d6,70,64),
	HX_("STBTT_MS_LANG_HEBREW",15,45,9c,1d),
	HX_("STBTT_MS_LANG_SWEDISH",e5,8c,ee,77),
	HX_("STBTT_MAC_LANG_ENGLISH",8d,78,fe,bb),
	HX_("STBTT_MAC_LANG_JAPANESE",d4,8e,21,0b),
	HX_("STBTT_MAC_LANG_ARABIC",8f,f9,e7,d6),
	HX_("STBTT_MAC_LANG_KOREAN",27,b8,84,27),
	HX_("STBTT_MAC_LANG_DUTCH",45,81,53,78),
	HX_("STBTT_MAC_LANG_RUSSIAN",b0,6b,84,92),
	HX_("STBTT_MAC_LANG_FRENCH",bd,b7,5e,d9),
	HX_("STBTT_MAC_LANG_SPANISH",11,a2,cc,5b),
	HX_("STBTT_MAC_LANG_GERMAN",a9,8b,1b,cc),
	HX_("STBTT_MAC_LANG_SWEDISH",78,58,4a,6f),
	HX_("STBTT_MAC_LANG_HEBREW",e2,4c,e7,27),
	HX_("STBTT_MAC_LANG_CHINESE_SIMPLIFIED",ed,7a,bc,aa),
	HX_("STBTT_MAC_LANG_ITALIAN",1d,f3,10,54),
	HX_("STBTT_MAC_LANG_CHINESE_TRAD",76,67,9c,af),
	HX_("STBTT_MAX_OVERSAMPLE",17,d3,91,a6),
	HX_("STBTT_RASTERIZER_VERSION",92,1f,d8,5e),
	HX_("stbtt__buf_get8",6f,31,7a,50),
	HX_("stbtt__buf_peek8",10,13,01,49),
	HX_("stbtt__buf_seek",05,b4,68,58),
	HX_("stbtt__buf_skip",0c,45,6d,58),
	HX_("stbtt__buf_get",a9,22,24,ef),
	HX_("stbtt__new_buf",f3,0c,3c,46),
	HX_("stbtt__buf_get16",ce,09,71,1a),
	HX_("stbtt__buf_get32",88,0b,71,1a),
	HX_("stbtt__buf_range",90,32,30,6d),
	HX_("stbtt__cff_get_index",ec,fa,19,55),
	HX_("stbtt__cff_int",32,bc,60,19),
	HX_("stbtt__cff_skip_operand",26,23,19,8b),
	HX_("stbtt__dict_get",ce,60,ed,ae),
	HX_("stbtt__dict_get_ints",f5,54,e7,ae),
	HX_("stbtt__cff_index_count",e5,ea,cd,1b),
	HX_("stbtt__cff_index_get",2c,55,aa,63),
	HX_("ttBYTE",88,0c,c5,57),
	HX_("ttCHAR",56,4c,61,58),
	HX_("ttUSHORT",67,ed,00,b9),
	HX_("ttSHORT",dc,66,35,33),
	HX_("ttULONG",d1,66,a7,5c),
	HX_("ttLONG",fc,92,59,5e),
	HX_("to_stbtt_uint16",e1,fc,7a,cc),
	HX_("ttFixed",d4,13,ef,cc),
	HX_("stbtt_tag4",78,98,4e,15),
	HX_("stbtt_tag",3c,1c,8a,03),
	HX_("stbtt__isfont",3a,63,fa,4a),
	HX_("stbtt__find_table",49,81,8d,23),
	HX_("stbtt_GetFontOffsetForIndex",a3,34,dd,4b),
	HX_("stbtt_GetNumberOfFonts",ec,2d,8c,86),
	HX_("stbtt__get_subrs",b7,63,82,df),
	HX_("stbtt_InitFont",fd,73,a3,2a),
	HX_("stbtt_FindGlyphIndex",dd,ec,a8,16),
	HX_("stbtt_GetCodepointShape",96,c0,5d,8e),
	HX_("stbtt_setvertex",e8,33,c6,2e),
	HX_("stbtt__GetGlyfOffset",1a,16,cf,a2),
	HX_("stbtt_GetGlyphBox",37,1a,fa,10),
	HX_("stbtt_GetCodepointBox",40,e4,cd,0e),
	HX_("stbtt_IsGlyphEmpty",c9,03,2d,3d),
	HX_("stbtt__close_shape",f9,7b,95,d8),
	HX_("copyVertices",ce,74,ee,65),
	HX_("stbtt__GetGlyphShapeTT",8a,47,52,79),
	HX_("STBTT__CSCTX_INIT",99,e8,4b,9e),
	HX_("stbtt__track_vertex",19,59,47,35),
	HX_("stbtt__csctx_v",4d,7f,bd,9f),
	HX_("stbtt__csctx_close_shape",b1,ed,52,3f),
	HX_("stbtt__csctx_rmove_to",00,05,77,22),
	HX_("stbtt__csctx_rline_to",fd,bf,88,f7),
	HX_("stbtt__csctx_rccurve_to",45,71,86,43),
	HX_("stbtt__get_subr",3c,b1,18,76),
	HX_("stbtt__cid_get_glyph_subrs",23,23,cb,52),
	HX_("STBTT__CSERR",54,19,4b,5e),
	HX_("stbtt__run_charstring",5c,05,4d,7a),
	HX_("stbtt__GetGlyphShapeT2",68,47,52,79),
	HX_("stbtt__GetGlyphInfoT2",c3,30,40,18),
	HX_("stbtt_GetGlyphShape",4d,a2,7c,9c),
	HX_("stbtt_GetGlyphHMetrics",0f,2b,7b,b8),
	HX_("stbtt_GetGlyphKernAdvance",78,83,cc,d4),
	HX_("stbtt_GetCodepointKernAdvance",81,fe,f6,44),
	HX_("stbtt_GetCodepointHMetrics",66,60,e1,6d),
	HX_("stbtt_GetFontVMetrics",d4,cf,e5,37),
	HX_("stbtt_GetFontBoundingBox",00,04,72,bc),
	HX_("stbtt_ScaleForPixelHeight",70,94,c5,e8),
	HX_("stbtt_ScaleForMappingEmToPixels",e1,c5,40,2b),
	HX_("stbtt_GetGlyphBitmapBoxSubpixel",ae,bb,41,b2),
	HX_("stbtt_GetGlyphBitmapBox",88,8a,20,e1),
	HX_("stbtt_GetCodepointBitmapBoxSubpixel",77,a3,3b,e4),
	HX_("stbtt_GetCodepointBitmapBox",51,01,29,e5),
	HX_("stbtt__new_active",06,90,71,1c),
	HX_("stbtt__handle_clipped_edge",d3,7c,f0,de),
	HX_("stbtt__fill_active_edges_new",19,60,2c,d2),
	HX_("stbtt__rasterize_sorted_edges",dd,61,9c,16),
	HX_("STBTT__COMPARE",04,3d,ab,da),
	HX_("stbtt__sort_edges_ins_sort",78,f0,11,53),
	HX_("stbtt__sort_edges_quicksort",c2,9b,91,e5),
	HX_("stbtt__sort_edges",b6,f7,1b,b6),
	HX_("stbtt__rasterize",16,cf,6e,35),
	HX_("stbtt__add_point",91,56,2a,5d),
	HX_("stbtt__tesselate_curve",e9,32,80,36),
	HX_("stbtt__tesselate_cubic",84,03,74,36),
	HX_("stbtt_FlattenCurves",0a,18,14,fb),
	HX_("stbtt_Rasterize",39,6c,89,22),
	HX_("stbtt_GetGlyphBitmapSubpixel",69,7b,d8,67),
	HX_("stbtt_GetGlyphBitmap",43,97,73,24),
	HX_("stbtt_MakeGlyphBitmapSubpixel",55,b8,15,a0),
	HX_("stbtt_MakeGlyphBitmap",2f,08,34,88),
	HX_("stbtt_GetCodepointBitmapSubpixel",00,cc,1f,41),
	HX_("stbtt_MakeCodepointBitmapSubpixel",ec,ee,3b,c9),
	HX_("stbtt_GetCodepointBitmap",da,f8,8c,d7),
	HX_("stbtt_MakeCodepointBitmap",c6,4f,d6,de),
	HX_("stbtt_BakeFontBitmap",15,7f,85,c2),
	HX_("stbtt_GetBakedQuad",1a,c6,35,46),
	::String(null())
};

void StbTruetype_obj::__register()
{
	StbTruetype_obj _hx_dummy;
	StbTruetype_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("kha.graphics2.truetype.StbTruetype",14,96,db,79);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StbTruetype_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StbTruetype_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StbTruetype_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StbTruetype_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StbTruetype_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StbTruetype_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StbTruetype_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StbTruetype_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_218_boot)
HXDLIN( 218)		STBTT_vmove = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_219_boot)
HXDLIN( 219)		STBTT_vline = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_220_boot)
HXDLIN( 220)		STBTT_vcurve = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_221_boot)
HXDLIN( 221)		STBTT_vcubic = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_223_boot)
HXDLIN( 223)		STBTT_MACSTYLE_DONTCARE = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_224_boot)
HXDLIN( 224)		STBTT_MACSTYLE_BOLD = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_225_boot)
HXDLIN( 225)		STBTT_MACSTYLE_ITALIC = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_226_boot)
HXDLIN( 226)		STBTT_MACSTYLE_UNDERSCORE = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_227_boot)
HXDLIN( 227)		STBTT_MACSTYLE_NONE = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_230_boot)
HXDLIN( 230)		STBTT_PLATFORM_ID_UNICODE = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_231_boot)
HXDLIN( 231)		STBTT_PLATFORM_ID_MAC = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_232_boot)
HXDLIN( 232)		STBTT_PLATFORM_ID_ISO = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_233_boot)
HXDLIN( 233)		STBTT_PLATFORM_ID_MICROSOFT = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_236_boot)
HXDLIN( 236)		STBTT_UNICODE_EID_UNICODE_1_0 = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_237_boot)
HXDLIN( 237)		STBTT_UNICODE_EID_UNICODE_1_1 = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_238_boot)
HXDLIN( 238)		STBTT_UNICODE_EID_ISO_10646 = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_239_boot)
HXDLIN( 239)		STBTT_UNICODE_EID_UNICODE_2_0_BMP = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_240_boot)
HXDLIN( 240)		STBTT_UNICODE_EID_UNICODE_2_0_FULL = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_243_boot)
HXDLIN( 243)		STBTT_MS_EID_SYMBOL = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_244_boot)
HXDLIN( 244)		STBTT_MS_EID_UNICODE_BMP = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_245_boot)
HXDLIN( 245)		STBTT_MS_EID_SHIFTJIS = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_246_boot)
HXDLIN( 246)		STBTT_MS_EID_UNICODE_FULL = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_249_boot)
HXDLIN( 249)		STBTT_MAC_EID_ROMAN = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_250_boot)
HXDLIN( 250)		STBTT_MAC_EID_ARABIC = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_251_boot)
HXDLIN( 251)		STBTT_MAC_EID_JAPANESE = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_252_boot)
HXDLIN( 252)		STBTT_MAC_EID_HEBREW = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_253_boot)
HXDLIN( 253)		STBTT_MAC_EID_CHINESE_TRAD = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_254_boot)
HXDLIN( 254)		STBTT_MAC_EID_GREEK = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_255_boot)
HXDLIN( 255)		STBTT_MAC_EID_KOREAN = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_256_boot)
HXDLIN( 256)		STBTT_MAC_EID_RUSSIAN = 7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_260_boot)
HXDLIN( 260)		STBTT_MS_LANG_ENGLISH = 1033;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_261_boot)
HXDLIN( 261)		STBTT_MS_LANG_ITALIAN = 1040;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_262_boot)
HXDLIN( 262)		STBTT_MS_LANG_CHINESE = 2052;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_263_boot)
HXDLIN( 263)		STBTT_MS_LANG_JAPANESE = 1041;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_264_boot)
HXDLIN( 264)		STBTT_MS_LANG_DUTCH = 1043;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_265_boot)
HXDLIN( 265)		STBTT_MS_LANG_KOREAN = 1042;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_266_boot)
HXDLIN( 266)		STBTT_MS_LANG_FRENCH = 1036;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_267_boot)
HXDLIN( 267)		STBTT_MS_LANG_RUSSIAN = 1049;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_268_boot)
HXDLIN( 268)		STBTT_MS_LANG_GERMAN = 1031;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_269_boot)
HXDLIN( 269)		STBTT_MS_LANG_SPANISH = 1033;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_270_boot)
HXDLIN( 270)		STBTT_MS_LANG_HEBREW = 1037;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_271_boot)
HXDLIN( 271)		STBTT_MS_LANG_SWEDISH = 1053;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_274_boot)
HXDLIN( 274)		STBTT_MAC_LANG_ENGLISH = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_275_boot)
HXDLIN( 275)		STBTT_MAC_LANG_JAPANESE = 11;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_276_boot)
HXDLIN( 276)		STBTT_MAC_LANG_ARABIC = 12;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_277_boot)
HXDLIN( 277)		STBTT_MAC_LANG_KOREAN = 23;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_278_boot)
HXDLIN( 278)		STBTT_MAC_LANG_DUTCH = 4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_279_boot)
HXDLIN( 279)		STBTT_MAC_LANG_RUSSIAN = 32;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_280_boot)
HXDLIN( 280)		STBTT_MAC_LANG_FRENCH = 1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_281_boot)
HXDLIN( 281)		STBTT_MAC_LANG_SPANISH = 6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_282_boot)
HXDLIN( 282)		STBTT_MAC_LANG_GERMAN = 2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_283_boot)
HXDLIN( 283)		STBTT_MAC_LANG_SWEDISH = 5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_284_boot)
HXDLIN( 284)		STBTT_MAC_LANG_HEBREW = 10;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_285_boot)
HXDLIN( 285)		STBTT_MAC_LANG_CHINESE_SIMPLIFIED = 33;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_286_boot)
HXDLIN( 286)		STBTT_MAC_LANG_ITALIAN = 3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_287_boot)
HXDLIN( 287)		STBTT_MAC_LANG_CHINESE_TRAD = 19;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_289_boot)
HXDLIN( 289)		STBTT_MAX_OVERSAMPLE = 8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_d244f07465627071_291_boot)
HXDLIN( 291)		STBTT_RASTERIZER_VERSION = 2;
            	}
}

} // end namespace kha
} // end namespace graphics2
} // end namespace truetype
