// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <hxinc/haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_HBox
#include <hxinc/haxe/ui/containers/HBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_VBox
#include <hxinc/haxe/ui/containers/VBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_Menu
#include <hxinc/haxe/ui/containers/menus/Menu.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_MenuEvents
#include <hxinc/haxe/ui/containers/menus/MenuEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_MenuItem
#include <hxinc/haxe/ui/containers/menus/MenuItem.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus__Menu_Builder
#include <hxinc/haxe/ui/containers/menus/_Menu/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_37ec5715a3140243_211_new,"haxe.ui.containers.menus._Menu.Builder","new",0x854644d9,"haxe.ui.containers.menus._Menu.Builder.new","haxe/ui/containers/menus/Menu.hx",211,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_37ec5715a3140243_220_addComponent,"haxe.ui.containers.menus._Menu.Builder","addComponent",0xfcf9c6c3,"haxe.ui.containers.menus._Menu.Builder.addComponent","haxe/ui/containers/menus/Menu.hx",220,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_37ec5715a3140243_237_onComponentAdded,"haxe.ui.containers.menus._Menu.Builder","onComponentAdded",0xd1220829,"haxe.ui.containers.menus._Menu.Builder.onComponentAdded","haxe/ui/containers/menus/Menu.hx",237,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_37ec5715a3140243_242_findComponent,"haxe.ui.containers.menus._Menu.Builder","findComponent",0x8931d6fd,"haxe.ui.containers.menus._Menu.Builder.findComponent","haxe/ui/containers/menus/Menu.hx",242,0x5a36fdb9)
namespace haxe{
namespace ui{
namespace containers{
namespace menus{
namespace _Menu{

void Builder_obj::__construct( ::haxe::ui::containers::menus::Menu menu){
            	HX_GC_STACKFRAME(&_hx_pos_37ec5715a3140243_211_new)
HXLINE( 213)		this->_hx_set__subMenus(HX_CTX,  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX ));
HXLINE( 216)		super::__construct(menu);
HXLINE( 217)		this->_hx_set__menu(HX_CTX, menu);
            	}

Dynamic Builder_obj::__CreateEmpty() { return new Builder_obj; }

void *Builder_obj::_hx_vtable = 0;

Dynamic Builder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Builder_obj > _hx_result = new Builder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Builder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4cb4a045) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x4cb4a045;
	} else {
		return inClassId==(int)0x6fc7eb95;
	}
}

 ::haxe::ui::core::Component Builder_obj::addComponent( ::haxe::ui::core::Component child){
            	HX_GC_STACKFRAME(&_hx_pos_37ec5715a3140243_220_addComponent)
HXLINE( 221)		if (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::containers::menus::Menu >())) {
HXLINE( 222)			 ::haxe::ui::containers::menus::Menu menu = hx::TCast<  ::haxe::ui::containers::menus::Menu >::cast(child);
HXLINE( 223)			 ::haxe::ui::containers::menus::MenuItem item =  ::haxe::ui::containers::menus::MenuItem_obj::__alloc( HX_CTX );
HXLINE( 224)			item->set_text(child->get_text());
HXLINE( 225)			item->set_icon(menu->get_icon());
HXLINE( 226)			item->set_expandable(true);
HXLINE( 227)			this->_menu->addComponent(item);
HXLINE( 228)			hx::TCast<  ::haxe::ui::containers::menus::MenuEvents >::cast(menu->_internalEvents)->_hx_set_parentMenu(HX_CTX, this->_menu);
HXLINE( 229)			this->_subMenus->set(item,menu);
HXLINE( 230)			return child;
            		}
HXLINE( 233)		return null();
            	}


void Builder_obj::onComponentAdded( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_37ec5715a3140243_237_onComponentAdded)
HXDLIN( 237)		bool _hx_tmp;
HXDLIN( 237)		if (!(::Std_obj::is(child,hx::ClassOf< ::haxe::ui::containers::menus::Menu >()))) {
HXDLIN( 237)			_hx_tmp = ::Std_obj::is(child,hx::ClassOf< ::haxe::ui::containers::menus::MenuItem >());
            		}
            		else {
HXDLIN( 237)			_hx_tmp = true;
            		}
HXDLIN( 237)		if (_hx_tmp) {
HXLINE( 238)			this->_menu->registerInternalEvents(null(),true);
            		}
            	}


 ::Dynamic Builder_obj::findComponent(::String criteria,hx::Class type, ::Dynamic recursive,::String searchType){
            	HX_STACKFRAME(&_hx_pos_37ec5715a3140243_242_findComponent)
HXLINE( 243)		 ::Dynamic match = this->super::findComponent(criteria,type,recursive,searchType);
HXLINE( 244)		if (hx::IsNull( match )) {
HXLINE( 245)			 ::Dynamic menu = this->_subMenus->iterator();
HXDLIN( 245)			while(( (bool)(menu->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 245)				 ::haxe::ui::containers::menus::Menu menu1 = ( ( ::haxe::ui::containers::menus::Menu)(menu->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 246)				match = menu1->findComponent(criteria,type,recursive,searchType);
HXLINE( 247)				if (menu1->matchesSearch(criteria,type,searchType)) {
HXLINE( 248)					return menu1;
            				}
            				else {
HXLINE( 250)					match = menu1->findComponent(criteria,type,recursive,searchType);
            				}
HXLINE( 253)				if (hx::IsNotNull( match )) {
HXLINE( 254)					goto _hx_goto_3;
            				}
            			}
            			_hx_goto_3:;
            		}
HXLINE( 258)		return match;
            	}



hx::ObjectPtr< Builder_obj > Builder_obj::__new( ::haxe::ui::containers::menus::Menu menu) {
	hx::ObjectPtr< Builder_obj > __this = new Builder_obj();
	__this->__construct(menu);
	return __this;
}

hx::ObjectPtr< Builder_obj > Builder_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::containers::menus::Menu menu) {
	Builder_obj *__this = (Builder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Builder_obj), true, "haxe.ui.containers.menus._Menu.Builder"));
	*(void **)__this = Builder_obj::_hx_vtable;
	__this->__construct(menu);
	return __this;
}

Builder_obj::Builder_obj()
{
}

void Builder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Builder);
	HX_MARK_MEMBER_NAME(_menu,"_menu");
	HX_MARK_MEMBER_NAME(_subMenus,"_subMenus");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Builder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_menu,"_menu");
	HX_VISIT_MEMBER_NAME(_subMenus,"_subMenus");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Builder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_menu") ) { return hx::Val( _menu ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_subMenus") ) { return hx::Val( _subMenus ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addComponent") ) { return hx::Val( addComponent_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"findComponent") ) { return hx::Val( findComponent_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"onComponentAdded") ) { return hx::Val( onComponentAdded_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Builder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_menu") ) { _hx_set__menu(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::menus::Menu >()); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_subMenus") ) { _hx_set__subMenus(HX_CTX_GET,inValue.Cast<  ::haxe::ds::ObjectMap >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Builder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_menu",7e,61,6a,fb));
	outFields->push(HX_("_subMenus",b3,f3,78,c2));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Builder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::containers::menus::Menu */ ,(int)offsetof(Builder_obj,_menu),HX_("_menu",7e,61,6a,fb)},
	{hx::fsObject /*  ::haxe::ds::ObjectMap */ ,(int)offsetof(Builder_obj,_subMenus),HX_("_subMenus",b3,f3,78,c2)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Builder_obj_sStaticStorageInfo = 0;
#endif

static ::String Builder_obj_sMemberFields[] = {
	HX_("_menu",7e,61,6a,fb),
	HX_("_subMenus",b3,f3,78,c2),
	HX_("addComponent",5c,12,a8,0e),
	HX_("onComponentAdded",42,94,a0,77),
	HX_("findComponent",44,b1,05,f0),
	::String(null()) };

hx::Class Builder_obj::__mClass;

void Builder_obj::__register()
{
	Builder_obj _hx_dummy;
	Builder_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.menus._Menu.Builder",67,e4,02,13);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Builder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Builder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Builder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Builder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace menus
} // end namespace _Menu
