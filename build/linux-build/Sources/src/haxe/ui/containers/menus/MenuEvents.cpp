// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <hxinc/haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenBase
#include <hxinc/haxe/ui/backend/ScreenBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenImpl
#include <hxinc/haxe/ui/backend/ScreenImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_HBox
#include <hxinc/haxe/ui/containers/HBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_VBox
#include <hxinc/haxe/ui/containers/VBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_Menu
#include <hxinc/haxe/ui/containers/menus/Menu.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_MenuEvent
#include <hxinc/haxe/ui/containers/menus/MenuEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_MenuEvents
#include <hxinc/haxe/ui/containers/menus/MenuEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus_MenuItem
#include <hxinc/haxe/ui/containers/menus/MenuItem.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_menus__Menu_Builder
#include <hxinc/haxe/ui/containers/menus/_Menu/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Screen
#include <hxinc/haxe/ui/core/Screen.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_MouseEvent
#include <hxinc/haxe/ui/events/MouseEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_geom_Point
#include <hxinc/haxe/ui/geom/Point.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_df76b766e179ab3e_51_new,"haxe.ui.containers.menus.MenuEvents","new",0x7dff5b6e,"haxe.ui.containers.menus.MenuEvents.new","haxe/ui/containers/menus/Menu.hx",51,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_61_register,"haxe.ui.containers.menus.MenuEvents","register",0x1b3b4895,"haxe.ui.containers.menus.MenuEvents.register","haxe/ui/containers/menus/Menu.hx",61,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_89_unregister,"haxe.ui.containers.menus.MenuEvents","unregister",0x38d1a06e,"haxe.ui.containers.menus.MenuEvents.unregister","haxe/ui/containers/menus/Menu.hx",89,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_103_onMouseOver,"haxe.ui.containers.menus.MenuEvents","onMouseOver",0x56327608,"haxe.ui.containers.menus.MenuEvents.onMouseOver","haxe/ui/containers/menus/Menu.hx",103,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_107_onMouseOut,"haxe.ui.containers.menus.MenuEvents","onMouseOut",0x6442ce5a,"haxe.ui.containers.menus.MenuEvents.onMouseOut","haxe/ui/containers/menus/Menu.hx",107,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_110_onItemClick,"haxe.ui.containers.menus.MenuEvents","onItemClick",0xa86f0e24,"haxe.ui.containers.menus.MenuEvents.onItemClick","haxe/ui/containers/menus/Menu.hx",110,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_122_onItemMouseOver,"haxe.ui.containers.menus.MenuEvents","onItemMouseOver",0x6461f9f5,"haxe.ui.containers.menus.MenuEvents.onItemMouseOver","haxe/ui/containers/menus/Menu.hx",122,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_141_onItemMouseOut,"haxe.ui.containers.menus.MenuEvents","onItemMouseOut",0x1768e70d,"haxe.ui.containers.menus.MenuEvents.onItemMouseOut","haxe/ui/containers/menus/Menu.hx",141,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_147_showSubMenu,"haxe.ui.containers.menus.MenuEvents","showSubMenu",0x30dac0d0,"haxe.ui.containers.menus.MenuEvents.showSubMenu","haxe/ui/containers/menus/Menu.hx",147,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_167_hideCurrentSubMenu,"haxe.ui.containers.menus.MenuEvents","hideCurrentSubMenu",0x38a23d1a,"haxe.ui.containers.menus.MenuEvents.hideCurrentSubMenu","haxe/ui/containers/menus/Menu.hx",167,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_182_onHidden,"haxe.ui.containers.menus.MenuEvents","onHidden",0x76de981b,"haxe.ui.containers.menus.MenuEvents.onHidden","haxe/ui/containers/menus/Menu.hx",182,0x5a36fdb9)
HX_LOCAL_STACK_FRAME(_hx_pos_df76b766e179ab3e_189_findRootMenu,"haxe.ui.containers.menus.MenuEvents","findRootMenu",0xb52ba96c,"haxe.ui.containers.menus.MenuEvents.findRootMenu","haxe/ui/containers/menus/Menu.hx",189,0x5a36fdb9)
namespace haxe{
namespace ui{
namespace containers{
namespace menus{

void MenuEvents_obj::__construct( ::haxe::ui::containers::menus::Menu menu){
            	HX_GC_STACKFRAME(&_hx_pos_df76b766e179ab3e_51_new)
HXLINE( 101)		this->_over = false;
HXLINE(  54)		this->_hx_set_parentMenu(HX_CTX, null());
HXLINE(  53)		this->_hx_set_currentSubMenu(HX_CTX, null());
HXLINE(  57)		super::__construct(menu);
HXLINE(  58)		this->_hx_set__menu(HX_CTX, menu);
            	}

Dynamic MenuEvents_obj::__CreateEmpty() { return new MenuEvents_obj; }

void *MenuEvents_obj::_hx_vtable = 0;

Dynamic MenuEvents_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MenuEvents_obj > _hx_result = new MenuEvents_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MenuEvents_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5d294170) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x5d294170;
	} else {
		return inClassId==(int)0x6454e3a0;
	}
}

void MenuEvents_obj::_hx_register(){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_61_register)
HXLINE(  62)		if (!(this->hasEvent(HX_("mouseover",f9,1d,34,0b),this->onMouseOver_dyn()))) {
HXLINE(  63)			this->registerEvent(HX_("mouseover",f9,1d,34,0b),this->onMouseOver_dyn(),null());
            		}
HXLINE(  65)		if (!(this->hasEvent(HX_("mouseout",89,2f,36,a4),this->onMouseOut_dyn()))) {
HXLINE(  66)			this->registerEvent(HX_("mouseout",89,2f,36,a4),this->onMouseOut_dyn(),null());
            		}
HXLINE(  69)		{
HXLINE(  69)			int _g = 0;
HXDLIN(  69)			 ::haxe::ui::containers::menus::Menu _this = this->_menu;
HXDLIN(  69)			::Array< ::Dynamic> _g1;
HXDLIN(  69)			if (hx::IsNull( _this->_children )) {
HXLINE(  69)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE(  69)				_g1 = _this->_children;
            			}
HXDLIN(  69)			while((_g < _g1->length)){
HXLINE(  69)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN(  69)				_g = (_g + 1);
HXLINE(  70)				if (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::containers::menus::MenuItem >())) {
HXLINE(  71)					 ::haxe::ui::containers::menus::MenuItem item = hx::TCast<  ::haxe::ui::containers::menus::MenuItem >::cast(child);
HXLINE(  72)					if (!(item->hasEvent(HX_("click",48,7c,5e,48),this->onItemClick_dyn()))) {
HXLINE(  73)						item->registerEvent(HX_("click",48,7c,5e,48),this->onItemClick_dyn(),null());
            					}
HXLINE(  75)					if (!(item->hasEvent(HX_("mouseover",f9,1d,34,0b),this->onItemMouseOver_dyn()))) {
HXLINE(  76)						item->registerEvent(HX_("mouseover",f9,1d,34,0b),this->onItemMouseOver_dyn(),null());
            					}
HXLINE(  78)					if (!(item->hasEvent(HX_("mouseout",89,2f,36,a4),this->onItemMouseOut_dyn()))) {
HXLINE(  79)						item->registerEvent(HX_("mouseout",89,2f,36,a4),this->onItemMouseOut_dyn(),null());
            					}
            				}
            			}
            		}
HXLINE(  84)		if (!(this->hasEvent(HX_("hidden",6a,ff,95,4c),this->onHidden_dyn()))) {
HXLINE(  85)			this->registerEvent(HX_("hidden",6a,ff,95,4c),this->onHidden_dyn(),null());
            		}
            	}


void MenuEvents_obj::unregister(){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_89_unregister)
HXLINE(  90)		this->unregisterEvent(HX_("mouseover",f9,1d,34,0b),this->onMouseOver_dyn());
HXLINE(  91)		this->unregisterEvent(HX_("mouseout",89,2f,36,a4),this->onMouseOut_dyn());
HXLINE(  92)		{
HXLINE(  92)			int _g = 0;
HXDLIN(  92)			 ::haxe::ui::containers::menus::Menu _this = this->_menu;
HXDLIN(  92)			::Array< ::Dynamic> _g1;
HXDLIN(  92)			if (hx::IsNull( _this->_children )) {
HXLINE(  92)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE(  92)				_g1 = _this->_children;
            			}
HXDLIN(  92)			while((_g < _g1->length)){
HXLINE(  92)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN(  92)				_g = (_g + 1);
HXLINE(  93)				child->unregisterEvent(HX_("click",48,7c,5e,48),this->onItemClick_dyn());
HXLINE(  94)				child->unregisterEvent(HX_("mouseover",f9,1d,34,0b),this->onItemMouseOver_dyn());
HXLINE(  95)				child->unregisterEvent(HX_("mouseout",89,2f,36,a4),this->onItemMouseOut_dyn());
            			}
            		}
HXLINE(  98)		this->unregisterEvent(HX_("hidden",6a,ff,95,4c),this->onHidden_dyn());
            	}


void MenuEvents_obj::onMouseOver( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_103_onMouseOver)
HXDLIN( 103)		this->_over = true;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuEvents_obj,onMouseOver,(void))

void MenuEvents_obj::onMouseOut( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_107_onMouseOut)
HXDLIN( 107)		this->_over = false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuEvents_obj,onMouseOut,(void))

void MenuEvents_obj::onItemClick( ::haxe::ui::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_df76b766e179ab3e_110_onItemClick)
HXLINE( 111)		 ::haxe::ui::containers::menus::MenuItem item = hx::TCast<  ::haxe::ui::containers::menus::MenuItem >::cast(event->target);
HXLINE( 112)		if (!(item->get_expandable())) {
HXLINE( 113)			 ::haxe::ui::containers::menus::MenuEvent event1 =  ::haxe::ui::containers::menus::MenuEvent_obj::__alloc( HX_CTX ,HX_("menuselected",fa,a6,03,90),null(),null());
HXLINE( 114)			event1->_hx_set_menu(HX_CTX, this->_menu);
HXLINE( 115)			event1->_hx_set_menuItem(HX_CTX, item);
HXLINE( 116)			this->findRootMenu()->dispatch(event1);
HXLINE( 117)			this->hideCurrentSubMenu();
HXLINE( 118)			this->findRootMenu()->hide();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuEvents_obj,onItemClick,(void))

void MenuEvents_obj::onItemMouseOver( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_122_onItemMouseOver)
HXLINE( 123)		 ::haxe::ui::containers::menus::_Menu::Builder builder = hx::TCast<  ::haxe::ui::containers::menus::_Menu::Builder >::cast(this->_menu->_compositeBuilder);
HXLINE( 124)		 ::haxe::ds::ObjectMap subMenus = builder->_subMenus;
HXLINE( 125)		 ::haxe::ui::containers::menus::MenuItem item = hx::TCast<  ::haxe::ui::containers::menus::MenuItem >::cast(event->target);
HXLINE( 127)		{
HXLINE( 127)			int _g = 0;
HXDLIN( 127)			 ::haxe::ui::containers::menus::Menu _this = this->_menu;
HXDLIN( 127)			::Array< ::Dynamic> _g1;
HXDLIN( 127)			if (hx::IsNull( _this->_children )) {
HXLINE( 127)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 127)				_g1 = _this->_children;
            			}
HXDLIN( 127)			while((_g < _g1->length)){
HXLINE( 127)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 127)				_g = (_g + 1);
HXLINE( 128)				if (hx::IsNotEq( child,item )) {
HXLINE( 129)					child->removeClass(HX_(":hover",42,d3,17,5c),true,true);
            				}
            			}
            		}
HXLINE( 133)		if (hx::IsNotNull( ( ( ::haxe::ui::containers::menus::Menu)(subMenus->get(item)) ) )) {
HXLINE( 134)			this->showSubMenu(( ( ::haxe::ui::containers::menus::Menu)(subMenus->get(item)) ),item);
            		}
            		else {
HXLINE( 136)			this->hideCurrentSubMenu();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuEvents_obj,onItemMouseOver,(void))

void MenuEvents_obj::onItemMouseOut( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_141_onItemMouseOut)
HXDLIN( 141)		if (hx::IsNotNull( this->currentSubMenu )) {
HXLINE( 142)			event->target->addClass(HX_(":hover",42,d3,17,5c),true,true);
HXLINE( 143)			return;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuEvents_obj,onItemMouseOut,(void))

void MenuEvents_obj::showSubMenu( ::haxe::ui::containers::menus::Menu subMenu, ::haxe::ui::containers::menus::MenuItem source){
            	HX_GC_STACKFRAME(&_hx_pos_df76b766e179ab3e_147_showSubMenu)
HXLINE( 148)		this->hideCurrentSubMenu();
HXLINE( 149)		subMenu->set_menuStyleNames(this->_menu->get_menuStyleNames());
HXLINE( 150)		subMenu->addClass(this->_menu->get_menuStyleNames(),null(),null());
HXLINE( 151)		 ::haxe::ui::geom::Point componentOffset = source->getComponentOffset();
HXLINE( 152)		Float left = source->get_screenLeft();
HXDLIN( 152)		Float left1 = (left + source->get_actualComponentWidth());
HXDLIN( 152)		Float left2 = (left1 + componentOffset->x);
HXLINE( 153)		Float top = source->get_screenTop();
HXLINE( 154)		::haxe::ui::core::Screen_obj::get_instance()->addComponent(subMenu);
HXLINE( 155)		subMenu->syncComponentValidation(null());
HXLINE( 157)		Float _hx_tmp = (left2 + subMenu->get_actualComponentWidth());
HXDLIN( 157)		if ((_hx_tmp > ::haxe::ui::core::Screen_obj::get_instance()->get_width())) {
HXLINE( 158)			Float left3 = source->get_screenLeft();
HXDLIN( 158)			left2 = (left3 - subMenu->get_actualComponentWidth());
            		}
HXLINE( 161)		subMenu->set_left(left2);
HXLINE( 162)		subMenu->set_top(top);
HXLINE( 164)		this->_hx_set_currentSubMenu(HX_CTX, subMenu);
            	}


HX_DEFINE_DYNAMIC_FUNC2(MenuEvents_obj,showSubMenu,(void))

void MenuEvents_obj::hideCurrentSubMenu(){
            	HX_GC_STACKFRAME(&_hx_pos_df76b766e179ab3e_167_hideCurrentSubMenu)
HXLINE( 168)		if (hx::IsNull( this->currentSubMenu )) {
HXLINE( 169)			return;
            		}
HXLINE( 172)		{
HXLINE( 172)			int _g = 0;
HXDLIN( 172)			 ::haxe::ui::containers::menus::Menu _this = this->currentSubMenu;
HXDLIN( 172)			::Array< ::Dynamic> _g1;
HXDLIN( 172)			if (hx::IsNull( _this->_children )) {
HXLINE( 172)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 172)				_g1 = _this->_children;
            			}
HXDLIN( 172)			while((_g < _g1->length)){
HXLINE( 172)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 172)				_g = (_g + 1);
HXLINE( 173)				child->removeClass(HX_(":hover",42,d3,17,5c),true,true);
            			}
            		}
HXLINE( 176)		 ::haxe::ui::containers::menus::MenuEvents subMenuEvents = hx::TCast<  ::haxe::ui::containers::menus::MenuEvents >::cast(this->currentSubMenu->_internalEvents);
HXLINE( 177)		subMenuEvents->hideCurrentSubMenu();
HXLINE( 178)		::haxe::ui::core::Screen_obj::get_instance()->removeComponent(this->currentSubMenu);
HXLINE( 179)		this->_hx_set_currentSubMenu(HX_CTX, null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(MenuEvents_obj,hideCurrentSubMenu,(void))

void MenuEvents_obj::onHidden( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_182_onHidden)
HXLINE( 183)		{
HXLINE( 183)			int _g = 0;
HXDLIN( 183)			 ::haxe::ui::containers::menus::Menu _this = this->_menu;
HXDLIN( 183)			::Array< ::Dynamic> _g1;
HXDLIN( 183)			if (hx::IsNull( _this->_children )) {
HXLINE( 183)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 183)				_g1 = _this->_children;
            			}
HXDLIN( 183)			while((_g < _g1->length)){
HXLINE( 183)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 183)				_g = (_g + 1);
HXLINE( 184)				child->removeClass(HX_(":hover",42,d3,17,5c),true,true);
            			}
            		}
HXLINE( 186)		this->hideCurrentSubMenu();
            	}


HX_DEFINE_DYNAMIC_FUNC1(MenuEvents_obj,onHidden,(void))

 ::haxe::ui::containers::menus::Menu MenuEvents_obj::findRootMenu(){
            	HX_STACKFRAME(&_hx_pos_df76b766e179ab3e_189_findRootMenu)
HXLINE( 190)		 ::haxe::ui::containers::menus::Menu root = null();
HXLINE( 191)		 ::haxe::ui::containers::menus::Menu ref = this->_menu;
HXLINE( 192)		while(hx::IsNotNull( ref )){
HXLINE( 193)			 ::haxe::ui::containers::menus::MenuEvents events = hx::TCast<  ::haxe::ui::containers::menus::MenuEvents >::cast(ref->_internalEvents);
HXLINE( 194)			if (hx::IsNull( events->parentMenu )) {
HXLINE( 195)				root = events->_menu;
HXLINE( 196)				goto _hx_goto_16;
            			}
HXLINE( 199)			ref = events->parentMenu;
            		}
            		_hx_goto_16:;
HXLINE( 202)		return root;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MenuEvents_obj,findRootMenu,return )


hx::ObjectPtr< MenuEvents_obj > MenuEvents_obj::__new( ::haxe::ui::containers::menus::Menu menu) {
	hx::ObjectPtr< MenuEvents_obj > __this = new MenuEvents_obj();
	__this->__construct(menu);
	return __this;
}

hx::ObjectPtr< MenuEvents_obj > MenuEvents_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::containers::menus::Menu menu) {
	MenuEvents_obj *__this = (MenuEvents_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MenuEvents_obj), true, "haxe.ui.containers.menus.MenuEvents"));
	*(void **)__this = MenuEvents_obj::_hx_vtable;
	__this->__construct(menu);
	return __this;
}

MenuEvents_obj::MenuEvents_obj()
{
}

void MenuEvents_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MenuEvents);
	HX_MARK_MEMBER_NAME(_menu,"_menu");
	HX_MARK_MEMBER_NAME(currentSubMenu,"currentSubMenu");
	HX_MARK_MEMBER_NAME(parentMenu,"parentMenu");
	HX_MARK_MEMBER_NAME(_over,"_over");
	 ::haxe::ui::events::Events_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MenuEvents_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_menu,"_menu");
	HX_VISIT_MEMBER_NAME(currentSubMenu,"currentSubMenu");
	HX_VISIT_MEMBER_NAME(parentMenu,"parentMenu");
	HX_VISIT_MEMBER_NAME(_over,"_over");
	 ::haxe::ui::events::Events_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MenuEvents_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_menu") ) { return hx::Val( _menu ); }
		if (HX_FIELD_EQ(inName,"_over") ) { return hx::Val( _over ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"register") ) { return hx::Val( _hx_register_dyn() ); }
		if (HX_FIELD_EQ(inName,"onHidden") ) { return hx::Val( onHidden_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"parentMenu") ) { return hx::Val( parentMenu ); }
		if (HX_FIELD_EQ(inName,"unregister") ) { return hx::Val( unregister_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseOut") ) { return hx::Val( onMouseOut_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseOver") ) { return hx::Val( onMouseOver_dyn() ); }
		if (HX_FIELD_EQ(inName,"onItemClick") ) { return hx::Val( onItemClick_dyn() ); }
		if (HX_FIELD_EQ(inName,"showSubMenu") ) { return hx::Val( showSubMenu_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"findRootMenu") ) { return hx::Val( findRootMenu_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"currentSubMenu") ) { return hx::Val( currentSubMenu ); }
		if (HX_FIELD_EQ(inName,"onItemMouseOut") ) { return hx::Val( onItemMouseOut_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"onItemMouseOver") ) { return hx::Val( onItemMouseOver_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"hideCurrentSubMenu") ) { return hx::Val( hideCurrentSubMenu_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val MenuEvents_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_menu") ) { _hx_set__menu(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::menus::Menu >()); return inValue; }
		if (HX_FIELD_EQ(inName,"_over") ) { _over=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"parentMenu") ) { _hx_set_parentMenu(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::menus::Menu >()); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"currentSubMenu") ) { _hx_set_currentSubMenu(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::menus::Menu >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MenuEvents_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_menu",7e,61,6a,fb));
	outFields->push(HX_("currentSubMenu",06,50,f1,23));
	outFields->push(HX_("parentMenu",e9,53,6b,e7));
	outFields->push(HX_("_over",33,ad,c9,fc));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo MenuEvents_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::containers::menus::Menu */ ,(int)offsetof(MenuEvents_obj,_menu),HX_("_menu",7e,61,6a,fb)},
	{hx::fsObject /*  ::haxe::ui::containers::menus::Menu */ ,(int)offsetof(MenuEvents_obj,currentSubMenu),HX_("currentSubMenu",06,50,f1,23)},
	{hx::fsObject /*  ::haxe::ui::containers::menus::Menu */ ,(int)offsetof(MenuEvents_obj,parentMenu),HX_("parentMenu",e9,53,6b,e7)},
	{hx::fsBool,(int)offsetof(MenuEvents_obj,_over),HX_("_over",33,ad,c9,fc)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *MenuEvents_obj_sStaticStorageInfo = 0;
#endif

static ::String MenuEvents_obj_sMemberFields[] = {
	HX_("_menu",7e,61,6a,fb),
	HX_("currentSubMenu",06,50,f1,23),
	HX_("parentMenu",e9,53,6b,e7),
	HX_("register",63,a6,9f,d0),
	HX_("unregister",bc,8d,63,56),
	HX_("_over",33,ad,c9,fc),
	HX_("onMouseOver",fa,2c,50,18),
	HX_("onMouseOut",a8,bb,d4,81),
	HX_("onItemClick",16,c5,8c,6a),
	HX_("onItemMouseOver",e7,11,8b,3d),
	HX_("onItemMouseOut",5b,93,36,b2),
	HX_("showSubMenu",c2,77,f8,f2),
	HX_("hideCurrentSubMenu",68,28,f7,92),
	HX_("onHidden",e9,f5,42,2c),
	HX_("findRootMenu",3a,06,0e,cd),
	::String(null()) };

hx::Class MenuEvents_obj::__mClass;

void MenuEvents_obj::__register()
{
	MenuEvents_obj _hx_dummy;
	MenuEvents_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.menus.MenuEvents",7c,cc,bd,98);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MenuEvents_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MenuEvents_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MenuEvents_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MenuEvents_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace menus
