// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_haxe_ui_Toolkit
#include <hxinc/haxe/ui/Toolkit.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenBase
#include <hxinc/haxe/ui/backend/ScreenBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenImpl
#include <hxinc/haxe/ui/backend/ScreenImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_HorizontalScroll
#include <hxinc/haxe/ui/components/HorizontalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Scroll
#include <hxinc/haxe/ui/components/Scroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_VerticalScroll
#include <hxinc/haxe/ui/components/VerticalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollView
#include <hxinc/haxe/ui/containers/ScrollView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollViewBuilder
#include <hxinc/haxe/ui/containers/ScrollViewBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollViewEvents
#include <hxinc/haxe/ui/containers/ScrollViewEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDirectionalComponent
#include <hxinc/haxe/ui/core/IDirectionalComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Screen
#include <hxinc/haxe/ui/core/Screen.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_MouseEvent
#include <hxinc/haxe/ui/events/MouseEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_ScrollEvent
#include <hxinc/haxe/ui/events/ScrollEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_geom_Point
#include <hxinc/haxe/ui/geom/Point.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_kha_Scheduler
#include <hxinc/kha/Scheduler.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_253fa99b051b5118_410_new,"haxe.ui.containers.ScrollViewEvents","new",0x8940bb67,"haxe.ui.containers.ScrollViewEvents.new","haxe/ui/containers/ScrollView.hx",410,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_418_register,"haxe.ui.containers.ScrollViewEvents","register",0x1a7e61fc,"haxe.ui.containers.ScrollViewEvents.register","haxe/ui/containers/ScrollView.hx",418,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_443_unregister,"haxe.ui.containers.ScrollViewEvents","unregister",0xe21b2195,"haxe.ui.containers.ScrollViewEvents.unregister","haxe/ui/containers/ScrollView.hx",443,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_464_onContentsResized,"haxe.ui.containers.ScrollViewEvents","onContentsResized",0x54e400de,"haxe.ui.containers.ScrollViewEvents.onContentsResized","haxe/ui/containers/ScrollView.hx",464,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_467_onHScroll,"haxe.ui.containers.ScrollViewEvents","onHScroll",0x9161ad7d,"haxe.ui.containers.ScrollViewEvents.onHScroll","haxe/ui/containers/ScrollView.hx",467,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_472_onVScroll,"haxe.ui.containers.ScrollViewEvents","onVScroll",0xd78e2c0b,"haxe.ui.containers.ScrollViewEvents.onVScroll","haxe/ui/containers/ScrollView.hx",472,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_481_onMouseDown,"haxe.ui.containers.ScrollViewEvents","onMouseDown",0xc5ef5e0f,"haxe.ui.containers.ScrollViewEvents.onMouseDown","haxe/ui/containers/ScrollView.hx",481,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_536_onMouseMove,"haxe.ui.containers.ScrollViewEvents","onMouseMove",0xcbe248be,"haxe.ui.containers.ScrollViewEvents.onMouseMove","haxe/ui/containers/ScrollView.hx",536,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_569_pauseContainerEvents,"haxe.ui.containers.ScrollViewEvents","pauseContainerEvents",0xd33dd1fd,"haxe.ui.containers.ScrollViewEvents.pauseContainerEvents","haxe/ui/containers/ScrollView.hx",569,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_577_resumeContainerEvents,"haxe.ui.containers.ScrollViewEvents","resumeContainerEvents",0x42bbe0d4,"haxe.ui.containers.ScrollViewEvents.resumeContainerEvents","haxe/ui/containers/ScrollView.hx",577,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_587_onContainerEventsStatusChanged,"haxe.ui.containers.ScrollViewEvents","onContainerEventsStatusChanged",0xf0fdd460,"haxe.ui.containers.ScrollViewEvents.onContainerEventsStatusChanged","haxe/ui/containers/ScrollView.hx",587,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_614_onMouseUp,"haxe.ui.containers.ScrollViewEvents","onMouseUp",0xf12316c8,"haxe.ui.containers.ScrollViewEvents.onMouseUp","haxe/ui/containers/ScrollView.hx",614,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_683_inertialScroll,"haxe.ui.containers.ScrollViewEvents","inertialScroll",0x8bb71c38,"haxe.ui.containers.ScrollViewEvents.inertialScroll","haxe/ui/containers/ScrollView.hx",683,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_744_onMouseWheel,"haxe.ui.containers.ScrollViewEvents","onMouseWheel",0x5771c64e,"haxe.ui.containers.ScrollViewEvents.onMouseWheel","haxe/ui/containers/ScrollView.hx",744,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_253fa99b051b5118_478_boot,"haxe.ui.containers.ScrollViewEvents","boot",0x877c3f4b,"haxe.ui.containers.ScrollViewEvents.boot","haxe/ui/containers/ScrollView.hx",478,0x01b76681)
namespace haxe{
namespace ui{
namespace containers{

void ScrollViewEvents_obj::__construct( ::haxe::ui::containers::ScrollView scrollview){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_410_new)
HXLINE( 568)		this->_containerEventsPaused = false;
HXLINE( 535)		this->_hx_set__lastMousePos(HX_CTX, null());
HXLINE( 534)		this->_movementThreshold = 3;
HXLINE( 479)		this->_hx_set__inertia(HX_CTX, null());
HXLINE( 414)		super::__construct(scrollview);
HXLINE( 415)		this->_hx_set__scrollview(HX_CTX, scrollview);
            	}

Dynamic ScrollViewEvents_obj::__CreateEmpty() { return new ScrollViewEvents_obj; }

void *ScrollViewEvents_obj::_hx_vtable = 0;

Dynamic ScrollViewEvents_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ScrollViewEvents_obj > _hx_result = new ScrollViewEvents_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ScrollViewEvents_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x09a55db7) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x09a55db7;
	} else {
		return inClassId==(int)0x5d294170;
	}
}

void ScrollViewEvents_obj::_hx_register(){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_418_register)
HXLINE( 419)		 ::haxe::ui::core::Component contents = this->_scrollview->findComponent(HX_("scrollview-contents",15,b7,70,a7),null(),false,HX_("css",c3,83,4b,00)).StaticCast<  ::haxe::ui::core::Component >();
HXLINE( 420)		bool _hx_tmp;
HXDLIN( 420)		if (hx::IsNotNull( contents )) {
HXLINE( 420)			_hx_tmp = (contents->hasEvent(HX_("resize",f4,59,7b,08),this->onContentsResized_dyn()) == false);
            		}
            		else {
HXLINE( 420)			_hx_tmp = false;
            		}
HXDLIN( 420)		if (_hx_tmp) {
HXLINE( 421)			contents->registerEvent(HX_("resize",f4,59,7b,08),this->onContentsResized_dyn(),null());
            		}
HXLINE( 424)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 425)		bool _hx_tmp1;
HXDLIN( 425)		if (hx::IsNotNull( hscroll )) {
HXLINE( 425)			_hx_tmp1 = (hscroll->hasEvent(HX_("change",70,91,72,b7),this->onHScroll_dyn()) == false);
            		}
            		else {
HXLINE( 425)			_hx_tmp1 = false;
            		}
HXDLIN( 425)		if (_hx_tmp1) {
HXLINE( 426)			hscroll->registerEvent(HX_("change",70,91,72,b7),this->onHScroll_dyn(),null());
            		}
HXLINE( 429)		 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 430)		bool _hx_tmp2;
HXDLIN( 430)		if (hx::IsNotNull( vscroll )) {
HXLINE( 430)			_hx_tmp2 = (vscroll->hasEvent(HX_("change",70,91,72,b7),this->onVScroll_dyn()) == false);
            		}
            		else {
HXLINE( 430)			_hx_tmp2 = false;
            		}
HXDLIN( 430)		if (_hx_tmp2) {
HXLINE( 431)			vscroll->registerEvent(HX_("change",70,91,72,b7),this->onVScroll_dyn(),null());
            		}
HXLINE( 434)		bool _hx_tmp3;
HXDLIN( 434)		if ((this->_scrollview->get_scrollMode() != HX_("drag",f4,2b,70,42))) {
HXLINE( 434)			_hx_tmp3 = (this->_scrollview->get_scrollMode() == HX_("inertial",32,2a,a0,a6));
            		}
            		else {
HXLINE( 434)			_hx_tmp3 = true;
            		}
HXDLIN( 434)		if (_hx_tmp3) {
HXLINE( 435)			this->registerEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn(),null());
            		}
            		else {
HXLINE( 436)			if ((this->hasEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn()) == false)) {
HXLINE( 437)				this->unregisterEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn());
            			}
            		}
HXLINE( 440)		this->registerEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn(),null());
            	}


void ScrollViewEvents_obj::unregister(){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_443_unregister)
HXLINE( 444)		 ::haxe::ui::core::Component contents = this->_scrollview->findComponent(HX_("scrollview-contents",15,b7,70,a7),null(),false,HX_("css",c3,83,4b,00)).StaticCast<  ::haxe::ui::core::Component >();
HXLINE( 445)		if (hx::IsNotNull( contents )) {
HXLINE( 446)			contents->unregisterEvent(HX_("resize",f4,59,7b,08),this->onContentsResized_dyn());
            		}
HXLINE( 449)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 450)		if (hx::IsNotNull( hscroll )) {
HXLINE( 451)			hscroll->unregisterEvent(HX_("change",70,91,72,b7),this->onHScroll_dyn());
            		}
HXLINE( 454)		 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 455)		if (hx::IsNotNull( vscroll )) {
HXLINE( 456)			vscroll->unregisterEvent(HX_("change",70,91,72,b7),this->onVScroll_dyn());
            		}
HXLINE( 459)		this->unregisterEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn());
HXLINE( 460)		this->unregisterEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn());
            	}


void ScrollViewEvents_obj::onContentsResized( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_464_onContentsResized)
HXDLIN( 464)		this->_scrollview->invalidateComponent(HX_("scroll",0d,d8,64,47));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onContentsResized,(void))

void ScrollViewEvents_obj::onHScroll( ::haxe::ui::events::UIEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_467_onHScroll)
HXLINE( 468)		this->_scrollview->invalidateComponent(HX_("scroll",0d,d8,64,47));
HXLINE( 469)		 ::haxe::ui::core::Component _hx_tmp = this->_target;
HXDLIN( 469)		_hx_tmp->dispatch( ::haxe::ui::events::ScrollEvent_obj::__alloc( HX_CTX ,HX_("scrollchange",3d,71,a0,da)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onHScroll,(void))

void ScrollViewEvents_obj::onVScroll( ::haxe::ui::events::UIEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_472_onVScroll)
HXLINE( 473)		this->_scrollview->invalidateComponent(HX_("scroll",0d,d8,64,47));
HXLINE( 474)		 ::haxe::ui::core::Component _hx_tmp = this->_target;
HXDLIN( 474)		_hx_tmp->dispatch( ::haxe::ui::events::ScrollEvent_obj::__alloc( HX_CTX ,HX_("scrollchange",3d,71,a0,da)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onVScroll,(void))

void ScrollViewEvents_obj::onMouseDown( ::haxe::ui::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_481_onMouseDown)
HXLINE( 482)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 483)		 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 485)		bool _hx_tmp;
HXDLIN( 485)		if (hx::IsNull( hscroll )) {
HXLINE( 485)			_hx_tmp = hx::IsNull( vscroll );
            		}
            		else {
HXLINE( 485)			_hx_tmp = false;
            		}
HXDLIN( 485)		if (_hx_tmp) {
HXLINE( 486)			return;
            		}
HXLINE( 489)		this->_hx_set__lastMousePos(HX_CTX,  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,event->screenX,event->screenY));
HXLINE( 492)		 ::haxe::ui::geom::Point componentOffset = this->_scrollview->getComponentOffset();
HXLINE( 493)		bool _hx_tmp1;
HXDLIN( 493)		if (hx::IsNotNull( hscroll )) {
HXLINE( 493)			_hx_tmp1 = (hscroll->hitTest((event->screenX - componentOffset->x),(event->screenY - componentOffset->y)) == true);
            		}
            		else {
HXLINE( 493)			_hx_tmp1 = false;
            		}
HXDLIN( 493)		if (_hx_tmp1) {
HXLINE( 494)			return;
            		}
HXLINE( 496)		bool _hx_tmp2;
HXDLIN( 496)		if (hx::IsNotNull( vscroll )) {
HXLINE( 496)			_hx_tmp2 = (vscroll->hitTest((event->screenX - componentOffset->x),(event->screenY - componentOffset->y)) == true);
            		}
            		else {
HXLINE( 496)			_hx_tmp2 = false;
            		}
HXDLIN( 496)		if (_hx_tmp2) {
HXLINE( 497)			return;
            		}
HXLINE( 500)		this->_hx_set__offset(HX_CTX,  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,null(),null()));
HXLINE( 501)		if (hx::IsNotNull( hscroll )) {
HXLINE( 502)			Float _hx_tmp3 = hscroll->get_pos();
HXDLIN( 502)			this->_offset->x = (_hx_tmp3 + event->screenX);
            		}
HXLINE( 504)		if (hx::IsNotNull( vscroll )) {
HXLINE( 505)			Float _hx_tmp4 = vscroll->get_pos();
HXDLIN( 505)			this->_offset->y = (_hx_tmp4 + event->screenY);
            		}
HXLINE( 508)		if ((this->_scrollview->get_scrollMode() == HX_("inertial",32,2a,a0,a6))) {
HXLINE( 509)			if (hx::IsNull( this->_inertia )) {
HXLINE( 511)				 ::haxe::ui::geom::Point _hx_tmp5 =  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 512)				 ::haxe::ui::geom::Point _hx_tmp6 =  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 513)				 ::haxe::ui::geom::Point _hx_tmp7 =  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 510)				this->_hx_set__inertia(HX_CTX,  ::Dynamic(hx::Anon_obj::Create(5)
            					->setFixed(0,HX_("target",51,f3,ec,86),_hx_tmp6)
            					->setFixed(1,HX_("timestamp",d6,d4,ce,a5),( (Float)(0) ))
            					->setFixed(2,HX_("direction",3f,62,40,10), ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,null(),null()))
            					->setFixed(3,HX_("screen",6c,3b,5d,47),_hx_tmp5)
            					->setFixed(4,HX_("amplitude",43,15,fb,69),_hx_tmp7)));
            			}
HXLINE( 519)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x = this->_scrollview->get_hscrollPos();
HXLINE( 520)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y = this->_scrollview->get_vscrollPos();
HXLINE( 521)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x = ( (Float)(0) );
HXLINE( 522)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y = ( (Float)(0) );
HXLINE( 524)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("screen",6c,3b,5d,47),hx::paccDynamic)) )->x = event->screenX;
HXLINE( 525)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("screen",6c,3b,5d,47),hx::paccDynamic)) )->y = event->screenY;
HXLINE( 527)			this->_inertia->__SetField(HX_("timestamp",d6,d4,ce,a5),::kha::Scheduler_obj::realTime(),hx::paccDynamic);
            		}
HXLINE( 530)		::haxe::ui::core::Screen_obj::get_instance()->registerEvent(HX_("mousemove",b6,6f,dc,09),this->onMouseMove_dyn(),null());
HXLINE( 531)		::haxe::ui::core::Screen_obj::get_instance()->registerEvent(HX_("mouseup",c0,0f,73,c0),this->onMouseUp_dyn(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onMouseDown,(void))

void ScrollViewEvents_obj::onMouseMove( ::haxe::ui::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_536_onMouseMove)
HXLINE( 537)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 538)		if (hx::IsNotNull( hscroll )) {
HXLINE( 539)			hscroll->set_pos((this->_offset->x - event->screenX));
HXLINE( 540)			Float distX = ::Math_obj::abs((event->screenX - this->_lastMousePos->x));
HXLINE( 542)			if ((distX > 0)) {
HXLINE( 543)				this->pauseContainerEvents();
            			}
            		}
HXLINE( 551)		 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 552)		if (hx::IsNotNull( vscroll )) {
HXLINE( 553)			vscroll->set_pos((this->_offset->y - event->screenY));
HXLINE( 554)			Float distY = ::Math_obj::abs((event->screenY - this->_lastMousePos->y));
HXLINE( 556)			if ((distY > 0)) {
HXLINE( 557)				this->pauseContainerEvents();
            			}
            		}
HXLINE( 565)		this->_hx_set__lastMousePos(HX_CTX,  ::haxe::ui::geom::Point_obj::__alloc( HX_CTX ,event->screenX,event->screenY));
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onMouseMove,(void))

void ScrollViewEvents_obj::pauseContainerEvents(){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_569_pauseContainerEvents)
HXLINE( 570)		if ((this->_containerEventsPaused == true)) {
HXLINE( 571)			return;
            		}
HXLINE( 573)		this->_containerEventsPaused = true;
HXLINE( 574)		this->onContainerEventsStatusChanged();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewEvents_obj,pauseContainerEvents,(void))

void ScrollViewEvents_obj::resumeContainerEvents(){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_577_resumeContainerEvents)
HXLINE( 578)		if ((this->_containerEventsPaused == false)) {
HXLINE( 579)			return;
            		}
HXLINE( 582)		this->_containerEventsPaused = false;
HXLINE( 583)		this->onContainerEventsStatusChanged();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewEvents_obj,resumeContainerEvents,(void))

void ScrollViewEvents_obj::onContainerEventsStatusChanged(){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_587_onContainerEventsStatusChanged)
HXLINE( 588)		this->_scrollview->findComponent(HX_("scrollview-contents",15,b7,70,a7),hx::ClassOf< ::haxe::ui::core::Component >(),true,HX_("css",c3,83,4b,00)).StaticCast<  ::haxe::ui::core::Component >()->disableInteractivity(this->_containerEventsPaused,null(),null());
HXLINE( 590)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 591)		 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 592)		bool _hx_tmp;
HXDLIN( 592)		if (hx::IsNull( hscroll )) {
HXLINE( 592)			_hx_tmp = hx::IsNotNull( vscroll );
            		}
            		else {
HXLINE( 592)			_hx_tmp = true;
            		}
HXDLIN( 592)		if (_hx_tmp) {
HXLINE( 593)			 ::haxe::ui::containers::ScrollViewBuilder builder = hx::TCast<  ::haxe::ui::containers::ScrollViewBuilder >::cast(this->_scrollview->_compositeBuilder);
HXLINE( 594)			if ((builder->autoHideScrolls == true)) {
HXLINE( 595)				if ((this->_containerEventsPaused == true)) {
HXLINE( 596)					if (hx::IsNotNull( hscroll )) {
HXLINE( 597)						hscroll->set_hidden(false);
            					}
HXLINE( 599)					if (hx::IsNotNull( vscroll )) {
HXLINE( 600)						vscroll->set_hidden(false);
            					}
            				}
            				else {
HXLINE( 603)					if (hx::IsNotNull( hscroll )) {
HXLINE( 604)						hscroll->set_hidden(true);
            					}
HXLINE( 606)					if (hx::IsNotNull( vscroll )) {
HXLINE( 607)						vscroll->set_hidden(true);
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewEvents_obj,onContainerEventsStatusChanged,(void))

void ScrollViewEvents_obj::onMouseUp( ::haxe::ui::events::MouseEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_614_onMouseUp)
HXLINE( 615)		::haxe::ui::core::Screen_obj::get_instance()->unregisterEvent(HX_("mousemove",b6,6f,dc,09),this->onMouseMove_dyn());
HXLINE( 616)		::haxe::ui::core::Screen_obj::get_instance()->unregisterEvent(HX_("mouseup",c0,0f,73,c0),this->onMouseUp_dyn());
HXLINE( 618)		if ((this->_scrollview->get_scrollMode() == HX_("inertial",32,2a,a0,a6))) {
HXLINE( 619)			Float now = ::kha::Scheduler_obj::realTime();
HXLINE( 620)			Float elapsed = ((now - ( (Float)(this->_inertia->__Field(HX_("timestamp",d6,d4,ce,a5),hx::paccDynamic)) )) * ( (Float)(1000) ));
HXLINE( 622)			Float deltaX = ::Math_obj::abs((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("screen",6c,3b,5d,47),hx::paccDynamic)) )->x - event->screenX));
HXLINE( 623)			Float deltaY = ::Math_obj::abs((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("screen",6c,3b,5d,47),hx::paccDynamic)) )->y - event->screenY));
HXLINE( 625)			Float _hx_tmp;
HXDLIN( 625)			if (((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("screen",6c,3b,5d,47),hx::paccDynamic)) )->x - event->screenX) < 0)) {
HXLINE( 625)				_hx_tmp = ( (Float)(0) );
            			}
            			else {
HXLINE( 625)				_hx_tmp = ( (Float)(1) );
            			}
HXDLIN( 625)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("direction",3f,62,40,10),hx::paccDynamic)) )->x = _hx_tmp;
HXLINE( 626)			Float velocityX = (deltaX / elapsed);
HXLINE( 627)			Float v = ((( (Float)(1000) ) * deltaX) / (1 + elapsed));
HXLINE( 628)			velocityX = ((((Float)0.8) * v) + (((Float)0.2) * velocityX));
HXLINE( 630)			Float _hx_tmp1;
HXDLIN( 630)			if (((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("screen",6c,3b,5d,47),hx::paccDynamic)) )->y - event->screenY) < 0)) {
HXLINE( 630)				_hx_tmp1 = ( (Float)(0) );
            			}
            			else {
HXLINE( 630)				_hx_tmp1 = ( (Float)(1) );
            			}
HXDLIN( 630)			( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("direction",3f,62,40,10),hx::paccDynamic)) )->y = _hx_tmp1;
HXLINE( 631)			Float velocityY = (deltaY / elapsed);
HXLINE( 632)			Float v1 = ((( (Float)(1000) ) * deltaY) / (1 + elapsed));
HXLINE( 633)			velocityY = ((((Float)0.8) * v1) + (((Float)0.2) * velocityY));
HXLINE( 635)			bool _hx_tmp2;
HXDLIN( 635)			if ((velocityX <= 75)) {
HXLINE( 635)				_hx_tmp2 = (velocityY <= 75);
            			}
            			else {
HXLINE( 635)				_hx_tmp2 = false;
            			}
HXDLIN( 635)			if (_hx_tmp2) {
HXLINE( 636)				this->dispatch( ::haxe::ui::events::ScrollEvent_obj::__alloc( HX_CTX ,HX_("scrollstop",8f,52,42,1f)));
HXLINE( 637)				::haxe::ui::Toolkit_obj::callLater(this->resumeContainerEvents_dyn());
HXLINE( 638)				return;
            			}
HXLINE( 641)			this->_inertia->__SetField(HX_("timestamp",d6,d4,ce,a5),::kha::Scheduler_obj::realTime(),hx::paccDynamic);
HXLINE( 643)			 ::haxe::ui::components::HorizontalScroll hscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 644)			if (hx::IsNotNull( hscroll )) {
HXLINE( 645)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x = (((Float)0.8) * velocityX);
            			}
HXLINE( 647)			if ((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("direction",3f,62,40,10),hx::paccDynamic)) )->x == 0)) {
HXLINE( 648)				Float _hx_tmp3 = this->_scrollview->get_hscrollPos();
HXDLIN( 648)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x = ( (Float)(::Math_obj::round((_hx_tmp3 - ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x))) );
            			}
            			else {
HXLINE( 650)				Float _hx_tmp4 = this->_scrollview->get_hscrollPos();
HXDLIN( 650)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x = ( (Float)(::Math_obj::round((_hx_tmp4 + ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x))) );
            			}
HXLINE( 653)			 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 654)			if (hx::IsNotNull( vscroll )) {
HXLINE( 655)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y = (((Float)0.8) * velocityY);
            			}
HXLINE( 657)			if ((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("direction",3f,62,40,10),hx::paccDynamic)) )->y == 0)) {
HXLINE( 658)				Float _hx_tmp5 = this->_scrollview->get_vscrollPos();
HXDLIN( 658)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y = ( (Float)(::Math_obj::round((_hx_tmp5 - ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y))) );
            			}
            			else {
HXLINE( 660)				Float _hx_tmp6 = this->_scrollview->get_vscrollPos();
HXDLIN( 660)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y = ( (Float)(::Math_obj::round((_hx_tmp6 + ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y))) );
            			}
HXLINE( 663)			bool _hx_tmp7;
HXDLIN( 663)			Float _hx_tmp8 = this->_scrollview->get_hscrollPos();
HXDLIN( 663)			if ((_hx_tmp8 == ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x)) {
HXLINE( 663)				Float _hx_tmp9 = this->_scrollview->get_vscrollPos();
HXDLIN( 663)				_hx_tmp7 = (_hx_tmp9 == ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y);
            			}
            			else {
HXLINE( 663)				_hx_tmp7 = false;
            			}
HXDLIN( 663)			if (_hx_tmp7) {
HXLINE( 664)				this->dispatch( ::haxe::ui::events::ScrollEvent_obj::__alloc( HX_CTX ,HX_("scrollstop",8f,52,42,1f)));
HXLINE( 665)				::haxe::ui::Toolkit_obj::callLater(this->resumeContainerEvents_dyn());
HXLINE( 666)				return;
            			}
HXLINE( 669)			Float _hx_tmp10 = this->_scrollview->get_hscrollPos();
HXDLIN( 669)			if ((_hx_tmp10 == ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x)) {
HXLINE( 670)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x = ( (Float)(0) );
            			}
HXLINE( 672)			Float _hx_tmp11 = this->_scrollview->get_vscrollPos();
HXDLIN( 672)			if ((_hx_tmp11 == ( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y)) {
HXLINE( 673)				( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y = ( (Float)(0) );
            			}
HXLINE( 676)			::haxe::ui::Toolkit_obj::callLater(this->inertialScroll_dyn());
            		}
            		else {
HXLINE( 678)			this->dispatch( ::haxe::ui::events::ScrollEvent_obj::__alloc( HX_CTX ,HX_("scrollstop",8f,52,42,1f)));
HXLINE( 679)			::haxe::ui::Toolkit_obj::callLater(this->resumeContainerEvents_dyn());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onMouseUp,(void))

void ScrollViewEvents_obj::inertialScroll(){
            	HX_GC_STACKFRAME(&_hx_pos_253fa99b051b5118_683_inertialScroll)
HXLINE( 684)		Float elapsed = ::kha::Scheduler_obj::realTime();
HXDLIN( 684)		Float elapsed1 = ((elapsed - ( (Float)(this->_inertia->__Field(HX_("timestamp",d6,d4,ce,a5),hx::paccDynamic)) )) * ( (Float)(1000) ));
HXLINE( 686)		bool finishedX = false;
HXLINE( 687)		if ((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x != 0)) {
HXLINE( 688)			Float deltaX = (-(( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->x) * ::Math_obj::exp((-(elapsed1) / ( (Float)(325) ))));
HXLINE( 689)			bool _hx_tmp;
HXDLIN( 689)			if (!((deltaX > ((Float)0.5)))) {
HXLINE( 689)				_hx_tmp = (deltaX < ((Float)-0.5));
            			}
            			else {
HXLINE( 689)				_hx_tmp = true;
            			}
HXDLIN( 689)			if (_hx_tmp) {
HXLINE( 690)				Float oldPos = this->_scrollview->get_hscrollPos();
HXLINE( 691)				Float newPos = ( (Float)(0) );
HXLINE( 692)				if ((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("direction",3f,62,40,10),hx::paccDynamic)) )->x == 0)) {
HXLINE( 693)					newPos = (( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x - deltaX);
            				}
            				else {
HXLINE( 695)					newPos = (( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->x + deltaX);
            				}
HXLINE( 697)				if ((newPos < 0)) {
HXLINE( 698)					newPos = ( (Float)(0) );
            				}
            				else {
HXLINE( 699)					if ((newPos > this->_scrollview->get_hscrollMax())) {
HXLINE( 700)						newPos = this->_scrollview->get_hscrollMax();
            					}
            				}
HXLINE( 702)				this->_scrollview->set_hscrollPos(newPos);
HXLINE( 703)				bool finishedX1;
HXDLIN( 703)				if ((newPos != oldPos)) {
HXLINE( 703)					finishedX1 = (newPos == 0);
            				}
            				else {
HXLINE( 703)					finishedX1 = true;
            				}
HXDLIN( 703)				if (!(finishedX1)) {
HXLINE( 703)					finishedX = (newPos == this->_scrollview->get_hscrollMax());
            				}
            				else {
HXLINE( 703)					finishedX = true;
            				}
            			}
            			else {
HXLINE( 705)				finishedX = true;
            			}
            		}
            		else {
HXLINE( 708)			finishedX = true;
            		}
HXLINE( 711)		bool finishedY = false;
HXLINE( 712)		if ((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y != 0)) {
HXLINE( 713)			Float deltaY = (-(( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("amplitude",43,15,fb,69),hx::paccDynamic)) )->y) * ::Math_obj::exp((-(elapsed1) / ( (Float)(325) ))));
HXLINE( 714)			bool _hx_tmp1;
HXDLIN( 714)			if (!((deltaY > ((Float)0.5)))) {
HXLINE( 714)				_hx_tmp1 = (deltaY < ((Float)-0.5));
            			}
            			else {
HXLINE( 714)				_hx_tmp1 = true;
            			}
HXDLIN( 714)			if (_hx_tmp1) {
HXLINE( 715)				Float oldPos1 = this->_scrollview->get_vscrollPos();
HXLINE( 716)				Float newPos1 = ( (Float)(0) );
HXLINE( 717)				if ((( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("direction",3f,62,40,10),hx::paccDynamic)) )->y == 0)) {
HXLINE( 718)					newPos1 = (( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y - deltaY);
            				}
            				else {
HXLINE( 720)					newPos1 = (( ( ::haxe::ui::geom::Point)(this->_inertia->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )->y + deltaY);
            				}
HXLINE( 722)				if ((newPos1 < 0)) {
HXLINE( 723)					newPos1 = ( (Float)(0) );
            				}
            				else {
HXLINE( 724)					if ((newPos1 > this->_scrollview->get_vscrollMax())) {
HXLINE( 725)						newPos1 = this->_scrollview->get_vscrollMax();
            					}
            				}
HXLINE( 727)				this->_scrollview->set_vscrollPos(newPos1);
HXLINE( 728)				bool finishedY1;
HXDLIN( 728)				if ((newPos1 != oldPos1)) {
HXLINE( 728)					finishedY1 = (newPos1 == 0);
            				}
            				else {
HXLINE( 728)					finishedY1 = true;
            				}
HXDLIN( 728)				if (!(finishedY1)) {
HXLINE( 728)					finishedY = (newPos1 == this->_scrollview->get_vscrollMax());
            				}
            				else {
HXLINE( 728)					finishedY = true;
            				}
            			}
            			else {
HXLINE( 730)				finishedY = true;
            			}
            		}
            		else {
HXLINE( 733)			finishedY = true;
            		}
HXLINE( 736)		bool _hx_tmp2;
HXDLIN( 736)		if ((finishedX == true)) {
HXLINE( 736)			_hx_tmp2 = (finishedY == true);
            		}
            		else {
HXLINE( 736)			_hx_tmp2 = false;
            		}
HXDLIN( 736)		if (_hx_tmp2) {
HXLINE( 737)			this->dispatch( ::haxe::ui::events::ScrollEvent_obj::__alloc( HX_CTX ,HX_("scrollstop",8f,52,42,1f)));
HXLINE( 738)			::haxe::ui::Toolkit_obj::callLater(this->resumeContainerEvents_dyn());
            		}
            		else {
HXLINE( 740)			::haxe::ui::Toolkit_obj::callLater(this->inertialScroll_dyn());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewEvents_obj,inertialScroll,(void))

void ScrollViewEvents_obj::onMouseWheel( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_744_onMouseWheel)
HXLINE( 745)		 ::haxe::ui::components::VerticalScroll vscroll = this->_scrollview->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 746)		if (hx::IsNotNull( vscroll )) {
HXLINE( 747)			event->cancel();
HXLINE( 748)			if ((event->delta > 0)) {
HXLINE( 749)				 ::haxe::ui::components::VerticalScroll _g = vscroll;
HXDLIN( 749)				_g->set_pos((_g->get_pos() - ( (Float)(50) )));
            			}
            			else {
HXLINE( 750)				if ((event->delta < 0)) {
HXLINE( 751)					 ::haxe::ui::components::VerticalScroll _g1 = vscroll;
HXDLIN( 751)					_g1->set_pos((_g1->get_pos() + 50));
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewEvents_obj,onMouseWheel,(void))

int ScrollViewEvents_obj::INERTIAL_TIME_CONSTANT;


hx::ObjectPtr< ScrollViewEvents_obj > ScrollViewEvents_obj::__new( ::haxe::ui::containers::ScrollView scrollview) {
	hx::ObjectPtr< ScrollViewEvents_obj > __this = new ScrollViewEvents_obj();
	__this->__construct(scrollview);
	return __this;
}

hx::ObjectPtr< ScrollViewEvents_obj > ScrollViewEvents_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::containers::ScrollView scrollview) {
	ScrollViewEvents_obj *__this = (ScrollViewEvents_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ScrollViewEvents_obj), true, "haxe.ui.containers.ScrollViewEvents"));
	*(void **)__this = ScrollViewEvents_obj::_hx_vtable;
	__this->__construct(scrollview);
	return __this;
}

ScrollViewEvents_obj::ScrollViewEvents_obj()
{
}

void ScrollViewEvents_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ScrollViewEvents);
	HX_MARK_MEMBER_NAME(_scrollview,"_scrollview");
	HX_MARK_MEMBER_NAME(_offset,"_offset");
	HX_MARK_MEMBER_NAME(_inertia,"_inertia");
	HX_MARK_MEMBER_NAME(_movementThreshold,"_movementThreshold");
	HX_MARK_MEMBER_NAME(_lastMousePos,"_lastMousePos");
	HX_MARK_MEMBER_NAME(_containerEventsPaused,"_containerEventsPaused");
	 ::haxe::ui::events::Events_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ScrollViewEvents_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_scrollview,"_scrollview");
	HX_VISIT_MEMBER_NAME(_offset,"_offset");
	HX_VISIT_MEMBER_NAME(_inertia,"_inertia");
	HX_VISIT_MEMBER_NAME(_movementThreshold,"_movementThreshold");
	HX_VISIT_MEMBER_NAME(_lastMousePos,"_lastMousePos");
	HX_VISIT_MEMBER_NAME(_containerEventsPaused,"_containerEventsPaused");
	 ::haxe::ui::events::Events_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ScrollViewEvents_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_offset") ) { return hx::Val( _offset ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"register") ) { return hx::Val( _hx_register_dyn() ); }
		if (HX_FIELD_EQ(inName,"_inertia") ) { return hx::Val( _inertia ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onHScroll") ) { return hx::Val( onHScroll_dyn() ); }
		if (HX_FIELD_EQ(inName,"onVScroll") ) { return hx::Val( onVScroll_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { return hx::Val( onMouseUp_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"unregister") ) { return hx::Val( unregister_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_scrollview") ) { return hx::Val( _scrollview ); }
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return hx::Val( onMouseDown_dyn() ); }
		if (HX_FIELD_EQ(inName,"onMouseMove") ) { return hx::Val( onMouseMove_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { return hx::Val( onMouseWheel_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_lastMousePos") ) { return hx::Val( _lastMousePos ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"inertialScroll") ) { return hx::Val( inertialScroll_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"onContentsResized") ) { return hx::Val( onContentsResized_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_movementThreshold") ) { return hx::Val( _movementThreshold ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"pauseContainerEvents") ) { return hx::Val( pauseContainerEvents_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"resumeContainerEvents") ) { return hx::Val( resumeContainerEvents_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_containerEventsPaused") ) { return hx::Val( _containerEventsPaused ); }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"onContainerEventsStatusChanged") ) { return hx::Val( onContainerEventsStatusChanged_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ScrollViewEvents_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_offset") ) { _hx_set__offset(HX_CTX_GET,inValue.Cast<  ::haxe::ui::geom::Point >()); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_inertia") ) { _hx_set__inertia(HX_CTX_GET,inValue.Cast<  ::Dynamic >()); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_scrollview") ) { _hx_set__scrollview(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::ScrollView >()); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_lastMousePos") ) { _hx_set__lastMousePos(HX_CTX_GET,inValue.Cast<  ::haxe::ui::geom::Point >()); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_movementThreshold") ) { _movementThreshold=inValue.Cast< int >(); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_containerEventsPaused") ) { _containerEventsPaused=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScrollViewEvents_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_scrollview",11,62,bf,f3));
	outFields->push(HX_("_offset",32,a9,b6,ce));
	outFields->push(HX_("_inertia",7b,0a,73,b6));
	outFields->push(HX_("_movementThreshold",3d,25,68,68));
	outFields->push(HX_("_lastMousePos",c4,43,1f,e8));
	outFields->push(HX_("_containerEventsPaused",c9,94,8f,05));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ScrollViewEvents_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::containers::ScrollView */ ,(int)offsetof(ScrollViewEvents_obj,_scrollview),HX_("_scrollview",11,62,bf,f3)},
	{hx::fsObject /*  ::haxe::ui::geom::Point */ ,(int)offsetof(ScrollViewEvents_obj,_offset),HX_("_offset",32,a9,b6,ce)},
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(ScrollViewEvents_obj,_inertia),HX_("_inertia",7b,0a,73,b6)},
	{hx::fsInt,(int)offsetof(ScrollViewEvents_obj,_movementThreshold),HX_("_movementThreshold",3d,25,68,68)},
	{hx::fsObject /*  ::haxe::ui::geom::Point */ ,(int)offsetof(ScrollViewEvents_obj,_lastMousePos),HX_("_lastMousePos",c4,43,1f,e8)},
	{hx::fsBool,(int)offsetof(ScrollViewEvents_obj,_containerEventsPaused),HX_("_containerEventsPaused",c9,94,8f,05)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo ScrollViewEvents_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &ScrollViewEvents_obj::INERTIAL_TIME_CONSTANT,HX_("INERTIAL_TIME_CONSTANT",09,a9,df,c0)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String ScrollViewEvents_obj_sMemberFields[] = {
	HX_("_scrollview",11,62,bf,f3),
	HX_("register",63,a6,9f,d0),
	HX_("unregister",bc,8d,63,56),
	HX_("onContentsResized",97,77,70,78),
	HX_("onHScroll",36,43,5c,38),
	HX_("onVScroll",c4,c1,88,7e),
	HX_("_offset",32,a9,b6,ce),
	HX_("_inertia",7b,0a,73,b6),
	HX_("onMouseDown",08,94,05,11),
	HX_("_movementThreshold",3d,25,68,68),
	HX_("_lastMousePos",c4,43,1f,e8),
	HX_("onMouseMove",b7,7e,f8,16),
	HX_("_containerEventsPaused",c9,94,8f,05),
	HX_("pauseContainerEvents",e4,94,a7,e8),
	HX_("resumeContainerEvents",0d,a8,dc,e9),
	HX_("onContainerEventsStatusChanged",07,de,a0,19),
	HX_("onMouseUp",81,ac,1d,98),
	HX_("inertialScroll",df,27,46,7f),
	HX_("onMouseWheel",35,ca,ca,bf),
	::String(null()) };

static void ScrollViewEvents_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ScrollViewEvents_obj::INERTIAL_TIME_CONSTANT,"INERTIAL_TIME_CONSTANT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ScrollViewEvents_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ScrollViewEvents_obj::INERTIAL_TIME_CONSTANT,"INERTIAL_TIME_CONSTANT");
};

#endif

hx::Class ScrollViewEvents_obj::__mClass;

static ::String ScrollViewEvents_obj_sStaticFields[] = {
	HX_("INERTIAL_TIME_CONSTANT",09,a9,df,c0),
	::String(null())
};

void ScrollViewEvents_obj::__register()
{
	ScrollViewEvents_obj _hx_dummy;
	ScrollViewEvents_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.ScrollViewEvents",f5,7b,7f,64);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ScrollViewEvents_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ScrollViewEvents_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ScrollViewEvents_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ScrollViewEvents_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ScrollViewEvents_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScrollViewEvents_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScrollViewEvents_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ScrollViewEvents_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_253fa99b051b5118_478_boot)
HXDLIN( 478)		INERTIAL_TIME_CONSTANT = 325;
            	}
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
