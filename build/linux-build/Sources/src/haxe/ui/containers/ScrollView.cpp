// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviour
#include <hxinc/haxe/ui/behaviours/Behaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviours
#include <hxinc/haxe/ui/behaviours/Behaviours.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DataBehaviour
#include <hxinc/haxe/ui/behaviours/DataBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DefaultBehaviour
#include <hxinc/haxe/ui/behaviours/DefaultBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_ValueBehaviour
#include <hxinc/haxe/ui/behaviours/ValueBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_binding_BindingManager
#include <hxinc/haxe/ui/binding/BindingManager.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollView
#include <hxinc/haxe/ui/containers/ScrollView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollViewBuilder
#include <hxinc/haxe/ui/containers/ScrollViewBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollViewEvents
#include <hxinc/haxe/ui/containers/ScrollViewEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_ContentHeight
#include <hxinc/haxe/ui/containers/_ScrollView/ContentHeight.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_ContentLayoutName
#include <hxinc/haxe/ui/containers/_ScrollView/ContentLayoutName.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_ContentWidth
#include <hxinc/haxe/ui/containers/_ScrollView/ContentWidth.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_HScrollMax
#include <hxinc/haxe/ui/containers/_ScrollView/HScrollMax.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_HScrollPageSize
#include <hxinc/haxe/ui/containers/_ScrollView/HScrollPageSize.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_HScrollPos
#include <hxinc/haxe/ui/containers/_ScrollView/HScrollPos.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_PercentContentHeight
#include <hxinc/haxe/ui/containers/_ScrollView/PercentContentHeight.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_PercentContentWidth
#include <hxinc/haxe/ui/containers/_ScrollView/PercentContentWidth.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_ScrollModeBehaviour
#include <hxinc/haxe/ui/containers/_ScrollView/ScrollModeBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_VScrollMax
#include <hxinc/haxe/ui/containers/_ScrollView/VScrollMax.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_VScrollPageSize
#include <hxinc/haxe/ui/containers/_ScrollView/VScrollPageSize.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_VScrollPos
#include <hxinc/haxe/ui/containers/_ScrollView/VScrollPos.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ScrollView_Virtual
#include <hxinc/haxe/ui/containers/_ScrollView/Virtual.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_DefaultLayout
#include <hxinc/haxe/ui/layouts/DefaultLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <hxinc/haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <hxinc/haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ScrollViewLayout
#include <hxinc/haxe/ui/layouts/ScrollViewLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d194136255627609_26_new,"haxe.ui.containers.ScrollView","new",0x3c5772ae,"haxe.ui.containers.ScrollView.new","haxe/ui/containers/ScrollView.hx",26,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_d194136255627609_47_validateComponentInternal,"haxe.ui.containers.ScrollView","validateComponentInternal",0xd9d2cc72,"haxe.ui.containers.ScrollView.validateComponentInternal","haxe/ui/containers/ScrollView.hx",47,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_d194136255627609_64_ensureVisible,"haxe.ui.containers.ScrollView","ensureVisible",0xfd69ce22,"haxe.ui.containers.ScrollView.ensureVisible","haxe/ui/containers/ScrollView.hx",64,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_72_registerComposite,"haxe.ui.containers.ScrollView","registerComposite",0xb985b3f2,"haxe.ui.containers.ScrollView.registerComposite","haxe/ui/macros/Macros.hx",72,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_314_registerBehaviours,"haxe.ui.containers.ScrollView","registerBehaviours",0x1e76cd4b,"haxe.ui.containers.ScrollView.registerBehaviours","haxe/ui/macros/Macros.hx",314,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_virtual,"haxe.ui.containers.ScrollView","get_virtual",0x1e0f9e70,"haxe.ui.containers.ScrollView.get_virtual","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_virtual,"haxe.ui.containers.ScrollView","set_virtual",0x287ca57c,"haxe.ui.containers.ScrollView.set_virtual","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_contentLayoutName,"haxe.ui.containers.ScrollView","get_contentLayoutName",0x095ded53,"haxe.ui.containers.ScrollView.get_contentLayoutName","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_contentLayoutName,"haxe.ui.containers.ScrollView","set_contentLayoutName",0x5d66bb5f,"haxe.ui.containers.ScrollView.set_contentLayoutName","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_contentWidth,"haxe.ui.containers.ScrollView","get_contentWidth",0xf33e7b88,"haxe.ui.containers.ScrollView.get_contentWidth","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_contentWidth,"haxe.ui.containers.ScrollView","set_contentWidth",0x498068fc,"haxe.ui.containers.ScrollView.set_contentWidth","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_percentContentWidth,"haxe.ui.containers.ScrollView","get_percentContentWidth",0x62451857,"haxe.ui.containers.ScrollView.get_percentContentWidth","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_percentContentWidth,"haxe.ui.containers.ScrollView","set_percentContentWidth",0x64a68163,"haxe.ui.containers.ScrollView.set_percentContentWidth","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_contentHeight,"haxe.ui.containers.ScrollView","get_contentHeight",0x99bd1425,"haxe.ui.containers.ScrollView.get_contentHeight","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_contentHeight,"haxe.ui.containers.ScrollView","set_contentHeight",0xbd2aec31,"haxe.ui.containers.ScrollView.set_contentHeight","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_percentContentHeight,"haxe.ui.containers.ScrollView","get_percentContentHeight",0x507fac76,"haxe.ui.containers.ScrollView.get_percentContentHeight","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_percentContentHeight,"haxe.ui.containers.ScrollView","set_percentContentHeight",0x635a2dea,"haxe.ui.containers.ScrollView.set_percentContentHeight","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_hscrollPos,"haxe.ui.containers.ScrollView","get_hscrollPos",0x8acc42da,"haxe.ui.containers.ScrollView.get_hscrollPos","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_hscrollPos,"haxe.ui.containers.ScrollView","set_hscrollPos",0xaaec2b4e,"haxe.ui.containers.ScrollView.set_hscrollPos","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_hscrollMax,"haxe.ui.containers.ScrollView","get_hscrollMax",0x8ac9efea,"haxe.ui.containers.ScrollView.get_hscrollMax","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_hscrollMax,"haxe.ui.containers.ScrollView","set_hscrollMax",0xaae9d85e,"haxe.ui.containers.ScrollView.set_hscrollMax","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_hscrollPageSize,"haxe.ui.containers.ScrollView","get_hscrollPageSize",0xd581b7aa,"haxe.ui.containers.ScrollView.get_hscrollPageSize","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_hscrollPageSize,"haxe.ui.containers.ScrollView","set_hscrollPageSize",0x121eaab6,"haxe.ui.containers.ScrollView.set_hscrollPageSize","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_vscrollPos,"haxe.ui.containers.ScrollView","get_vscrollPos",0x0eded10c,"haxe.ui.containers.ScrollView.get_vscrollPos","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_vscrollPos,"haxe.ui.containers.ScrollView","set_vscrollPos",0x2efeb980,"haxe.ui.containers.ScrollView.set_vscrollPos","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_vscrollMax,"haxe.ui.containers.ScrollView","get_vscrollMax",0x0edc7e1c,"haxe.ui.containers.ScrollView.get_vscrollMax","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_vscrollMax,"haxe.ui.containers.ScrollView","set_vscrollMax",0x2efc6690,"haxe.ui.containers.ScrollView.set_vscrollMax","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_vscrollPageSize,"haxe.ui.containers.ScrollView","get_vscrollPageSize",0xfb447438,"haxe.ui.containers.ScrollView.get_vscrollPageSize","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_vscrollPageSize,"haxe.ui.containers.ScrollView","set_vscrollPageSize",0x37e16744,"haxe.ui.containers.ScrollView.set_vscrollPageSize","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_331_get_scrollMode,"haxe.ui.containers.ScrollView","get_scrollMode",0x34a4eecb,"haxe.ui.containers.ScrollView.get_scrollMode","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_357_set_scrollMode,"haxe.ui.containers.ScrollView","set_scrollMode",0x54c4d73f,"haxe.ui.containers.ScrollView.set_scrollMode","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_78ca0428d63f675c_521_cloneComponent,"haxe.ui.containers.ScrollView","cloneComponent",0xdee5ee12,"haxe.ui.containers.ScrollView.cloneComponent","haxe/ui/macros/helpers/ClassBuilder.hx",521,0x8cdaad7b)
HX_LOCAL_STACK_FRAME(_hx_pos_e5bd07947d78320d_302_self,"haxe.ui.containers.ScrollView","self",0x937aed7e,"haxe.ui.containers.ScrollView.self","haxe/ui/macros/Macros.hx",302,0x27866361)
namespace haxe{
namespace ui{
namespace containers{

void ScrollView_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d194136255627609_26_new)
HXDLIN(  26)		super::__construct();
            	}

Dynamic ScrollView_obj::__CreateEmpty() { return new ScrollView_obj; }

void *ScrollView_obj::_hx_vtable = 0;

Dynamic ScrollView_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ScrollView_obj > _hx_result = new ScrollView_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ScrollView_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4a06d0bc) {
		if (inClassId<=(int)0x23af8dfd) {
			if (inClassId<=(int)0x1c7b87fe) {
				if (inClassId<=(int)0x0fddceef) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0fddceef;
				} else {
					return inClassId==(int)0x1c7b87fe;
				}
			} else {
				return inClassId==(int)0x23af8dfd;
			}
		} else {
			if (inClassId<=(int)0x324697fd) {
				return inClassId==(int)0x2a04b446 || inClassId==(int)0x324697fd;
			} else {
				return inClassId==(int)0x4a06d0bc;
			}
		}
	} else {
		if (inClassId<=(int)0x7ee2d869) {
			if (inClassId<=(int)0x7140e8dc) {
				return inClassId==(int)0x4eb0678b || inClassId==(int)0x7140e8dc;
			} else {
				return inClassId==(int)0x7ee2d869;
			}
		} else {
			return inClassId==(int)0x7f63f3f1 || inClassId==(int)0x7ff0cb0e;
		}
	}
}

void ScrollView_obj::validateComponentInternal(hx::Null< bool >  __o_nextFrame){
            		bool nextFrame = __o_nextFrame.Default(true);
            	HX_STACKFRAME(&_hx_pos_d194136255627609_47_validateComponentInternal)
HXLINE(  48)		if (hx::IsEq( this->get_native(),true )) {
HXLINE(  49)			this->super::validateComponentInternal(nextFrame);
HXLINE(  50)			return;
            		}
HXLINE(  52)		bool scrollInvalid = this->isComponentInvalid(HX_("scroll",0d,d8,64,47));
HXLINE(  53)		bool layoutInvalid = this->isComponentInvalid(HX_("layout",aa,ae,b8,58));
HXLINE(  55)		this->super::validateComponentInternal(nextFrame);
HXLINE(  57)		bool _hx_tmp;
HXDLIN(  57)		if (!(scrollInvalid)) {
HXLINE(  57)			_hx_tmp = layoutInvalid;
            		}
            		else {
HXLINE(  57)			_hx_tmp = true;
            		}
HXDLIN(  57)		if (_hx_tmp) {
HXLINE(  58)			hx::TCast<  ::haxe::ui::containers::ScrollViewBuilder >::cast(this->_compositeBuilder)->checkScrolls();
HXLINE(  59)			hx::TCast<  ::haxe::ui::containers::ScrollViewBuilder >::cast(this->_compositeBuilder)->updateScrollRect();
            		}
            	}


void ScrollView_obj::ensureVisible( ::haxe::ui::core::Component component){
            	HX_STACKFRAME(&_hx_pos_d194136255627609_64_ensureVisible)
HXDLIN(  64)		return;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,ensureVisible,(void))

void ScrollView_obj::registerComposite(){
            	HX_GC_STACKFRAME(&_hx_pos_e5bd07947d78320d_72_registerComposite)
HXLINE(  73)		this->super::registerComposite();
HXLINE(  81)		this->_hx_set__internalEventsClass(HX_CTX, hx::ClassOf< ::haxe::ui::containers::ScrollViewEvents >());
HXLINE(  85)		this->_hx_set__compositeBuilderClass(HX_CTX, hx::ClassOf< ::haxe::ui::containers::ScrollViewBuilder >());
HXLINE(  89)		this->_hx_set__defaultLayoutClass(HX_CTX, hx::ClassOf< ::haxe::ui::layouts::ScrollViewLayout >());
            	}


void ScrollView_obj::registerBehaviours(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_314_registerBehaviours)
HXLINE( 315)		this->super::registerBehaviours();
HXLINE( 372)		this->behaviours->_hx_register(HX_("virtual",0b,9e,11,17),hx::ClassOf< ::haxe::ui::containers::_ScrollView::Virtual >(),null());
HXLINE( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 376)		_hx_tmp->_hx_register(HX_("contentLayoutName",ae,9c,1f,41),hx::ClassOf< ::haxe::ui::containers::_ScrollView::ContentLayoutName >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(HX_("vertical",76,bc,15,6a)));
HXLINE( 372)		this->behaviours->_hx_register(HX_("contentWidth",0d,0a,f1,b0),hx::ClassOf< ::haxe::ui::containers::_ScrollView::ContentWidth >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("percentContentWidth",72,94,55,51),hx::ClassOf< ::haxe::ui::containers::_ScrollView::PercentContentWidth >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("contentHeight",00,3a,47,d8),hx::ClassOf< ::haxe::ui::containers::_ScrollView::ContentHeight >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("percentContentHeight",fb,c7,db,8f),hx::ClassOf< ::haxe::ui::containers::_ScrollView::PercentContentHeight >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("hscrollPos",1f,b6,47,5c),hx::ClassOf< ::haxe::ui::containers::_ScrollView::HScrollPos >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("hscrollMax",2f,63,45,5c),hx::ClassOf< ::haxe::ui::containers::_ScrollView::HScrollMax >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("hscrollPageSize",45,4a,45,67),hx::ClassOf< ::haxe::ui::containers::_ScrollView::HScrollPageSize >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("vscrollPos",51,44,5a,e0),hx::ClassOf< ::haxe::ui::containers::_ScrollView::VScrollPos >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("vscrollMax",61,f1,57,e0),hx::ClassOf< ::haxe::ui::containers::_ScrollView::VScrollMax >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("vscrollPageSize",d3,06,08,8d),hx::ClassOf< ::haxe::ui::containers::_ScrollView::VScrollPageSize >(),null());
HXLINE( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp1 = this->behaviours;
HXDLIN( 376)		_hx_tmp1->_hx_register(HX_("scrollMode",10,62,20,06),hx::ClassOf< ::haxe::ui::containers::_ScrollView::ScrollModeBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(HX_("drag",f4,2b,70,42)));
            	}


bool ScrollView_obj::get_virtual(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_virtual)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("virtual",0b,9e,11,17)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_virtual,return )

bool ScrollView_obj::set_virtual(bool value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_virtual)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("virtual",0b,9e,11,17),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("virtual",0b,9e,11,17));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_virtual,return )

::String ScrollView_obj::get_contentLayoutName(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_contentLayoutName)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this->behaviours->get(HX_("contentLayoutName",ae,9c,1f,41)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_contentLayoutName,return )

::String ScrollView_obj::set_contentLayoutName(::String value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_contentLayoutName)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("contentLayoutName",ae,9c,1f,41),::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("contentLayoutName",ae,9c,1f,41));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_contentLayoutName,return )

Float ScrollView_obj::get_contentWidth(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_contentWidth)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("contentWidth",0d,0a,f1,b0)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_contentWidth,return )

Float ScrollView_obj::set_contentWidth(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_contentWidth)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("contentWidth",0d,0a,f1,b0),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("contentWidth",0d,0a,f1,b0));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_contentWidth,return )

Float ScrollView_obj::get_percentContentWidth(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_percentContentWidth)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("percentContentWidth",72,94,55,51)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_percentContentWidth,return )

Float ScrollView_obj::set_percentContentWidth(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_percentContentWidth)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("percentContentWidth",72,94,55,51),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("percentContentWidth",72,94,55,51));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_percentContentWidth,return )

Float ScrollView_obj::get_contentHeight(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_contentHeight)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("contentHeight",00,3a,47,d8)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_contentHeight,return )

Float ScrollView_obj::set_contentHeight(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_contentHeight)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("contentHeight",00,3a,47,d8),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("contentHeight",00,3a,47,d8));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_contentHeight,return )

Float ScrollView_obj::get_percentContentHeight(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_percentContentHeight)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("percentContentHeight",fb,c7,db,8f)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_percentContentHeight,return )

Float ScrollView_obj::set_percentContentHeight(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_percentContentHeight)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("percentContentHeight",fb,c7,db,8f),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("percentContentHeight",fb,c7,db,8f));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_percentContentHeight,return )

Float ScrollView_obj::get_hscrollPos(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_hscrollPos)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("hscrollPos",1f,b6,47,5c)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_hscrollPos,return )

Float ScrollView_obj::set_hscrollPos(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_hscrollPos)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("hscrollPos",1f,b6,47,5c),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("hscrollPos",1f,b6,47,5c));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_hscrollPos,return )

Float ScrollView_obj::get_hscrollMax(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_hscrollMax)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("hscrollMax",2f,63,45,5c)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_hscrollMax,return )

Float ScrollView_obj::set_hscrollMax(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_hscrollMax)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("hscrollMax",2f,63,45,5c),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("hscrollMax",2f,63,45,5c));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_hscrollMax,return )

Float ScrollView_obj::get_hscrollPageSize(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_hscrollPageSize)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("hscrollPageSize",45,4a,45,67)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_hscrollPageSize,return )

Float ScrollView_obj::set_hscrollPageSize(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_hscrollPageSize)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("hscrollPageSize",45,4a,45,67),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("hscrollPageSize",45,4a,45,67));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_hscrollPageSize,return )

Float ScrollView_obj::get_vscrollPos(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_vscrollPos)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("vscrollPos",51,44,5a,e0)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_vscrollPos,return )

Float ScrollView_obj::set_vscrollPos(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_vscrollPos)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("vscrollPos",51,44,5a,e0),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("vscrollPos",51,44,5a,e0));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_vscrollPos,return )

Float ScrollView_obj::get_vscrollMax(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_vscrollMax)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("vscrollMax",61,f1,57,e0)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_vscrollMax,return )

Float ScrollView_obj::set_vscrollMax(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_vscrollMax)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("vscrollMax",61,f1,57,e0),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("vscrollMax",61,f1,57,e0));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_vscrollMax,return )

Float ScrollView_obj::get_vscrollPageSize(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_vscrollPageSize)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("vscrollPageSize",d3,06,08,8d)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_vscrollPageSize,return )

Float ScrollView_obj::set_vscrollPageSize(Float value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_vscrollPageSize)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("vscrollPageSize",d3,06,08,8d),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("vscrollPageSize",d3,06,08,8d));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_vscrollPageSize,return )

::String ScrollView_obj::get_scrollMode(){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_331_get_scrollMode)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this->behaviours->get(HX_("scrollMode",10,62,20,06)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollView_obj,get_scrollMode,return )

::String ScrollView_obj::set_scrollMode(::String value){
            	HX_STACKFRAME(&_hx_pos_e5bd07947d78320d_357_set_scrollMode)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("scrollMode",10,62,20,06),::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("scrollMode",10,62,20,06));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollView_obj,set_scrollMode,return )

 ::haxe::ui::core::ComponentContainer ScrollView_obj::cloneComponent(){
            	HX_STACKFRAME(&_hx_pos_78ca0428d63f675c_521_cloneComponent)
HXLINE( 267)		 ::haxe::ui::containers::ScrollView c = ( ( ::haxe::ui::containers::ScrollView)(this->super::cloneComponent()) );
HXLINE( 287)		::Array< ::Dynamic> _hx_tmp;
HXDLIN( 287)		if (hx::IsNull( this->_children )) {
HXLINE( 287)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp = this->_children;
            		}
HXDLIN( 287)		::Array< ::Dynamic> _hx_tmp1;
HXDLIN( 287)		if (hx::IsNull( c->_children )) {
HXLINE( 287)			_hx_tmp1 = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp1 = c->_children;
            		}
HXDLIN( 287)		if ((_hx_tmp->length != _hx_tmp1->length)) {
HXLINE( 288)			int _g = 0;
HXDLIN( 288)			::Array< ::Dynamic> _g1;
HXDLIN( 288)			if (hx::IsNull( this->_children )) {
HXLINE( 288)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 288)				_g1 = this->_children;
            			}
HXDLIN( 288)			while((_g < _g1->length)){
HXLINE( 288)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 288)				_g = (_g + 1);
HXLINE( 289)				c->addComponent(Dynamic( child->cloneComponent()).StaticCast<  ::haxe::ui::core::Component >());
            			}
            		}
HXLINE( 293)		return c;
            	}


 ::haxe::ui::core::ComponentContainer ScrollView_obj::self(){
            	HX_GC_STACKFRAME(&_hx_pos_e5bd07947d78320d_302_self)
HXDLIN( 302)		return  ::haxe::ui::containers::ScrollView_obj::__alloc( HX_CTX );
            	}



hx::ObjectPtr< ScrollView_obj > ScrollView_obj::__new() {
	hx::ObjectPtr< ScrollView_obj > __this = new ScrollView_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ScrollView_obj > ScrollView_obj::__alloc(hx::Ctx *_hx_ctx) {
	ScrollView_obj *__this = (ScrollView_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ScrollView_obj), true, "haxe.ui.containers.ScrollView"));
	*(void **)__this = ScrollView_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ScrollView_obj::ScrollView_obj()
{
}

hx::Val ScrollView_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { return hx::Val( self_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"virtual") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_virtual() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"hscrollPos") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_hscrollPos() ); }
		if (HX_FIELD_EQ(inName,"hscrollMax") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_hscrollMax() ); }
		if (HX_FIELD_EQ(inName,"vscrollPos") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_vscrollPos() ); }
		if (HX_FIELD_EQ(inName,"vscrollMax") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_vscrollMax() ); }
		if (HX_FIELD_EQ(inName,"scrollMode") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_scrollMode() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_virtual") ) { return hx::Val( get_virtual_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_virtual") ) { return hx::Val( set_virtual_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"contentWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_contentWidth() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"ensureVisible") ) { return hx::Val( ensureVisible_dyn() ); }
		if (HX_FIELD_EQ(inName,"contentHeight") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_contentHeight() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"get_hscrollPos") ) { return hx::Val( get_hscrollPos_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_hscrollPos") ) { return hx::Val( set_hscrollPos_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_hscrollMax") ) { return hx::Val( get_hscrollMax_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_hscrollMax") ) { return hx::Val( set_hscrollMax_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vscrollPos") ) { return hx::Val( get_vscrollPos_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vscrollPos") ) { return hx::Val( set_vscrollPos_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vscrollMax") ) { return hx::Val( get_vscrollMax_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vscrollMax") ) { return hx::Val( set_vscrollMax_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_scrollMode") ) { return hx::Val( get_scrollMode_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_scrollMode") ) { return hx::Val( set_scrollMode_dyn() ); }
		if (HX_FIELD_EQ(inName,"cloneComponent") ) { return hx::Val( cloneComponent_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"hscrollPageSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_hscrollPageSize() ); }
		if (HX_FIELD_EQ(inName,"vscrollPageSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_vscrollPageSize() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_contentWidth") ) { return hx::Val( get_contentWidth_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_contentWidth") ) { return hx::Val( set_contentWidth_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"registerComposite") ) { return hx::Val( registerComposite_dyn() ); }
		if (HX_FIELD_EQ(inName,"contentLayoutName") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_contentLayoutName() ); }
		if (HX_FIELD_EQ(inName,"get_contentHeight") ) { return hx::Val( get_contentHeight_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_contentHeight") ) { return hx::Val( set_contentHeight_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"registerBehaviours") ) { return hx::Val( registerBehaviours_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"percentContentWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_percentContentWidth() ); }
		if (HX_FIELD_EQ(inName,"get_hscrollPageSize") ) { return hx::Val( get_hscrollPageSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_hscrollPageSize") ) { return hx::Val( set_hscrollPageSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_vscrollPageSize") ) { return hx::Val( get_vscrollPageSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_vscrollPageSize") ) { return hx::Val( set_vscrollPageSize_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"percentContentHeight") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_percentContentHeight() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_contentLayoutName") ) { return hx::Val( get_contentLayoutName_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_contentLayoutName") ) { return hx::Val( set_contentLayoutName_dyn() ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"get_percentContentWidth") ) { return hx::Val( get_percentContentWidth_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_percentContentWidth") ) { return hx::Val( set_percentContentWidth_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"get_percentContentHeight") ) { return hx::Val( get_percentContentHeight_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_percentContentHeight") ) { return hx::Val( set_percentContentHeight_dyn() ); }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"validateComponentInternal") ) { return hx::Val( validateComponentInternal_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ScrollView_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"virtual") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_virtual(inValue.Cast< bool >()) ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"hscrollPos") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_hscrollPos(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"hscrollMax") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_hscrollMax(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"vscrollPos") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vscrollPos(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"vscrollMax") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vscrollMax(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"scrollMode") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_scrollMode(inValue.Cast< ::String >()) ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"contentWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_contentWidth(inValue.Cast< Float >()) ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"contentHeight") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_contentHeight(inValue.Cast< Float >()) ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"hscrollPageSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_hscrollPageSize(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"vscrollPageSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_vscrollPageSize(inValue.Cast< Float >()) ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"contentLayoutName") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_contentLayoutName(inValue.Cast< ::String >()) ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"percentContentWidth") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_percentContentWidth(inValue.Cast< Float >()) ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"percentContentHeight") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_percentContentHeight(inValue.Cast< Float >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScrollView_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("virtual",0b,9e,11,17));
	outFields->push(HX_("contentLayoutName",ae,9c,1f,41));
	outFields->push(HX_("contentWidth",0d,0a,f1,b0));
	outFields->push(HX_("percentContentWidth",72,94,55,51));
	outFields->push(HX_("contentHeight",00,3a,47,d8));
	outFields->push(HX_("percentContentHeight",fb,c7,db,8f));
	outFields->push(HX_("hscrollPos",1f,b6,47,5c));
	outFields->push(HX_("hscrollMax",2f,63,45,5c));
	outFields->push(HX_("hscrollPageSize",45,4a,45,67));
	outFields->push(HX_("vscrollPos",51,44,5a,e0));
	outFields->push(HX_("vscrollMax",61,f1,57,e0));
	outFields->push(HX_("vscrollPageSize",d3,06,08,8d));
	outFields->push(HX_("scrollMode",10,62,20,06));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *ScrollView_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ScrollView_obj_sStaticStorageInfo = 0;
#endif

static ::String ScrollView_obj_sMemberFields[] = {
	HX_("validateComponentInternal",a4,7f,0c,11),
	HX_("ensureVisible",54,fe,02,7c),
	HX_("registerComposite",24,e5,7f,fe),
	HX_("registerBehaviours",d9,a7,67,34),
	HX_("get_virtual",22,fe,0b,9d),
	HX_("set_virtual",2e,05,79,a7),
	HX_("get_contentLayoutName",85,9f,cd,bf),
	HX_("set_contentLayoutName",91,6d,d6,13),
	HX_("get_contentWidth",96,f6,8f,b5),
	HX_("set_contentWidth",0a,e4,d1,0b),
	HX_("get_percentContentWidth",09,3b,ab,59),
	HX_("set_percentContentWidth",15,a4,0c,5c),
	HX_("get_contentHeight",57,45,b7,de),
	HX_("set_contentHeight",63,1d,25,02),
	HX_("get_percentContentHeight",84,e5,77,d2),
	HX_("set_percentContentHeight",f8,66,52,e5),
	HX_("get_hscrollPos",68,3e,3d,d2),
	HX_("set_hscrollPos",dc,26,5d,f2),
	HX_("get_hscrollMax",78,eb,3a,d2),
	HX_("set_hscrollMax",ec,d3,5a,f2),
	HX_("get_hscrollPageSize",5c,19,50,f2),
	HX_("set_hscrollPageSize",68,0c,ed,2e),
	HX_("get_vscrollPos",9a,cc,4f,56),
	HX_("set_vscrollPos",0e,b5,6f,76),
	HX_("get_vscrollMax",aa,79,4d,56),
	HX_("set_vscrollMax",1e,62,6d,76),
	HX_("get_vscrollPageSize",ea,d5,12,18),
	HX_("set_vscrollPageSize",f6,c8,af,54),
	HX_("get_scrollMode",59,ea,15,7c),
	HX_("set_scrollMode",cd,d2,35,9c),
	HX_("cloneComponent",a0,e9,56,26),
	HX_("self",8c,8b,50,4c),
	::String(null()) };

hx::Class ScrollView_obj::__mClass;

void ScrollView_obj::__register()
{
	ScrollView_obj _hx_dummy;
	ScrollView_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.ScrollView",bc,43,e9,dc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ScrollView_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ScrollView_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScrollView_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScrollView_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
