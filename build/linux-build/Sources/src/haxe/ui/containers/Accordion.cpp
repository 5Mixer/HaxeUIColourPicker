// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviour
#include <hxinc/haxe/ui/behaviours/Behaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviours
#include <hxinc/haxe/ui/behaviours/Behaviours.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DefaultBehaviour
#include <hxinc/haxe/ui/behaviours/DefaultBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_binding_BindingManager
#include <hxinc/haxe/ui/binding/BindingManager.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Accordion
#include <hxinc/haxe/ui/containers/Accordion.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_VBox
#include <hxinc/haxe/ui/containers/VBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__Accordion_Builder
#include <hxinc/haxe/ui/containers/_Accordion/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__Accordion_Events
#include <hxinc/haxe/ui/containers/_Accordion/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__Accordion_PageIndex
#include <hxinc/haxe/ui/containers/_Accordion/PageIndex.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7a3ba52061140206_12_new,"haxe.ui.containers.Accordion","new",0x4eb4f310,"haxe.ui.containers.Accordion.new","haxe/ui/containers/Accordion.hx",12,0xcdb43941)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_72_registerComposite,"haxe.ui.containers.Accordion","registerComposite",0x2cd65bd4,"haxe.ui.containers.Accordion.registerComposite","haxe/ui/macros/Macros.hx",72,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_314_registerBehaviours,"haxe.ui.containers.Accordion","registerBehaviours",0x91b90b29,"haxe.ui.containers.Accordion.registerBehaviours","haxe/ui/macros/Macros.hx",314,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_331_get_pageIndex,"haxe.ui.containers.Accordion","get_pageIndex",0xba58a4ca,"haxe.ui.containers.Accordion.get_pageIndex","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_357_set_pageIndex,"haxe.ui.containers.Accordion","set_pageIndex",0xff5e86d6,"haxe.ui.containers.Accordion.set_pageIndex","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_331_get_selectedPage,"haxe.ui.containers.Accordion","get_selectedPage",0x44c5d623,"haxe.ui.containers.Accordion.get_selectedPage","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_357_set_selectedPage,"haxe.ui.containers.Accordion","set_selectedPage",0x9b07c397,"haxe.ui.containers.Accordion.set_selectedPage","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_c10f6db91498f470_521_cloneComponent,"haxe.ui.containers.Accordion","cloneComponent",0xc1c064f0,"haxe.ui.containers.Accordion.cloneComponent","haxe/ui/macros/helpers/ClassBuilder.hx",521,0x8cdaad7b)
HX_LOCAL_STACK_FRAME(_hx_pos_07d692a990a58ec4_302_self,"haxe.ui.containers.Accordion","self",0x92edc2dc,"haxe.ui.containers.Accordion.self","haxe/ui/macros/Macros.hx",302,0x27866361)
namespace haxe{
namespace ui{
namespace containers{

void Accordion_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_7a3ba52061140206_12_new)
HXDLIN(  12)		super::__construct();
            	}

Dynamic Accordion_obj::__CreateEmpty() { return new Accordion_obj; }

void *Accordion_obj::_hx_vtable = 0;

Dynamic Accordion_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Accordion_obj > _hx_result = new Accordion_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Accordion_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4a06d0bc) {
		if (inClassId<=(int)0x2a04b446) {
			if (inClassId<=(int)0x0fddceef) {
				if (inClassId<=(int)0x091af94d) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x091af94d;
				} else {
					return inClassId==(int)0x0fddceef;
				}
			} else {
				return inClassId==(int)0x23af8dfd || inClassId==(int)0x2a04b446;
			}
		} else {
			if (inClassId<=(int)0x41081cbb) {
				return inClassId==(int)0x324697fd || inClassId==(int)0x41081cbb;
			} else {
				return inClassId==(int)0x4a06d0bc;
			}
		}
	} else {
		if (inClassId<=(int)0x7f3fb358) {
			if (inClassId<=(int)0x7ee2d869) {
				if (inClassId<=(int)0x7140e8dc) {
					return inClassId==(int)0x4eb0678b || inClassId==(int)0x7140e8dc;
				} else {
					return inClassId==(int)0x7ee2d869;
				}
			} else {
				return inClassId==(int)0x7f3fb358;
			}
		} else {
			return inClassId==(int)0x7f63f3f1 || inClassId==(int)0x7ff0cb0e;
		}
	}
}

void Accordion_obj::registerComposite(){
            	HX_GC_STACKFRAME(&_hx_pos_07d692a990a58ec4_72_registerComposite)
HXLINE(  73)		this->super::registerComposite();
HXLINE(  81)		this->_hx_set__internalEventsClass(HX_CTX, hx::ClassOf< ::haxe::ui::containers::_Accordion::Events >());
HXLINE(  85)		this->_hx_set__compositeBuilderClass(HX_CTX, hx::ClassOf< ::haxe::ui::containers::_Accordion::Builder >());
            	}


void Accordion_obj::registerBehaviours(){
            	HX_STACKFRAME(&_hx_pos_07d692a990a58ec4_314_registerBehaviours)
HXLINE( 315)		this->super::registerBehaviours();
HXLINE( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 376)		_hx_tmp->_hx_register(HX_("pageIndex",43,72,2b,64),hx::ClassOf< ::haxe::ui::containers::_Accordion::PageIndex >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(-1) )));
HXLINE( 372)		this->behaviours->_hx_register(HX_("selectedPage",4a,fa,eb,da),hx::ClassOf< ::haxe::ui::behaviours::DefaultBehaviour >(),null());
            	}


int Accordion_obj::get_pageIndex(){
            	HX_STACKFRAME(&_hx_pos_07d692a990a58ec4_331_get_pageIndex)
HXDLIN( 331)		return ( (int)(::haxe::ui::util::_Variant::Variant_Impl__obj::toInt(this->behaviours->get(HX_("pageIndex",43,72,2b,64)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Accordion_obj,get_pageIndex,return )

int Accordion_obj::set_pageIndex(int value){
            	HX_STACKFRAME(&_hx_pos_07d692a990a58ec4_357_set_pageIndex)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("pageIndex",43,72,2b,64),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(value) )));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("pageIndex",43,72,2b,64));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Accordion_obj,set_pageIndex,return )

 ::haxe::ui::core::Component Accordion_obj::get_selectedPage(){
            	HX_STACKFRAME(&_hx_pos_07d692a990a58ec4_331_get_selectedPage)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toComponent(this->behaviours->get(HX_("selectedPage",4a,fa,eb,da)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Accordion_obj,get_selectedPage,return )

 ::haxe::ui::core::Component Accordion_obj::set_selectedPage( ::haxe::ui::core::Component value){
            	HX_STACKFRAME(&_hx_pos_07d692a990a58ec4_357_set_selectedPage)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("selectedPage",4a,fa,eb,da),::haxe::ui::util::_Variant::Variant_Impl__obj::fromComponent(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("selectedPage",4a,fa,eb,da));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Accordion_obj,set_selectedPage,return )

 ::haxe::ui::core::ComponentContainer Accordion_obj::cloneComponent(){
            	HX_STACKFRAME(&_hx_pos_c10f6db91498f470_521_cloneComponent)
HXLINE( 267)		 ::haxe::ui::containers::Accordion c = ( ( ::haxe::ui::containers::Accordion)(this->super::cloneComponent()) );
HXLINE( 287)		::Array< ::Dynamic> _hx_tmp;
HXDLIN( 287)		if (hx::IsNull( this->_children )) {
HXLINE( 287)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp = this->_children;
            		}
HXDLIN( 287)		::Array< ::Dynamic> _hx_tmp1;
HXDLIN( 287)		if (hx::IsNull( c->_children )) {
HXLINE( 287)			_hx_tmp1 = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp1 = c->_children;
            		}
HXDLIN( 287)		if ((_hx_tmp->length != _hx_tmp1->length)) {
HXLINE( 288)			int _g = 0;
HXDLIN( 288)			::Array< ::Dynamic> _g1;
HXDLIN( 288)			if (hx::IsNull( this->_children )) {
HXLINE( 288)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 288)				_g1 = this->_children;
            			}
HXDLIN( 288)			while((_g < _g1->length)){
HXLINE( 288)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 288)				_g = (_g + 1);
HXLINE( 289)				c->addComponent(Dynamic( child->cloneComponent()).StaticCast<  ::haxe::ui::core::Component >());
            			}
            		}
HXLINE( 293)		return c;
            	}


 ::haxe::ui::core::ComponentContainer Accordion_obj::self(){
            	HX_GC_STACKFRAME(&_hx_pos_07d692a990a58ec4_302_self)
HXDLIN( 302)		return  ::haxe::ui::containers::Accordion_obj::__alloc( HX_CTX );
            	}



hx::ObjectPtr< Accordion_obj > Accordion_obj::__new() {
	hx::ObjectPtr< Accordion_obj > __this = new Accordion_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Accordion_obj > Accordion_obj::__alloc(hx::Ctx *_hx_ctx) {
	Accordion_obj *__this = (Accordion_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Accordion_obj), true, "haxe.ui.containers.Accordion"));
	*(void **)__this = Accordion_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Accordion_obj::Accordion_obj()
{
}

hx::Val Accordion_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { return hx::Val( self_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"pageIndex") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_pageIndex() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"selectedPage") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_selectedPage() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_pageIndex") ) { return hx::Val( get_pageIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pageIndex") ) { return hx::Val( set_pageIndex_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"cloneComponent") ) { return hx::Val( cloneComponent_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_selectedPage") ) { return hx::Val( get_selectedPage_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedPage") ) { return hx::Val( set_selectedPage_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"registerComposite") ) { return hx::Val( registerComposite_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"registerBehaviours") ) { return hx::Val( registerBehaviours_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Accordion_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"pageIndex") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pageIndex(inValue.Cast< int >()) ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"selectedPage") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_selectedPage(inValue.Cast<  ::haxe::ui::core::Component >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Accordion_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pageIndex",43,72,2b,64));
	outFields->push(HX_("selectedPage",4a,fa,eb,da));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Accordion_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Accordion_obj_sStaticStorageInfo = 0;
#endif

static ::String Accordion_obj_sMemberFields[] = {
	HX_("registerComposite",24,e5,7f,fe),
	HX_("registerBehaviours",d9,a7,67,34),
	HX_("get_pageIndex",1a,46,8f,25),
	HX_("set_pageIndex",26,28,95,6a),
	HX_("get_selectedPage",d3,e6,8a,df),
	HX_("set_selectedPage",47,d4,cc,35),
	HX_("cloneComponent",a0,e9,56,26),
	HX_("self",8c,8b,50,4c),
	::String(null()) };

hx::Class Accordion_obj::__mClass;

void Accordion_obj::__register()
{
	Accordion_obj _hx_dummy;
	Accordion_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.Accordion",1e,6b,e2,f0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Accordion_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Accordion_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Accordion_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Accordion_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
