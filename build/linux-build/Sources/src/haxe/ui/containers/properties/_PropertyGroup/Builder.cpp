// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Button
#include <hxinc/haxe/ui/components/Button.h>
#endif
#ifndef INCLUDED_haxe_ui_components_CheckBox
#include <hxinc/haxe/ui/components/CheckBox.h>
#endif
#ifndef INCLUDED_haxe_ui_components_DropDown
#include <hxinc/haxe/ui/components/DropDown.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Image
#include <hxinc/haxe/ui/components/Image.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Label
#include <hxinc/haxe/ui/components/Label.h>
#endif
#ifndef INCLUDED_haxe_ui_components_NumberStepper
#include <hxinc/haxe/ui/components/NumberStepper.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TextField
#include <hxinc/haxe/ui/components/TextField.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Grid
#include <hxinc/haxe/ui/containers/Grid.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_HBox
#include <hxinc/haxe/ui/containers/HBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollView
#include <hxinc/haxe/ui/containers/ScrollView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_VBox
#include <hxinc/haxe/ui/containers/VBox.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_properties_Property
#include <hxinc/haxe/ui/containers/properties/Property.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_properties_PropertyBuilder
#include <hxinc/haxe/ui/containers/properties/PropertyBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_properties_PropertyGrid
#include <hxinc/haxe/ui/containers/properties/PropertyGrid.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_properties_PropertyGroup
#include <hxinc/haxe/ui/containers/properties/PropertyGroup.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_properties__PropertyGroup_Builder
#include <hxinc/haxe/ui/containers/properties/_PropertyGroup/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_properties__PropertyGroup_Events
#include <hxinc/haxe/ui/containers/properties/_PropertyGroup/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDataComponent
#include <hxinc/haxe/ui/core/IDataComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_data_DataSource
#include <hxinc/haxe/ui/data/DataSource.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c4f7adb52e42c818_74_new,"haxe.ui.containers.properties._PropertyGroup.Builder","new",0xed7a3f9b,"haxe.ui.containers.properties._PropertyGroup.Builder.new","haxe/ui/containers/properties/PropertyGroup.hx",74,0xad7e5fc5)
HX_LOCAL_STACK_FRAME(_hx_pos_c4f7adb52e42c818_79_onReady,"haxe.ui.containers.properties._PropertyGroup.Builder","onReady",0x6826677f,"haxe.ui.containers.properties._PropertyGroup.Builder.onReady","haxe/ui/containers/properties/PropertyGroup.hx",79,0xad7e5fc5)
HX_LOCAL_STACK_FRAME(_hx_pos_c4f7adb52e42c818_86_create,"haxe.ui.containers.properties._PropertyGroup.Builder","create",0x5057eea1,"haxe.ui.containers.properties._PropertyGroup.Builder.create","haxe/ui/containers/properties/PropertyGroup.hx",86,0xad7e5fc5)
HX_LOCAL_STACK_FRAME(_hx_pos_c4f7adb52e42c818_113_addComponent,"haxe.ui.containers.properties._PropertyGroup.Builder","addComponent",0xe7e563c1,"haxe.ui.containers.properties._PropertyGroup.Builder.addComponent","haxe/ui/containers/properties/PropertyGroup.hx",113,0xad7e5fc5)
HX_LOCAL_STACK_FRAME(_hx_pos_c4f7adb52e42c818_150_onPropertyEditorChange,"haxe.ui.containers.properties._PropertyGroup.Builder","onPropertyEditorChange",0x357d1f56,"haxe.ui.containers.properties._PropertyGroup.Builder.onPropertyEditorChange","haxe/ui/containers/properties/PropertyGroup.hx",150,0xad7e5fc5)
HX_LOCAL_STACK_FRAME(_hx_pos_c4f7adb52e42c818_156_buildEditor,"haxe.ui.containers.properties._PropertyGroup.Builder","buildEditor",0x599ec9b6,"haxe.ui.containers.properties._PropertyGroup.Builder.buildEditor","haxe/ui/containers/properties/PropertyGroup.hx",156,0xad7e5fc5)
namespace haxe{
namespace ui{
namespace containers{
namespace properties{
namespace _PropertyGroup{

void Builder_obj::__construct( ::haxe::ui::containers::properties::PropertyGroup propertyGroup){
            	HX_GC_STACKFRAME(&_hx_pos_c4f7adb52e42c818_74_new)
HXLINE(  75)		super::__construct(propertyGroup);
HXLINE(  76)		this->_hx_set__propertyGroup(HX_CTX, propertyGroup);
            	}

Dynamic Builder_obj::__CreateEmpty() { return new Builder_obj; }

void *Builder_obj::_hx_vtable = 0;

Dynamic Builder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Builder_obj > _hx_result = new Builder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Builder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x159c93cd) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x159c93cd;
	} else {
		return inClassId==(int)0x6fc7eb95;
	}
}

void Builder_obj::onReady(){
            	HX_STACKFRAME(&_hx_pos_c4f7adb52e42c818_79_onReady)
HXLINE(  80)		 ::haxe::ui::containers::properties::PropertyGrid propGrid = this->_component->findAncestor(null(),hx::ClassOf< ::haxe::ui::containers::properties::PropertyGrid >(),null()).StaticCast<  ::haxe::ui::containers::properties::PropertyGrid >();
HXLINE(  81)		{
HXLINE(  81)			int _g = 0;
HXDLIN(  81)			::Array< ::Dynamic> _g1 = this->_propertyGroupContents->findComponents(null(),hx::ClassOf< ::haxe::ui::components::DropDown >(),null());
HXDLIN(  81)			while((_g < _g1->length)){
HXLINE(  81)				 ::haxe::ui::components::DropDown c = _g1->__get(_g).StaticCast<  ::haxe::ui::components::DropDown >();
HXDLIN(  81)				_g = (_g + 1);
HXLINE(  82)				c->set_handlerStyleNames(propGrid->get_popupStyleNames());
            			}
            		}
            	}


void Builder_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_c4f7adb52e42c818_86_create)
HXLINE(  87)		this->_hx_set__propertyGroupHeader(HX_CTX,  ::haxe::ui::containers::HBox_obj::__alloc( HX_CTX ));
HXLINE(  88)		this->_propertyGroupHeader->scriptAccess = false;
HXLINE(  89)		this->_propertyGroupHeader->addClass(HX_("property-group-header",53,22,a5,a8),null(),null());
HXLINE(  90)		this->_propertyGroupHeader->addClass(HX_(":expanded",73,db,80,c4),null(),null());
HXLINE(  91)		this->_propertyGroupHeader->set_id(HX_("property-group-header",53,22,a5,a8));
HXLINE(  93)		 ::haxe::ui::components::Image image =  ::haxe::ui::components::Image_obj::__alloc( HX_CTX );
HXLINE(  94)		image->addClass(HX_("property-group-header-icon",f3,92,d9,61),null(),null());
HXLINE(  95)		image->scriptAccess = false;
HXLINE(  96)		this->_propertyGroupHeader->addComponent(image);
HXLINE(  98)		 ::haxe::ui::components::Label label =  ::haxe::ui::components::Label_obj::__alloc( HX_CTX );
HXLINE(  99)		label->addClass(HX_("property-group-header-label",3a,6d,5e,f5),null(),null());
HXLINE( 100)		label->set_id(HX_("property-group-header-label",3a,6d,5e,f5));
HXLINE( 101)		label->scriptAccess = false;
HXLINE( 102)		this->_propertyGroupHeader->addComponent(label);
HXLINE( 104)		this->_propertyGroup->addComponent(this->_propertyGroupHeader);
HXLINE( 106)		this->_hx_set__propertyGroupContents(HX_CTX,  ::haxe::ui::containers::Grid_obj::__alloc( HX_CTX ));
HXLINE( 107)		this->_propertyGroupContents->scriptAccess = false;
HXLINE( 108)		this->_propertyGroupContents->addClass(HX_("property-group-contents",60,5b,d5,e0),null(),null());
HXLINE( 109)		this->_propertyGroupContents->set_id(HX_("property-group-contents",60,5b,d5,e0));
HXLINE( 110)		this->_propertyGroup->addComponent(this->_propertyGroupContents);
            	}


 ::haxe::ui::core::Component Builder_obj::addComponent( ::haxe::ui::core::Component child){
            	HX_GC_STACKFRAME(&_hx_pos_c4f7adb52e42c818_113_addComponent)
HXLINE( 114)		if (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::containers::properties::Property >())) {
HXLINE( 115)			 ::haxe::ui::containers::properties::Property prop = hx::TCast<  ::haxe::ui::containers::properties::Property >::cast(child);
HXLINE( 117)			 ::haxe::ui::containers::Box labelContainer =  ::haxe::ui::containers::Box_obj::__alloc( HX_CTX );
HXLINE( 118)			labelContainer->scriptAccess = false;
HXLINE( 119)			labelContainer->addClass(HX_("property-group-item-label-container",34,4b,50,30),null(),null());
HXLINE( 120)			this->_propertyGroupContents->addComponent(labelContainer);
HXLINE( 122)			 ::haxe::ui::components::Label label =  ::haxe::ui::components::Label_obj::__alloc( HX_CTX );
HXLINE( 123)			label->scriptAccess = false;
HXLINE( 124)			label->set_text(prop->get_label());
HXLINE( 125)			label->addClass(HX_("property-group-item-label",c0,93,9f,a8),null(),null());
HXLINE( 126)			labelContainer->addComponent(label);
HXLINE( 127)			hx::TCast<  ::haxe::ui::containers::properties::PropertyBuilder >::cast(prop->_compositeBuilder)->_hx_set_label(HX_CTX, label);
HXLINE( 129)			 ::haxe::ui::containers::Box editorContainer =  ::haxe::ui::containers::Box_obj::__alloc( HX_CTX );
HXLINE( 130)			editorContainer->scriptAccess = false;
HXLINE( 131)			editorContainer->addClass(HX_("property-group-item-editor-container",15,79,c0,13),null(),null());
HXLINE( 132)			this->_propertyGroupContents->addComponent(editorContainer);
HXLINE( 134)			 ::haxe::ui::core::Component editor = this->buildEditor(prop);
HXLINE( 135)			editor->scriptAccess = false;
HXLINE( 136)			editor->set_id(child->get_id());
HXLINE( 137)			editor->addClass(HX_("property-group-item-editor",61,ce,61,d5),null(),null());
HXLINE( 138)			editorContainer->addComponent(editor);
HXLINE( 139)			editor->registerEvent(HX_("change",70,91,72,b7),this->onPropertyEditorChange_dyn(),null());
HXLINE( 140)			hx::TCast<  ::haxe::ui::containers::properties::PropertyBuilder >::cast(prop->_compositeBuilder)->_hx_set_editor(HX_CTX, editor);
HXLINE( 142)			this->_propertyGroup->registerInternalEvents(hx::ClassOf< ::haxe::ui::containers::properties::_PropertyGroup::Events >(),true);
HXLINE( 144)			return editor;
            		}
HXLINE( 147)		return null();
            	}


void Builder_obj::onPropertyEditorChange( ::haxe::ui::events::UIEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_c4f7adb52e42c818_150_onPropertyEditorChange)
HXLINE( 151)		 ::haxe::ui::events::UIEvent newEvent =  ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null());
HXLINE( 152)		newEvent->_hx_set_target(HX_CTX, event->target);
HXLINE( 153)		this->_component->findAncestor(null(),hx::ClassOf< ::haxe::ui::containers::properties::PropertyGrid >(),null()).StaticCast<  ::haxe::ui::containers::properties::PropertyGrid >()->dispatch(newEvent);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Builder_obj,onPropertyEditorChange,(void))

 ::haxe::ui::core::Component Builder_obj::buildEditor( ::haxe::ui::containers::properties::Property property){
            	HX_GC_STACKFRAME(&_hx_pos_c4f7adb52e42c818_156_buildEditor)
HXLINE( 157)		::String type = property->get_type();
HXLINE( 159)		 ::haxe::ui::core::Component c = null();
HXLINE( 161)		::String _hx_switch_0 = type;
            		if (  (_hx_switch_0==HX_("boolean",a8,ea,fe,7d)) ){
HXLINE( 167)			c =  ::haxe::ui::components::CheckBox_obj::__alloc( HX_CTX );
HXLINE( 168)			c->set_value(property->get_value());
HXLINE( 166)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("int",ef,0c,50,00)) ){
HXLINE( 171)			c =  ::haxe::ui::components::NumberStepper_obj::__alloc( HX_CTX );
HXLINE( 172)			c->set_value(property->get_value());
HXLINE( 170)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("list",5e,1c,b3,47)) ){
HXLINE( 175)			c =  ::haxe::ui::components::DropDown_obj::__alloc( HX_CTX );
HXLINE( 176)			hx::TCast<  ::haxe::ui::components::DropDown >::cast(c)->set_dataSource(property->get_dataSource());
HXLINE( 177)			int indexToSelect = 0;
HXLINE( 178)			{
HXLINE( 178)				int _g = 0;
HXDLIN( 178)				int _g1 = property->get_dataSource()->get_size();
HXDLIN( 178)				while((_g < _g1)){
HXLINE( 178)					_g = (_g + 1);
HXDLIN( 178)					int i = (_g - 1);
HXLINE( 179)					 ::Dynamic _hx_tmp =  ::Dynamic(property->get_dataSource()->get(i)->__Field(HX_("value",71,7f,b8,31),hx::paccDynamic));
HXDLIN( 179)					if (hx::IsEq( _hx_tmp,property->get_value() )) {
HXLINE( 180)						indexToSelect = i;
HXLINE( 181)						goto _hx_goto_7;
            					}
            				}
            				_hx_goto_7:;
            			}
HXLINE( 184)			hx::TCast<  ::haxe::ui::components::DropDown >::cast(c)->set_selectedIndex(indexToSelect);
HXLINE( 174)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("text",ad,cc,f9,4c)) ){
HXLINE( 163)			c =  ::haxe::ui::components::TextField_obj::__alloc( HX_CTX );
HXLINE( 164)			c->set_value(property->get_value());
HXLINE( 162)			goto _hx_goto_6;
            		}
            		/* default */{
HXLINE( 187)			c =  ::haxe::ui::components::TextField_obj::__alloc( HX_CTX );
HXLINE( 188)			c->set_value(property->get_value());
            		}
            		_hx_goto_6:;
HXLINE( 191)		return c;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Builder_obj,buildEditor,return )


hx::ObjectPtr< Builder_obj > Builder_obj::__new( ::haxe::ui::containers::properties::PropertyGroup propertyGroup) {
	hx::ObjectPtr< Builder_obj > __this = new Builder_obj();
	__this->__construct(propertyGroup);
	return __this;
}

hx::ObjectPtr< Builder_obj > Builder_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::containers::properties::PropertyGroup propertyGroup) {
	Builder_obj *__this = (Builder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Builder_obj), true, "haxe.ui.containers.properties._PropertyGroup.Builder"));
	*(void **)__this = Builder_obj::_hx_vtable;
	__this->__construct(propertyGroup);
	return __this;
}

Builder_obj::Builder_obj()
{
}

void Builder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Builder);
	HX_MARK_MEMBER_NAME(_propertyGroup,"_propertyGroup");
	HX_MARK_MEMBER_NAME(_propertyGroupHeader,"_propertyGroupHeader");
	HX_MARK_MEMBER_NAME(_propertyGroupContents,"_propertyGroupContents");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Builder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_propertyGroup,"_propertyGroup");
	HX_VISIT_MEMBER_NAME(_propertyGroupHeader,"_propertyGroupHeader");
	HX_VISIT_MEMBER_NAME(_propertyGroupContents,"_propertyGroupContents");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Builder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"onReady") ) { return hx::Val( onReady_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"buildEditor") ) { return hx::Val( buildEditor_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addComponent") ) { return hx::Val( addComponent_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_propertyGroup") ) { return hx::Val( _propertyGroup ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_propertyGroupHeader") ) { return hx::Val( _propertyGroupHeader ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_propertyGroupContents") ) { return hx::Val( _propertyGroupContents ); }
		if (HX_FIELD_EQ(inName,"onPropertyEditorChange") ) { return hx::Val( onPropertyEditorChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Builder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"_propertyGroup") ) { _hx_set__propertyGroup(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::properties::PropertyGroup >()); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"_propertyGroupHeader") ) { _hx_set__propertyGroupHeader(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::HBox >()); return inValue; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"_propertyGroupContents") ) { _hx_set__propertyGroupContents(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::Grid >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Builder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_propertyGroup",eb,76,8c,22));
	outFields->push(HX_("_propertyGroupHeader",d8,76,11,d6));
	outFields->push(HX_("_propertyGroupContents",25,9b,63,81));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Builder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::containers::properties::PropertyGroup */ ,(int)offsetof(Builder_obj,_propertyGroup),HX_("_propertyGroup",eb,76,8c,22)},
	{hx::fsObject /*  ::haxe::ui::containers::HBox */ ,(int)offsetof(Builder_obj,_propertyGroupHeader),HX_("_propertyGroupHeader",d8,76,11,d6)},
	{hx::fsObject /*  ::haxe::ui::containers::Grid */ ,(int)offsetof(Builder_obj,_propertyGroupContents),HX_("_propertyGroupContents",25,9b,63,81)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Builder_obj_sStaticStorageInfo = 0;
#endif

static ::String Builder_obj_sMemberFields[] = {
	HX_("_propertyGroup",eb,76,8c,22),
	HX_("_propertyGroupHeader",d8,76,11,d6),
	HX_("_propertyGroupContents",25,9b,63,81),
	HX_("onReady",c4,3e,f8,7c),
	HX_("create",fc,66,0f,7c),
	HX_("addComponent",5c,12,a8,0e),
	HX_("onPropertyEditorChange",b1,3d,50,56),
	HX_("buildEditor",7b,27,4e,8c),
	::String(null()) };

hx::Class Builder_obj::__mClass;

void Builder_obj::__register()
{
	Builder_obj _hx_dummy;
	Builder_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.properties._PropertyGroup.Builder",29,d6,ad,18);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Builder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Builder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Builder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Builder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace properties
} // end namespace _PropertyGroup
