// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_dialogs__MessageBox_MessageBoxType_Impl_
#include <hxinc/haxe/ui/containers/dialogs/_MessageBox/MessageBoxType_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_74ebfe95e2cd8096_13_toString,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_","toString",0x795877c4,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_.toString","haxe/ui/containers/dialogs/MessageBox.hx",13,0x05c2afab)
HX_LOCAL_STACK_FRAME(_hx_pos_74ebfe95e2cd8096_7_boot,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_","boot",0x9b2dbf4a,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_.boot","haxe/ui/containers/dialogs/MessageBox.hx",7,0x05c2afab)
HX_LOCAL_STACK_FRAME(_hx_pos_74ebfe95e2cd8096_8_boot,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_","boot",0x9b2dbf4a,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_.boot","haxe/ui/containers/dialogs/MessageBox.hx",8,0x05c2afab)
HX_LOCAL_STACK_FRAME(_hx_pos_74ebfe95e2cd8096_9_boot,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_","boot",0x9b2dbf4a,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_.boot","haxe/ui/containers/dialogs/MessageBox.hx",9,0x05c2afab)
HX_LOCAL_STACK_FRAME(_hx_pos_74ebfe95e2cd8096_10_boot,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_","boot",0x9b2dbf4a,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_.boot","haxe/ui/containers/dialogs/MessageBox.hx",10,0x05c2afab)
namespace haxe{
namespace ui{
namespace containers{
namespace dialogs{
namespace _MessageBox{

void MessageBoxType_Impl__obj::__construct() { }

Dynamic MessageBoxType_Impl__obj::__CreateEmpty() { return new MessageBoxType_Impl__obj; }

void *MessageBoxType_Impl__obj::_hx_vtable = 0;

Dynamic MessageBoxType_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MessageBoxType_Impl__obj > _hx_result = new MessageBoxType_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MessageBoxType_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x52551da2;
}

::String MessageBoxType_Impl__obj::TYPE_INFO;

::String MessageBoxType_Impl__obj::TYPE_QUESTION;

::String MessageBoxType_Impl__obj::TYPE_WARNING;

::String MessageBoxType_Impl__obj::TYPE_ERROR;

::String MessageBoxType_Impl__obj::toString(::String this1){
            	HX_STACKFRAME(&_hx_pos_74ebfe95e2cd8096_13_toString)
HXDLIN(  13)		return ::Std_obj::string(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MessageBoxType_Impl__obj,toString,return )


MessageBoxType_Impl__obj::MessageBoxType_Impl__obj()
{
}

bool MessageBoxType_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *MessageBoxType_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo MessageBoxType_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &MessageBoxType_Impl__obj::TYPE_INFO,HX_("TYPE_INFO",53,3f,a2,92)},
	{hx::fsString,(void *) &MessageBoxType_Impl__obj::TYPE_QUESTION,HX_("TYPE_QUESTION",8b,40,16,a0)},
	{hx::fsString,(void *) &MessageBoxType_Impl__obj::TYPE_WARNING,HX_("TYPE_WARNING",77,0c,d2,15)},
	{hx::fsString,(void *) &MessageBoxType_Impl__obj::TYPE_ERROR,HX_("TYPE_ERROR",23,cd,68,70)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void MessageBoxType_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_INFO,"TYPE_INFO");
	HX_MARK_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_QUESTION,"TYPE_QUESTION");
	HX_MARK_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_WARNING,"TYPE_WARNING");
	HX_MARK_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_ERROR,"TYPE_ERROR");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MessageBoxType_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_INFO,"TYPE_INFO");
	HX_VISIT_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_QUESTION,"TYPE_QUESTION");
	HX_VISIT_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_WARNING,"TYPE_WARNING");
	HX_VISIT_MEMBER_NAME(MessageBoxType_Impl__obj::TYPE_ERROR,"TYPE_ERROR");
};

#endif

hx::Class MessageBoxType_Impl__obj::__mClass;

static ::String MessageBoxType_Impl__obj_sStaticFields[] = {
	HX_("TYPE_INFO",53,3f,a2,92),
	HX_("TYPE_QUESTION",8b,40,16,a0),
	HX_("TYPE_WARNING",77,0c,d2,15),
	HX_("TYPE_ERROR",23,cd,68,70),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void MessageBoxType_Impl__obj::__register()
{
	MessageBoxType_Impl__obj _hx_dummy;
	MessageBoxType_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_",56,fc,1b,f2);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MessageBoxType_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MessageBoxType_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MessageBoxType_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< MessageBoxType_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MessageBoxType_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MessageBoxType_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MessageBoxType_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void MessageBoxType_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_74ebfe95e2cd8096_7_boot)
HXDLIN(   7)		TYPE_INFO = HX_("info",6e,38,bb,45);
            	}
{
            	HX_STACKFRAME(&_hx_pos_74ebfe95e2cd8096_8_boot)
HXDLIN(   8)		TYPE_QUESTION = HX_("question",26,9b,b0,26);
            	}
{
            	HX_STACKFRAME(&_hx_pos_74ebfe95e2cd8096_9_boot)
HXDLIN(   9)		TYPE_WARNING = HX_("warning",5c,da,cb,09);
            	}
{
            	HX_STACKFRAME(&_hx_pos_74ebfe95e2cd8096_10_boot)
HXDLIN(  10)		TYPE_ERROR = HX_("error",c8,cb,29,73);
            	}
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace dialogs
} // end namespace _MessageBox
