// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_components_HorizontalScroll
#include <hxinc/haxe/ui/components/HorizontalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Scroll
#include <hxinc/haxe/ui/components/Scroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_VerticalScroll
#include <hxinc/haxe/ui/components/VerticalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollView
#include <hxinc/haxe/ui/containers/ScrollView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollViewBuilder
#include <hxinc/haxe/ui/containers/ScrollViewBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDirectionalComponent
#include <hxinc/haxe/ui/core/IDirectionalComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_geom_Rectangle
#include <hxinc/haxe/ui/geom/Rectangle.h>
#endif
#ifndef INCLUDED_haxe_ui_geom_Size
#include <hxinc/haxe/ui/geom/Size.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <hxinc/haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <hxinc/haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_LayoutFactory
#include <hxinc/haxe/ui/layouts/LayoutFactory.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_Style
#include <hxinc/haxe/ui/styles/Style.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_23283b2891872f10_763_new,"haxe.ui.containers.ScrollViewBuilder","new",0xf0805b31,"haxe.ui.containers.ScrollViewBuilder.new","haxe/ui/containers/ScrollView.hx",763,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_773_create,"haxe.ui.containers.ScrollViewBuilder","create",0xb0fab4cb,"haxe.ui.containers.ScrollViewBuilder.create","haxe/ui/containers/ScrollView.hx",773,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_781_destroy,"haxe.ui.containers.ScrollViewBuilder","destroy",0x3d7ef44b,"haxe.ui.containers.ScrollViewBuilder.destroy","haxe/ui/containers/ScrollView.hx",781,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_785_get_numComponents,"haxe.ui.containers.ScrollViewBuilder","get_numComponents",0xe5ddece4,"haxe.ui.containers.ScrollViewBuilder.get_numComponents","haxe/ui/containers/ScrollView.hx",785,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_788_addComponent,"haxe.ui.containers.ScrollViewBuilder","addComponent",0xda66256b,"haxe.ui.containers.ScrollViewBuilder.addComponent","haxe/ui/containers/ScrollView.hx",788,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_795_addComponentAt,"haxe.ui.containers.ScrollViewBuilder","addComponentAt",0xdc4acf3e,"haxe.ui.containers.ScrollViewBuilder.addComponentAt","haxe/ui/containers/ScrollView.hx",795,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_802_removeComponent,"haxe.ui.containers.ScrollViewBuilder","removeComponent",0x886c8c2a,"haxe.ui.containers.ScrollViewBuilder.removeComponent","haxe/ui/containers/ScrollView.hx",802,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_810_removeComponentAt,"haxe.ui.containers.ScrollViewBuilder","removeComponentAt",0xe5c7a3bd,"haxe.ui.containers.ScrollViewBuilder.removeComponentAt","haxe/ui/containers/ScrollView.hx",810,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_814_getComponentIndex,"haxe.ui.containers.ScrollViewBuilder","getComponentIndex",0x2a4672dc,"haxe.ui.containers.ScrollViewBuilder.getComponentIndex","haxe/ui/containers/ScrollView.hx",814,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_817_setComponentIndex,"haxe.ui.containers.ScrollViewBuilder","setComponentIndex",0x4db44ae8,"haxe.ui.containers.ScrollViewBuilder.setComponentIndex","haxe/ui/containers/ScrollView.hx",817,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_825_getComponentAt,"haxe.ui.containers.ScrollViewBuilder","getComponentAt",0xce121ae9,"haxe.ui.containers.ScrollViewBuilder.getComponentAt","haxe/ui/containers/ScrollView.hx",825,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_829_createContentContainer,"haxe.ui.containers.ScrollViewBuilder","createContentContainer",0xdb7eefb3,"haxe.ui.containers.ScrollViewBuilder.createContentContainer","haxe/ui/containers/ScrollView.hx",829,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_840_horizontalConstraintModifier,"haxe.ui.containers.ScrollViewBuilder","horizontalConstraintModifier",0xdb3147e7,"haxe.ui.containers.ScrollViewBuilder.horizontalConstraintModifier","haxe/ui/containers/ScrollView.hx",840,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_844_verticalConstraintModifier,"haxe.ui.containers.ScrollViewBuilder","verticalConstraintModifier",0xd28ea239,"haxe.ui.containers.ScrollViewBuilder.verticalConstraintModifier","haxe/ui/containers/ScrollView.hx",844,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_848_checkScrolls,"haxe.ui.containers.ScrollViewBuilder","checkScrolls",0xea1cfeed,"haxe.ui.containers.ScrollViewBuilder.checkScrolls","haxe/ui/containers/ScrollView.hx",848,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_897_createHScroll,"haxe.ui.containers.ScrollViewBuilder","createHScroll",0xc386fd0a,"haxe.ui.containers.ScrollViewBuilder.createHScroll","haxe/ui/containers/ScrollView.hx",897,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_927_createVScroll,"haxe.ui.containers.ScrollViewBuilder","createVScroll",0x09b37b98,"haxe.ui.containers.ScrollViewBuilder.createVScroll","haxe/ui/containers/ScrollView.hx",927,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_957_destroyHScroll,"haxe.ui.containers.ScrollViewBuilder","destroyHScroll",0x92d1ad8a,"haxe.ui.containers.ScrollViewBuilder.destroyHScroll","haxe/ui/containers/ScrollView.hx",957,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_965_destroyVScroll,"haxe.ui.containers.ScrollViewBuilder","destroyVScroll",0xd8fe2c18,"haxe.ui.containers.ScrollViewBuilder.destroyVScroll","haxe/ui/containers/ScrollView.hx",965,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_972_updateScrollRect,"haxe.ui.containers.ScrollViewBuilder","updateScrollRect",0x1618f1c9,"haxe.ui.containers.ScrollViewBuilder.updateScrollRect","haxe/ui/containers/ScrollView.hx",972,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_1015_get_virtualHorizontal,"haxe.ui.containers.ScrollViewBuilder","get_virtualHorizontal",0xe8f950b7,"haxe.ui.containers.ScrollViewBuilder.get_virtualHorizontal","haxe/ui/containers/ScrollView.hx",1015,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_1020_get_virtualVertical,"haxe.ui.containers.ScrollViewBuilder","get_virtualVertical",0x4e806589,"haxe.ui.containers.ScrollViewBuilder.get_virtualVertical","haxe/ui/containers/ScrollView.hx",1020,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_1023_onVirtualChanged,"haxe.ui.containers.ScrollViewBuilder","onVirtualChanged",0x5de33637,"haxe.ui.containers.ScrollViewBuilder.onVirtualChanged","haxe/ui/containers/ScrollView.hx",1023,0x01b76681)
HX_LOCAL_STACK_FRAME(_hx_pos_23283b2891872f10_1028_applyStyle,"haxe.ui.containers.ScrollViewBuilder","applyStyle",0xc0770232,"haxe.ui.containers.ScrollViewBuilder.applyStyle","haxe/ui/containers/ScrollView.hx",1028,0x01b76681)
namespace haxe{
namespace ui{
namespace containers{

void ScrollViewBuilder_obj::__construct( ::haxe::ui::containers::ScrollView scrollview){
            	HX_GC_STACKFRAME(&_hx_pos_23283b2891872f10_763_new)
HXLINE(1027)		this->autoHideScrolls = false;
HXLINE( 769)		super::__construct(scrollview);
HXLINE( 770)		this->_hx_set__scrollview(HX_CTX, scrollview);
            	}

Dynamic ScrollViewBuilder_obj::__CreateEmpty() { return new ScrollViewBuilder_obj; }

void *ScrollViewBuilder_obj::_hx_vtable = 0;

Dynamic ScrollViewBuilder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ScrollViewBuilder_obj > _hx_result = new ScrollViewBuilder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ScrollViewBuilder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2ec19ef5) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x2ec19ef5;
	} else {
		return inClassId==(int)0x6fc7eb95;
	}
}

void ScrollViewBuilder_obj::create(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_773_create)
HXLINE( 774)		::String contentLayoutName = this->_scrollview->get_contentLayoutName();
HXLINE( 775)		if (hx::IsNull( contentLayoutName )) {
HXLINE( 776)			contentLayoutName = HX_("vertical",76,bc,15,6a);
            		}
HXLINE( 778)		this->createContentContainer(contentLayoutName);
            	}


void ScrollViewBuilder_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_781_destroy)
            	}


 ::Dynamic ScrollViewBuilder_obj::get_numComponents(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_785_get_numComponents)
HXDLIN( 785)		return this->_contents->get_numComponents();
            	}


 ::haxe::ui::core::Component ScrollViewBuilder_obj::addComponent( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_788_addComponent)
HXLINE( 789)		bool _hx_tmp;
HXDLIN( 789)		bool _hx_tmp1;
HXDLIN( 789)		if ((::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::HorizontalScroll >()) == false)) {
HXLINE( 789)			_hx_tmp1 = (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::VerticalScroll >()) == false);
            		}
            		else {
HXLINE( 789)			_hx_tmp1 = false;
            		}
HXDLIN( 789)		if (_hx_tmp1) {
HXLINE( 789)			_hx_tmp = (child->hasClass(HX_("scrollview-contents",15,b7,70,a7)) == false);
            		}
            		else {
HXLINE( 789)			_hx_tmp = false;
            		}
HXDLIN( 789)		if (_hx_tmp) {
HXLINE( 790)			return this->_contents->addComponent(child);
            		}
HXLINE( 792)		return null();
            	}


 ::haxe::ui::core::Component ScrollViewBuilder_obj::addComponentAt( ::haxe::ui::core::Component child,int index){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_795_addComponentAt)
HXLINE( 796)		bool _hx_tmp;
HXDLIN( 796)		bool _hx_tmp1;
HXDLIN( 796)		if ((::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::HorizontalScroll >()) == false)) {
HXLINE( 796)			_hx_tmp1 = (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::VerticalScroll >()) == false);
            		}
            		else {
HXLINE( 796)			_hx_tmp1 = false;
            		}
HXDLIN( 796)		if (_hx_tmp1) {
HXLINE( 796)			_hx_tmp = (child->hasClass(HX_("scrollview-contents",15,b7,70,a7)) == false);
            		}
            		else {
HXLINE( 796)			_hx_tmp = false;
            		}
HXDLIN( 796)		if (_hx_tmp) {
HXLINE( 797)			return this->_contents->addComponentAt(child,index);
            		}
HXLINE( 799)		return null();
            	}


 ::haxe::ui::core::Component ScrollViewBuilder_obj::removeComponent( ::haxe::ui::core::Component child,hx::Null< bool >  __o_dispose,hx::Null< bool >  __o_invalidate){
            		bool dispose = __o_dispose.Default(true);
            		bool invalidate = __o_invalidate.Default(true);
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_802_removeComponent)
HXLINE( 803)		bool _hx_tmp;
HXDLIN( 803)		bool _hx_tmp1;
HXDLIN( 803)		if ((::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::HorizontalScroll >()) == false)) {
HXLINE( 803)			_hx_tmp1 = (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::VerticalScroll >()) == false);
            		}
            		else {
HXLINE( 803)			_hx_tmp1 = false;
            		}
HXDLIN( 803)		if (_hx_tmp1) {
HXLINE( 803)			_hx_tmp = (child->hasClass(HX_("scrollview-contents",15,b7,70,a7)) == false);
            		}
            		else {
HXLINE( 803)			_hx_tmp = false;
            		}
HXDLIN( 803)		if (_hx_tmp) {
HXLINE( 804)			return this->_contents->removeComponent(child,dispose,invalidate);
            		}
HXLINE( 806)		return null();
            	}


 ::haxe::ui::core::Component ScrollViewBuilder_obj::removeComponentAt(int index,hx::Null< bool >  __o_dispose,hx::Null< bool >  __o_invalidate){
            		bool dispose = __o_dispose.Default(true);
            		bool invalidate = __o_invalidate.Default(true);
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_810_removeComponentAt)
HXDLIN( 810)		return this->_contents->removeComponentAt(index,dispose,invalidate);
            	}


int ScrollViewBuilder_obj::getComponentIndex( ::haxe::ui::core::Component child){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_814_getComponentIndex)
HXDLIN( 814)		return this->_contents->getComponentIndex(child);
            	}


 ::haxe::ui::core::Component ScrollViewBuilder_obj::setComponentIndex( ::haxe::ui::core::Component child,int index){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_817_setComponentIndex)
HXLINE( 818)		bool _hx_tmp;
HXDLIN( 818)		bool _hx_tmp1;
HXDLIN( 818)		if ((::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::HorizontalScroll >()) == false)) {
HXLINE( 818)			_hx_tmp1 = (::Std_obj::is(child,hx::ClassOf< ::haxe::ui::components::VerticalScroll >()) == false);
            		}
            		else {
HXLINE( 818)			_hx_tmp1 = false;
            		}
HXDLIN( 818)		if (_hx_tmp1) {
HXLINE( 818)			_hx_tmp = (child->hasClass(HX_("scrollview-contents",15,b7,70,a7)) == false);
            		}
            		else {
HXLINE( 818)			_hx_tmp = false;
            		}
HXDLIN( 818)		if (_hx_tmp) {
HXLINE( 819)			return this->_contents->setComponentIndex(child,index);
            		}
HXLINE( 821)		return null();
            	}


 ::haxe::ui::core::Component ScrollViewBuilder_obj::getComponentAt(int index){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_825_getComponentAt)
HXDLIN( 825)		return this->_contents->getComponentAt(index);
            	}


void ScrollViewBuilder_obj::createContentContainer(::String layoutName){
            	HX_GC_STACKFRAME(&_hx_pos_23283b2891872f10_829_createContentContainer)
HXDLIN( 829)		if (hx::IsNull( this->_contents )) {
HXLINE( 830)			this->_hx_set__contents(HX_CTX,  ::haxe::ui::containers::Box_obj::__alloc( HX_CTX ));
HXLINE( 831)			this->_contents->addClass(HX_("scrollview-contents",15,b7,70,a7),null(),null());
HXLINE( 832)			this->_contents->set_id(HX_("scrollview-contents",15,b7,70,a7));
HXLINE( 833)			 ::haxe::ui::containers::Box _hx_tmp = this->_contents;
HXDLIN( 833)			_hx_tmp->set_layout(::haxe::ui::layouts::LayoutFactory_obj::createFromName(layoutName));
HXLINE( 834)			this->_component->addComponent(this->_contents);
HXLINE( 835)			this->_hx_set__contentsLayoutName(HX_CTX, layoutName);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ScrollViewBuilder_obj,createContentContainer,(void))

Float ScrollViewBuilder_obj::horizontalConstraintModifier(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_840_horizontalConstraintModifier)
HXDLIN( 840)		return ( (Float)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,horizontalConstraintModifier,return )

Float ScrollViewBuilder_obj::verticalConstraintModifier(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_844_verticalConstraintModifier)
HXDLIN( 844)		return ( (Float)(0) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,verticalConstraintModifier,return )

void ScrollViewBuilder_obj::checkScrolls(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_848_checkScrolls)
HXLINE( 849)		if ((this->_component->get_isNativeScroller() == true)) {
HXLINE( 850)			return;
            		}
HXLINE( 853)		 ::haxe::ui::geom::Size usableSize = this->_component->get_layout()->get_usableSize();
HXLINE( 855)		bool _hx_tmp;
HXDLIN( 855)		if ((this->get_virtualHorizontal() == false)) {
HXLINE( 855)			_hx_tmp = (usableSize->width > 0);
            		}
            		else {
HXLINE( 855)			_hx_tmp = false;
            		}
HXDLIN( 855)		if (_hx_tmp) {
HXLINE( 856)			 ::haxe::ui::containers::Box horizontalConstraint = this->_contents;
HXLINE( 857)			 ::haxe::ui::components::HorizontalScroll hscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 858)			 ::Dynamic vcw = horizontalConstraint->get_width();
HXDLIN( 858)			Float vcw1 = (vcw + this->horizontalConstraintModifier());
HXLINE( 859)			if ((vcw1 > usableSize->width)) {
HXLINE( 860)				if (hx::IsNull( hscroll )) {
HXLINE( 861)					hscroll = this->createHScroll();
            				}
HXLINE( 864)				hscroll->set_max((vcw1 - usableSize->width));
HXLINE( 865)				Float _hx_tmp1 = (usableSize->width / vcw1);
HXDLIN( 865)				hscroll->set_pageSize((_hx_tmp1 * hscroll->get_max()));
HXLINE( 867)				hscroll->syncComponentValidation(null());
            			}
            			else {
HXLINE( 869)				if (hx::IsNotNull( hscroll )) {
HXLINE( 870)					this->destroyHScroll();
            				}
            			}
            		}
HXLINE( 875)		bool _hx_tmp2;
HXDLIN( 875)		if ((this->get_virtualVertical() == false)) {
HXLINE( 875)			_hx_tmp2 = (usableSize->height > 0);
            		}
            		else {
HXLINE( 875)			_hx_tmp2 = false;
            		}
HXDLIN( 875)		if (_hx_tmp2) {
HXLINE( 876)			 ::haxe::ui::containers::Box verticalConstraint = this->_contents;
HXLINE( 877)			 ::haxe::ui::components::VerticalScroll vscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 878)			 ::Dynamic vch = verticalConstraint->get_height();
HXDLIN( 878)			Float vch1 = (vch + this->verticalConstraintModifier());
HXLINE( 879)			if ((vch1 > usableSize->height)) {
HXLINE( 880)				if (hx::IsNull( vscroll )) {
HXLINE( 881)					vscroll = this->createVScroll();
            				}
HXLINE( 884)				vscroll->set_max((vch1 - usableSize->height));
HXLINE( 885)				Float _hx_tmp3 = (usableSize->height / vch1);
HXDLIN( 885)				vscroll->set_pageSize((_hx_tmp3 * vscroll->get_max()));
HXLINE( 887)				vscroll->syncComponentValidation(null());
            			}
            			else {
HXLINE( 889)				if (hx::IsNotNull( vscroll )) {
HXLINE( 890)					this->destroyVScroll();
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,checkScrolls,(void))

 ::haxe::ui::components::HorizontalScroll ScrollViewBuilder_obj::createHScroll(){
            	HX_GC_STACKFRAME(&_hx_pos_23283b2891872f10_897_createHScroll)
HXLINE( 898)		if ((this->_component->get_isNativeScroller() == true)) {
HXLINE( 899)			return null();
            		}
HXLINE( 902)		 ::haxe::ui::geom::Size usableSize = this->_component->get_layout()->get_usableSize();
HXLINE( 903)		 ::haxe::ui::containers::Box horizontalConstraint = this->_contents;
HXLINE( 904)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 905)		 ::Dynamic vcw = horizontalConstraint->get_width();
HXDLIN( 905)		Float vcw1 = (vcw + this->horizontalConstraintModifier());
HXLINE( 907)		if ((usableSize->width <= 0)) {
HXLINE( 908)			return hscroll;
            		}
HXLINE( 911)		bool _hx_tmp;
HXDLIN( 911)		if ((vcw1 > usableSize->width)) {
HXLINE( 911)			_hx_tmp = hx::IsNull( hscroll );
            		}
            		else {
HXLINE( 911)			_hx_tmp = false;
            		}
HXDLIN( 911)		if (_hx_tmp) {
HXLINE( 912)			 ::haxe::ui::containers::ScrollViewBuilder builder = hx::TCast<  ::haxe::ui::containers::ScrollViewBuilder >::cast(this->_scrollview->_compositeBuilder);
HXLINE( 913)			hscroll =  ::haxe::ui::components::HorizontalScroll_obj::__alloc( HX_CTX );
HXLINE( 914)			hscroll->set_includeInLayout(!(builder->autoHideScrolls));
HXLINE( 915)			hscroll->set_hidden(builder->autoHideScrolls);
HXLINE( 916)			hscroll->set_percentWidth(100);
HXLINE( 917)			hscroll->set_allowFocus(false);
HXLINE( 918)			hscroll->set_id(HX_("scrollview-hscroll",da,fc,19,11));
HXLINE( 919)			this->_component->addComponent(hscroll);
HXLINE( 920)			this->_component->registerInternalEvents(null(),true);
            		}
HXLINE( 923)		return hscroll;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,createHScroll,return )

 ::haxe::ui::components::VerticalScroll ScrollViewBuilder_obj::createVScroll(){
            	HX_GC_STACKFRAME(&_hx_pos_23283b2891872f10_927_createVScroll)
HXLINE( 928)		if ((this->_component->get_isNativeScroller() == true)) {
HXLINE( 929)			return null();
            		}
HXLINE( 932)		 ::haxe::ui::geom::Size usableSize = this->_component->get_layout()->get_usableSize();
HXLINE( 933)		 ::haxe::ui::containers::Box verticalConstraint = this->_contents;
HXLINE( 934)		 ::haxe::ui::components::VerticalScroll vscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 935)		 ::Dynamic vch = verticalConstraint->get_height();
HXDLIN( 935)		Float vch1 = (vch + this->verticalConstraintModifier());
HXLINE( 937)		if ((usableSize->height <= 0)) {
HXLINE( 938)			return vscroll;
            		}
HXLINE( 941)		bool _hx_tmp;
HXDLIN( 941)		if ((vch1 > usableSize->height)) {
HXLINE( 941)			_hx_tmp = hx::IsNull( vscroll );
            		}
            		else {
HXLINE( 941)			_hx_tmp = false;
            		}
HXDLIN( 941)		if (_hx_tmp) {
HXLINE( 942)			 ::haxe::ui::containers::ScrollViewBuilder builder = hx::TCast<  ::haxe::ui::containers::ScrollViewBuilder >::cast(this->_scrollview->_compositeBuilder);
HXLINE( 943)			vscroll =  ::haxe::ui::components::VerticalScroll_obj::__alloc( HX_CTX );
HXLINE( 944)			vscroll->set_includeInLayout(!(builder->autoHideScrolls));
HXLINE( 945)			vscroll->set_hidden(builder->autoHideScrolls);
HXLINE( 946)			vscroll->set_percentHeight(100);
HXLINE( 947)			vscroll->set_allowFocus(false);
HXLINE( 948)			vscroll->set_id(HX_("scrollview-vscroll",68,7b,46,57));
HXLINE( 949)			this->_component->addComponent(vscroll);
HXLINE( 950)			this->_component->registerInternalEvents(null(),true);
            		}
HXLINE( 953)		return vscroll;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,createVScroll,return )

void ScrollViewBuilder_obj::destroyHScroll(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_957_destroyHScroll)
HXLINE( 958)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 959)		if (hx::IsNotNull( hscroll )) {
HXLINE( 960)			this->_component->removeComponent(hscroll,null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,destroyHScroll,(void))

void ScrollViewBuilder_obj::destroyVScroll(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_965_destroyVScroll)
HXLINE( 966)		 ::haxe::ui::components::VerticalScroll vscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 967)		if (hx::IsNotNull( vscroll )) {
HXLINE( 968)			this->_component->removeComponent(vscroll,null(),null());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,destroyVScroll,(void))

void ScrollViewBuilder_obj::updateScrollRect(){
            	HX_GC_STACKFRAME(&_hx_pos_23283b2891872f10_972_updateScrollRect)
HXLINE( 973)		if (hx::IsNull( this->_contents )) {
HXLINE( 974)			return;
            		}
HXLINE( 977)		 ::haxe::ui::geom::Size usableSize = this->_component->get_layout()->get_usableSize();
HXLINE( 979)		Float usableSize1 = usableSize->width;
HXDLIN( 979)		Float clipCX = (usableSize1 - this->horizontalConstraintModifier());
HXLINE( 980)		if (hx::IsGreater( clipCX,this->_contents->get_width() )) {
HXLINE( 981)			 ::Dynamic clipCX1 = this->_contents->get_width();
HXDLIN( 981)			clipCX = (clipCX1 + this->horizontalConstraintModifier());
            		}
HXLINE( 983)		Float usableSize2 = usableSize->height;
HXDLIN( 983)		Float clipCY = (usableSize2 - this->verticalConstraintModifier());
HXLINE( 984)		if (hx::IsGreater( clipCY,this->_contents->get_height() )) {
HXLINE( 985)			 ::Dynamic clipCY1 = this->_contents->get_height();
HXDLIN( 985)			clipCY = (clipCY1 + this->verticalConstraintModifier());
            		}
HXLINE( 988)		Float xpos = ( (Float)(0) );
HXLINE( 989)		Float ypos = ( (Float)(0) );
HXLINE( 991)		if ((this->get_virtualHorizontal() == false)) {
HXLINE( 992)			 ::haxe::ui::components::HorizontalScroll hscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 993)			if (hx::IsNotNull( hscroll )) {
HXLINE( 994)				xpos = hscroll->get_pos();
            			}
            		}
            		else {
HXLINE( 996)			if (hx::IsNotNull( this->_contents->get_componentClipRect() )) {
HXLINE( 997)				clipCX = this->_contents->get_componentClipRect()->width;
            			}
            		}
HXLINE(1000)		if ((this->get_virtualVertical() == false)) {
HXLINE(1001)			 ::haxe::ui::components::VerticalScroll vscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE(1002)			if (hx::IsNotNull( vscroll )) {
HXLINE(1003)				ypos = vscroll->get_pos();
            			}
            		}
            		else {
HXLINE(1005)			if (hx::IsNotNull( this->_contents->get_componentClipRect() )) {
HXLINE(1006)				clipCY = this->_contents->get_componentClipRect()->height;
            			}
            		}
HXLINE(1009)		 ::haxe::ui::geom::Rectangle rc =  ::haxe::ui::geom::Rectangle_obj::__alloc( HX_CTX ,xpos,ypos,::Math_obj::fround(clipCX),::Math_obj::fround(clipCY));
HXLINE(1010)		this->_contents->set_componentClipRect(rc);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,updateScrollRect,(void))

bool ScrollViewBuilder_obj::get_virtualHorizontal(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_1015_get_virtualHorizontal)
HXDLIN(1015)		return this->_scrollview->get_virtual();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,get_virtualHorizontal,return )

bool ScrollViewBuilder_obj::get_virtualVertical(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_1020_get_virtualVertical)
HXDLIN(1020)		return this->_scrollview->get_virtual();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,get_virtualVertical,return )

void ScrollViewBuilder_obj::onVirtualChanged(){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_1023_onVirtualChanged)
            	}


HX_DEFINE_DYNAMIC_FUNC0(ScrollViewBuilder_obj,onVirtualChanged,(void))

void ScrollViewBuilder_obj::applyStyle( ::haxe::ui::styles::Style style){
            	HX_STACKFRAME(&_hx_pos_23283b2891872f10_1028_applyStyle)
HXLINE(1029)		this->super::applyStyle(style);
HXLINE(1030)		bool _hx_tmp;
HXDLIN(1030)		if (hx::IsNotNull( style->mode )) {
HXLINE(1030)			_hx_tmp = (style->mode == HX_("mobile",62,ac,77,bf));
            		}
            		else {
HXLINE(1030)			_hx_tmp = false;
            		}
HXDLIN(1030)		if (_hx_tmp) {
HXLINE(1031)			this->autoHideScrolls = true;
            		}
            		else {
HXLINE(1033)			this->autoHideScrolls = false;
            		}
            	}



hx::ObjectPtr< ScrollViewBuilder_obj > ScrollViewBuilder_obj::__new( ::haxe::ui::containers::ScrollView scrollview) {
	hx::ObjectPtr< ScrollViewBuilder_obj > __this = new ScrollViewBuilder_obj();
	__this->__construct(scrollview);
	return __this;
}

hx::ObjectPtr< ScrollViewBuilder_obj > ScrollViewBuilder_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::containers::ScrollView scrollview) {
	ScrollViewBuilder_obj *__this = (ScrollViewBuilder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ScrollViewBuilder_obj), true, "haxe.ui.containers.ScrollViewBuilder"));
	*(void **)__this = ScrollViewBuilder_obj::_hx_vtable;
	__this->__construct(scrollview);
	return __this;
}

ScrollViewBuilder_obj::ScrollViewBuilder_obj()
{
}

void ScrollViewBuilder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ScrollViewBuilder);
	HX_MARK_MEMBER_NAME(_scrollview,"_scrollview");
	HX_MARK_MEMBER_NAME(_contents,"_contents");
	HX_MARK_MEMBER_NAME(_contentsLayoutName,"_contentsLayoutName");
	HX_MARK_MEMBER_NAME(virtualHorizontal,"virtualHorizontal");
	HX_MARK_MEMBER_NAME(virtualVertical,"virtualVertical");
	HX_MARK_MEMBER_NAME(autoHideScrolls,"autoHideScrolls");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ScrollViewBuilder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_scrollview,"_scrollview");
	HX_VISIT_MEMBER_NAME(_contents,"_contents");
	HX_VISIT_MEMBER_NAME(_contentsLayoutName,"_contentsLayoutName");
	HX_VISIT_MEMBER_NAME(virtualHorizontal,"virtualHorizontal");
	HX_VISIT_MEMBER_NAME(virtualVertical,"virtualVertical");
	HX_VISIT_MEMBER_NAME(autoHideScrolls,"autoHideScrolls");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ScrollViewBuilder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_contents") ) { return hx::Val( _contents ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"applyStyle") ) { return hx::Val( applyStyle_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_scrollview") ) { return hx::Val( _scrollview ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addComponent") ) { return hx::Val( addComponent_dyn() ); }
		if (HX_FIELD_EQ(inName,"checkScrolls") ) { return hx::Val( checkScrolls_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createHScroll") ) { return hx::Val( createHScroll_dyn() ); }
		if (HX_FIELD_EQ(inName,"createVScroll") ) { return hx::Val( createVScroll_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"addComponentAt") ) { return hx::Val( addComponentAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"getComponentAt") ) { return hx::Val( getComponentAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroyHScroll") ) { return hx::Val( destroyHScroll_dyn() ); }
		if (HX_FIELD_EQ(inName,"destroyVScroll") ) { return hx::Val( destroyVScroll_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"removeComponent") ) { return hx::Val( removeComponent_dyn() ); }
		if (HX_FIELD_EQ(inName,"virtualVertical") ) { return hx::Val( inCallProp == hx::paccAlways ? get_virtualVertical() : virtualVertical ); }
		if (HX_FIELD_EQ(inName,"autoHideScrolls") ) { return hx::Val( autoHideScrolls ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"updateScrollRect") ) { return hx::Val( updateScrollRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"onVirtualChanged") ) { return hx::Val( onVirtualChanged_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_numComponents") ) { return hx::Val( get_numComponents_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeComponentAt") ) { return hx::Val( removeComponentAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"getComponentIndex") ) { return hx::Val( getComponentIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"setComponentIndex") ) { return hx::Val( setComponentIndex_dyn() ); }
		if (HX_FIELD_EQ(inName,"virtualHorizontal") ) { return hx::Val( inCallProp == hx::paccAlways ? get_virtualHorizontal() : virtualHorizontal ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"_contentsLayoutName") ) { return hx::Val( _contentsLayoutName ); }
		if (HX_FIELD_EQ(inName,"get_virtualVertical") ) { return hx::Val( get_virtualVertical_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_virtualHorizontal") ) { return hx::Val( get_virtualHorizontal_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"createContentContainer") ) { return hx::Val( createContentContainer_dyn() ); }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"verticalConstraintModifier") ) { return hx::Val( verticalConstraintModifier_dyn() ); }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"horizontalConstraintModifier") ) { return hx::Val( horizontalConstraintModifier_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ScrollViewBuilder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_contents") ) { _hx_set__contents(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::Box >()); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_scrollview") ) { _hx_set__scrollview(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::ScrollView >()); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"virtualVertical") ) { virtualVertical=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"autoHideScrolls") ) { autoHideScrolls=inValue.Cast< bool >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"virtualHorizontal") ) { virtualHorizontal=inValue.Cast< bool >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"_contentsLayoutName") ) { _hx_set__contentsLayoutName(HX_CTX_GET,inValue.Cast< ::String >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ScrollViewBuilder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_scrollview",11,62,bf,f3));
	outFields->push(HX_("_contents",79,fc,b9,76));
	outFields->push(HX_("_contentsLayoutName",ee,9b,fd,2c));
	outFields->push(HX_("virtualHorizontal",cf,ba,86,d2));
	outFields->push(HX_("virtualVertical",a1,99,06,63));
	outFields->push(HX_("autoHideScrolls",f5,c3,3e,9c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ScrollViewBuilder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::containers::ScrollView */ ,(int)offsetof(ScrollViewBuilder_obj,_scrollview),HX_("_scrollview",11,62,bf,f3)},
	{hx::fsObject /*  ::haxe::ui::containers::Box */ ,(int)offsetof(ScrollViewBuilder_obj,_contents),HX_("_contents",79,fc,b9,76)},
	{hx::fsString,(int)offsetof(ScrollViewBuilder_obj,_contentsLayoutName),HX_("_contentsLayoutName",ee,9b,fd,2c)},
	{hx::fsBool,(int)offsetof(ScrollViewBuilder_obj,virtualHorizontal),HX_("virtualHorizontal",cf,ba,86,d2)},
	{hx::fsBool,(int)offsetof(ScrollViewBuilder_obj,virtualVertical),HX_("virtualVertical",a1,99,06,63)},
	{hx::fsBool,(int)offsetof(ScrollViewBuilder_obj,autoHideScrolls),HX_("autoHideScrolls",f5,c3,3e,9c)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ScrollViewBuilder_obj_sStaticStorageInfo = 0;
#endif

static ::String ScrollViewBuilder_obj_sMemberFields[] = {
	HX_("_scrollview",11,62,bf,f3),
	HX_("_contents",79,fc,b9,76),
	HX_("_contentsLayoutName",ee,9b,fd,2c),
	HX_("create",fc,66,0f,7c),
	HX_("destroy",fa,2c,86,24),
	HX_("get_numComponents",53,76,26,3b),
	HX_("addComponent",5c,12,a8,0e),
	HX_("addComponentAt",6f,9a,96,16),
	HX_("removeComponent",d9,8b,72,50),
	HX_("removeComponentAt",2c,2d,10,3b),
	HX_("getComponentIndex",4b,fc,8e,7f),
	HX_("setComponentIndex",57,d4,fc,a2),
	HX_("getComponentAt",1a,e6,5d,08),
	HX_("createContentContainer",e4,d3,42,a7),
	HX_("horizontalConstraintModifier",d8,e6,93,6e),
	HX_("verticalConstraintModifier",ea,f2,b6,ce),
	HX_("checkScrolls",de,eb,5e,1e),
	HX_("createHScroll",f9,62,f4,48),
	HX_("createVScroll",87,e1,20,8f),
	HX_("destroyHScroll",bb,78,1d,cd),
	HX_("destroyVScroll",49,f7,49,13),
	HX_("updateScrollRect",3a,ab,52,53),
	HX_("virtualHorizontal",cf,ba,86,d2),
	HX_("get_virtualHorizontal",a6,bd,34,51),
	HX_("virtualVertical",a1,99,06,63),
	HX_("get_virtualVertical",b8,68,11,ee),
	HX_("onVirtualChanged",a8,ef,1c,9b),
	HX_("autoHideScrolls",f5,c3,3e,9c),
	HX_("applyStyle",e3,20,6f,2f),
	::String(null()) };

hx::Class ScrollViewBuilder_obj::__mClass;

void ScrollViewBuilder_obj::__register()
{
	ScrollViewBuilder_obj _hx_dummy;
	ScrollViewBuilder_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers.ScrollViewBuilder",bf,ee,2c,f4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ScrollViewBuilder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ScrollViewBuilder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ScrollViewBuilder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ScrollViewBuilder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
