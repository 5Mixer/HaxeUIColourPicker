// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviour
#include <hxinc/haxe/ui/behaviours/Behaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DataBehaviour
#include <hxinc/haxe/ui/behaviours/DataBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_ValueBehaviour
#include <hxinc/haxe/ui/behaviours/ValueBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_IVirtualContainer
#include <hxinc/haxe/ui/containers/IVirtualContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ListView
#include <hxinc/haxe/ui/containers/ListView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollView
#include <hxinc/haxe/ui/containers/ScrollView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollViewBuilder
#include <hxinc/haxe/ui/containers/ScrollViewBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ListView_ListViewBuilder
#include <hxinc/haxe/ui/containers/_ListView/ListViewBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers__ListView_SelectedIndicesBehaviour
#include <hxinc/haxe/ui/containers/_ListView/SelectedIndicesBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDataComponent
#include <hxinc/haxe/ui/core/IDataComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ItemRenderer
#include <hxinc/haxe/ui/core/ItemRenderer.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_38ee9375c76dbd6e_437_new,"haxe.ui.containers._ListView.SelectedIndicesBehaviour","new",0xb006b839,"haxe.ui.containers._ListView.SelectedIndicesBehaviour.new","haxe/ui/containers/ListView.hx",437,0xe137bf10)
HX_LOCAL_STACK_FRAME(_hx_pos_38ee9375c76dbd6e_439_get,"haxe.ui.containers._ListView.SelectedIndicesBehaviour","get",0xb001686f,"haxe.ui.containers._ListView.SelectedIndicesBehaviour.get","haxe/ui/containers/ListView.hx",439,0xe137bf10)
HX_LOCAL_STACK_FRAME(_hx_pos_38ee9375c76dbd6e_442_validateData,"haxe.ui.containers._ListView.SelectedIndicesBehaviour","validateData",0x91bb2ae7,"haxe.ui.containers._ListView.SelectedIndicesBehaviour.validateData","haxe/ui/containers/ListView.hx",442,0xe137bf10)
namespace haxe{
namespace ui{
namespace containers{
namespace _ListView{

void SelectedIndicesBehaviour_obj::__construct( ::haxe::ui::core::Component component){
            	HX_STACKFRAME(&_hx_pos_38ee9375c76dbd6e_437_new)
HXDLIN( 437)		super::__construct(component);
            	}

Dynamic SelectedIndicesBehaviour_obj::__CreateEmpty() { return new SelectedIndicesBehaviour_obj; }

void *SelectedIndicesBehaviour_obj::_hx_vtable = 0;

Dynamic SelectedIndicesBehaviour_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SelectedIndicesBehaviour_obj > _hx_result = new SelectedIndicesBehaviour_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool SelectedIndicesBehaviour_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x207cf043) {
		if (inClassId<=(int)0x14644493) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x14644493;
		} else {
			return inClassId==(int)0x207cf043;
		}
	} else {
		return inClassId==(int)0x3a374360 || inClassId==(int)0x6c6873cd;
	}
}

 ::haxe::ui::util::VariantType SelectedIndicesBehaviour_obj::get(){
            	HX_STACKFRAME(&_hx_pos_38ee9375c76dbd6e_439_get)
HXDLIN( 439)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(this->_value)) {
HXDLIN( 439)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromArray(::cpp::VirtualArray_obj::__new(0));
            		}
            		else {
HXDLIN( 439)			return this->_value;
            		}
HXDLIN( 439)		return null();
            	}


void SelectedIndicesBehaviour_obj::validateData(){
            	HX_GC_STACKFRAME(&_hx_pos_38ee9375c76dbd6e_442_validateData)
HXLINE( 443)		 ::haxe::ui::containers::ListView listView = hx::TCast<  ::haxe::ui::containers::ListView >::cast(this->_component);
HXLINE( 444)		::Array< int > selectedIndices = listView->get_selectedIndices();
HXLINE( 445)		 ::haxe::ui::core::Component contents = this->_component->findComponent(HX_("scrollview-contents",15,b7,70,a7),null(),false,HX_("css",c3,83,4b,00)).StaticCast<  ::haxe::ui::core::Component >();
HXLINE( 446)		 ::haxe::ui::containers::_ListView::ListViewBuilder builder = hx::TCast<  ::haxe::ui::containers::_ListView::ListViewBuilder >::cast(this->_component->_compositeBuilder);
HXLINE( 448)		{
HXLINE( 448)			int _g = 0;
HXDLIN( 448)			::Array< ::Dynamic> _g1;
HXDLIN( 448)			if (hx::IsNull( contents->_children )) {
HXLINE( 448)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 448)				_g1 = contents->_children;
            			}
HXDLIN( 448)			while((_g < _g1->length)){
HXLINE( 448)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 448)				_g = (_g + 1);
HXLINE( 449)				if ((selectedIndices->indexOf(hx::TCast<  ::haxe::ui::core::ItemRenderer >::cast(child)->itemIndex,null()) != -1)) {
HXLINE( 450)					builder->addItemRendererClass(child,HX_(":selected",95,f4,1e,7c),null());
            				}
            				else {
HXLINE( 452)					builder->addItemRendererClass(child,HX_(":selected",95,f4,1e,7c),false);
            				}
            			}
            		}
HXLINE( 456)		bool _hx_tmp;
HXDLIN( 456)		if ((listView->get_selectedIndex() != -1)) {
HXLINE( 456)			_hx_tmp = (listView->get_selectedIndices()->length != 0);
            		}
            		else {
HXLINE( 456)			_hx_tmp = false;
            		}
HXDLIN( 456)		if (_hx_tmp) {
HXLINE( 457)			 ::haxe::ui::core::Component _hx_tmp1 = this->_component;
HXDLIN( 457)			_hx_tmp1->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null()));
            		}
            	}



hx::ObjectPtr< SelectedIndicesBehaviour_obj > SelectedIndicesBehaviour_obj::__new( ::haxe::ui::core::Component component) {
	hx::ObjectPtr< SelectedIndicesBehaviour_obj > __this = new SelectedIndicesBehaviour_obj();
	__this->__construct(component);
	return __this;
}

hx::ObjectPtr< SelectedIndicesBehaviour_obj > SelectedIndicesBehaviour_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::core::Component component) {
	SelectedIndicesBehaviour_obj *__this = (SelectedIndicesBehaviour_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SelectedIndicesBehaviour_obj), true, "haxe.ui.containers._ListView.SelectedIndicesBehaviour"));
	*(void **)__this = SelectedIndicesBehaviour_obj::_hx_vtable;
	__this->__construct(component);
	return __this;
}

SelectedIndicesBehaviour_obj::SelectedIndicesBehaviour_obj()
{
}

hx::Val SelectedIndicesBehaviour_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"validateData") ) { return hx::Val( validateData_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *SelectedIndicesBehaviour_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *SelectedIndicesBehaviour_obj_sStaticStorageInfo = 0;
#endif

static ::String SelectedIndicesBehaviour_obj_sMemberFields[] = {
	HX_("get",96,80,4e,00),
	HX_("validateData",e0,55,63,96),
	::String(null()) };

hx::Class SelectedIndicesBehaviour_obj::__mClass;

void SelectedIndicesBehaviour_obj::__register()
{
	SelectedIndicesBehaviour_obj _hx_dummy;
	SelectedIndicesBehaviour_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.containers._ListView.SelectedIndicesBehaviour",c7,27,ee,4c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SelectedIndicesBehaviour_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SelectedIndicesBehaviour_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SelectedIndicesBehaviour_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SelectedIndicesBehaviour_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace _ListView
