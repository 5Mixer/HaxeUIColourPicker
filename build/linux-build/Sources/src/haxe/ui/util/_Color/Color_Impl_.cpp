// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <hxinc/StringTools.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Color_Color_Impl_
#include <hxinc/haxe/ui/util/_Color/Color_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_4_fromString,"haxe.ui.util._Color.Color_Impl_","fromString",0xcecb5716,"haxe.ui.util._Color.Color_Impl_.fromString","haxe/ui/util/Color.hx",4,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_29_fromComponents,"haxe.ui.util._Color.Color_Impl_","fromComponents",0xaa8ee9db,"haxe.ui.util._Color.Color_Impl_.fromComponents","haxe/ui/util/Color.hx",29,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_40_get_r,"haxe.ui.util._Color.Color_Impl_","get_r",0xc43005ee,"haxe.ui.util._Color.Color_Impl_.get_r","haxe/ui/util/Color.hx",40,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_43_set_r,"haxe.ui.util._Color.Color_Impl_","set_r",0xacfefbfa,"haxe.ui.util._Color.Color_Impl_.set_r","haxe/ui/util/Color.hx",43,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_47_get_g,"haxe.ui.util._Color.Color_Impl_","get_g",0xc43005e3,"haxe.ui.util._Color.Color_Impl_.get_g","haxe/ui/util/Color.hx",47,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_50_set_g,"haxe.ui.util._Color.Color_Impl_","set_g",0xacfefbef,"haxe.ui.util._Color.Color_Impl_.set_g","haxe/ui/util/Color.hx",50,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_54_get_b,"haxe.ui.util._Color.Color_Impl_","get_b",0xc43005de,"haxe.ui.util._Color.Color_Impl_.get_b","haxe/ui/util/Color.hx",54,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_57_set_b,"haxe.ui.util._Color.Color_Impl_","set_b",0xacfefbea,"haxe.ui.util._Color.Color_Impl_.set_b","haxe/ui/util/Color.hx",57,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_61_get_a,"haxe.ui.util._Color.Color_Impl_","get_a",0xc43005dd,"haxe.ui.util._Color.Color_Impl_.get_a","haxe/ui/util/Color.hx",61,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_64_set_a,"haxe.ui.util._Color.Color_Impl_","set_a",0xacfefbe9,"haxe.ui.util._Color.Color_Impl_.set_a","haxe/ui/util/Color.hx",64,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_68_set,"haxe.ui.util._Color.Color_Impl_","set",0x67c11907,"haxe.ui.util._Color.Color_Impl_.set","haxe/ui/util/Color.hx",68,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_72_toInt,"haxe.ui.util._Color.Color_Impl_","toInt",0x46e11ed9,"haxe.ui.util._Color.Color_Impl_.toInt","haxe/ui/util/Color.hx",72,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_76_or,"haxe.ui.util._Color.Color_Impl_","or",0xccce575e,"haxe.ui.util._Color.Color_Impl_.or","haxe/ui/util/Color.hx",76,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_80_sumColor,"haxe.ui.util._Color.Color_Impl_","sumColor",0x3f859453,"haxe.ui.util._Color.Color_Impl_.sumColor","haxe/ui/util/Color.hx",80,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_84_restColor,"haxe.ui.util._Color.Color_Impl_","restColor",0x2c98f4d4,"haxe.ui.util._Color.Color_Impl_.restColor","haxe/ui/util/Color.hx",84,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_87_sumFloat,"haxe.ui.util._Color.Color_Impl_","sumFloat",0xf7bfe88c,"haxe.ui.util._Color.Color_Impl_.sumFloat","haxe/ui/util/Color.hx",87,0x4a531b56)
HX_LOCAL_STACK_FRAME(_hx_pos_fb650f19805ef2b9_93_mulFloat,"haxe.ui.util._Color.Color_Impl_","mulFloat",0x3a35df73,"haxe.ui.util._Color.Color_Impl_.mulFloat","haxe/ui/util/Color.hx",93,0x4a531b56)
namespace haxe{
namespace ui{
namespace util{
namespace _Color{

void Color_Impl__obj::__construct() { }

Dynamic Color_Impl__obj::__CreateEmpty() { return new Color_Impl__obj; }

void *Color_Impl__obj::_hx_vtable = 0;

Dynamic Color_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Color_Impl__obj > _hx_result = new Color_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Color_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4d237da3;
}

int Color_Impl__obj::fromString(::String s){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_4_fromString)
HXLINE(   5)		bool _hx_tmp;
HXDLIN(   5)		if (!(::StringTools_obj::startsWith(s,HX_("0x",48,2a,00,00)))) {
HXLINE(   5)			_hx_tmp = ::StringTools_obj::startsWith(s,HX_("#",23,00,00,00));
            		}
            		else {
HXLINE(   5)			_hx_tmp = true;
            		}
HXDLIN(   5)		if (_hx_tmp) {
HXLINE(   6)			return ( (int)(::Std_obj::parseInt((HX_("0x",48,2a,00,00) + s.substring((s.length - 6),null())))) );
            		}
HXLINE(   8)		::String _hx_switch_0 = s;
            		if (  (_hx_switch_0==HX_("aqua",3c,d7,73,40)) ){
HXLINE(  14)			return 65535;
HXDLIN(  14)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("black",bf,d5,f1,b4)) ){
HXLINE(   9)			return 0;
HXDLIN(   9)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("blue",9a,42,19,41)) ){
HXLINE(  12)			return 255;
HXDLIN(  12)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("fuchsia",d7,c5,0f,9f)) ){
HXLINE(  15)			return 16711935;
HXDLIN(  15)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("green",c3,0e,ed,99)) ){
HXLINE(  18)			return 32768;
HXDLIN(  18)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("gray",e3,cf,6b,44)) ||  (_hx_switch_0==HX_("grey",5f,d3,6b,44)) ){
HXLINE(  24)			return 8421504;
HXDLIN(  24)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("lime",15,17,b3,47)) ){
HXLINE(  11)			return 65280;
HXDLIN(  11)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("maroon",70,87,73,ba)) ){
HXLINE(  17)			return 8388608;
HXDLIN(  17)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("navy",36,7a,ff,48)) ){
HXLINE(  19)			return 128;
HXDLIN(  19)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("olive",db,82,2d,31)) ){
HXLINE(  20)			return 8421376;
HXDLIN(  20)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("purple",3c,f6,89,71)) ){
HXLINE(  21)			return 8388736;
HXDLIN(  21)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("red",51,d9,56,00)) ){
HXLINE(  10)			return 16711680;
HXDLIN(  10)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("silver",0d,55,da,b7)) ){
HXLINE(  23)			return 12632256;
HXDLIN(  23)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("teal",9c,b8,f9,4c)) ){
HXLINE(  22)			return 32896;
HXDLIN(  22)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("white",a9,4a,bd,c9)) ){
HXLINE(  13)			return 16777215;
HXDLIN(  13)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("yellow",74,9f,5c,d0)) ){
HXLINE(  16)			return 16776960;
HXDLIN(  16)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE(  25)			return 0;
            		}
            		_hx_goto_0:;
HXLINE(   8)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,fromString,return )

int Color_Impl__obj::fromComponents(int r,int g,int b,int a){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_29_fromComponents)
HXLINE(  30)		int result = (((((a & 255) << 24) | ((r & 255) << 16)) | ((g & 255) << 8)) | (b & 255));
HXLINE(  31)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Color_Impl__obj,fromComponents,return )

int Color_Impl__obj::get_r(int this1){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_40_get_r)
HXDLIN(  40)		return ((this1 >> 16) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_r,return )

int Color_Impl__obj::set_r(int this1,int value){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_43_set_r)
HXDLIN(  43)		this1 = (((((((this1 >> 24) & 255) & 255) << 24) | ((value & 255) << 16)) | ((((this1 >> 8) & 255) & 255) << 8)) | ((this1 & 255) & 255));
HXDLIN(  43)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_r,return )

int Color_Impl__obj::get_g(int this1){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_47_get_g)
HXDLIN(  47)		return ((this1 >> 8) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_g,return )

int Color_Impl__obj::set_g(int this1,int value){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_50_set_g)
HXDLIN(  50)		this1 = (((((((this1 >> 24) & 255) & 255) << 24) | ((((this1 >> 16) & 255) & 255) << 16)) | ((value & 255) << 8)) | ((this1 & 255) & 255));
HXDLIN(  50)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_g,return )

int Color_Impl__obj::get_b(int this1){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_54_get_b)
HXDLIN(  54)		return (this1 & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_b,return )

int Color_Impl__obj::set_b(int this1,int value){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_57_set_b)
HXDLIN(  57)		this1 = (((((((this1 >> 24) & 255) & 255) << 24) | ((((this1 >> 16) & 255) & 255) << 16)) | ((((this1 >> 8) & 255) & 255) << 8)) | (value & 255));
HXDLIN(  57)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_b,return )

int Color_Impl__obj::get_a(int this1){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_61_get_a)
HXDLIN(  61)		return ((this1 >> 24) & 255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,get_a,return )

int Color_Impl__obj::set_a(int this1,int value){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_64_set_a)
HXDLIN(  64)		this1 = (((((value & 255) << 24) | ((((this1 >> 16) & 255) & 255) << 16)) | ((((this1 >> 8) & 255) & 255) << 8)) | ((this1 & 255) & 255));
HXDLIN(  64)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,set_a,return )

int Color_Impl__obj::set(int this1,int r,int g,int b,int a){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_68_set)
HXDLIN(  68)		this1 = (((((a & 255) << 24) | ((r & 255) << 16)) | ((g & 255) << 8)) | (b & 255));
HXDLIN(  68)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Color_Impl__obj,set,return )

int Color_Impl__obj::toInt(int this1){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_72_toInt)
HXDLIN(  72)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Color_Impl__obj,toInt,return )

int Color_Impl__obj::_hx_or(int a,int b){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_76_or)
HXDLIN(  76)		int _hx_tmp = ::haxe::ui::util::_Color::Color_Impl__obj::toInt(a);
HXDLIN(  76)		return (_hx_tmp | ::haxe::ui::util::_Color::Color_Impl__obj::toInt(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,_hx_or,return )

int Color_Impl__obj::sumColor(int a,int b){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_80_sumColor)
HXDLIN(  80)		return ::haxe::ui::util::_Color::Color_Impl__obj::toInt(::haxe::ui::util::_Color::Color_Impl__obj::fromComponents((((a >> 16) & 255) + ((b >> 16) & 255)),(((a >> 8) & 255) + ((b >> 8) & 255)),((a & 255) + (b & 255)),(((a >> 24) & 255) + ((b >> 24) & 255))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,sumColor,return )

int Color_Impl__obj::restColor(int a,int b){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_84_restColor)
HXDLIN(  84)		return ::haxe::ui::util::_Color::Color_Impl__obj::toInt(::haxe::ui::util::_Color::Color_Impl__obj::fromComponents((((a >> 16) & 255) - ((b >> 16) & 255)),(((a >> 8) & 255) - ((b >> 8) & 255)),((a & 255) - (b & 255)),(((a >> 24) & 255) - ((b >> 24) & 255))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,restColor,return )

int Color_Impl__obj::sumFloat(int a,Float b){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_87_sumFloat)
HXLINE(  88)		int bInt = ::Std_obj::_hx_int(b);
HXLINE(  89)		return ::haxe::ui::util::_Color::Color_Impl__obj::toInt(::haxe::ui::util::_Color::Color_Impl__obj::fromComponents((((a >> 16) & 255) - bInt),(((a >> 8) & 255) - bInt),((a & 255) - bInt),(((a >> 24) & 255) - bInt)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,sumFloat,return )

int Color_Impl__obj::mulFloat(int a,Float b){
            	HX_STACKFRAME(&_hx_pos_fb650f19805ef2b9_93_mulFloat)
HXDLIN(  93)		int _hx_tmp = ::Std_obj::_hx_int((( (Float)(((a >> 16) & 255)) ) * b));
HXDLIN(  93)		int _hx_tmp1 = ::Std_obj::_hx_int((( (Float)(((a >> 8) & 255)) ) * b));
HXDLIN(  93)		int _hx_tmp2 = ::Std_obj::_hx_int((( (Float)((a & 255)) ) * b));
HXDLIN(  93)		return ::haxe::ui::util::_Color::Color_Impl__obj::toInt(::haxe::ui::util::_Color::Color_Impl__obj::fromComponents(_hx_tmp,_hx_tmp1,_hx_tmp2,::Std_obj::_hx_int((( (Float)(((a >> 24) & 255)) ) * b))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Color_Impl__obj,mulFloat,return )


Color_Impl__obj::Color_Impl__obj()
{
}

bool Color_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"or") ) { outValue = _hx_or_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { outValue = set_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_r") ) { outValue = get_r_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_r") ) { outValue = set_r_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_g") ) { outValue = get_g_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_g") ) { outValue = set_g_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_b") ) { outValue = get_b_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_b") ) { outValue = set_b_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_a") ) { outValue = get_a_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_a") ) { outValue = set_a_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"sumColor") ) { outValue = sumColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sumFloat") ) { outValue = sumFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"mulFloat") ) { outValue = mulFloat_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"restColor") ) { outValue = restColor_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fromComponents") ) { outValue = fromComponents_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Color_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Color_Impl__obj_sStaticStorageInfo = 0;
#endif

hx::Class Color_Impl__obj::__mClass;

static ::String Color_Impl__obj_sStaticFields[] = {
	HX_("fromString",db,2d,74,54),
	HX_("fromComponents",20,07,4b,52),
	HX_("get_r",49,a5,60,91),
	HX_("set_r",55,9b,2f,7a),
	HX_("get_g",3e,a5,60,91),
	HX_("set_g",4a,9b,2f,7a),
	HX_("get_b",39,a5,60,91),
	HX_("set_b",45,9b,2f,7a),
	HX_("get_a",38,a5,60,91),
	HX_("set_a",44,9b,2f,7a),
	HX_("set",a2,9b,57,00),
	HX_("toInt",34,be,11,14),
	HX_("or",23,61,00,00),
	HX_("sumColor",d8,bf,68,25),
	HX_("restColor",af,dd,7b,6d),
	HX_("sumFloat",11,14,a3,dd),
	HX_("mulFloat",f8,0a,19,20),
	::String(null())
};

void Color_Impl__obj::__register()
{
	Color_Impl__obj _hx_dummy;
	Color_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.util._Color.Color_Impl_",53,07,b0,98);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Color_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Color_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Color_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Color_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Color_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace util
} // end namespace _Color
