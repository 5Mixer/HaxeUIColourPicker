// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <hxinc/StringTools.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <hxinc/haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <hxinc/haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <hxinc/haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <hxinc/haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_haxe_ui_Toolkit
#include <hxinc/haxe/ui/Toolkit.h>
#endif
#ifndef INCLUDED_haxe_ui_ToolkitAssets
#include <hxinc/haxe/ui/ToolkitAssets.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_AssetsBase
#include <hxinc/haxe/ui/backend/AssetsBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_AssetsImpl
#include <hxinc/haxe/ui/backend/AssetsImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_util_ImageLoader
#include <hxinc/haxe/ui/util/ImageLoader.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <hxinc/sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_Http
#include <hxinc/sys/Http.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <hxinc/sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d91662fd4fb13014_11_new,"haxe.ui.util.ImageLoader","new",0xc6924146,"haxe.ui.util.ImageLoader.new","haxe/ui/util/ImageLoader.hx",11,0x67cd160b)
HX_LOCAL_STACK_FRAME(_hx_pos_d91662fd4fb13014_15_load,"haxe.ui.util.ImageLoader","load",0xf81bf280,"haxe.ui.util.ImageLoader.load","haxe/ui/util/ImageLoader.hx",15,0x67cd160b)
HX_LOCAL_STACK_FRAME(_hx_pos_d91662fd4fb13014_104_loadFromHttp,"haxe.ui.util.ImageLoader","loadFromHttp",0x35a698b2,"haxe.ui.util.ImageLoader.loadFromHttp","haxe/ui/util/ImageLoader.hx",104,0x67cd160b)
HX_LOCAL_STACK_FRAME(_hx_pos_d91662fd4fb13014_106_loadFromHttp,"haxe.ui.util.ImageLoader","loadFromHttp",0x35a698b2,"haxe.ui.util.ImageLoader.loadFromHttp","haxe/ui/util/ImageLoader.hx",106,0x67cd160b)
HX_LOCAL_STACK_FRAME(_hx_pos_d91662fd4fb13014_33_loadFromHttp,"haxe.ui.util.ImageLoader","loadFromHttp",0x35a698b2,"haxe.ui.util.ImageLoader.loadFromHttp","haxe/ui/util/ImageLoader.hx",33,0x67cd160b)
HX_LOCAL_STACK_FRAME(_hx_pos_d91662fd4fb13014_115_loadFromFile,"haxe.ui.util.ImageLoader","loadFromFile",0x344bcba6,"haxe.ui.util.ImageLoader.loadFromFile","haxe/ui/util/ImageLoader.hx",115,0x67cd160b)
namespace haxe{
namespace ui{
namespace util{

void ImageLoader_obj::__construct( ::haxe::ui::util::VariantType resource){
            	HX_GC_STACKFRAME(&_hx_pos_d91662fd4fb13014_11_new)
HXDLIN(  11)		this->_hx_set__resource(HX_CTX, resource);
            	}

Dynamic ImageLoader_obj::__CreateEmpty() { return new ImageLoader_obj; }

void *ImageLoader_obj::_hx_vtable = 0;

Dynamic ImageLoader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ImageLoader_obj > _hx_result = new ImageLoader_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ImageLoader_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x617076f2;
}

void ImageLoader_obj::load( ::Dynamic callback){
            	HX_STACKFRAME(&_hx_pos_d91662fd4fb13014_15_load)
HXDLIN(  15)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this->_resource)) {
HXLINE(  16)			::String stringResource = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this->_resource);
HXLINE(  17)			stringResource = ::StringTools_obj::trim(stringResource);
HXLINE(  18)			bool _hx_tmp;
HXDLIN(  18)			if (!(::StringTools_obj::startsWith(stringResource,HX_("http://",52,75,cd,5a)))) {
HXLINE(  18)				_hx_tmp = ::StringTools_obj::startsWith(stringResource,HX_("https://",cf,b4,ae,3e));
            			}
            			else {
HXLINE(  18)				_hx_tmp = true;
            			}
HXDLIN(  18)			if (_hx_tmp) {
HXLINE(  19)				this->loadFromHttp(stringResource,callback);
            			}
            			else {
HXLINE(  20)				if (::StringTools_obj::startsWith(stringResource,HX_("file://",de,92,3b,ff))) {
HXLINE(  21)					this->loadFromFile(stringResource.substr(7,null()),callback);
            				}
            				else {
HXLINE(  23)					::haxe::ui::Toolkit_obj::get_assets()->getImage(stringResource,callback,null());
            				}
            			}
            		}
            		else {
HXLINE(  25)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isImageData(this->_resource)) {
HXLINE(  26)				 ::kha::Image imageData = ::haxe::ui::util::_Variant::Variant_Impl__obj::toImageData(this->_resource);
HXLINE(  27)				if (hx::IsNotNull( callback )) {
HXLINE(  28)					callback(::haxe::ui::ToolkitAssets_obj::get_instance()->imageInfoFromImageData(imageData));
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ImageLoader_obj,load,(void))

void ImageLoader_obj::loadFromHttp(::String url, ::Dynamic callback){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_d91662fd4fb13014_104_loadFromHttp)
HXLINE( 104)			 ::haxe::ui::ToolkitAssets _hx_tmp = ::haxe::ui::Toolkit_obj::get_assets();
HXDLIN( 104)			_hx_tmp->imageFromBytes(::haxe::io::Bytes_obj::ofString(data,null()),callback);
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,callback) HXARGC(1)
            		void _hx_run(::String msg){
            			HX_GC_STACKFRAME(&_hx_pos_d91662fd4fb13014_106_loadFromHttp)
HXLINE( 107)			::haxe::Log_obj::trace(msg,hx::SourceInfo(HX_("haxe/ui/util/ImageLoader.hx",0b,16,cd,67),107,HX_("haxe.ui.util.ImageLoader",54,e6,c2,17),HX_("loadFromHttp",58,56,4b,5c)));
HXLINE( 108)			callback(null());
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_d91662fd4fb13014_33_loadFromHttp)
HXLINE( 102)		 ::sys::Http http =  ::sys::Http_obj::__alloc( HX_CTX ,url);
HXLINE( 103)		http->_hx_set_onData(HX_CTX,  ::Dynamic(new _hx_Closure_0(callback)));
HXLINE( 106)		http->_hx_set_onError(HX_CTX,  ::Dynamic(new _hx_Closure_1(callback)));
HXLINE( 110)		http->request(null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(ImageLoader_obj,loadFromHttp,(void))

void ImageLoader_obj::loadFromFile(::String filename, ::Dynamic callback){
            	HX_STACKFRAME(&_hx_pos_d91662fd4fb13014_115_loadFromFile)
HXLINE( 117)		if ((::sys::FileSystem_obj::exists(filename) == false)) {
HXLINE( 118)			callback(null());
            		}
HXLINE( 121)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 122)			 ::haxe::ui::ToolkitAssets _hx_tmp = ::haxe::ui::Toolkit_obj::get_assets();
HXDLIN( 122)			_hx_tmp->imageFromBytes(::sys::io::File_obj::getBytes(filename),callback);
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE( 124)				 ::Dynamic _hx_tmp1 = ::haxe::Log_obj::trace;
HXDLIN( 124)				::String _hx_tmp2 = (HX_("Problem loading image file: ",ec,2c,08,c9) + ::Std_obj::string(e));
HXDLIN( 124)				_hx_tmp1(_hx_tmp2,hx::SourceInfo(HX_("haxe/ui/util/ImageLoader.hx",0b,16,cd,67),124,HX_("haxe.ui.util.ImageLoader",54,e6,c2,17),HX_("loadFromFile",4c,89,f0,5a)));
HXLINE( 125)				callback(null());
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(ImageLoader_obj,loadFromFile,(void))


hx::ObjectPtr< ImageLoader_obj > ImageLoader_obj::__new( ::haxe::ui::util::VariantType resource) {
	hx::ObjectPtr< ImageLoader_obj > __this = new ImageLoader_obj();
	__this->__construct(resource);
	return __this;
}

hx::ObjectPtr< ImageLoader_obj > ImageLoader_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::util::VariantType resource) {
	ImageLoader_obj *__this = (ImageLoader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ImageLoader_obj), true, "haxe.ui.util.ImageLoader"));
	*(void **)__this = ImageLoader_obj::_hx_vtable;
	__this->__construct(resource);
	return __this;
}

ImageLoader_obj::ImageLoader_obj()
{
}

void ImageLoader_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ImageLoader);
	HX_MARK_MEMBER_NAME(_resource,"_resource");
	HX_MARK_END_CLASS();
}

void ImageLoader_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_resource,"_resource");
}

hx::Val ImageLoader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { return hx::Val( load_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_resource") ) { return hx::Val( _resource ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"loadFromHttp") ) { return hx::Val( loadFromHttp_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadFromFile") ) { return hx::Val( loadFromFile_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ImageLoader_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_resource") ) { _hx_set__resource(HX_CTX_GET,inValue.Cast<  ::haxe::ui::util::VariantType >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ImageLoader_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_resource",2d,54,36,5a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ImageLoader_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::util::VariantType */ ,(int)offsetof(ImageLoader_obj,_resource),HX_("_resource",2d,54,36,5a)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ImageLoader_obj_sStaticStorageInfo = 0;
#endif

static ::String ImageLoader_obj_sMemberFields[] = {
	HX_("_resource",2d,54,36,5a),
	HX_("load",26,9a,b7,47),
	HX_("loadFromHttp",58,56,4b,5c),
	HX_("loadFromFile",4c,89,f0,5a),
	::String(null()) };

hx::Class ImageLoader_obj::__mClass;

void ImageLoader_obj::__register()
{
	ImageLoader_obj _hx_dummy;
	ImageLoader_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.util.ImageLoader",54,e6,c2,17);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ImageLoader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ImageLoader_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ImageLoader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ImageLoader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace util
