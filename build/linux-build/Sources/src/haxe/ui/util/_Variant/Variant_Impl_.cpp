// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Date
#include <hxinc/Date.h>
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <hxinc/StringTools.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_data_DataSource
#include <hxinc/haxe/ui/data/DataSource.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <hxinc/kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <hxinc/kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <hxinc/kha/Resource.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_24_fromString,"haxe.ui.util._Variant.Variant_Impl_","fromString",0xfb9b7992,"haxe.ui.util._Variant.Variant_Impl_.fromString","haxe/ui/util/Variant.hx",24,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_27_toString,"haxe.ui.util._Variant.Variant_Impl_","toString",0x21d4f0a3,"haxe.ui.util._Variant.Variant_Impl_.toString","haxe/ui/util/Variant.hx",27,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_47_get_isString,"haxe.ui.util._Variant.Variant_Impl_","get_isString",0x570e5fdb,"haxe.ui.util._Variant.Variant_Impl_.get_isString","haxe/ui/util/Variant.hx",47,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_54_fromFloat,"haxe.ui.util._Variant.Variant_Impl_","fromFloat",0x071587fb,"haxe.ui.util._Variant.Variant_Impl_.fromFloat","haxe/ui/util/Variant.hx",54,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_57_toFloat,"haxe.ui.util._Variant.Variant_Impl_","toFloat",0x56775e0a,"haxe.ui.util._Variant.Variant_Impl_.toFloat","haxe/ui/util/Variant.hx",57,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_70_get_isFloat,"haxe.ui.util._Variant.Variant_Impl_","get_isFloat",0xc051bdd2,"haxe.ui.util._Variant.Variant_Impl_.get_isFloat","haxe/ui/util/Variant.hx",70,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_77_fromInt,"haxe.ui.util._Variant.Variant_Impl_","fromInt",0xdf57298e,"haxe.ui.util._Variant.Variant_Impl_.fromInt","haxe/ui/util/Variant.hx",77,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_80_toInt,"haxe.ui.util._Variant.Variant_Impl_","toInt",0xf07c0ddd,"haxe.ui.util._Variant.Variant_Impl_.toInt","haxe/ui/util/Variant.hx",80,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_93_get_isInt,"haxe.ui.util._Variant.Variant_Impl_","get_isInt",0x54ed6ba5,"haxe.ui.util._Variant.Variant_Impl_.get_isInt","haxe/ui/util/Variant.hx",93,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_101_get_isNumber,"haxe.ui.util._Variant.Variant_Impl_","get_isNumber",0xe758bdd3,"haxe.ui.util._Variant.Variant_Impl_.get_isNumber","haxe/ui/util/Variant.hx",101,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_105_toNumber,"haxe.ui.util._Variant.Variant_Impl_","toNumber",0xb21f4e9b,"haxe.ui.util._Variant.Variant_Impl_.toNumber","haxe/ui/util/Variant.hx",105,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_116_fromBool,"haxe.ui.util._Variant.Variant_Impl_","fromBool",0x884d72ab,"haxe.ui.util._Variant.Variant_Impl_.fromBool","haxe/ui/util/Variant.hx",116,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_119_toBool,"haxe.ui.util._Variant.Variant_Impl_","toBool",0x7770537c,"haxe.ui.util._Variant.Variant_Impl_.toBool","haxe/ui/util/Variant.hx",119,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_131_get_isBool,"haxe.ui.util._Variant.Variant_Impl_","get_isBool",0xf63104b4,"haxe.ui.util._Variant.Variant_Impl_.get_isBool","haxe/ui/util/Variant.hx",131,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_143_fromArray,"haxe.ui.util._Variant.Variant_Impl_","fromArray",0x2a0e2ff8,"haxe.ui.util._Variant.Variant_Impl_.fromArray","haxe/ui/util/Variant.hx",143,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_146_toArray,"haxe.ui.util._Variant.Variant_Impl_","toArray",0x79700607,"haxe.ui.util._Variant.Variant_Impl_.toArray","haxe/ui/util/Variant.hx",146,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_157_get_isArray,"haxe.ui.util._Variant.Variant_Impl_","get_isArray",0xe34a65cf,"haxe.ui.util._Variant.Variant_Impl_.get_isArray","haxe/ui/util/Variant.hx",157,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_169_fromDate,"haxe.ui.util._Variant.Variant_Impl_","fromDate",0x899544af,"haxe.ui.util._Variant.Variant_Impl_.fromDate","haxe/ui/util/Variant.hx",169,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_172_toDate,"haxe.ui.util._Variant.Variant_Impl_","toDate",0x78b82580,"haxe.ui.util._Variant.Variant_Impl_.toDate","haxe/ui/util/Variant.hx",172,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_183_get_isDate,"haxe.ui.util._Variant.Variant_Impl_","get_isDate",0xf778d6b8,"haxe.ui.util._Variant.Variant_Impl_.get_isDate","haxe/ui/util/Variant.hx",183,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_195_fromComponent,"haxe.ui.util._Variant.Variant_Impl_","fromComponent",0x9a6cce9c,"haxe.ui.util._Variant.Variant_Impl_.fromComponent","haxe/ui/util/Variant.hx",195,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_198_toComponent,"haxe.ui.util._Variant.Variant_Impl_","toComponent",0x1174582b,"haxe.ui.util._Variant.Variant_Impl_.toComponent","haxe/ui/util/Variant.hx",198,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_209_get_isComponent,"haxe.ui.util._Variant.Variant_Impl_","get_isComponent",0xa98e3bf3,"haxe.ui.util._Variant.Variant_Impl_.get_isComponent","haxe/ui/util/Variant.hx",209,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_221_fromImageData,"haxe.ui.util._Variant.Variant_Impl_","fromImageData",0xafb0c904,"haxe.ui.util._Variant.Variant_Impl_.fromImageData","haxe/ui/util/Variant.hx",221,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_224_toImageData,"haxe.ui.util._Variant.Variant_Impl_","toImageData",0x26b85293,"haxe.ui.util._Variant.Variant_Impl_.toImageData","haxe/ui/util/Variant.hx",224,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_235_get_isImageData,"haxe.ui.util._Variant.Variant_Impl_","get_isImageData",0xbed2365b,"haxe.ui.util._Variant.Variant_Impl_.get_isImageData","haxe/ui/util/Variant.hx",235,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_247_fromDataSource,"haxe.ui.util._Variant.Variant_Impl_","fromDataSource",0x487cbbe6,"haxe.ui.util._Variant.Variant_Impl_.fromDataSource","haxe/ui/util/Variant.hx",247,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_250_toDataSource,"haxe.ui.util._Variant.Variant_Impl_","toDataSource",0xf80d8f77,"haxe.ui.util._Variant.Variant_Impl_.toDataSource","haxe/ui/util/Variant.hx",250,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_262_get_isDataSource,"haxe.ui.util._Variant.Variant_Impl_","get_isDataSource",0x769afaaf,"haxe.ui.util._Variant.Variant_Impl_.get_isDataSource","haxe/ui/util/Variant.hx",262,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_275_addFloat,"haxe.ui.util._Variant.Variant_Impl_","addFloat",0x655a0bb2,"haxe.ui.util._Variant.Variant_Impl_.addFloat","haxe/ui/util/Variant.hx",275,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_280_addInt,"haxe.ui.util._Variant.Variant_Impl_","addInt",0x9f9c8185,"haxe.ui.util._Variant.Variant_Impl_.addInt","haxe/ui/util/Variant.hx",280,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_285_subtractFloat,"haxe.ui.util._Variant.Variant_Impl_","subtractFloat",0x979d7891,"haxe.ui.util._Variant.Variant_Impl_.subtractFloat","haxe/ui/util/Variant.hx",285,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_290_subtractInt,"haxe.ui.util._Variant.Variant_Impl_","subtractInt",0xa730a8a4,"haxe.ui.util._Variant.Variant_Impl_.subtractInt","haxe/ui/util/Variant.hx",290,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_294_add,"haxe.ui.util._Variant.Variant_Impl_","add",0xf365d58a,"haxe.ui.util._Variant.Variant_Impl_.add","haxe/ui/util/Variant.hx",294,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_306_postInc,"haxe.ui.util._Variant.Variant_Impl_","postInc",0x9e568847,"haxe.ui.util._Variant.Variant_Impl_.postInc","haxe/ui/util/Variant.hx",306,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_317_preInc,"haxe.ui.util._Variant.Variant_Impl_","preInc",0xaf3c40b2,"haxe.ui.util._Variant.Variant_Impl_.preInc","haxe/ui/util/Variant.hx",317,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_325_subtract,"haxe.ui.util._Variant.Variant_Impl_","subtract",0xe177950b,"haxe.ui.util._Variant.Variant_Impl_.subtract","haxe/ui/util/Variant.hx",325,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_337_postDeinc,"haxe.ui.util._Variant.Variant_Impl_","postDeinc",0xe04f83a6,"haxe.ui.util._Variant.Variant_Impl_.postDeinc","haxe/ui/util/Variant.hx",337,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_348_preDeinc,"haxe.ui.util._Variant.Variant_Impl_","preDeinc",0x40646cd1,"haxe.ui.util._Variant.Variant_Impl_.preDeinc","haxe/ui/util/Variant.hx",348,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_356_multiply,"haxe.ui.util._Variant.Variant_Impl_","multiply",0x83f3021b,"haxe.ui.util._Variant.Variant_Impl_.multiply","haxe/ui/util/Variant.hx",356,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_365_divide,"haxe.ui.util._Variant.Variant_Impl_","divide",0xbfad93b0,"haxe.ui.util._Variant.Variant_Impl_.divide","haxe/ui/util/Variant.hx",365,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_374_gt,"haxe.ui.util._Variant.Variant_Impl_","gt",0x26f996e4,"haxe.ui.util._Variant.Variant_Impl_.gt","haxe/ui/util/Variant.hx",374,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_385_gte,"haxe.ui.util._Variant.Variant_Impl_","gte",0xf36a7101,"haxe.ui.util._Variant.Variant_Impl_.gte","haxe/ui/util/Variant.hx",385,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_396_lt,"haxe.ui.util._Variant.Variant_Impl_","lt",0x26f99b3f,"haxe.ui.util._Variant.Variant_Impl_.lt","haxe/ui/util/Variant.hx",396,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_407_lte,"haxe.ui.util._Variant.Variant_Impl_","lte",0xf36e3c46,"haxe.ui.util._Variant.Variant_Impl_.lte","haxe/ui/util/Variant.hx",407,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_418_negate,"haxe.ui.util._Variant.Variant_Impl_","negate",0x67b4a5f9,"haxe.ui.util._Variant.Variant_Impl_.negate","haxe/ui/util/Variant.hx",418,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_427_invert,"haxe.ui.util._Variant.Variant_Impl_","invert",0xa0744b4d,"haxe.ui.util._Variant.Variant_Impl_.invert","haxe/ui/util/Variant.hx",427,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_437_eq,"haxe.ui.util._Variant.Variant_Impl_","eq",0x26f99523,"haxe.ui.util._Variant.Variant_Impl_.eq","haxe/ui/util/Variant.hx",437,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_463_neq,"haxe.ui.util._Variant.Variant_Impl_","neq",0xf36fb3c3,"haxe.ui.util._Variant.Variant_Impl_.neq","haxe/ui/util/Variant.hx",463,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_471_get_isNull,"haxe.ui.util._Variant.Variant_Impl_","get_isNull",0xfe241f11,"haxe.ui.util._Variant.Variant_Impl_.get_isNull","haxe/ui/util/Variant.hx",471,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_474_fromDynamic,"haxe.ui.util._Variant.Variant_Impl_","fromDynamic",0x6990f79e,"haxe.ui.util._Variant.Variant_Impl_.fromDynamic","haxe/ui/util/Variant.hx",474,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_504_containsOnlyDigits,"haxe.ui.util._Variant.Variant_Impl_","containsOnlyDigits",0x58bb1268,"haxe.ui.util._Variant.Variant_Impl_.containsOnlyDigits","haxe/ui/util/Variant.hx",504,0x091cea34)
HX_LOCAL_STACK_FRAME(_hx_pos_6af1edf198e87d95_519_toDynamic,"haxe.ui.util._Variant.Variant_Impl_","toDynamic",0xb59faf6d,"haxe.ui.util._Variant.Variant_Impl_.toDynamic","haxe/ui/util/Variant.hx",519,0x091cea34)
namespace haxe{
namespace ui{
namespace util{
namespace _Variant{

void Variant_Impl__obj::__construct() { }

Dynamic Variant_Impl__obj::__CreateEmpty() { return new Variant_Impl__obj; }

void *Variant_Impl__obj::_hx_vtable = 0;

Dynamic Variant_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Variant_Impl__obj > _hx_result = new Variant_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Variant_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0098505b;
}

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromString(::String s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_24_fromString)
HXDLIN(  24)		return ::haxe::ui::util::VariantType_obj::VT_String(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromString,return )

::String Variant_Impl__obj::toString( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_27_toString)
HXLINE(  28)		if (hx::IsNull( this1 )) {
HXLINE(  29)			return null();
            		}
HXLINE(  31)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE(  33)				int s = this1->_hx_getInt(0);
HXDLIN(  33)				return ::Std_obj::string(s);
            			}
            			break;
            			case (int)1: {
HXLINE(  34)				Float s1 = this1->_hx_getFloat(0);
HXDLIN(  34)				return ::Std_obj::string(s1);
            			}
            			break;
            			case (int)2: {
HXLINE(  32)				::String s2 = this1->_hx_getString(0);
HXDLIN(  32)				return s2;
            			}
            			break;
            			case (int)3: {
HXLINE(  35)				bool s3 = this1->_hx_getBool(0);
HXDLIN(  35)				return ::Std_obj::string(s3);
            			}
            			break;
            			case (int)4: {
HXLINE(  36)				::cpp::VirtualArray s4 = this1->_hx_getObject(0).StaticCast< ::cpp::VirtualArray >();
HXDLIN(  36)				return ::Std_obj::string(s4);
            			}
            			break;
            			case (int)5: {
HXLINE(  38)				 ::haxe::ui::data::DataSource _g7 = this1->_hx_getObject(0).StaticCast<  ::haxe::ui::data::DataSource >();
HXDLIN(  38)				return HX_("",00,00,00,00);
            			}
            			break;
            			case (int)6: {
HXLINE(  37)				 ::haxe::ui::core::Component s5 = this1->_hx_getObject(0).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN(  37)				return ::Std_obj::string(s5);
            			}
            			break;
            			case (int)7: {
HXLINE(  39)				 ::Date s6 = this1->_hx_getObject(0).StaticCast<  ::Date >();
HXDLIN(  39)				return ::Std_obj::string(s6);
            			}
            			break;
            			case (int)8: {
HXLINE(  40)				 ::kha::Image s7 = this1->_hx_getObject(0).StaticCast<  ::kha::Image >();
HXDLIN(  40)				return HX_("",00,00,00,00);
            			}
            			break;
            		}
HXLINE(  31)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toString,return )

bool Variant_Impl__obj::get_isString( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_47_get_isString)
HXDLIN(  47)		if ((this1->_hx_getIndex() == 2)) {
HXDLIN(  47)			::String _g = this1->_hx_getString(0);
HXDLIN(  47)			return true;
            		}
            		else {
HXDLIN(  47)			return false;
            		}
HXDLIN(  47)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isString,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromFloat(Float s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_54_fromFloat)
HXDLIN(  54)		return ::haxe::ui::util::VariantType_obj::VT_Float(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromFloat,return )

 ::Dynamic Variant_Impl__obj::toFloat( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_57_toFloat)
HXLINE(  58)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(this1)) {
HXLINE(  59)			return null();
            		}
HXLINE(  61)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE(  62)				int s = this1->_hx_getInt(0);
HXDLIN(  62)				return s;
            			}
            			break;
            			case (int)1: {
HXLINE(  63)				Float s1 = this1->_hx_getFloat(0);
HXDLIN(  63)				return s1;
            			}
            			break;
            			default:{
HXLINE(  64)				HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            			}
            		}
HXLINE(  61)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toFloat,return )

bool Variant_Impl__obj::get_isFloat( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_70_get_isFloat)
HXDLIN(  70)		if ((this1->_hx_getIndex() == 1)) {
HXDLIN(  70)			Float _g = this1->_hx_getFloat(0);
HXDLIN(  70)			return true;
            		}
            		else {
HXDLIN(  70)			return false;
            		}
HXDLIN(  70)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isFloat,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromInt(int s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_77_fromInt)
HXDLIN(  77)		return ::haxe::ui::util::VariantType_obj::VT_Int(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromInt,return )

 ::Dynamic Variant_Impl__obj::toInt( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_80_toInt)
HXLINE(  81)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(this1)) {
HXLINE(  82)			return null();
            		}
HXLINE(  84)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE(  85)				int s = this1->_hx_getInt(0);
HXDLIN(  85)				return s;
            			}
            			break;
            			case (int)1: {
HXLINE(  86)				Float s1 = this1->_hx_getFloat(0);
HXDLIN(  86)				return ::Std_obj::_hx_int(s1);
            			}
            			break;
            			default:{
HXLINE(  87)				HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            			}
            		}
HXLINE(  84)		return 0;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toInt,return )

bool Variant_Impl__obj::get_isInt( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_93_get_isInt)
HXDLIN(  93)		if ((this1->_hx_getIndex() == 0)) {
HXDLIN(  93)			int _g = this1->_hx_getInt(0);
HXDLIN(  93)			return true;
            		}
            		else {
HXDLIN(  93)			return false;
            		}
HXDLIN(  93)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isInt,return )

bool Variant_Impl__obj::get_isNumber( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_101_get_isNumber)
HXDLIN( 101)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 101)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 101)				return true;
            			}
            			break;
            			case (int)1: {
HXDLIN( 101)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 101)				return true;
            			}
            			break;
            			default:{
HXDLIN( 101)				return false;
            			}
            		}
HXDLIN( 101)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isNumber,return )

Float Variant_Impl__obj::toNumber( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_105_toNumber)
HXDLIN( 105)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 106)				int s = this1->_hx_getInt(0);
HXDLIN( 106)				return ( (Float)(s) );
            			}
            			break;
            			case (int)1: {
HXLINE( 107)				Float s1 = this1->_hx_getFloat(0);
HXDLIN( 107)				return s1;
            			}
            			break;
            			default:{
HXLINE( 108)				HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            			}
            		}
HXLINE( 105)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toNumber,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromBool(bool s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_116_fromBool)
HXDLIN( 116)		return ::haxe::ui::util::VariantType_obj::VT_Bool(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromBool,return )

bool Variant_Impl__obj::toBool( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_119_toBool)
HXLINE( 120)		if (hx::IsNull( this1 )) {
HXLINE( 121)			return false;
            		}
HXLINE( 123)		switch((int)(this1->_hx_getIndex())){
            			case (int)2: {
HXLINE( 125)				::String s = this1->_hx_getString(0);
HXDLIN( 125)				return (s == HX_("true",4e,a7,03,4d));
            			}
            			break;
            			case (int)3: {
HXLINE( 124)				bool s1 = this1->_hx_getBool(0);
HXDLIN( 124)				return s1;
            			}
            			break;
            			default:{
HXLINE( 126)				HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            			}
            		}
HXLINE( 123)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toBool,return )

bool Variant_Impl__obj::get_isBool( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_131_get_isBool)
HXLINE( 132)		if ((this1->_hx_getIndex() == 3)) {
HXLINE( 133)			bool _g = this1->_hx_getBool(0);
HXDLIN( 133)			return true;
            		}
HXLINE( 136)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isBool,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromArray(::cpp::VirtualArray s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_143_fromArray)
HXDLIN( 143)		if (hx::IsNull( s )) {
HXDLIN( 143)			return null();
            		}
            		else {
HXDLIN( 143)			return ::haxe::ui::util::VariantType_obj::VT_Array(s);
            		}
HXDLIN( 143)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromArray,return )

::cpp::VirtualArray Variant_Impl__obj::toArray( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_146_toArray)
HXLINE( 147)		if (hx::IsNull( this1 )) {
HXLINE( 148)			return null();
            		}
HXLINE( 150)		if ((this1->_hx_getIndex() == 4)) {
HXLINE( 151)			::cpp::VirtualArray s = this1->_hx_getObject(0).StaticCast< ::cpp::VirtualArray >();
HXDLIN( 151)			return s;
            		}
            		else {
HXLINE( 152)			HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            		}
HXLINE( 150)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toArray,return )

bool Variant_Impl__obj::get_isArray( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_157_get_isArray)
HXLINE( 158)		if ((this1->_hx_getIndex() == 4)) {
HXLINE( 159)			::cpp::VirtualArray _g = this1->_hx_getObject(0).StaticCast< ::cpp::VirtualArray >();
HXDLIN( 159)			return true;
            		}
HXLINE( 162)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isArray,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromDate( ::Date s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_169_fromDate)
HXDLIN( 169)		return ::haxe::ui::util::VariantType_obj::VT_Date(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromDate,return )

 ::Date Variant_Impl__obj::toDate( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_172_toDate)
HXLINE( 173)		if (hx::IsNull( this1 )) {
HXLINE( 174)			return null();
            		}
HXLINE( 176)		if ((this1->_hx_getIndex() == 7)) {
HXLINE( 177)			 ::Date s = this1->_hx_getObject(0).StaticCast<  ::Date >();
HXDLIN( 177)			return s;
            		}
            		else {
HXLINE( 178)			HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            		}
HXLINE( 176)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toDate,return )

bool Variant_Impl__obj::get_isDate( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_183_get_isDate)
HXLINE( 184)		if ((this1->_hx_getIndex() == 7)) {
HXLINE( 185)			 ::Date _g = this1->_hx_getObject(0).StaticCast<  ::Date >();
HXDLIN( 185)			return true;
            		}
HXLINE( 188)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isDate,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromComponent( ::haxe::ui::core::Component s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_195_fromComponent)
HXDLIN( 195)		return ::haxe::ui::util::VariantType_obj::VT_Component(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromComponent,return )

 ::haxe::ui::core::Component Variant_Impl__obj::toComponent( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_198_toComponent)
HXLINE( 199)		if (hx::IsNull( this1 )) {
HXLINE( 200)			return null();
            		}
HXLINE( 202)		if ((this1->_hx_getIndex() == 6)) {
HXLINE( 203)			 ::haxe::ui::core::Component s = this1->_hx_getObject(0).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 203)			return s;
            		}
            		else {
HXLINE( 204)			HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            		}
HXLINE( 202)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toComponent,return )

bool Variant_Impl__obj::get_isComponent( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_209_get_isComponent)
HXLINE( 210)		if ((this1->_hx_getIndex() == 6)) {
HXLINE( 211)			 ::haxe::ui::core::Component _g = this1->_hx_getObject(0).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 211)			return true;
            		}
HXLINE( 214)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isComponent,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromImageData( ::kha::Image s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_221_fromImageData)
HXDLIN( 221)		return ::haxe::ui::util::VariantType_obj::VT_ImageData(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromImageData,return )

 ::kha::Image Variant_Impl__obj::toImageData( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_224_toImageData)
HXLINE( 225)		if (hx::IsNull( this1 )) {
HXLINE( 226)			return null();
            		}
HXLINE( 228)		if ((this1->_hx_getIndex() == 8)) {
HXLINE( 229)			 ::kha::Image s = this1->_hx_getObject(0).StaticCast<  ::kha::Image >();
HXDLIN( 229)			return s;
            		}
            		else {
HXLINE( 230)			HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            		}
HXLINE( 228)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toImageData,return )

bool Variant_Impl__obj::get_isImageData( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_235_get_isImageData)
HXLINE( 236)		if ((this1->_hx_getIndex() == 8)) {
HXLINE( 237)			 ::kha::Image _g = this1->_hx_getObject(0).StaticCast<  ::kha::Image >();
HXDLIN( 237)			return true;
            		}
HXLINE( 240)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isImageData,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromDataSource( ::haxe::ui::data::DataSource s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_247_fromDataSource)
HXDLIN( 247)		return ::haxe::ui::util::VariantType_obj::VT_DataSource(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromDataSource,return )

 ::haxe::ui::data::DataSource Variant_Impl__obj::toDataSource( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_250_toDataSource)
HXLINE( 251)		if (hx::IsNull( this1 )) {
HXLINE( 252)			return null();
            		}
HXLINE( 255)		if ((this1->_hx_getIndex() == 5)) {
HXLINE( 256)			 ::haxe::ui::data::DataSource s = this1->_hx_getObject(0).StaticCast<  ::haxe::ui::data::DataSource >();
HXDLIN( 256)			return s;
            		}
            		else {
HXLINE( 257)			HX_STACK_DO_THROW(HX_("Variant Type Error",bd,c5,df,49));
            		}
HXLINE( 255)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toDataSource,return )

bool Variant_Impl__obj::get_isDataSource( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_262_get_isDataSource)
HXLINE( 263)		if ((this1->_hx_getIndex() == 5)) {
HXLINE( 264)			 ::haxe::ui::data::DataSource _g = this1->_hx_getObject(0).StaticCast<  ::haxe::ui::data::DataSource >();
HXDLIN( 264)			return true;
            		}
HXLINE( 267)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isDataSource,return )

Float Variant_Impl__obj::addFloat(Float lhs, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_275_addFloat)
HXDLIN( 275)		return (lhs + ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,addFloat,return )

int Variant_Impl__obj::addInt(int lhs, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_280_addInt)
HXDLIN( 280)		return (lhs + ::haxe::ui::util::_Variant::Variant_Impl__obj::toInt(rhs));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,addInt,return )

Float Variant_Impl__obj::subtractFloat(Float lhs, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_285_subtractFloat)
HXDLIN( 285)		return (lhs - ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,subtractFloat,return )

int Variant_Impl__obj::subtractInt(int lhs, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_290_subtractInt)
HXDLIN( 290)		return (lhs - ( (int)(::haxe::ui::util::_Variant::Variant_Impl__obj::toInt(rhs)) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,subtractInt,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::add( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_294_add)
HXLINE( 295)		bool _hx_tmp;
HXDLIN( 295)		bool _hx_tmp1;
HXDLIN( 295)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 295)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 295)				_hx_tmp1 = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 295)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 295)				_hx_tmp1 = true;
            			}
            			break;
            			default:{
HXLINE( 295)				_hx_tmp1 = false;
            			}
            		}
HXDLIN( 295)		if (_hx_tmp1) {
HXLINE( 295)			switch((int)(rhs->_hx_getIndex())){
            				case (int)0: {
HXLINE( 295)					int _g11 = rhs->_hx_getInt(0);
HXDLIN( 295)					_hx_tmp = true;
            				}
            				break;
            				case (int)1: {
HXLINE( 295)					Float _g2 = rhs->_hx_getFloat(0);
HXDLIN( 295)					_hx_tmp = true;
            				}
            				break;
            				default:{
HXLINE( 295)					_hx_tmp = false;
            				}
            			}
            		}
            		else {
HXLINE( 295)			_hx_tmp = false;
            		}
HXDLIN( 295)		if (_hx_tmp) {
HXLINE( 296)			Float _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 296)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat((_hx_tmp2 + ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs)));
            		}
            		else {
HXLINE( 297)			bool _hx_tmp3;
HXDLIN( 297)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 297)				_hx_tmp3 = ::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(rhs);
            			}
            			else {
HXLINE( 297)				_hx_tmp3 = false;
            			}
HXDLIN( 297)			if (_hx_tmp3) {
HXLINE( 298)				::String _hx_tmp4 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 298)				return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromString((_hx_tmp4 + ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs)));
            			}
            		}
HXLINE( 301)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 301)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,add,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::postInc( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_306_postInc)
HXDLIN( 306)		bool _hx_tmp;
HXDLIN( 306)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 306)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 306)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXDLIN( 306)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 306)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXDLIN( 306)				_hx_tmp = false;
            			}
            		}
HXDLIN( 306)		if (_hx_tmp) {
HXLINE( 307)			 ::haxe::ui::util::VariantType old = this1;
HXLINE( 308)			this1 = ::haxe::ui::util::VariantType_obj::VT_Float((::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1) + 1));
HXLINE( 309)			return old;
            		}
            		else {
HXLINE( 311)			HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
            		}
HXLINE( 306)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,postInc,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::preInc( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_317_preInc)
HXDLIN( 317)		bool _hx_tmp;
HXDLIN( 317)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 317)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 317)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXDLIN( 317)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 317)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXDLIN( 317)				_hx_tmp = false;
            			}
            		}
HXDLIN( 317)		if (_hx_tmp) {
HXLINE( 318)			this1 = ::haxe::ui::util::VariantType_obj::VT_Float((::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1) + 1));
HXDLIN( 318)			return this1;
            		}
            		else {
HXLINE( 320)			HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
            		}
HXLINE( 317)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,preInc,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::subtract( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_325_subtract)
HXLINE( 326)		bool _hx_tmp;
HXDLIN( 326)		bool _hx_tmp1;
HXDLIN( 326)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 326)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 326)				_hx_tmp1 = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 326)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 326)				_hx_tmp1 = true;
            			}
            			break;
            			default:{
HXLINE( 326)				_hx_tmp1 = false;
            			}
            		}
HXDLIN( 326)		if (_hx_tmp1) {
HXLINE( 326)			switch((int)(rhs->_hx_getIndex())){
            				case (int)0: {
HXLINE( 326)					int _g11 = rhs->_hx_getInt(0);
HXDLIN( 326)					_hx_tmp = true;
            				}
            				break;
            				case (int)1: {
HXLINE( 326)					Float _g2 = rhs->_hx_getFloat(0);
HXDLIN( 326)					_hx_tmp = true;
            				}
            				break;
            				default:{
HXLINE( 326)					_hx_tmp = false;
            				}
            			}
            		}
            		else {
HXLINE( 326)			_hx_tmp = false;
            		}
HXDLIN( 326)		if (_hx_tmp) {
HXLINE( 327)			Float _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 327)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat((_hx_tmp2 - ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs)));
            		}
            		else {
HXLINE( 328)			bool _hx_tmp3;
HXDLIN( 328)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 328)				_hx_tmp3 = ::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(rhs);
            			}
            			else {
HXLINE( 328)				_hx_tmp3 = false;
            			}
HXDLIN( 328)			if (_hx_tmp3) {
HXLINE( 329)				::String _hx_tmp4 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 329)				return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(::StringTools_obj::replace(_hx_tmp4,::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs),HX_("",00,00,00,00)));
            			}
            		}
HXLINE( 332)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 332)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,subtract,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::postDeinc( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_337_postDeinc)
HXDLIN( 337)		bool _hx_tmp;
HXDLIN( 337)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 337)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 337)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXDLIN( 337)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 337)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXDLIN( 337)				_hx_tmp = false;
            			}
            		}
HXDLIN( 337)		if (_hx_tmp) {
HXLINE( 338)			 ::haxe::ui::util::VariantType old = this1;
HXLINE( 339)			this1 = ::haxe::ui::util::VariantType_obj::VT_Float((::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1) - ( (Float)(1) )));
HXLINE( 340)			return old;
            		}
            		else {
HXLINE( 342)			HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
            		}
HXLINE( 337)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,postDeinc,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::preDeinc( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_348_preDeinc)
HXDLIN( 348)		bool _hx_tmp;
HXDLIN( 348)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXDLIN( 348)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 348)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXDLIN( 348)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 348)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXDLIN( 348)				_hx_tmp = false;
            			}
            		}
HXDLIN( 348)		if (_hx_tmp) {
HXLINE( 349)			this1 = ::haxe::ui::util::VariantType_obj::VT_Float((::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1) - ( (Float)(1) )));
HXDLIN( 349)			return this1;
            		}
            		else {
HXLINE( 351)			HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
            		}
HXLINE( 348)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,preDeinc,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::multiply( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_356_multiply)
HXLINE( 357)		bool _hx_tmp;
HXDLIN( 357)		bool _hx_tmp1;
HXDLIN( 357)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 357)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 357)				_hx_tmp1 = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 357)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 357)				_hx_tmp1 = true;
            			}
            			break;
            			default:{
HXLINE( 357)				_hx_tmp1 = false;
            			}
            		}
HXDLIN( 357)		if (_hx_tmp1) {
HXLINE( 357)			switch((int)(rhs->_hx_getIndex())){
            				case (int)0: {
HXLINE( 357)					int _g11 = rhs->_hx_getInt(0);
HXDLIN( 357)					_hx_tmp = true;
            				}
            				break;
            				case (int)1: {
HXLINE( 357)					Float _g2 = rhs->_hx_getFloat(0);
HXDLIN( 357)					_hx_tmp = true;
            				}
            				break;
            				default:{
HXLINE( 357)					_hx_tmp = false;
            				}
            			}
            		}
            		else {
HXLINE( 357)			_hx_tmp = false;
            		}
HXDLIN( 357)		if (_hx_tmp) {
HXLINE( 358)			Float _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 358)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat((_hx_tmp2 * ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs)));
            		}
HXLINE( 361)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 361)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,multiply,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::divide( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_365_divide)
HXLINE( 366)		bool _hx_tmp;
HXDLIN( 366)		bool _hx_tmp1;
HXDLIN( 366)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 366)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 366)				_hx_tmp1 = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 366)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 366)				_hx_tmp1 = true;
            			}
            			break;
            			default:{
HXLINE( 366)				_hx_tmp1 = false;
            			}
            		}
HXDLIN( 366)		if (_hx_tmp1) {
HXLINE( 366)			switch((int)(rhs->_hx_getIndex())){
            				case (int)0: {
HXLINE( 366)					int _g11 = rhs->_hx_getInt(0);
HXDLIN( 366)					_hx_tmp = true;
            				}
            				break;
            				case (int)1: {
HXLINE( 366)					Float _g2 = rhs->_hx_getFloat(0);
HXDLIN( 366)					_hx_tmp = true;
            				}
            				break;
            				default:{
HXLINE( 366)					_hx_tmp = false;
            				}
            			}
            		}
            		else {
HXLINE( 366)			_hx_tmp = false;
            		}
HXDLIN( 366)		if (_hx_tmp) {
HXLINE( 367)			Float _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 367)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat((_hx_tmp2 / ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs)));
            		}
HXLINE( 370)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 370)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,divide,return )

bool Variant_Impl__obj::gt( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_374_gt)
HXLINE( 375)		bool _hx_tmp;
HXDLIN( 375)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 375)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 375)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 375)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 375)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXLINE( 375)				_hx_tmp = false;
            			}
            		}
HXDLIN( 375)		if (_hx_tmp) {
HXLINE( 376)			Float _hx_tmp1 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 376)			return (_hx_tmp1 > ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            		}
            		else {
HXLINE( 377)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 378)				::String _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 378)				return (_hx_tmp2 > ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs));
            			}
            		}
HXLINE( 381)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 381)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,gt,return )

bool Variant_Impl__obj::gte( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_385_gte)
HXLINE( 386)		bool _hx_tmp;
HXDLIN( 386)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 386)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 386)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 386)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 386)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXLINE( 386)				_hx_tmp = false;
            			}
            		}
HXDLIN( 386)		if (_hx_tmp) {
HXLINE( 387)			Float _hx_tmp1 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 387)			return (_hx_tmp1 >= ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            		}
            		else {
HXLINE( 388)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 389)				::String _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 389)				return (_hx_tmp2 >= ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs));
            			}
            		}
HXLINE( 392)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 392)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,gte,return )

bool Variant_Impl__obj::lt( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_396_lt)
HXLINE( 397)		bool _hx_tmp;
HXDLIN( 397)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 397)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 397)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 397)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 397)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXLINE( 397)				_hx_tmp = false;
            			}
            		}
HXDLIN( 397)		if (_hx_tmp) {
HXLINE( 398)			Float _hx_tmp1 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 398)			return (_hx_tmp1 < ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            		}
            		else {
HXLINE( 399)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 400)				::String _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 400)				return (_hx_tmp2 < ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs));
            			}
            		}
HXLINE( 403)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 403)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,lt,return )

bool Variant_Impl__obj::lte( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_407_lte)
HXLINE( 408)		bool _hx_tmp;
HXDLIN( 408)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 408)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 408)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 408)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 408)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXLINE( 408)				_hx_tmp = false;
            			}
            		}
HXDLIN( 408)		if (_hx_tmp) {
HXLINE( 409)			Float _hx_tmp1 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 409)			return (_hx_tmp1 <= ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            		}
            		else {
HXLINE( 410)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 411)				::String _hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 411)				return (_hx_tmp2 <= ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs));
            			}
            		}
HXLINE( 414)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 414)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,lte,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::negate( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_418_negate)
HXLINE( 419)		bool _hx_tmp;
HXDLIN( 419)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 419)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 419)				_hx_tmp = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 419)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 419)				_hx_tmp = true;
            			}
            			break;
            			default:{
HXLINE( 419)				_hx_tmp = false;
            			}
            		}
HXDLIN( 419)		if (_hx_tmp) {
HXLINE( 420)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(-(::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1)));
            		}
HXLINE( 423)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 423)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,negate,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::invert( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_427_invert)
HXLINE( 428)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isBool(this1)) {
HXLINE( 429)			bool v = ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this1);
HXLINE( 430)			v = !(v);
HXLINE( 431)			return ::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(v);
            		}
HXLINE( 433)		HX_STACK_DO_THROW(HX_("Variant operation error",54,59,90,13));
HXDLIN( 433)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,invert,return )

bool Variant_Impl__obj::eq( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_437_eq)
HXLINE( 438)		bool _hx_tmp;
HXDLIN( 438)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(this1)) {
HXLINE( 438)			_hx_tmp = ::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(rhs);
            		}
            		else {
HXLINE( 438)			_hx_tmp = false;
            		}
HXDLIN( 438)		if (_hx_tmp) {
HXLINE( 439)			return true;
            		}
HXLINE( 442)		bool _hx_tmp1;
HXDLIN( 442)		if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(this1)) {
HXLINE( 442)			_hx_tmp1 = !(::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(rhs));
            		}
            		else {
HXLINE( 442)			_hx_tmp1 = false;
            		}
HXDLIN( 442)		if (_hx_tmp1) {
HXLINE( 443)			return false;
            		}
HXLINE( 446)		bool _hx_tmp2;
HXDLIN( 446)		if (!(::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(this1))) {
HXLINE( 446)			_hx_tmp2 = ::haxe::ui::util::_Variant::Variant_Impl__obj::get_isNull(rhs);
            		}
            		else {
HXLINE( 446)			_hx_tmp2 = false;
            		}
HXDLIN( 446)		if (_hx_tmp2) {
HXLINE( 447)			return false;
            		}
HXLINE( 450)		bool _hx_tmp3;
HXDLIN( 450)		bool _hx_tmp4;
HXDLIN( 450)		switch((int)(this1->_hx_getIndex())){
            			case (int)0: {
HXLINE( 450)				int _g1 = this1->_hx_getInt(0);
HXDLIN( 450)				_hx_tmp4 = true;
            			}
            			break;
            			case (int)1: {
HXLINE( 450)				Float _g = this1->_hx_getFloat(0);
HXDLIN( 450)				_hx_tmp4 = true;
            			}
            			break;
            			default:{
HXLINE( 450)				_hx_tmp4 = false;
            			}
            		}
HXDLIN( 450)		if (_hx_tmp4) {
HXLINE( 450)			switch((int)(rhs->_hx_getIndex())){
            				case (int)0: {
HXLINE( 450)					int _g11 = rhs->_hx_getInt(0);
HXDLIN( 450)					_hx_tmp3 = true;
            				}
            				break;
            				case (int)1: {
HXLINE( 450)					Float _g2 = rhs->_hx_getFloat(0);
HXDLIN( 450)					_hx_tmp3 = true;
            				}
            				break;
            				default:{
HXLINE( 450)					_hx_tmp3 = false;
            				}
            			}
            		}
            		else {
HXLINE( 450)			_hx_tmp3 = false;
            		}
HXDLIN( 450)		if (_hx_tmp3) {
HXLINE( 451)			Float _hx_tmp5 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(this1);
HXDLIN( 451)			return (_hx_tmp5 == ::haxe::ui::util::_Variant::Variant_Impl__obj::toNumber(rhs));
            		}
            		else {
HXLINE( 452)			bool _hx_tmp6;
HXDLIN( 452)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isBool(this1)) {
HXLINE( 452)				_hx_tmp6 = ::haxe::ui::util::_Variant::Variant_Impl__obj::get_isBool(rhs);
            			}
            			else {
HXLINE( 452)				_hx_tmp6 = false;
            			}
HXDLIN( 452)			if (_hx_tmp6) {
HXLINE( 453)				bool _hx_tmp7 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this1);
HXDLIN( 453)				return (_hx_tmp7 == ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(rhs));
            			}
            			else {
HXLINE( 454)				bool _hx_tmp8;
HXDLIN( 454)				if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(this1)) {
HXLINE( 454)					_hx_tmp8 = ::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(rhs);
            				}
            				else {
HXLINE( 454)					_hx_tmp8 = false;
            				}
HXDLIN( 454)				if (_hx_tmp8) {
HXLINE( 455)					::String _hx_tmp9 = ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1);
HXDLIN( 455)					return (_hx_tmp9 == ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(rhs));
            				}
            			}
            		}
HXLINE( 458)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,eq,return )

bool Variant_Impl__obj::neq( ::haxe::ui::util::VariantType this1, ::haxe::ui::util::VariantType rhs){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_463_neq)
HXDLIN( 463)		return !(::haxe::ui::util::_Variant::Variant_Impl__obj::eq(this1,rhs));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Variant_Impl__obj,neq,return )

bool Variant_Impl__obj::get_isNull( ::haxe::ui::util::VariantType this1){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_471_get_isNull)
HXDLIN( 471)		if (hx::IsNotNull( this1 )) {
HXDLIN( 471)			return hx::IsNull( ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this1) );
            		}
            		else {
HXDLIN( 471)			return true;
            		}
HXDLIN( 471)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,get_isNull,return )

 ::haxe::ui::util::VariantType Variant_Impl__obj::fromDynamic( ::Dynamic r){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_474_fromDynamic)
HXLINE( 475)		 ::haxe::ui::util::VariantType v = null();
HXLINE( 476)		if (hx::IsNotNull( r )) {
HXLINE( 477)			bool _hx_tmp;
HXDLIN( 477)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::containsOnlyDigits(r)) {
HXLINE( 477)				_hx_tmp = (::Math_obj::isNaN(::Std_obj::parseFloat((HX_("",00,00,00,00) + ::Std_obj::string(r)))) == false);
            			}
            			else {
HXLINE( 477)				_hx_tmp = false;
            			}
HXDLIN( 477)			if (_hx_tmp) {
HXLINE( 478)				if ((::Std_obj::string(r).indexOf(HX_(".",2e,00,00,00),null()) != -1)) {
HXLINE( 479)					v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(::Std_obj::parseFloat((HX_("",00,00,00,00) + ::Std_obj::string(r))));
            				}
            				else {
HXLINE( 481)					v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(::Std_obj::parseInt((HX_("",00,00,00,00) + ::Std_obj::string(r)))) ));
            				}
            			}
            			else {
HXLINE( 483)				bool _hx_tmp1;
HXDLIN( 483)				if (((HX_("",00,00,00,00) + ::Std_obj::string(r)) != HX_("true",4e,a7,03,4d))) {
HXLINE( 483)					_hx_tmp1 = ((::Std_obj::string(r) + HX_("",00,00,00,00)) == HX_("false",a3,35,4f,fb));
            				}
            				else {
HXLINE( 483)					_hx_tmp1 = true;
            				}
HXDLIN( 483)				if (_hx_tmp1) {
HXLINE( 484)					v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(((HX_("",00,00,00,00) + ::Std_obj::string(r)) == HX_("true",4e,a7,03,4d)));
            				}
            				else {
HXLINE( 485)					if (::Std_obj::is(r,hx::ClassOf< ::String >())) {
HXLINE( 486)						v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(hx::TCast< ::String >::cast(r));
            					}
            					else {
HXLINE( 487)						if (::Std_obj::is(r,hx::ClassOf< ::haxe::ui::core::Component >())) {
HXLINE( 488)							v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromComponent(hx::TCast<  ::haxe::ui::core::Component >::cast(r));
            						}
            						else {
HXLINE( 489)							if (::Std_obj::is(r,hx::ClassOf< ::haxe::ui::data::DataSource >())) {
HXLINE( 490)								v = r;
            							}
            							else {
HXLINE( 491)								if (::Std_obj::is(r,hx::ArrayBase::__mClass)) {
HXLINE( 492)									v = r;
            								}
            								else {
HXLINE( 493)									if (::Std_obj::is(r,hx::ClassOf< ::Date >())) {
HXLINE( 494)										v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromDate(hx::TCast<  ::Date >::cast(r));
            									}
            									else {
HXLINE( 495)										if (::Std_obj::is(r,hx::ClassOf< ::kha::Image >())) {
HXLINE( 496)											v = ::haxe::ui::util::_Variant::Variant_Impl__obj::fromImageData(hx::TCast<  ::kha::Image >::cast(r));
            										}
            										else {
HXLINE( 498)											v = r;
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 501)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,fromDynamic,return )

bool Variant_Impl__obj::containsOnlyDigits( ::Dynamic s){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_504_containsOnlyDigits)
HXLINE( 505)		bool _hx_tmp;
HXDLIN( 505)		if (!(::Std_obj::is(s,hx::ClassOf< int >()))) {
HXLINE( 505)			_hx_tmp = ::Std_obj::is(s,hx::ClassOf< ::Float >());
            		}
            		else {
HXLINE( 505)			_hx_tmp = true;
            		}
HXDLIN( 505)		if (_hx_tmp) {
HXLINE( 506)			return true;
            		}
HXLINE( 509)		::String t = ::Std_obj::string(s);
HXLINE( 510)		{
HXLINE( 510)			int _g = 0;
HXDLIN( 510)			int _g1 = t.length;
HXDLIN( 510)			while((_g < _g1)){
HXLINE( 510)				_g = (_g + 1);
HXDLIN( 510)				int i = (_g - 1);
HXLINE( 511)				::String c = t.charAt(i);
HXLINE( 512)				bool _hx_tmp1;
HXDLIN( 512)				bool _hx_tmp2;
HXDLIN( 512)				bool _hx_tmp3;
HXDLIN( 512)				bool _hx_tmp4;
HXDLIN( 512)				bool _hx_tmp5;
HXDLIN( 512)				bool _hx_tmp6;
HXDLIN( 512)				bool _hx_tmp7;
HXDLIN( 512)				bool _hx_tmp8;
HXDLIN( 512)				bool _hx_tmp9;
HXDLIN( 512)				bool _hx_tmp10;
HXDLIN( 512)				if ((c != HX_("0",30,00,00,00))) {
HXLINE( 512)					_hx_tmp10 = (c != HX_("1",31,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp10 = false;
            				}
HXDLIN( 512)				if (_hx_tmp10) {
HXLINE( 512)					_hx_tmp9 = (c != HX_("2",32,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp9 = false;
            				}
HXDLIN( 512)				if (_hx_tmp9) {
HXLINE( 512)					_hx_tmp8 = (c != HX_("3",33,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp8 = false;
            				}
HXDLIN( 512)				if (_hx_tmp8) {
HXLINE( 512)					_hx_tmp7 = (c != HX_("4",34,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp7 = false;
            				}
HXDLIN( 512)				if (_hx_tmp7) {
HXLINE( 512)					_hx_tmp6 = (c != HX_("5",35,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp6 = false;
            				}
HXDLIN( 512)				if (_hx_tmp6) {
HXLINE( 512)					_hx_tmp5 = (c != HX_("6",36,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp5 = false;
            				}
HXDLIN( 512)				if (_hx_tmp5) {
HXLINE( 512)					_hx_tmp4 = (c != HX_("7",37,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp4 = false;
            				}
HXDLIN( 512)				if (_hx_tmp4) {
HXLINE( 512)					_hx_tmp3 = (c != HX_("8",38,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp3 = false;
            				}
HXDLIN( 512)				if (_hx_tmp3) {
HXLINE( 512)					_hx_tmp2 = (c != HX_("9",39,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp2 = false;
            				}
HXDLIN( 512)				if (_hx_tmp2) {
HXLINE( 512)					_hx_tmp1 = (c != HX_(".",2e,00,00,00));
            				}
            				else {
HXLINE( 512)					_hx_tmp1 = false;
            				}
HXDLIN( 512)				if (_hx_tmp1) {
HXLINE( 513)					return false;
            				}
            			}
            		}
HXLINE( 516)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,containsOnlyDigits,return )

 ::Dynamic Variant_Impl__obj::toDynamic( ::haxe::ui::util::VariantType v){
            	HX_STACKFRAME(&_hx_pos_6af1edf198e87d95_519_toDynamic)
HXLINE( 520)		 ::Dynamic d = null();
HXLINE( 521)		if (hx::IsNotNull( v )) {
HXLINE( 522)			switch((int)(v->_hx_getIndex())){
            				case (int)0: {
HXLINE( 523)					int y = v->_hx_getInt(0);
HXDLIN( 523)					d = y;
            				}
            				break;
            				case (int)1: {
HXLINE( 524)					Float y1 = v->_hx_getFloat(0);
HXDLIN( 524)					d = y1;
            				}
            				break;
            				case (int)2: {
HXLINE( 525)					::String y2 = v->_hx_getString(0);
HXDLIN( 525)					d = y2;
            				}
            				break;
            				case (int)3: {
HXLINE( 526)					bool y3 = v->_hx_getBool(0);
HXDLIN( 526)					d = y3;
            				}
            				break;
            				case (int)4: {
HXLINE( 527)					::cpp::VirtualArray y4 = v->_hx_getObject(0).StaticCast< ::cpp::VirtualArray >();
HXDLIN( 527)					d = y4;
            				}
            				break;
            				case (int)5: {
HXLINE( 529)					 ::haxe::ui::data::DataSource y5 = v->_hx_getObject(0).StaticCast<  ::haxe::ui::data::DataSource >();
HXDLIN( 529)					d = y5;
            				}
            				break;
            				case (int)6: {
HXLINE( 528)					 ::haxe::ui::core::Component y6 = v->_hx_getObject(0).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 528)					d = y6;
            				}
            				break;
            				case (int)7: {
HXLINE( 530)					 ::Date y7 = v->_hx_getObject(0).StaticCast<  ::Date >();
HXDLIN( 530)					d = y7;
            				}
            				break;
            				case (int)8: {
HXLINE( 531)					 ::kha::Image y8 = v->_hx_getObject(0).StaticCast<  ::kha::Image >();
HXDLIN( 531)					d = y8;
            				}
            				break;
            			}
            		}
HXLINE( 534)		return d;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Variant_Impl__obj,toDynamic,return )


Variant_Impl__obj::Variant_Impl__obj()
{
}

bool Variant_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"gt") ) { outValue = gt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lt") ) { outValue = lt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"eq") ) { outValue = eq_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"gte") ) { outValue = gte_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lte") ) { outValue = lte_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"neq") ) { outValue = neq_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toBool") ) { outValue = toBool_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toDate") ) { outValue = toDate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addInt") ) { outValue = addInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"preInc") ) { outValue = preInc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"divide") ) { outValue = divide_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"negate") ) { outValue = negate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"invert") ) { outValue = invert_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"toFloat") ) { outValue = toFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"postInc") ) { outValue = postInc_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toNumber") ) { outValue = toNumber_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromBool") ) { outValue = fromBool_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromDate") ) { outValue = fromDate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addFloat") ) { outValue = addFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtract") ) { outValue = subtract_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"preDeinc") ) { outValue = preDeinc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"multiply") ) { outValue = multiply_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromFloat") ) { outValue = fromFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isInt") ) { outValue = get_isInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"postDeinc") ) { outValue = postDeinc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toDynamic") ) { outValue = toDynamic_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isBool") ) { outValue = get_isBool_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isDate") ) { outValue = get_isDate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isNull") ) { outValue = get_isNull_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"get_isFloat") ) { outValue = get_isFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isArray") ) { outValue = get_isArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toComponent") ) { outValue = toComponent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toImageData") ) { outValue = toImageData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtractInt") ) { outValue = subtractInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromDynamic") ) { outValue = fromDynamic_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_isString") ) { outValue = get_isString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isNumber") ) { outValue = get_isNumber_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toDataSource") ) { outValue = toDataSource_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromComponent") ) { outValue = fromComponent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromImageData") ) { outValue = fromImageData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtractFloat") ) { outValue = subtractFloat_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fromDataSource") ) { outValue = fromDataSource_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_isComponent") ) { outValue = get_isComponent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_isImageData") ) { outValue = get_isImageData_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_isDataSource") ) { outValue = get_isDataSource_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"containsOnlyDigits") ) { outValue = containsOnlyDigits_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Variant_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Variant_Impl__obj_sStaticStorageInfo = 0;
#endif

hx::Class Variant_Impl__obj::__mClass;

static ::String Variant_Impl__obj_sStaticFields[] = {
	HX_("fromString",db,2d,74,54),
	HX_("toString",ac,d0,6e,38),
	HX_("get_isString",64,78,b3,1e),
	HX_("fromFloat",d2,af,1f,b7),
	HX_("toFloat",21,12,1b,cf),
	HX_("get_isFloat",69,c9,16,25),
	HX_("fromInt",a5,dd,fa,57),
	HX_("toInt",34,be,11,14),
	HX_("get_isInt",7c,93,f7,04),
	HX_("get_isNumber",5c,d6,fd,ae),
	HX_("toNumber",a4,2e,b9,c8),
	HX_("fromBool",b4,52,e7,9e),
	HX_("toBool",45,ef,d4,76),
	HX_("get_isBool",fd,b8,09,4f),
	HX_("fromArray",cf,57,18,da),
	HX_("toArray",1e,ba,13,f2),
	HX_("get_isArray",66,71,0f,48),
	HX_("fromDate",b8,24,2f,a0),
	HX_("toDate",49,c1,1c,78),
	HX_("get_isDate",01,8b,51,50),
	HX_("fromComponent",f3,2d,3d,83),
	HX_("toComponent",c2,63,39,76),
	HX_("get_isComponent",0a,5f,b6,ae),
	HX_("fromImageData",5b,28,81,98),
	HX_("toImageData",2a,5e,7d,8b),
	HX_("get_isImageData",72,59,fa,c3),
	HX_("fromDataSource",af,c8,ff,15),
	HX_("toDataSource",00,a8,b2,bf),
	HX_("get_isDataSource",b8,8b,91,f4),
	HX_("addFloat",bb,eb,f3,7b),
	HX_("addInt",4e,1d,01,9f),
	HX_("subtractFloat",e8,d7,6d,80),
	HX_("subtractInt",3b,b4,f5,0b),
	HX_("add",21,f2,49,00),
	HX_("postInc",5e,3c,fa,16),
	HX_("preInc",7b,dc,a0,ae),
	HX_("subtract",14,75,11,f8),
	HX_("postDeinc",7d,ab,59,90),
	HX_("preDeinc",da,4c,fe,56),
	HX_("multiply",24,e2,8c,9a),
	HX_("divide",79,2f,12,bf),
	HX_("gt",2d,5a,00,00),
	HX_("gte",98,8d,4e,00),
	HX_("lt",88,5e,00,00),
	HX_("lte",dd,58,52,00),
	HX_("negate",c2,41,19,67),
	HX_("invert",16,e7,d8,9f),
	HX_("eq",6c,58,00,00),
	HX_("neq",5a,d0,53,00),
	HX_("get_isNull",5a,d3,fc,56),
	HX_("fromDynamic",35,03,56,ce),
	HX_("containsOnlyDigits",b1,b7,3e,2e),
	HX_("toDynamic",44,d7,a9,65),
	::String(null())
};

void Variant_Impl__obj::__register()
{
	Variant_Impl__obj _hx_dummy;
	Variant_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.util._Variant.Variant_Impl_",57,1b,2e,3c);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Variant_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Variant_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Variant_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Variant_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Variant_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace util
} // end namespace _Variant
