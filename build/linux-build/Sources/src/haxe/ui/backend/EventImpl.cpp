// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif

namespace haxe{
namespace ui{
namespace backend{

void EventImpl_obj::__construct() { }

Dynamic EventImpl_obj::__CreateEmpty() { return new EventImpl_obj; }

void *EventImpl_obj::_hx_vtable = 0;

Dynamic EventImpl_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< EventImpl_obj > _hx_result = new EventImpl_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool EventImpl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x00c36404) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x00c36404;
	} else {
		return inClassId==(int)0x4b74db99;
	}
}


EventImpl_obj::EventImpl_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *EventImpl_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *EventImpl_obj_sStaticStorageInfo = 0;
#endif

hx::Class EventImpl_obj::__mClass;

void EventImpl_obj::__register()
{
	EventImpl_obj _hx_dummy;
	EventImpl_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.backend.EventImpl",ce,47,37,e8);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< EventImpl_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = EventImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = EventImpl_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace backend
