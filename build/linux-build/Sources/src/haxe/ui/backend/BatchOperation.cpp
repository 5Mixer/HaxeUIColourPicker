// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_BatchOperation
#include <hxinc/haxe/ui/backend/BatchOperation.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
namespace haxe{
namespace ui{
namespace backend{

::haxe::ui::backend::BatchOperation BatchOperation_obj::ApplyScissor(int x,int y,int w,int h)
{
	return hx::CreateEnum< BatchOperation_obj >(HX_("ApplyScissor",6e,c0,66,0c),3,4)->_hx_init(0,x)->_hx_init(1,y)->_hx_init(2,w)->_hx_init(3,h);
}

::haxe::ui::backend::BatchOperation BatchOperation_obj::ClearScissor;

::haxe::ui::backend::BatchOperation BatchOperation_obj::DrawImage( ::haxe::ui::backend::ComponentImpl c)
{
	return hx::CreateEnum< BatchOperation_obj >(HX_("DrawImage",97,34,47,27),1,1)->_hx_init(0,c);
}

::haxe::ui::backend::BatchOperation BatchOperation_obj::DrawStyle( ::haxe::ui::backend::ComponentImpl c)
{
	return hx::CreateEnum< BatchOperation_obj >(HX_("DrawStyle",6d,ba,fb,ed),0,1)->_hx_init(0,c);
}

::haxe::ui::backend::BatchOperation BatchOperation_obj::DrawText( ::haxe::ui::backend::ComponentImpl c)
{
	return hx::CreateEnum< BatchOperation_obj >(HX_("DrawText",f1,32,15,3b),2,1)->_hx_init(0,c);
}

bool BatchOperation_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("ApplyScissor",6e,c0,66,0c)) { outValue = BatchOperation_obj::ApplyScissor_dyn(); return true; }
	if (inName==HX_("ClearScissor",2f,26,78,a8)) { outValue = BatchOperation_obj::ClearScissor; return true; }
	if (inName==HX_("DrawImage",97,34,47,27)) { outValue = BatchOperation_obj::DrawImage_dyn(); return true; }
	if (inName==HX_("DrawStyle",6d,ba,fb,ed)) { outValue = BatchOperation_obj::DrawStyle_dyn(); return true; }
	if (inName==HX_("DrawText",f1,32,15,3b)) { outValue = BatchOperation_obj::DrawText_dyn(); return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(BatchOperation_obj)

int BatchOperation_obj::__FindIndex(::String inName)
{
	if (inName==HX_("ApplyScissor",6e,c0,66,0c)) return 3;
	if (inName==HX_("ClearScissor",2f,26,78,a8)) return 4;
	if (inName==HX_("DrawImage",97,34,47,27)) return 1;
	if (inName==HX_("DrawStyle",6d,ba,fb,ed)) return 0;
	if (inName==HX_("DrawText",f1,32,15,3b)) return 2;
	return super::__FindIndex(inName);
}

STATIC_HX_DEFINE_DYNAMIC_FUNC4(BatchOperation_obj,ApplyScissor,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(BatchOperation_obj,DrawImage,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(BatchOperation_obj,DrawStyle,return)

STATIC_HX_DEFINE_DYNAMIC_FUNC1(BatchOperation_obj,DrawText,return)

int BatchOperation_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("ApplyScissor",6e,c0,66,0c)) return 4;
	if (inName==HX_("ClearScissor",2f,26,78,a8)) return 0;
	if (inName==HX_("DrawImage",97,34,47,27)) return 1;
	if (inName==HX_("DrawStyle",6d,ba,fb,ed)) return 1;
	if (inName==HX_("DrawText",f1,32,15,3b)) return 1;
	return super::__FindArgCount(inName);
}

hx::Val BatchOperation_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("ApplyScissor",6e,c0,66,0c)) return ApplyScissor_dyn();
	if (inName==HX_("ClearScissor",2f,26,78,a8)) return ClearScissor;
	if (inName==HX_("DrawImage",97,34,47,27)) return DrawImage_dyn();
	if (inName==HX_("DrawStyle",6d,ba,fb,ed)) return DrawStyle_dyn();
	if (inName==HX_("DrawText",f1,32,15,3b)) return DrawText_dyn();
	return super::__Field(inName,inCallProp);
}

static ::String BatchOperation_obj_sStaticFields[] = {
	HX_("DrawStyle",6d,ba,fb,ed),
	HX_("DrawImage",97,34,47,27),
	HX_("DrawText",f1,32,15,3b),
	HX_("ApplyScissor",6e,c0,66,0c),
	HX_("ClearScissor",2f,26,78,a8),
	::String(null())
};

hx::Class BatchOperation_obj::__mClass;

Dynamic __Create_BatchOperation_obj() { return new BatchOperation_obj; }

void BatchOperation_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_("haxe.ui.backend.BatchOperation",d9,88,b7,51), hx::TCanCast< BatchOperation_obj >,BatchOperation_obj_sStaticFields,0,
	&__Create_BatchOperation_obj, &__Create,
	&super::__SGetClass(), &CreateBatchOperation_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &BatchOperation_obj::__GetStatic;
}

void BatchOperation_obj::__boot()
{
ClearScissor = hx::CreateConstEnum< BatchOperation_obj >(HX_("ClearScissor",2f,26,78,a8),4);
}


} // end namespace haxe
} // end namespace ui
} // end namespace backend
