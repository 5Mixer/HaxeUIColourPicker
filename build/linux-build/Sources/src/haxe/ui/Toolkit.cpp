// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Reflect
#include <hxinc/Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <hxinc/StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <hxinc/Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <hxinc/haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <hxinc/haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ui_CallLater
#include <hxinc/haxe/ui/CallLater.h>
#endif
#ifndef INCLUDED_haxe_ui_Toolkit
#include <hxinc/haxe/ui/Toolkit.h>
#endif
#ifndef INCLUDED_haxe_ui_ToolkitAssets
#include <hxinc/haxe/ui/ToolkitAssets.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_AssetsBase
#include <hxinc/haxe/ui/backend/AssetsBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_AssetsImpl
#include <hxinc/haxe/ui/backend/AssetsImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_CallLaterImpl
#include <hxinc/haxe/ui/backend/CallLaterImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_DialogBase
#include <hxinc/haxe/ui/backend/DialogBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_MessageBoxBase
#include <hxinc/haxe/ui/backend/MessageBoxBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenBase
#include <hxinc/haxe/ui/backend/ScreenBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ScreenImpl
#include <hxinc/haxe/ui/backend/ScreenImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_ScrollView
#include <hxinc/haxe/ui/containers/ScrollView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_dialogs_Dialog
#include <hxinc/haxe/ui/containers/dialogs/Dialog.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_dialogs_DialogEvent
#include <hxinc/haxe/ui/containers/dialogs/DialogEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_dialogs_MessageBox
#include <hxinc/haxe/ui/containers/dialogs/MessageBox.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentClassMap
#include <hxinc/haxe/ui/core/ComponentClassMap.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentFieldMap
#include <hxinc/haxe/ui/core/ComponentFieldMap.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDataComponent
#include <hxinc/haxe/ui/core/IDataComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_LayoutClassMap
#include <hxinc/haxe/ui/core/LayoutClassMap.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Screen
#include <hxinc/haxe/ui/core/Screen.h>
#endif
#ifndef INCLUDED_haxe_ui_data_ArrayDataSource
#include <hxinc/haxe/ui/data/ArrayDataSource.h>
#endif
#ifndef INCLUDED_haxe_ui_data_DataSource
#include <hxinc/haxe/ui/data/DataSource.h>
#endif
#ifndef INCLUDED_haxe_ui_data_DataSourceFactory
#include <hxinc/haxe/ui/data/DataSourceFactory.h>
#endif
#ifndef INCLUDED_haxe_ui_events_KeyboardEvent
#include <hxinc/haxe/ui/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_FocusManager
#include <hxinc/haxe/ui/focus/FocusManager.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <hxinc/haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <hxinc/haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_parsers_ui_ComponentInfo
#include <hxinc/haxe/ui/parsers/ui/ComponentInfo.h>
#endif
#ifndef INCLUDED_haxe_ui_parsers_ui_ComponentParser
#include <hxinc/haxe/ui/parsers/ui/ComponentParser.h>
#endif
#ifndef INCLUDED_haxe_ui_parsers_ui_LayoutInfo
#include <hxinc/haxe/ui/parsers/ui/LayoutInfo.h>
#endif
#ifndef INCLUDED_haxe_ui_parsers_ui_resolvers_AssetResourceResolver
#include <hxinc/haxe/ui/parsers/ui/resolvers/AssetResourceResolver.h>
#endif
#ifndef INCLUDED_haxe_ui_parsers_ui_resolvers_ResourceResolver
#include <hxinc/haxe/ui/parsers/ui/resolvers/ResourceResolver.h>
#endif
#ifndef INCLUDED_haxe_ui_scripting_ConditionEvaluator
#include <hxinc/haxe/ui/scripting/ConditionEvaluator.h>
#endif
#ifndef INCLUDED_haxe_ui_scripting_ScriptInterp
#include <hxinc/haxe/ui/scripting/ScriptInterp.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_CompositeStyleSheet
#include <hxinc/haxe/ui/styles/CompositeStyleSheet.h>
#endif
#ifndef INCLUDED_haxe_ui_themes_Theme
#include <hxinc/haxe/ui/themes/Theme.h>
#endif
#ifndef INCLUDED_haxe_ui_themes_ThemeManager
#include <hxinc/haxe/ui/themes/ThemeManager.h>
#endif
#ifndef INCLUDED_haxe_ui_util_GenericConfig
#include <hxinc/haxe/ui/util/GenericConfig.h>
#endif
#ifndef INCLUDED_haxe_ui_util_Properties
#include <hxinc/haxe/ui/util/Properties.h>
#endif
#ifndef INCLUDED_haxe_ui_util_TypeConverter
#include <hxinc/haxe/ui/util/TypeConverter.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif
#ifndef INCLUDED_hscript_Interp
#include <hxinc/hscript/Interp.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_43_get_theme,"haxe.ui.Toolkit","get_theme",0x863ecf3e,"haxe.ui.Toolkit.get_theme","haxe/ui/Toolkit.hx",43,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_46_set_theme,"haxe.ui.Toolkit","set_theme",0x698fbb4a,"haxe.ui.Toolkit.set_theme","haxe/ui/Toolkit.hx",46,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_61_get_backendProperties,"haxe.ui.Toolkit","get_backendProperties",0x0d72e9dc,"haxe.ui.Toolkit.get_backendProperties","haxe/ui/Toolkit.hx",61,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_67_build,"haxe.ui.Toolkit","build",0x3d2a890c,"haxe.ui.Toolkit.build","haxe/ui/Toolkit.hx",67,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_78_buildBackend,"haxe.ui.Toolkit","buildBackend",0x925ed468,"haxe.ui.Toolkit.buildBackend","haxe/ui/Toolkit.hx",78,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_87_init,"haxe.ui.Toolkit","init",0xfa8c72f2,"haxe.ui.Toolkit.init","haxe/ui/Toolkit.hx",87,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_99_onKeyDown,"haxe.ui.Toolkit","onKeyDown",0xa7011720,"haxe.ui.Toolkit.onKeyDown","haxe/ui/Toolkit.hx",99,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_108_messageBox,"haxe.ui.Toolkit","messageBox",0x4ca123e6,"haxe.ui.Toolkit.messageBox","haxe/ui/Toolkit.hx",108,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_131_messageBox,"haxe.ui.Toolkit","messageBox",0x4ca123e6,"haxe.ui.Toolkit.messageBox","haxe/ui/Toolkit.hx",131,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_137_dialog,"haxe.ui.Toolkit","dialog",0x26ab792a,"haxe.ui.Toolkit.dialog","haxe/ui/Toolkit.hx",137,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_150_dialog,"haxe.ui.Toolkit","dialog",0x26ab792a,"haxe.ui.Toolkit.dialog","haxe/ui/Toolkit.hx",150,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_158_get_assets,"haxe.ui.Toolkit","get_assets",0xb69205ae,"haxe.ui.Toolkit.get_assets","haxe/ui/Toolkit.hx",158,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_163_get_screen,"haxe.ui.Toolkit","get_screen",0xb1ebf897,"haxe.ui.Toolkit.get_screen","haxe/ui/Toolkit.hx",163,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_166_componentFromAsset,"haxe.ui.Toolkit","componentFromAsset",0xe844430b,"haxe.ui.Toolkit.componentFromAsset","haxe/ui/Toolkit.hx",166,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_171_componentFromString,"haxe.ui.Toolkit","componentFromString",0x18a34756,"haxe.ui.Toolkit.componentFromString","haxe/ui/Toolkit.hx",171,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_201_buildComponentFromInfo,"haxe.ui.Toolkit","buildComponentFromInfo",0xf2d78229,"haxe.ui.Toolkit.buildComponentFromInfo","haxe/ui/Toolkit.hx",201,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_270_buildLayoutFromInfo,"haxe.ui.Toolkit","buildLayoutFromInfo",0xf8e885ee,"haxe.ui.Toolkit.buildLayoutFromInfo","haxe/ui/Toolkit.hx",270,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_292_set_pixelsPerRem,"haxe.ui.Toolkit","set_pixelsPerRem",0xae42c469,"haxe.ui.Toolkit.set_pixelsPerRem","haxe/ui/Toolkit.hx",292,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_305_get_autoScaleDPIThreshold,"haxe.ui.Toolkit","get_autoScaleDPIThreshold",0x87fa48fe,"haxe.ui.Toolkit.get_autoScaleDPIThreshold","haxe/ui/Toolkit.hx",305,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_314_get_scaleX,"haxe.ui.Toolkit","get_scaleX",0xa6b4a7b9,"haxe.ui.Toolkit.get_scaleX","haxe/ui/Toolkit.hx",314,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_329_set_scaleX,"haxe.ui.Toolkit","set_scaleX",0xaa32462d,"haxe.ui.Toolkit.set_scaleX","haxe/ui/Toolkit.hx",329,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_340_get_scaleY,"haxe.ui.Toolkit","get_scaleY",0xa6b4a7ba,"haxe.ui.Toolkit.get_scaleY","haxe/ui/Toolkit.hx",340,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_355_set_scaleY,"haxe.ui.Toolkit","set_scaleY",0xaa32462e,"haxe.ui.Toolkit.set_scaleY","haxe/ui/Toolkit.hx",355,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_366_get_scale,"haxe.ui.Toolkit","get_scale",0xef871fbf,"haxe.ui.Toolkit.get_scale","haxe/ui/Toolkit.hx",366,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_368_set_scale,"haxe.ui.Toolkit","set_scale",0xd2d80bcb,"haxe.ui.Toolkit.set_scale","haxe/ui/Toolkit.hx",368,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_375_callLater,"haxe.ui.Toolkit","callLater",0x2f0b05ec,"haxe.ui.Toolkit.callLater","haxe/ui/Toolkit.hx",375,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_34_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",34,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_36_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",36,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_38_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",38,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_40_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",40,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_59_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",59,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_66_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",66,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_77_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",77,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_86_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",86,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_291_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",291,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_303_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",303,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_312_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",312,0xed163512)
HX_LOCAL_STACK_FRAME(_hx_pos_2ceee2b7f0fff14e_338_boot,"haxe.ui.Toolkit","boot",0xf5ecbc14,"haxe.ui.Toolkit.boot","haxe/ui/Toolkit.hx",338,0xed163512)
namespace haxe{
namespace ui{

void Toolkit_obj::__construct() { }

Dynamic Toolkit_obj::__CreateEmpty() { return new Toolkit_obj; }

void *Toolkit_obj::_hx_vtable = 0;

Dynamic Toolkit_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Toolkit_obj > _hx_result = new Toolkit_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Toolkit_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1dd8649c;
}

 ::haxe::ui::styles::CompositeStyleSheet Toolkit_obj::styleSheet;

 ::haxe::ds::StringMap Toolkit_obj::properties;

 ::haxe::ui::util::GenericConfig Toolkit_obj::nativeConfig;

::String Toolkit_obj::_theme;

::String Toolkit_obj::get_theme(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_43_get_theme)
HXDLIN(  43)		return ::haxe::ui::Toolkit_obj::_theme;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_theme,return )

::String Toolkit_obj::set_theme(::String value){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_46_set_theme)
HXLINE(  47)		if ((::haxe::ui::Toolkit_obj::_theme == value)) {
HXLINE(  48)			return value;
            		}
HXLINE(  50)		::haxe::ui::Toolkit_obj::_theme = value;
HXLINE(  51)		if ((::haxe::ui::Toolkit_obj::_initialized == true)) {
HXLINE(  52)			::haxe::ui::themes::ThemeManager_obj::get_instance()->applyTheme(::haxe::ui::Toolkit_obj::_theme);
HXLINE(  53)			::haxe::ui::core::Screen_obj::get_instance()->onThemeChanged();
HXLINE(  54)			::haxe::ui::core::Screen_obj::get_instance()->invalidateAll();
            		}
HXLINE(  56)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,set_theme,return )

 ::haxe::ui::util::Properties Toolkit_obj::_backendProperties;

 ::haxe::ui::util::Properties Toolkit_obj::backendProperties;

 ::haxe::ui::util::Properties Toolkit_obj::get_backendProperties(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_61_get_backendProperties)
HXLINE(  62)		::haxe::ui::Toolkit_obj::buildBackend();
HXLINE(  63)		return ::haxe::ui::Toolkit_obj::_backendProperties;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_backendProperties,return )

bool Toolkit_obj::_built;

void Toolkit_obj::build(){
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_67_build)
HXLINE(  68)		if ((::haxe::ui::Toolkit_obj::_built == true)) {
HXLINE(  69)			return;
            		}
HXLINE(  11)		{
HXLINE(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Component",9d,d0,26,b1),HX_("haxe.ui.core.Component",60,d3,76,13));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("CalendarEvent",5c,f8,d2,c0),HX_("haxe.ui.components.CalendarEvent",16,7c,99,b5));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Calendar",de,1a,db,58),HX_("haxe.ui.components.Calendar",64,31,57,30));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("HorizontalProgress",d1,58,80,a6),HX_("haxe.ui.components.HorizontalProgress",d7,12,a0,c2));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("HorizontalScroll",31,e8,fa,09),HX_("haxe.ui.components.HorizontalScroll",b7,f4,d9,e6));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Toggle",b4,33,d8,c3),HX_("haxe.ui.components.Toggle",ba,7c,2b,29));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Scroll",2d,4c,f9,7b),HX_("haxe.ui.components.Scroll",33,95,4c,e1));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Column",f6,c2,1f,fb),HX_("haxe.ui.components.Column",fc,0b,73,60));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("VGrid",3c,e6,ba,b3),HX_("haxe.ui.components.VGrid",f6,1f,ba,0d));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Slider",41,3a,99,a4),HX_("haxe.ui.components.Slider",47,83,ec,09));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Progress",cd,b3,dc,5f),HX_("haxe.ui.components.Progress",53,ca,58,37));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("CheckBox",43,46,8f,86),HX_("haxe.ui.components.CheckBox",c9,5c,0b,5e));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Button",12,d6,74,0e),HX_("haxe.ui.components.Button",18,1f,c8,73));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("HorizontalRange",19,e6,81,17),HX_("haxe.ui.components.HorizontalRange",53,4c,bc,ad));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Label",d4,7d,dc,02),HX_("haxe.ui.components.Label",8e,b7,db,5c));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("TextArea",fa,9a,21,1d),HX_("haxe.ui.components.TextArea",80,b1,9d,f4));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("NumberStepper",28,51,bf,c8),HX_("haxe.ui.components.NumberStepper",e2,d4,85,bd));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("HorizontalSlider",45,d6,9a,32),HX_("haxe.ui.components.HorizontalSlider",cb,e2,79,0f));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("VerticalProgress",63,b2,4f,05),HX_("haxe.ui.components.VerticalProgress",e9,be,2e,e2));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("TextField",ad,04,54,3b),HX_("haxe.ui.components.TextField",67,a3,6b,f0));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("VerticalSlider",57,47,de,e4),HX_("haxe.ui.components.VerticalSlider",5d,06,cb,1d));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Image",3b,8f,96,50),HX_("haxe.ui.components.Image",f5,c8,95,aa));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Spacer",0c,15,e9,ec),HX_("haxe.ui.components.Spacer",12,5e,3c,52));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("HGrid",2e,c7,1e,a4),HX_("haxe.ui.components.HGrid",e8,00,1e,fe));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Stepper",f1,2c,b1,4e),HX_("haxe.ui.components.Stepper",2b,c9,3d,92));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("DropDown",51,5c,ba,c1),HX_("haxe.ui.components.DropDown",d7,72,36,99));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("IDropDownHandler",50,d1,61,63),HX_("haxe.ui.components.IDropDownHandler",d6,dd,40,40));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("DropDownHandler",79,17,a6,96),HX_("haxe.ui.components.DropDownHandler",b3,7d,e0,2c));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("ListDropDownHandler",bb,0c,df,b6),HX_("haxe.ui.components.ListDropDownHandler",f5,17,82,36));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("CalendarDropDownHandler",5b,e6,1b,0c),HX_("haxe.ui.components.CalendarDropDownHandler",95,16,de,66));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("VerticalRange",47,bd,fa,ee),HX_("haxe.ui.components.VerticalRange",01,41,c1,e3));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("TabBar",9e,e6,d1,b0),HX_("haxe.ui.components.TabBar",a4,2f,25,16));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Range",9d,15,4d,77),HX_("haxe.ui.components.Range",57,4f,4c,d1));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Switch",14,be,0d,fa),HX_("haxe.ui.components.Switch",1a,07,61,5f));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("VerticalScroll",43,59,3e,bc),HX_("haxe.ui.components.VerticalScroll",49,18,2b,f5));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("OptionBox",76,59,26,24),HX_("haxe.ui.components.OptionBox",30,f8,3d,d9));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("TabView",3a,2f,16,14),HX_("haxe.ui.containers.TabView",70,96,d8,b7));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("CalendarView",63,40,8d,d9),HX_("haxe.ui.containers.CalendarView",6d,f5,fa,af));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("ContinuousHBox",52,9f,9f,b3),HX_("haxe.ui.containers.ContinuousHBox",dc,2a,ac,48));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Stack",28,d7,38,17),HX_("haxe.ui.containers.Stack",de,e4,d3,13));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Grid",e6,02,45,2f),HX_("haxe.ui.containers.Grid",f0,9d,b1,51));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Group",1f,23,22,2d),HX_("haxe.ui.containers.Group",d5,30,bd,29));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("VBox",55,cf,0a,39),HX_("haxe.ui.containers.VBox",5f,6a,77,5b));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("ListView",03,be,f5,07),HX_("haxe.ui.containers.ListView",0d,a6,4d,ae));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Absolute",97,8a,47,9d),HX_("haxe.ui.containers.Absolute",a1,72,9f,43));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("HBox",a3,d2,c9,2f),HX_("haxe.ui.containers.HBox",ad,6d,36,52));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("ScrollView",32,c5,bf,02),HX_("haxe.ui.containers.ScrollView",bc,43,e9,dc));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Header",ad,7d,94,31),HX_("haxe.ui.containers.Header",37,6f,a5,3c));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("IVirtualContainer",1f,dc,c5,0a),HX_("haxe.ui.containers.IVirtualContainer",d5,a2,19,61));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Box",eb,75,32,00),HX_("haxe.ui.containers.Box",21,8a,37,a2));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Frame",0d,e8,b0,99),HX_("haxe.ui.containers.Frame",c3,f5,4b,96));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("TableView",73,15,b7,5d),HX_("haxe.ui.containers.TableView",29,36,4a,44));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Accordion",68,4a,4f,0a),HX_("haxe.ui.containers.Accordion",1e,6b,e2,f0));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MenuOptionBox",d7,37,2d,51),HX_("haxe.ui.containers.menus.MenuOptionBox",13,3c,fc,56));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MenuItem",72,ae,e0,25),HX_("haxe.ui.containers.menus.MenuItem",b6,13,68,92));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MenuBar",54,59,9c,87),HX_("haxe.ui.containers.menus.MenuBar",90,48,c6,3f));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MenuEvent",db,11,70,b2),HX_("haxe.ui.containers.menus.MenuEvent",17,48,61,3c));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Menu",bf,71,32,33),HX_("haxe.ui.containers.menus.Menu",03,e5,c4,32));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MenuSeparator",a6,1e,59,00),HX_("haxe.ui.containers.menus.MenuSeparator",e2,22,28,06));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MenuCheckBox",02,0f,38,2d),HX_("haxe.ui.containers.menus.MenuCheckBox",46,66,15,89));
HXDLIN(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Std",83,60,3f,00),HX_("Std",83,60,3f,00));
HXLINE(  97)			::haxe::ui::scripting::ScriptInterp_obj::addStaticClass(HX_("Std",83,60,3f,00),hx::ClassOf< ::Std >());
HXLINE(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Math",e8,6d,2f,33),HX_("Math",e8,6d,2f,33));
HXLINE(  97)			::haxe::ui::scripting::ScriptInterp_obj::addStaticClass(HX_("Math",e8,6d,2f,33),hx::ClassOf< ::Math >());
HXLINE(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("StringTools",6a,db,63,03),HX_("StringTools",6a,db,63,03));
HXLINE(  97)			::haxe::ui::scripting::ScriptInterp_obj::addStaticClass(HX_("StringTools",6a,db,63,03),hx::ClassOf< ::StringTools >());
HXLINE(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("Screen",8c,af,f1,7b),HX_("haxe.ui.core.Screen",e9,a4,c1,d3));
HXLINE(  97)			::haxe::ui::scripting::ScriptInterp_obj::addStaticClass(HX_("Screen",8c,af,f1,7b),hx::ClassOf< ::haxe::ui::core::Screen >());
HXLINE(  92)			::haxe::ui::scripting::ScriptInterp_obj::addClassAlias(HX_("MessageBox",a4,da,4a,c9),HX_("haxe.ui.containers.dialogs.MessageBox",11,88,45,5f));
HXLINE(  97)			::haxe::ui::scripting::ScriptInterp_obj::addStaticClass(HX_("MessageBox",a4,da,4a,c9),hx::ClassOf< ::haxe::ui::containers::dialogs::MessageBox >());
HXLINE( 112)			::haxe::ui::themes::ThemeManager_obj::get_instance()->getTheme(HX_("native",97,c9,1c,22))->_hx_set_parent(HX_CTX, HX_("default",c1,d8,c3,9b));
HXLINE( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("native",97,c9,1c,22),HX_("haxeui-core/styles/native/main.css",76,1e,48,cf),((Float)-3.));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("global",63,31,b2,a7),HX_("haxeui-core/styles/global.css",88,82,c9,63),((Float)-4.));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/main.css",ac,d6,ca,62),((Float)-3.));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/buttons.css",38,78,30,88),((Float)-2.99));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/dialogs.css",a2,cd,71,48),((Float)-2.98000000000000043));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/textinputs.css",09,ed,72,81),((Float)-2.97000000000000064));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/scrollbars.css",c0,4c,46,92),((Float)-2.96000000000000085));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/scrollview.css",65,8e,d9,71),((Float)-2.95000000000000107));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/checkboxes.css",64,26,af,d6),((Float)-2.94000000000000128));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/optionboxes.css",1b,c0,25,17),((Float)-2.93000000000000149));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/ranges.css",89,d4,eb,8e),((Float)-2.92000000000000171));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/progressbars.css",e0,cf,d4,b0),((Float)-2.91000000000000192));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/sliders.css",a9,89,67,aa),((Float)-2.90000000000000213));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/steppers.css",35,68,15,e3),((Float)-2.89000000000000234));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/tabs.css",71,55,ad,07),((Float)-2.88000000000000256));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/listview.css",36,28,9e,75),((Float)-2.87000000000000277));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/dropdowns.css",39,62,eb,fe),((Float)-2.86000000000000298));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/tableview.css",ea,bc,51,42),((Float)-2.8500000000000032));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/switches.css",55,15,2d,15),((Float)-2.84000000000000341));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/calendars.css",6c,a4,7e,64),((Float)-2.83000000000000362));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/menus.css",eb,34,77,27),((Float)-2.82000000000000384));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/accordion.css",7f,cc,f1,db),((Float)-2.81000000000000405));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/propertygrids.css",6f,0d,0f,bd),((Float)-2.80000000000000426));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("haxeui-core/styles/default/frames.css",19,2c,67,9f),((Float)-2.79000000000000448));
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("global",63,31,b2,a7),HX_("styles/main.css",db,29,33,58),-2);
HXDLIN( 117)			::haxe::ui::themes::ThemeManager_obj::get_instance()->addStyleResource(HX_("default",c1,d8,c3,9b),HX_("styles/default/main.css",29,0d,68,ea),-1);
HXLINE( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("vslider",17,83,e9,9a),HX_("haxe.ui.components.VerticalSlider",5d,06,cb,1d));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("vscroll",03,95,49,72),HX_("haxe.ui.components.VerticalScroll",49,18,2b,f5));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("vrange",87,39,3c,12),HX_("haxe.ui.components.VerticalRange",01,41,c1,e3));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("vprogress",23,5e,71,c1),HX_("haxe.ui.components.VerticalProgress",e9,be,2e,e2));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("vgrid",3c,4a,b4,35),HX_("haxe.ui.components.VGrid",f6,1f,ba,0d));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("verticalslider",17,3f,f4,05),HX_("haxe.ui.components.VerticalSlider",5d,06,cb,1d));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("verticalscroll",03,51,54,dd),HX_("haxe.ui.components.VerticalScroll",49,18,2b,f5));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("verticalrange",87,fd,dc,13),HX_("haxe.ui.components.VerticalRange",01,41,c1,e3));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("verticalprogress",23,1a,a3,11),HX_("haxe.ui.components.VerticalProgress",e9,be,2e,e2));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("vbox",55,eb,49,4e),HX_("haxe.ui.containers.VBox",5f,6a,77,5b));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("toggle",94,bf,43,8f),HX_("haxe.ui.components.Toggle",ba,7c,2b,29));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("textfield",ed,b4,53,06),HX_("haxe.ui.components.TextField",67,a3,6b,f0));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("textarea",ba,b2,96,58),HX_("haxe.ui.components.TextArea",80,b1,9d,f4));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("text",ad,cc,f9,4c),HX_("haxe.ui.components.Label",8e,b7,db,5c));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("tabview",3a,db,eb,5b),HX_("haxe.ui.containers.TabView",70,96,d8,b7));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("tableview",73,09,0b,d1),HX_("haxe.ui.containers.TableView",29,36,4a,44));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("tabbar",9e,ba,55,7c),HX_("haxe.ui.components.TabBar",a4,2f,25,16));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("switch",f4,49,79,c5),HX_("haxe.ui.components.Switch",1a,07,61,5f));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("stepper",11,05,60,81),HX_("haxe.ui.components.Stepper",2b,c9,3d,92));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("stack",48,67,0b,84),HX_("haxe.ui.containers.Stack",de,e4,d3,13));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("spacer",ec,a0,54,b8),HX_("haxe.ui.components.Spacer",12,5e,3c,52));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("slider",21,c6,04,70),HX_("haxe.ui.components.Slider",47,83,ec,09));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("scrollview",f2,94,35,21),HX_("haxe.ui.containers.ScrollView",bc,43,e9,dc));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("scroll",0d,d8,64,47),HX_("haxe.ui.components.Scroll",33,95,4c,e1));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("range",bd,a5,1f,e4),HX_("haxe.ui.components.Range",57,4f,4c,d1));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("propertygroup",ca,16,0d,51),HX_("haxe.ui.containers.properties.PropertyGroup",d9,cc,86,3d));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("propertygrid",9b,6d,77,37),HX_("haxe.ui.containers.properties.PropertyGrid",6c,6e,1e,3d));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("property",55,48,38,ac),HX_("haxe.ui.containers.properties.Property",86,b0,8f,6c));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("progress",ad,f7,2a,86),HX_("haxe.ui.components.Progress",53,ca,58,37));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("optionbox",b6,c1,6b,82),HX_("haxe.ui.components.OptionBox",30,f8,3d,d9));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("numberstepper",68,d9,7d,b3),HX_("haxe.ui.components.NumberStepper",e2,d4,85,bd));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("menuseparator",e6,ee,95,16),HX_("haxe.ui.containers.menus.MenuSeparator",e2,22,28,06));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("menuoptionbox",37,50,82,67),HX_("haxe.ui.containers.menus.MenuOptionBox",13,3c,fc,56));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("menuitem",32,c6,55,61),HX_("haxe.ui.containers.menus.MenuItem",b6,13,68,92));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("menucheckbox",e2,4e,8c,8b),HX_("haxe.ui.containers.menus.MenuCheckBox",46,66,15,89));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("menubar",94,79,63,ba),HX_("haxe.ui.containers.menus.MenuBar",90,48,c6,3f));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("menu",9f,45,59,48),HX_("haxe.ui.containers.menus.Menu",03,e5,c4,32));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("listview",c3,d5,6a,43),HX_("haxe.ui.containers.ListView",0d,a6,4d,ae));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("label",f4,0d,af,6f),HX_("haxe.ui.components.Label",8e,b7,db,5c));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("itemrenderer",56,55,53,bd),HX_("haxe.ui.core.ItemRenderer",b3,36,19,22));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("image",5b,1f,69,bd),HX_("haxe.ui.components.Image",f5,c8,95,aa));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("hslider",89,04,bd,54),HX_("haxe.ui.components.HorizontalSlider",cb,e2,79,0f));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("hscroll",75,16,1d,2c),HX_("haxe.ui.components.HorizontalScroll",b7,f4,d9,e6));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("hrange",55,2c,3d,79),HX_("haxe.ui.components.HorizontalRange",53,4c,bc,ad));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("hprogress",15,a0,3d,38),HX_("haxe.ui.components.HorizontalProgress",d7,12,a0,c2));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("horizontalslider",05,86,0b,e4),HX_("haxe.ui.components.HorizontalSlider",cb,e2,79,0f));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("horizontalscroll",f1,97,6b,bb),HX_("haxe.ui.components.HorizontalScroll",b7,f4,d9,e6));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("horizontalrange",59,6e,c8,23),HX_("haxe.ui.components.HorizontalRange",53,4c,bc,ad));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("horizontalprogress",91,78,4c,19),HX_("haxe.ui.components.HorizontalProgress",d7,12,a0,c2));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("hgrid",2e,2b,18,26),HX_("haxe.ui.components.HGrid",e8,00,1e,fe));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("header",8d,09,00,fd),HX_("haxe.ui.containers.Header",37,6f,a5,3c));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("hbox",a3,ee,08,45),HX_("haxe.ui.containers.HBox",ad,6d,36,52));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("group",3f,b3,f4,99),HX_("haxe.ui.containers.Group",d5,30,bd,29));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("grid",c6,d6,6b,44),HX_("haxe.ui.containers.Grid",f0,9d,b1,51));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("frame",2d,78,83,06),HX_("haxe.ui.containers.Frame",c3,f5,4b,96));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("dropdown",11,74,2f,fd),HX_("haxe.ui.components.DropDown",d7,72,36,99));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("dialog",c8,04,33,b1),HX_("haxe.ui.containers.dialogs.Dialog",d5,ab,c9,d3));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("continuoushbox",32,27,89,1e),HX_("haxe.ui.containers.ContinuousHBox",dc,2a,ac,48));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("component",bd,f0,53,0f),HX_("haxe.ui.core.Component",60,d3,76,13));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("column",d6,4e,8b,c6),HX_("haxe.ui.components.Column",fc,0b,73,60));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("checkbox",43,d2,f5,ac),HX_("haxe.ui.components.CheckBox",c9,5c,0b,5e));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("calendarview",23,c8,a1,26),HX_("haxe.ui.containers.CalendarView",6d,f5,fa,af));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("calendar",be,5e,29,7f),HX_("haxe.ui.components.Calendar",64,31,57,30));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("button",f2,61,e0,d9),HX_("haxe.ui.components.Button",18,1f,c8,73));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("box",0b,be,4a,00),HX_("haxe.ui.containers.Box",21,8a,37,a2));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("basicitemrenderer",04,cd,79,17),HX_("haxe.ui.core.BasicItemRenderer",e7,92,c8,1d));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("accordion",88,6a,7c,68),HX_("haxe.ui.containers.Accordion",1e,6b,e2,f0));
HXDLIN( 171)			::haxe::ui::core::ComponentClassMap_obj::_hx_register(HX_("absolute",77,ce,95,c3),HX_("haxe.ui.containers.Absolute",a1,72,9f,43));
HXLINE( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("virtuallayout",f5,e6,40,9b),HX_("haxe.ui.layouts.VirtualLayout",fe,f1,2e,12));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("virtual",0b,9e,11,17),HX_("haxe.ui.layouts.VirtualLayout",fe,f1,2e,12));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("verticalvirtuallayout",bf,18,2a,cd),HX_("haxe.ui.layouts.VerticalVirtualLayout",a8,04,47,7e));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("verticalvirtual",55,fc,ab,b2),HX_("haxe.ui.layouts.VerticalVirtualLayout",a8,04,47,7e));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("verticallayout",a0,27,a8,ee),HX_("haxe.ui.layouts.VerticalLayout",b7,10,47,ef));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("verticalgridlayout",e6,09,e1,cd),HX_("haxe.ui.layouts.VerticalGridLayout",9d,3e,74,45));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("verticalgrid",3c,06,58,23),HX_("haxe.ui.layouts.VerticalGridLayout",9d,3e,74,45));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("vertical",76,bc,15,6a),HX_("haxe.ui.layouts.VerticalLayout",b7,10,47,ef));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("scrollviewlayout",1c,85,9f,87),HX_("haxe.ui.layouts.ScrollViewLayout",13,de,2f,6e));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("scrollview",f2,94,35,21),HX_("haxe.ui.layouts.ScrollViewLayout",13,de,2f,6e));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("layout",aa,ae,b8,58),HX_("haxe.ui.layouts.Layout",a1,d4,a9,e0));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("horizontallayout",8e,6e,bf,cc),HX_("haxe.ui.layouts.HorizontalLayout",65,c3,9e,bc));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("horizontalgridlayout",d4,5f,71,19),HX_("haxe.ui.layouts.HorizontalGridLayout",4b,e0,45,8d));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("horizontalgrid",aa,15,3a,39),HX_("haxe.ui.layouts.HorizontalGridLayout",4b,e0,45,8d));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("horizontalcontinuouslayout",dd,6d,c6,6c),HX_("haxe.ui.layouts.HorizontalContinuousLayout",94,49,f7,f3));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("horizontalcontinuous",f3,86,45,9d),HX_("haxe.ui.layouts.HorizontalContinuousLayout",94,49,f7,f3));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("horizontal",e4,fc,c3,15),HX_("haxe.ui.layouts.HorizontalLayout",65,c3,9e,bc));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("delegatelayout",af,e7,23,1c),HX_("haxe.ui.layouts.DelegateLayout",c6,d0,c2,1c));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("delegate",45,f7,0e,5a),HX_("haxe.ui.layouts.DelegateLayout",c6,d0,c2,1c));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("defaultlayout",2b,0e,9d,1e),HX_("haxe.ui.layouts.DefaultLayout",34,19,8b,95));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("default",c1,d8,c3,9b),HX_("haxe.ui.layouts.DefaultLayout",34,19,8b,95));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("absolutelayout",61,30,17,14),HX_("haxe.ui.layouts.AbsoluteLayout",78,19,b6,14));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("absolute",77,ce,95,c3),HX_("haxe.ui.layouts.AbsoluteLayout",78,19,b6,14));
HXDLIN( 177)			::haxe::ui::core::LayoutClassMap_obj::_hx_register(HX_("",00,00,00,00),HX_("haxe.ui.layouts.Layout",a1,d4,a9,e0));
            		}
HXLINE(  73)		::haxe::ui::Toolkit_obj::buildBackend();
HXLINE(  74)		::haxe::ui::Toolkit_obj::_built = true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,build,(void))

bool Toolkit_obj::_backendBuilt;

void Toolkit_obj::buildBackend(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_78_buildBackend)
HXLINE(  79)		if ((::haxe::ui::Toolkit_obj::_backendBuilt == true)) {
HXLINE(  80)			return;
            		}
HXLINE(  83)		::haxe::ui::Toolkit_obj::_backendBuilt = true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,buildBackend,(void))

bool Toolkit_obj::_initialized;

void Toolkit_obj::init( ::Dynamic options){
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_87_init)
HXLINE(  88)		::haxe::ui::Toolkit_obj::build();
HXLINE(  89)		::haxe::ui::themes::ThemeManager_obj::get_instance()->applyTheme(::haxe::ui::Toolkit_obj::_theme);
HXLINE(  90)		if (hx::IsNotNull( options )) {
HXLINE(  91)			::haxe::ui::Toolkit_obj::get_screen()->set_options(options);
HXLINE(  92)			::haxe::ui::ToolkitAssets_obj::get_instance()->_hx_set_options(HX_CTX, options);
            		}
HXLINE(  94)		::haxe::ui::Toolkit_obj::get_screen()->registerEvent(HX_("keydown",81,3d,6e,b1),::haxe::ui::Toolkit_obj::onKeyDown_dyn(),null());
HXLINE(  95)		::haxe::ui::Toolkit_obj::_initialized = true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,init,(void))

void Toolkit_obj::onKeyDown( ::haxe::ui::events::KeyboardEvent event){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_99_onKeyDown)
HXDLIN(  99)		if ((event->keyCode == 9)) {
HXLINE( 100)			if ((event->shiftKey == false)) {
HXLINE( 101)				::haxe::ui::focus::FocusManager_obj::get_instance()->focusNext();
            			}
            			else {
HXLINE( 103)				::haxe::ui::focus::FocusManager_obj::get_instance()->focusPrev();
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,onKeyDown,(void))

 ::haxe::ui::containers::dialogs::Dialog Toolkit_obj::messageBox(::String message,::String title,::String type,hx::Null< bool >  __o_modal, ::Dynamic callback){
            		bool modal = __o_modal.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_108_messageBox)
HXLINE( 109)		if (hx::IsNull( type )) {
HXLINE( 110)			type = HX_("info",6e,38,bb,45);
            		}
            		else {
HXLINE( 111)			if ((type == HX_("info",6e,38,bb,45))) {
HXLINE( 112)				type = HX_("info",6e,38,bb,45);
            			}
            			else {
HXLINE( 113)				if ((type == HX_("question",26,9b,b0,26))) {
HXLINE( 114)					type = HX_("question",26,9b,b0,26);
            				}
            				else {
HXLINE( 115)					if ((type == HX_("warning",5c,da,cb,09))) {
HXLINE( 116)						type = HX_("warning",5c,da,cb,09);
            					}
            					else {
HXLINE( 117)						if ((type == HX_("error",c8,cb,29,73))) {
HXLINE( 118)							type = HX_("error",c8,cb,29,73);
            						}
            					}
            				}
            			}
            		}
HXLINE( 121)		 ::haxe::ui::containers::dialogs::MessageBox messageBox =  ::haxe::ui::containers::dialogs::MessageBox_obj::__alloc( HX_CTX );
HXLINE( 122)		messageBox->set_type(type);
HXLINE( 123)		messageBox->set_message(message);
HXLINE( 124)		messageBox->modal = modal;
HXLINE( 125)		if (hx::IsNotNull( title )) {
HXLINE( 126)			messageBox->set_title(title);
            		}
HXLINE( 128)		messageBox->show();
HXLINE( 129)		if (hx::IsNotNull( callback )) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            			void _hx_run( ::haxe::ui::containers::dialogs::DialogEvent e){
            				HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_131_messageBox)
HXLINE( 131)				callback(e->button);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 130)			messageBox->registerEvent(HX_("dialogClosed",94,e8,f8,2e), ::Dynamic(new _hx_Closure_0(callback)),null());
            		}
HXLINE( 134)		return messageBox;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Toolkit_obj,messageBox,return )

 ::haxe::ui::containers::dialogs::Dialog Toolkit_obj::dialog( ::haxe::ui::core::Component contents,::String title,::String buttons,hx::Null< bool >  __o_modal, ::Dynamic callback){
            		bool modal = __o_modal.Default(true);
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_137_dialog)
HXLINE( 138)		 ::haxe::ui::containers::dialogs::Dialog dialog =  ::haxe::ui::containers::dialogs::Dialog_obj::__alloc( HX_CTX );
HXLINE( 139)		dialog->modal = modal;
HXLINE( 140)		if (hx::IsNotNull( title )) {
HXLINE( 141)			dialog->set_title(title);
            		}
HXLINE( 143)		if (hx::IsNotNull( buttons )) {
HXLINE( 144)			dialog->_hx_set_buttons(HX_CTX, buttons);
            		}
HXLINE( 146)		dialog->addComponent(contents);
HXLINE( 147)		dialog->show();
HXLINE( 148)		if (hx::IsNotNull( callback )) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,callback) HXARGC(1)
            			void _hx_run( ::haxe::ui::containers::dialogs::DialogEvent e){
            				HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_150_dialog)
HXLINE( 150)				callback(e->button);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 149)			dialog->registerEvent(HX_("dialogClosed",94,e8,f8,2e), ::Dynamic(new _hx_Closure_0(callback)),null());
            		}
HXLINE( 153)		return dialog;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Toolkit_obj,dialog,return )

 ::haxe::ui::ToolkitAssets Toolkit_obj::assets;

 ::haxe::ui::ToolkitAssets Toolkit_obj::get_assets(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_158_get_assets)
HXDLIN( 158)		return ::haxe::ui::ToolkitAssets_obj::get_instance();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_assets,return )

 ::haxe::ui::core::Screen Toolkit_obj::screen;

 ::haxe::ui::core::Screen Toolkit_obj::get_screen(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_163_get_screen)
HXDLIN( 163)		return ::haxe::ui::core::Screen_obj::get_instance();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_screen,return )

 ::haxe::ui::core::Component Toolkit_obj::componentFromAsset(::String assetId){
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_166_componentFromAsset)
HXLINE( 167)		::String data = ::haxe::ui::ToolkitAssets_obj::get_instance()->getText(assetId);
HXLINE( 168)		return ::haxe::ui::Toolkit_obj::componentFromString(data,null(), ::haxe::ui::parsers::ui::resolvers::AssetResourceResolver_obj::__alloc( HX_CTX ,assetId,null()),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,componentFromAsset,return )

 ::haxe::ui::core::Component Toolkit_obj::componentFromString(::String data,::String type, ::haxe::ui::parsers::ui::resolvers::ResourceResolver resourceResolver, ::Dynamic callback){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_171_componentFromString)
HXLINE( 172)		bool _hx_tmp;
HXDLIN( 172)		if (hx::IsNotNull( data )) {
HXLINE( 172)			_hx_tmp = (data.length == 0);
            		}
            		else {
HXLINE( 172)			_hx_tmp = true;
            		}
HXDLIN( 172)		if (_hx_tmp) {
HXLINE( 173)			return null();
            		}
HXLINE( 176)		if (hx::IsNull( type )) {
HXLINE( 177)			if (::StringTools_obj::startsWith(::StringTools_obj::trim(data),HX_("<",3c,00,00,00))) {
HXLINE( 178)				type = HX_("xml",d7,6d,5b,00);
            			}
            		}
HXLINE( 182)		 ::haxe::ui::parsers::ui::ComponentParser parser = ::haxe::ui::parsers::ui::ComponentParser_obj::get(type);
HXLINE( 183)		if (hx::IsNull( parser )) {
HXLINE( 184)			::haxe::Log_obj::trace(((HX_("WARNING: type \"",9e,ae,e5,c5) + type) + HX_("\" not recognised",fa,2a,a2,aa)),hx::SourceInfo(HX_("haxe/ui/Toolkit.hx",12,35,16,ed),184,HX_("haxe.ui.Toolkit",cc,33,92,fa),HX_("componentFromString",f8,50,fa,88)));
HXLINE( 185)			return null();
            		}
HXLINE( 188)		 ::haxe::ui::parsers::ui::ComponentInfo c = parser->parse(data,resourceResolver);
HXLINE( 189)		 ::haxe::ui::core::Component component = ::haxe::ui::Toolkit_obj::buildComponentFromInfo(c,callback);
HXLINE( 191)		::String fullScript = HX_("",00,00,00,00);
HXLINE( 192)		{
HXLINE( 192)			int _g = 0;
HXDLIN( 192)			::Array< ::String > _g1 = c->scriptlets;
HXDLIN( 192)			while((_g < _g1->length)){
HXLINE( 192)				::String scriptString = _g1->__get(_g);
HXDLIN( 192)				_g = (_g + 1);
HXLINE( 193)				fullScript = (fullScript + scriptString);
            			}
            		}
HXLINE( 196)		component->set_script(fullScript);
HXLINE( 198)		return component;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Toolkit_obj,componentFromString,return )

 ::haxe::ui::core::Component Toolkit_obj::buildComponentFromInfo( ::haxe::ui::parsers::ui::ComponentInfo c, ::Dynamic callback){
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_201_buildComponentFromInfo)
HXLINE( 202)		bool _hx_tmp;
HXDLIN( 202)		if (hx::IsNotNull( c->condition )) {
HXLINE( 202)			_hx_tmp = ( ::haxe::ui::scripting::ConditionEvaluator_obj::__alloc( HX_CTX )->evaluate(c->condition) == false);
            		}
            		else {
HXLINE( 202)			_hx_tmp = false;
            		}
HXDLIN( 202)		if (_hx_tmp) {
HXLINE( 203)			return null();
            		}
HXLINE( 206)		::String className = ::haxe::ui::core::ComponentClassMap_obj::get(c->type.toLowerCase());
HXLINE( 207)		if (hx::IsNull( className )) {
HXLINE( 208)			::haxe::Log_obj::trace((HX_("WARNING: no class found for component: ",49,80,eb,1b) + c->type),hx::SourceInfo(HX_("haxe/ui/Toolkit.hx",12,35,16,ed),208,HX_("haxe.ui.Toolkit",cc,33,92,fa),HX_("buildComponentFromInfo",c7,a9,e0,70)));
HXLINE( 209)			return null();
            		}
HXLINE( 212)		 ::haxe::ui::core::Component component = ( ( ::haxe::ui::core::Component)(::Type_obj::createInstance(::Type_obj::resolveClass(className),::cpp::VirtualArray_obj::__new(0))) );
HXLINE( 213)		if (hx::IsNull( component )) {
HXLINE( 214)			::haxe::Log_obj::trace((HX_("WARNING: could not create class instance: ",39,44,fa,91) + className),hx::SourceInfo(HX_("haxe/ui/Toolkit.hx",12,35,16,ed),214,HX_("haxe.ui.Toolkit",cc,33,92,fa),HX_("buildComponentFromInfo",c7,a9,e0,70)));
HXLINE( 215)			return null();
            		}
HXLINE( 218)		if (hx::IsNotNull( c->id )) {
HXLINE( 218)			component->set_id(c->id);
            		}
HXLINE( 219)		if (hx::IsNotNull( c->left )) {
HXLINE( 219)			component->set_left(c->left);
            		}
HXLINE( 220)		if (hx::IsNotNull( c->top )) {
HXLINE( 220)			component->set_top(c->top);
            		}
HXLINE( 221)		if (hx::IsNotNull( c->width )) {
HXLINE( 221)			component->set_width(c->width);
            		}
HXLINE( 222)		if (hx::IsNotNull( c->height )) {
HXLINE( 222)			component->set_height(c->height);
            		}
HXLINE( 223)		if (hx::IsNotNull( c->percentWidth )) {
HXLINE( 223)			component->set_percentWidth(c->percentWidth);
            		}
HXLINE( 224)		if (hx::IsNotNull( c->percentHeight )) {
HXLINE( 224)			component->set_percentHeight(c->percentHeight);
            		}
HXLINE( 225)		if (hx::IsNotNull( c->text )) {
HXLINE( 225)			component->set_text(c->text);
            		}
HXLINE( 226)		if (hx::IsNotNull( c->styleNames )) {
HXLINE( 226)			component->set_styleNames(c->styleNames);
            		}
HXLINE( 227)		if (hx::IsNotNull( c->style )) {
HXLINE( 227)			component->set_styleString(c->style);
            		}
HXLINE( 228)		if (hx::IsNotNull( c->layout )) {
HXLINE( 229)			 ::haxe::ui::layouts::Layout layout = ::haxe::ui::Toolkit_obj::buildLayoutFromInfo(c->layout);
HXLINE( 230)			component->set_layout(layout);
            		}
HXLINE( 233)		if (::Std_obj::is(component,hx::ClassOf< ::haxe::ui::containers::ScrollView >())) {
HXLINE( 234)			 ::haxe::ui::containers::ScrollView scrollview = hx::TCast<  ::haxe::ui::containers::ScrollView >::cast(component);
HXLINE( 235)			if (hx::IsNotNull( c->contentWidth )) {
HXLINE( 235)				scrollview->set_contentWidth(( (Float)(c->contentWidth) ));
            			}
HXLINE( 236)			if (hx::IsNotNull( c->contentHeight )) {
HXLINE( 236)				scrollview->set_contentHeight(( (Float)(c->contentHeight) ));
            			}
HXLINE( 237)			if (hx::IsNotNull( c->percentContentWidth )) {
HXLINE( 237)				scrollview->set_percentContentWidth(( (Float)(c->percentContentWidth) ));
            			}
HXLINE( 238)			if (hx::IsNotNull( c->percentContentHeight )) {
HXLINE( 238)				scrollview->set_percentContentHeight(( (Float)(c->percentContentHeight) ));
            			}
            		}
HXLINE( 241)		{
HXLINE( 241)			 ::Dynamic propName = c->properties->keys();
HXDLIN( 241)			while(( (bool)(propName->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 241)				::String propName1 = ( (::String)(propName->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 242)				 ::Dynamic propValue = c->properties->get(propName1);
HXLINE( 243)				::String propName2;
HXDLIN( 243)				if (::haxe::ui::core::ComponentFieldMap_obj::MAP->exists(propName1)) {
HXLINE( 243)					propName2 = ::haxe::ui::core::ComponentFieldMap_obj::MAP->get_string(propName1);
            				}
            				else {
HXLINE( 243)					propName2 = propName1;
            				}
HXDLIN( 243)				propName1 = propName2;
HXLINE( 244)				if (::StringTools_obj::startsWith(propName1,HX_("on",1f,61,00,00))) {
HXLINE( 245)					component->addScriptEvent(propName1,( (::String)(propValue) ));
            				}
            				else {
HXLINE( 247)					propValue = ::haxe::ui::util::TypeConverter_obj::convert(propValue);
HXLINE( 248)					::Reflect_obj::setProperty(component,propName1,propValue);
            				}
            			}
            		}
HXLINE( 252)		bool _hx_tmp1;
HXDLIN( 252)		if (::Std_obj::is(component,hx::ClassOf< ::haxe::ui::core::IDataComponent >())) {
HXLINE( 252)			_hx_tmp1 = hx::IsNotNull( c->data );
            		}
            		else {
HXLINE( 252)			_hx_tmp1 = false;
            		}
HXDLIN( 252)		if (_hx_tmp1) {
HXLINE( 253)			 ::haxe::ui::data::DataSourceFactory _hx_tmp2 =  ::haxe::ui::data::DataSourceFactory_obj::__alloc( HX_CTX );
HXDLIN( 253)			::haxe::ui::core::IDataComponent_obj::set_dataSource( hx::interface_check(component,0xfafb3fc3),_hx_tmp2->fromString(c->get_dataString(),hx::ClassOf< ::haxe::ui::data::ArrayDataSource >()));
            		}
HXLINE( 256)		{
HXLINE( 256)			int _g = 0;
HXDLIN( 256)			::Array< ::Dynamic> _g1 = c->children;
HXDLIN( 256)			while((_g < _g1->length)){
HXLINE( 256)				 ::haxe::ui::parsers::ui::ComponentInfo childInfo = _g1->__get(_g).StaticCast<  ::haxe::ui::parsers::ui::ComponentInfo >();
HXDLIN( 256)				_g = (_g + 1);
HXLINE( 257)				 ::haxe::ui::core::Component childComponent = ::haxe::ui::Toolkit_obj::buildComponentFromInfo(childInfo,callback);
HXLINE( 258)				if (hx::IsNotNull( childComponent )) {
HXLINE( 259)					component->addComponent(childComponent);
            				}
            			}
            		}
HXLINE( 263)		if (hx::IsNotNull( callback )) {
HXLINE( 264)			callback(component);
            		}
HXLINE( 267)		return component;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Toolkit_obj,buildComponentFromInfo,return )

 ::haxe::ui::layouts::Layout Toolkit_obj::buildLayoutFromInfo( ::haxe::ui::parsers::ui::LayoutInfo l){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_270_buildLayoutFromInfo)
HXLINE( 271)		::String className = ::haxe::ui::core::LayoutClassMap_obj::get(l->type.toLowerCase());
HXLINE( 272)		if (hx::IsNull( className )) {
HXLINE( 273)			::haxe::Log_obj::trace((HX_("WARNING: no class found for layout: ",6a,48,c1,d8) + l->type),hx::SourceInfo(HX_("haxe/ui/Toolkit.hx",12,35,16,ed),273,HX_("haxe.ui.Toolkit",cc,33,92,fa),HX_("buildLayoutFromInfo",90,8f,3f,69)));
HXLINE( 274)			return null();
            		}
HXLINE( 277)		 ::haxe::ui::layouts::Layout layout = ( ( ::haxe::ui::layouts::Layout)(::Type_obj::createInstance(::Type_obj::resolveClass(className),::cpp::VirtualArray_obj::__new(0))) );
HXLINE( 278)		if (hx::IsNull( layout )) {
HXLINE( 279)			::haxe::Log_obj::trace((HX_("WARNING: could not create class instance: ",39,44,fa,91) + className),hx::SourceInfo(HX_("haxe/ui/Toolkit.hx",12,35,16,ed),279,HX_("haxe.ui.Toolkit",cc,33,92,fa),HX_("buildLayoutFromInfo",90,8f,3f,69)));
HXLINE( 280)			return null();
            		}
HXLINE( 283)		{
HXLINE( 283)			 ::Dynamic propName = l->properties->keys();
HXDLIN( 283)			while(( (bool)(propName->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 283)				::String propName1 = ( (::String)(propName->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)()) );
HXLINE( 284)				 ::Dynamic propValue = l->properties->get(propName1);
HXLINE( 285)				::Reflect_obj::setProperty(layout,propName1,::haxe::ui::util::_Variant::Variant_Impl__obj::fromDynamic(propValue));
            			}
            		}
HXLINE( 288)		return layout;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,buildLayoutFromInfo,return )

int Toolkit_obj::pixelsPerRem;

int Toolkit_obj::set_pixelsPerRem(int value){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_292_set_pixelsPerRem)
HXLINE( 293)		if ((::haxe::ui::Toolkit_obj::pixelsPerRem == value)) {
HXLINE( 294)			return value;
            		}
HXLINE( 297)		::haxe::ui::Toolkit_obj::pixelsPerRem = value;
HXLINE( 298)		::haxe::ui::core::Screen_obj::get_instance()->refreshStyleRootComponents();
HXLINE( 300)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,set_pixelsPerRem,return )

bool Toolkit_obj::autoScale;

int Toolkit_obj::autoScaleDPIThreshold;

int Toolkit_obj::get_autoScaleDPIThreshold(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_305_get_autoScaleDPIThreshold)
HXLINE( 306)		if ((::haxe::ui::core::Screen_obj::get_instance()->get_isRetina() == true)) {
HXLINE( 307)			return 192;
            		}
HXLINE( 309)		return 120;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_autoScaleDPIThreshold,return )

Float Toolkit_obj::_scaleX;

Float Toolkit_obj::get_scaleX(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_314_get_scaleX)
HXLINE( 315)		if ((::haxe::ui::Toolkit_obj::_scaleX == 0)) {
HXLINE( 316)			if ((::haxe::ui::Toolkit_obj::autoScale == true)) {
HXLINE( 317)				Float dpi = ::haxe::ui::core::Screen_obj::get_instance()->get_dpi();
HXLINE( 318)				if ((dpi > ::haxe::ui::Toolkit_obj::get_autoScaleDPIThreshold())) {
HXLINE( 319)					::haxe::ui::Toolkit_obj::_scaleX = ::Math_obj::fround((dpi / ( (Float)(::haxe::ui::Toolkit_obj::get_autoScaleDPIThreshold()) )));
            				}
            				else {
HXLINE( 321)					::haxe::ui::Toolkit_obj::_scaleX = ( (Float)(1) );
            				}
            			}
            			else {
HXLINE( 324)				::haxe::ui::Toolkit_obj::_scaleX = ( (Float)(1) );
            			}
            		}
HXLINE( 327)		return ::haxe::ui::Toolkit_obj::_scaleX;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_scaleX,return )

Float Toolkit_obj::set_scaleX(Float value){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_329_set_scaleX)
HXLINE( 330)		if ((::haxe::ui::Toolkit_obj::_scaleX == value)) {
HXLINE( 331)			return value;
            		}
HXLINE( 333)		::haxe::ui::Toolkit_obj::_scaleX = value;
HXLINE( 334)		::haxe::ui::Toolkit_obj::autoScale = false;
HXLINE( 335)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,set_scaleX,return )

Float Toolkit_obj::_scaleY;

Float Toolkit_obj::get_scaleY(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_340_get_scaleY)
HXLINE( 341)		if ((::haxe::ui::Toolkit_obj::_scaleY == 0)) {
HXLINE( 342)			if ((::haxe::ui::Toolkit_obj::autoScale == true)) {
HXLINE( 343)				Float dpi = ::haxe::ui::core::Screen_obj::get_instance()->get_dpi();
HXLINE( 344)				if ((dpi > ::haxe::ui::Toolkit_obj::get_autoScaleDPIThreshold())) {
HXLINE( 345)					::haxe::ui::Toolkit_obj::_scaleY = ::Math_obj::fround((dpi / ( (Float)(::haxe::ui::Toolkit_obj::get_autoScaleDPIThreshold()) )));
            				}
            				else {
HXLINE( 347)					::haxe::ui::Toolkit_obj::_scaleY = ( (Float)(1) );
            				}
            			}
            			else {
HXLINE( 350)				::haxe::ui::Toolkit_obj::_scaleY = ( (Float)(1) );
            			}
            		}
HXLINE( 353)		return ::haxe::ui::Toolkit_obj::_scaleY;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_scaleY,return )

Float Toolkit_obj::set_scaleY(Float value){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_355_set_scaleY)
HXLINE( 356)		if ((::haxe::ui::Toolkit_obj::_scaleY == value)) {
HXLINE( 357)			return value;
            		}
HXLINE( 359)		::haxe::ui::Toolkit_obj::_scaleY = value;
HXLINE( 360)		::haxe::ui::Toolkit_obj::autoScale = false;
HXLINE( 361)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,set_scaleY,return )

Float Toolkit_obj::get_scale(){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_366_get_scale)
HXDLIN( 366)		Float _hx_tmp = ::haxe::ui::Toolkit_obj::get_scaleX();
HXDLIN( 366)		return ::Math_obj::max(_hx_tmp,::haxe::ui::Toolkit_obj::get_scaleY());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Toolkit_obj,get_scale,return )

Float Toolkit_obj::set_scale(Float value){
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_368_set_scale)
HXLINE( 369)		::haxe::ui::Toolkit_obj::set_scaleX(value);
HXLINE( 370)		::haxe::ui::Toolkit_obj::set_scaleY(value);
HXLINE( 371)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,set_scale,return )

void Toolkit_obj::callLater( ::Dynamic fn){
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_375_callLater)
HXDLIN( 375)		 ::haxe::ui::CallLater_obj::__alloc( HX_CTX ,fn);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Toolkit_obj,callLater,(void))


Toolkit_obj::Toolkit_obj()
{
}

bool Toolkit_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"init") ) { outValue = init_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"theme") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_theme() ); return true; } }
		if (HX_FIELD_EQ(inName,"build") ) { outValue = build_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"scale") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_scale() ); return true; } }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_theme") ) { outValue = ( _theme ); return true; }
		if (HX_FIELD_EQ(inName,"_built") ) { outValue = ( _built ); return true; }
		if (HX_FIELD_EQ(inName,"dialog") ) { outValue = dialog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"assets") ) { outValue = ( inCallProp == hx::paccAlways ? get_assets() : assets ); return true; }
		if (HX_FIELD_EQ(inName,"screen") ) { outValue = ( inCallProp == hx::paccAlways ? get_screen() : screen ); return true; }
		if (HX_FIELD_EQ(inName,"scaleX") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_scaleX() ); return true; } }
		if (HX_FIELD_EQ(inName,"scaleY") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_scaleY() ); return true; } }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_scaleX") ) { outValue = ( _scaleX ); return true; }
		if (HX_FIELD_EQ(inName,"_scaleY") ) { outValue = ( _scaleY ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_theme") ) { outValue = get_theme_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_theme") ) { outValue = set_theme_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { outValue = onKeyDown_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"autoScale") ) { outValue = ( autoScale ); return true; }
		if (HX_FIELD_EQ(inName,"get_scale") ) { outValue = get_scale_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_scale") ) { outValue = set_scale_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"callLater") ) { outValue = callLater_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"styleSheet") ) { outValue = ( styleSheet ); return true; }
		if (HX_FIELD_EQ(inName,"properties") ) { outValue = ( properties ); return true; }
		if (HX_FIELD_EQ(inName,"messageBox") ) { outValue = messageBox_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_assets") ) { outValue = get_assets_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_screen") ) { outValue = get_screen_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_scaleX") ) { outValue = get_scaleX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_scaleX") ) { outValue = set_scaleX_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_scaleY") ) { outValue = get_scaleY_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_scaleY") ) { outValue = set_scaleY_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"nativeConfig") ) { outValue = ( nativeConfig ); return true; }
		if (HX_FIELD_EQ(inName,"buildBackend") ) { outValue = buildBackend_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"_initialized") ) { outValue = ( _initialized ); return true; }
		if (HX_FIELD_EQ(inName,"pixelsPerRem") ) { outValue = ( pixelsPerRem ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_backendBuilt") ) { outValue = ( _backendBuilt ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"set_pixelsPerRem") ) { outValue = set_pixelsPerRem_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"backendProperties") ) { outValue = ( inCallProp == hx::paccAlways ? get_backendProperties() : backendProperties ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_backendProperties") ) { outValue = ( _backendProperties ); return true; }
		if (HX_FIELD_EQ(inName,"componentFromAsset") ) { outValue = componentFromAsset_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"componentFromString") ) { outValue = componentFromString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"buildLayoutFromInfo") ) { outValue = buildLayoutFromInfo_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_backendProperties") ) { outValue = get_backendProperties_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"autoScaleDPIThreshold") ) { outValue = ( inCallProp == hx::paccAlways ? get_autoScaleDPIThreshold() : autoScaleDPIThreshold ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"buildComponentFromInfo") ) { outValue = buildComponentFromInfo_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"get_autoScaleDPIThreshold") ) { outValue = get_autoScaleDPIThreshold_dyn(); return true; }
	}
	return false;
}

bool Toolkit_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"theme") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_theme(ioValue.Cast< ::String >()) ); }
		if (HX_FIELD_EQ(inName,"scale") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_scale(ioValue.Cast< Float >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_theme") ) { _theme=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"_built") ) { _built=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"assets") ) { assets=ioValue.Cast<  ::haxe::ui::ToolkitAssets >(); return true; }
		if (HX_FIELD_EQ(inName,"screen") ) { screen=ioValue.Cast<  ::haxe::ui::core::Screen >(); return true; }
		if (HX_FIELD_EQ(inName,"scaleX") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_scaleX(ioValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"scaleY") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_scaleY(ioValue.Cast< Float >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"_scaleX") ) { _scaleX=ioValue.Cast< Float >(); return true; }
		if (HX_FIELD_EQ(inName,"_scaleY") ) { _scaleY=ioValue.Cast< Float >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"autoScale") ) { autoScale=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"styleSheet") ) { styleSheet=ioValue.Cast<  ::haxe::ui::styles::CompositeStyleSheet >(); return true; }
		if (HX_FIELD_EQ(inName,"properties") ) { properties=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"nativeConfig") ) { nativeConfig=ioValue.Cast<  ::haxe::ui::util::GenericConfig >(); return true; }
		if (HX_FIELD_EQ(inName,"_initialized") ) { _initialized=ioValue.Cast< bool >(); return true; }
		if (HX_FIELD_EQ(inName,"pixelsPerRem") ) { if (inCallProp == hx::paccAlways)  ioValue = ( set_pixelsPerRem(ioValue.Cast< int >()) ); else pixelsPerRem=ioValue.Cast< int >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"_backendBuilt") ) { _backendBuilt=ioValue.Cast< bool >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"backendProperties") ) { backendProperties=ioValue.Cast<  ::haxe::ui::util::Properties >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"_backendProperties") ) { _backendProperties=ioValue.Cast<  ::haxe::ui::util::Properties >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"autoScaleDPIThreshold") ) { autoScaleDPIThreshold=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Toolkit_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Toolkit_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::styles::CompositeStyleSheet */ ,(void *) &Toolkit_obj::styleSheet,HX_("styleSheet",ae,3b,16,fc)},
	{hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &Toolkit_obj::properties,HX_("properties",f3,fb,0e,61)},
	{hx::fsObject /*  ::haxe::ui::util::GenericConfig */ ,(void *) &Toolkit_obj::nativeConfig,HX_("nativeConfig",b9,5f,e9,7c)},
	{hx::fsString,(void *) &Toolkit_obj::_theme,HX_("_theme",4a,c5,6d,0b)},
	{hx::fsObject /*  ::haxe::ui::util::Properties */ ,(void *) &Toolkit_obj::_backendProperties,HX_("_backendProperties",e8,c1,40,dd)},
	{hx::fsObject /*  ::haxe::ui::util::Properties */ ,(void *) &Toolkit_obj::backendProperties,HX_("backendProperties",27,1d,2b,0a)},
	{hx::fsBool,(void *) &Toolkit_obj::_built,HX_("_built",7f,22,d2,b6)},
	{hx::fsBool,(void *) &Toolkit_obj::_backendBuilt,HX_("_backendBuilt",69,d9,98,22)},
	{hx::fsBool,(void *) &Toolkit_obj::_initialized,HX_("_initialized",15,a3,19,9d)},
	{hx::fsObject /*  ::haxe::ui::ToolkitAssets */ ,(void *) &Toolkit_obj::assets,HX_("assets",83,48,03,4c)},
	{hx::fsObject /*  ::haxe::ui::core::Screen */ ,(void *) &Toolkit_obj::screen,HX_("screen",6c,3b,5d,47)},
	{hx::fsInt,(void *) &Toolkit_obj::pixelsPerRem,HX_("pixelsPerRem",8a,67,2b,3a)},
	{hx::fsBool,(void *) &Toolkit_obj::autoScale,HX_("autoScale",9b,0c,da,56)},
	{hx::fsInt,(void *) &Toolkit_obj::autoScaleDPIThreshold,HX_("autoScaleDPIThreshold",c9,7d,55,df)},
	{hx::fsFloat,(void *) &Toolkit_obj::_scaleX,HX_("_scaleX",2d,fc,9c,aa)},
	{hx::fsFloat,(void *) &Toolkit_obj::_scaleY,HX_("_scaleY",2e,fc,9c,aa)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Toolkit_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Toolkit_obj::styleSheet,"styleSheet");
	HX_MARK_MEMBER_NAME(Toolkit_obj::properties,"properties");
	HX_MARK_MEMBER_NAME(Toolkit_obj::nativeConfig,"nativeConfig");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_theme,"_theme");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_backendProperties,"_backendProperties");
	HX_MARK_MEMBER_NAME(Toolkit_obj::backendProperties,"backendProperties");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_built,"_built");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_backendBuilt,"_backendBuilt");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_initialized,"_initialized");
	HX_MARK_MEMBER_NAME(Toolkit_obj::assets,"assets");
	HX_MARK_MEMBER_NAME(Toolkit_obj::screen,"screen");
	HX_MARK_MEMBER_NAME(Toolkit_obj::pixelsPerRem,"pixelsPerRem");
	HX_MARK_MEMBER_NAME(Toolkit_obj::autoScale,"autoScale");
	HX_MARK_MEMBER_NAME(Toolkit_obj::autoScaleDPIThreshold,"autoScaleDPIThreshold");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_scaleX,"_scaleX");
	HX_MARK_MEMBER_NAME(Toolkit_obj::_scaleY,"_scaleY");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Toolkit_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Toolkit_obj::styleSheet,"styleSheet");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::properties,"properties");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::nativeConfig,"nativeConfig");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_theme,"_theme");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_backendProperties,"_backendProperties");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::backendProperties,"backendProperties");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_built,"_built");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_backendBuilt,"_backendBuilt");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_initialized,"_initialized");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::assets,"assets");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::screen,"screen");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::pixelsPerRem,"pixelsPerRem");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::autoScale,"autoScale");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::autoScaleDPIThreshold,"autoScaleDPIThreshold");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_scaleX,"_scaleX");
	HX_VISIT_MEMBER_NAME(Toolkit_obj::_scaleY,"_scaleY");
};

#endif

hx::Class Toolkit_obj::__mClass;

static ::String Toolkit_obj_sStaticFields[] = {
	HX_("styleSheet",ae,3b,16,fc),
	HX_("properties",f3,fb,0e,61),
	HX_("nativeConfig",b9,5f,e9,7c),
	HX_("_theme",4a,c5,6d,0b),
	HX_("get_theme",60,da,2f,53),
	HX_("set_theme",6c,c6,80,36),
	HX_("_backendProperties",e8,c1,40,dd),
	HX_("backendProperties",27,1d,2b,0a),
	HX_("get_backendProperties",fe,1f,d9,88),
	HX_("_built",7f,22,d2,b6),
	HX_("build",2e,db,ea,ba),
	HX_("_backendBuilt",69,d9,98,22),
	HX_("buildBackend",86,ea,df,0d),
	HX_("_initialized",15,a3,19,9d),
	HX_("init",10,3b,bb,45),
	HX_("onKeyDown",42,22,f2,73),
	HX_("messageBox",84,d6,99,d2),
	HX_("dialog",c8,04,33,b1),
	HX_("assets",83,48,03,4c),
	HX_("get_assets",4c,b8,8a,3c),
	HX_("screen",6c,3b,5d,47),
	HX_("get_screen",35,ab,e4,37),
	HX_("componentFromAsset",a9,c3,3d,32),
	HX_("componentFromString",f8,50,fa,88),
	HX_("buildComponentFromInfo",c7,a9,e0,70),
	HX_("buildLayoutFromInfo",90,8f,3f,69),
	HX_("pixelsPerRem",8a,67,2b,3a),
	HX_("set_pixelsPerRem",87,41,0c,95),
	HX_("autoScale",9b,0c,da,56),
	HX_("autoScaleDPIThreshold",c9,7d,55,df),
	HX_("get_autoScaleDPIThreshold",20,38,53,e5),
	HX_("_scaleX",2d,fc,9c,aa),
	HX_("get_scaleX",57,5a,ad,2c),
	HX_("set_scaleX",cb,f8,2a,30),
	HX_("_scaleY",2e,fc,9c,aa),
	HX_("get_scaleY",58,5a,ad,2c),
	HX_("set_scaleY",cc,f8,2a,30),
	HX_("get_scale",e1,2a,78,bc),
	HX_("set_scale",ed,16,c9,9f),
	HX_("callLater",0e,11,fc,fb),
	::String(null())
};

void Toolkit_obj::__register()
{
	Toolkit_obj _hx_dummy;
	Toolkit_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.Toolkit",cc,33,92,fa);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Toolkit_obj::__GetStatic;
	__mClass->mSetStaticField = &Toolkit_obj::__SetStatic;
	__mClass->mMarkFunc = Toolkit_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Toolkit_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Toolkit_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Toolkit_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Toolkit_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Toolkit_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Toolkit_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_34_boot)
HXDLIN(  34)		styleSheet =  ::haxe::ui::styles::CompositeStyleSheet_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_36_boot)
HXDLIN(  36)		properties =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_38_boot)
HXDLIN(  38)		nativeConfig =  ::haxe::ui::util::GenericConfig_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_40_boot)
HXDLIN(  40)		_theme = HX_("default",c1,d8,c3,9b);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_59_boot)
HXDLIN(  59)		_backendProperties =  ::haxe::ui::util::Properties_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_66_boot)
HXDLIN(  66)		_built = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_77_boot)
HXDLIN(  77)		_backendBuilt = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_86_boot)
HXDLIN(  86)		_initialized = false;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_291_boot)
HXDLIN( 291)		pixelsPerRem = 16;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_303_boot)
HXDLIN( 303)		autoScale = true;
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_312_boot)
HXDLIN( 312)		_scaleX = ((Float)0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_2ceee2b7f0fff14e_338_boot)
HXDLIN( 338)		_scaleY = ((Float)0);
            	}
}

} // end namespace haxe
} // end namespace ui
