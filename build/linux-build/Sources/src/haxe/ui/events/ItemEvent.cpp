// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_events_ItemEvent
#include <hxinc/haxe/ui/events/ItemEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d64a062362a93ece_6_new,"haxe.ui.events.ItemEvent","new",0xbbed3a56,"haxe.ui.events.ItemEvent.new","haxe/ui/events/ItemEvent.hx",6,0x21b4ccbb)
HX_LOCAL_STACK_FRAME(_hx_pos_d64a062362a93ece_12_clone,"haxe.ui.events.ItemEvent","clone",0x2ca366d3,"haxe.ui.events.ItemEvent.clone","haxe/ui/events/ItemEvent.hx",12,0x21b4ccbb)
HX_LOCAL_STACK_FRAME(_hx_pos_d64a062362a93ece_7_boot,"haxe.ui.events.ItemEvent","boot",0xabbed17c,"haxe.ui.events.ItemEvent.boot","haxe/ui/events/ItemEvent.hx",7,0x21b4ccbb)
namespace haxe{
namespace ui{
namespace events{

void ItemEvent_obj::__construct(::String type, ::Dynamic bubble, ::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_d64a062362a93ece_6_new)
HXLINE(  10)		this->_hx_set_sourceEvent(HX_CTX, null());
HXLINE(   9)		this->_hx_set_source(HX_CTX, null());
HXLINE(   6)		super::__construct(type,bubble,data);
            	}

Dynamic ItemEvent_obj::__CreateEmpty() { return new ItemEvent_obj; }

void *ItemEvent_obj::_hx_vtable = 0;

Dynamic ItemEvent_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ItemEvent_obj > _hx_result = new ItemEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool ItemEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x28d60c10) {
		if (inClassId<=(int)0x00c36404) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x00c36404;
		} else {
			return inClassId==(int)0x28d60c10;
		}
	} else {
		return inClassId==(int)0x4b74db99 || inClassId==(int)0x5aa3ef0f;
	}
}

 ::haxe::ui::events::UIEvent ItemEvent_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_d64a062362a93ece_12_clone)
HXLINE(  13)		 ::haxe::ui::events::ItemEvent c =  ::haxe::ui::events::ItemEvent_obj::__alloc( HX_CTX ,this->type,null(),null());
HXLINE(  14)		c->_hx_set_source(HX_CTX, this->source);
HXLINE(  15)		c->_hx_set_sourceEvent(HX_CTX, this->sourceEvent);
HXLINE(  16)		c->_hx_set_type(HX_CTX, this->type);
HXLINE(  17)		c->bubble = this->bubble;
HXLINE(  18)		c->_hx_set_target(HX_CTX, this->target);
HXLINE(  19)		c->_hx_set_data(HX_CTX, this->data);
HXLINE(  20)		c->canceled = this->canceled;
HXLINE(  21)		this->postClone(c);
HXLINE(  22)		return c;
            	}


::String ItemEvent_obj::COMPONENT_EVENT;


hx::ObjectPtr< ItemEvent_obj > ItemEvent_obj::__new(::String type, ::Dynamic bubble, ::Dynamic data) {
	hx::ObjectPtr< ItemEvent_obj > __this = new ItemEvent_obj();
	__this->__construct(type,bubble,data);
	return __this;
}

hx::ObjectPtr< ItemEvent_obj > ItemEvent_obj::__alloc(hx::Ctx *_hx_ctx,::String type, ::Dynamic bubble, ::Dynamic data) {
	ItemEvent_obj *__this = (ItemEvent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ItemEvent_obj), true, "haxe.ui.events.ItemEvent"));
	*(void **)__this = ItemEvent_obj::_hx_vtable;
	__this->__construct(type,bubble,data);
	return __this;
}

ItemEvent_obj::ItemEvent_obj()
{
}

void ItemEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ItemEvent);
	HX_MARK_MEMBER_NAME(source,"source");
	HX_MARK_MEMBER_NAME(sourceEvent,"sourceEvent");
	 ::haxe::ui::events::UIEvent_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void ItemEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(source,"source");
	HX_VISIT_MEMBER_NAME(sourceEvent,"sourceEvent");
	 ::haxe::ui::events::UIEvent_obj::__Visit(HX_VISIT_ARG);
}

hx::Val ItemEvent_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"source") ) { return hx::Val( source ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"sourceEvent") ) { return hx::Val( sourceEvent ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ItemEvent_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"source") ) { _hx_set_source(HX_CTX_GET,inValue.Cast<  ::haxe::ui::core::Component >()); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"sourceEvent") ) { _hx_set_sourceEvent(HX_CTX_GET,inValue.Cast<  ::haxe::ui::events::UIEvent >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ItemEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("source",db,b0,31,32));
	outFields->push(HX_("sourceEvent",3f,8d,ca,a4));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ItemEvent_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::core::Component */ ,(int)offsetof(ItemEvent_obj,source),HX_("source",db,b0,31,32)},
	{hx::fsObject /*  ::haxe::ui::events::UIEvent */ ,(int)offsetof(ItemEvent_obj,sourceEvent),HX_("sourceEvent",3f,8d,ca,a4)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo ItemEvent_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &ItemEvent_obj::COMPONENT_EVENT,HX_("COMPONENT_EVENT",98,7b,78,d0)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String ItemEvent_obj_sMemberFields[] = {
	HX_("source",db,b0,31,32),
	HX_("sourceEvent",3f,8d,ca,a4),
	HX_("clone",5d,13,63,48),
	::String(null()) };

static void ItemEvent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ItemEvent_obj::COMPONENT_EVENT,"COMPONENT_EVENT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ItemEvent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ItemEvent_obj::COMPONENT_EVENT,"COMPONENT_EVENT");
};

#endif

hx::Class ItemEvent_obj::__mClass;

static ::String ItemEvent_obj_sStaticFields[] = {
	HX_("COMPONENT_EVENT",98,7b,78,d0),
	::String(null())
};

void ItemEvent_obj::__register()
{
	ItemEvent_obj _hx_dummy;
	ItemEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.events.ItemEvent",64,17,c8,4d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ItemEvent_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ItemEvent_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ItemEvent_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ItemEvent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ItemEvent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ItemEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ItemEvent_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ItemEvent_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_d64a062362a93ece_7_boot)
HXDLIN(   7)		COMPONENT_EVENT = HX_("itemComponentEvent",90,6e,bc,55);
            	}
}

} // end namespace haxe
} // end namespace ui
} // end namespace events
