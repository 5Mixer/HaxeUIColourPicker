// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <hxinc/StringTools.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <hxinc/haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <hxinc/haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ui_core_LayoutClassMap
#include <hxinc/haxe/ui/core/LayoutClassMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_32_new,"haxe.ui.core.LayoutClassMap","new",0x122552fd,"haxe.ui.core.LayoutClassMap.new","haxe/ui/core/LayoutClassMap.hx",32,0x20c1f892)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_36_getClassName,"haxe.ui.core.LayoutClassMap","getClassName",0x562df0f0,"haxe.ui.core.LayoutClassMap.getClassName","haxe/ui/core/LayoutClassMap.hx",36,0x20c1f892)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_40_registerClassName,"haxe.ui.core.LayoutClassMap","registerClassName",0x2b1a631d,"haxe.ui.core.LayoutClassMap.registerClassName","haxe/ui/core/LayoutClassMap.hx",40,0x20c1f892)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_6_get_instance,"haxe.ui.core.LayoutClassMap","get_instance",0x79949561,"haxe.ui.core.LayoutClassMap.get_instance","haxe/ui/core/LayoutClassMap.hx",6,0x20c1f892)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_14_get,"haxe.ui.core.LayoutClassMap","get",0x12200333,"haxe.ui.core.LayoutClassMap.get","haxe/ui/core/LayoutClassMap.hx",14,0x20c1f892)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_17_register,"haxe.ui.core.LayoutClassMap","register",0xb41e8aa6,"haxe.ui.core.LayoutClassMap.register","haxe/ui/core/LayoutClassMap.hx",17,0x20c1f892)
HX_LOCAL_STACK_FRAME(_hx_pos_7a5e47d44c12b7a9_23_list,"haxe.ui.core.LayoutClassMap","list",0xcd33e321,"haxe.ui.core.LayoutClassMap.list","haxe/ui/core/LayoutClassMap.hx",23,0x20c1f892)
namespace haxe{
namespace ui{
namespace core{

void LayoutClassMap_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_32_new)
HXDLIN(  32)		this->_hx_set__map(HX_CTX,  ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
            	}

Dynamic LayoutClassMap_obj::__CreateEmpty() { return new LayoutClassMap_obj; }

void *LayoutClassMap_obj::_hx_vtable = 0;

Dynamic LayoutClassMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< LayoutClassMap_obj > _hx_result = new LayoutClassMap_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LayoutClassMap_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x24c67857;
}

::String LayoutClassMap_obj::getClassName(::String alias){
            	HX_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_36_getClassName)
HXDLIN(  36)		return this->_map->get_string(alias);
            	}


HX_DEFINE_DYNAMIC_FUNC1(LayoutClassMap_obj,getClassName,return )

void LayoutClassMap_obj::registerClassName(::String alias,::String className){
            	HX_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_40_registerClassName)
HXDLIN(  40)		this->_map->set(alias,className);
            	}


HX_DEFINE_DYNAMIC_FUNC2(LayoutClassMap_obj,registerClassName,(void))

 ::haxe::ui::core::LayoutClassMap LayoutClassMap_obj::_instance;

 ::haxe::ui::core::LayoutClassMap LayoutClassMap_obj::get_instance(){
            	HX_GC_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_6_get_instance)
HXLINE(   7)		if (hx::IsNull( ::haxe::ui::core::LayoutClassMap_obj::_instance )) {
HXLINE(   8)			::haxe::ui::core::LayoutClassMap_obj::_instance =  ::haxe::ui::core::LayoutClassMap_obj::__alloc( HX_CTX );
            		}
HXLINE(  10)		return ::haxe::ui::core::LayoutClassMap_obj::_instance;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(LayoutClassMap_obj,get_instance,return )

::String LayoutClassMap_obj::get(::String alias){
            	HX_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_14_get)
HXDLIN(  14)		return ::haxe::ui::core::LayoutClassMap_obj::get_instance()->getClassName(alias);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(LayoutClassMap_obj,get,return )

void LayoutClassMap_obj::_hx_register(::String alias,::String className){
            	HX_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_17_register)
HXLINE(  18)		 ::haxe::ui::core::LayoutClassMap _hx_tmp = ::haxe::ui::core::LayoutClassMap_obj::get_instance();
HXDLIN(  18)		_hx_tmp->registerClassName(::StringTools_obj::replace(alias,HX_("layout",aa,ae,b8,58),HX_("",00,00,00,00)),className);
HXLINE(  19)		::haxe::ui::core::LayoutClassMap_obj::get_instance()->registerClassName(alias,className);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(LayoutClassMap_obj,_hx_register,(void))

 ::Dynamic LayoutClassMap_obj::list(){
            	HX_STACKFRAME(&_hx_pos_7a5e47d44c12b7a9_23_list)
HXDLIN(  23)		return ::haxe::ui::core::LayoutClassMap_obj::get_instance()->_map->keys();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(LayoutClassMap_obj,list,return )


hx::ObjectPtr< LayoutClassMap_obj > LayoutClassMap_obj::__new() {
	hx::ObjectPtr< LayoutClassMap_obj > __this = new LayoutClassMap_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< LayoutClassMap_obj > LayoutClassMap_obj::__alloc(hx::Ctx *_hx_ctx) {
	LayoutClassMap_obj *__this = (LayoutClassMap_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(LayoutClassMap_obj), true, "haxe.ui.core.LayoutClassMap"));
	*(void **)__this = LayoutClassMap_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

LayoutClassMap_obj::LayoutClassMap_obj()
{
}

void LayoutClassMap_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LayoutClassMap);
	HX_MARK_MEMBER_NAME(_map,"_map");
	HX_MARK_END_CLASS();
}

void LayoutClassMap_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_map,"_map");
}

hx::Val LayoutClassMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_map") ) { return hx::Val( _map ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getClassName") ) { return hx::Val( getClassName_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"registerClassName") ) { return hx::Val( registerClassName_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool LayoutClassMap_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"list") ) { outValue = list_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { if (inCallProp == hx::paccAlways) { outValue = ( get_instance() ); return true; } }
		if (HX_FIELD_EQ(inName,"register") ) { outValue = _hx_register_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_instance") ) { outValue = ( _instance ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_instance") ) { outValue = get_instance_dyn(); return true; }
	}
	return false;
}

hx::Val LayoutClassMap_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_map") ) { _hx_set__map(HX_CTX_GET,inValue.Cast<  ::haxe::ds::StringMap >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool LayoutClassMap_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_instance") ) { _instance=ioValue.Cast<  ::haxe::ui::core::LayoutClassMap >(); return true; }
	}
	return false;
}

void LayoutClassMap_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_map",9d,4f,1e,3f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo LayoutClassMap_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(LayoutClassMap_obj,_map),HX_("_map",9d,4f,1e,3f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo LayoutClassMap_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::core::LayoutClassMap */ ,(void *) &LayoutClassMap_obj::_instance,HX_("_instance",f4,16,77,a1)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String LayoutClassMap_obj_sMemberFields[] = {
	HX_("_map",9d,4f,1e,3f),
	HX_("getClassName",2d,2f,94,eb),
	HX_("registerClassName",c0,67,18,c8),
	::String(null()) };

static void LayoutClassMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LayoutClassMap_obj::_instance,"_instance");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LayoutClassMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LayoutClassMap_obj::_instance,"_instance");
};

#endif

hx::Class LayoutClassMap_obj::__mClass;

static ::String LayoutClassMap_obj_sStaticFields[] = {
	HX_("_instance",f4,16,77,a1),
	HX_("get_instance",9e,d3,fa,0e),
	HX_("get",96,80,4e,00),
	HX_("register",63,a6,9f,d0),
	HX_("list",5e,1c,b3,47),
	::String(null())
};

void LayoutClassMap_obj::__register()
{
	LayoutClassMap_obj _hx_dummy;
	LayoutClassMap_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.core.LayoutClassMap",8b,10,ef,5d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LayoutClassMap_obj::__GetStatic;
	__mClass->mSetStaticField = &LayoutClassMap_obj::__SetStatic;
	__mClass->mMarkFunc = LayoutClassMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(LayoutClassMap_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(LayoutClassMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< LayoutClassMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LayoutClassMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LayoutClassMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LayoutClassMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace core
