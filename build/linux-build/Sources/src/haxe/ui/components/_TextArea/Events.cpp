// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextBase
#include <hxinc/haxe/ui/backend/TextBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextInputImpl
#include <hxinc/haxe/ui/backend/TextInputImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_HorizontalScroll
#include <hxinc/haxe/ui/components/HorizontalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Scroll
#include <hxinc/haxe/ui/components/Scroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TextArea
#include <hxinc/haxe/ui/components/TextArea.h>
#endif
#ifndef INCLUDED_haxe_ui_components_VerticalScroll
#include <hxinc/haxe/ui/components/VerticalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_Events
#include <hxinc/haxe/ui/components/_TextArea/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaBuilder
#include <hxinc/haxe/ui/components/_TextArea/TextAreaBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaHelper
#include <hxinc/haxe/ui/components/_TextArea/TextAreaHelper.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDirectionalComponent
#include <hxinc/haxe/ui/core/IDirectionalComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInput
#include <hxinc/haxe/ui/core/TextInput.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInputData
#include <hxinc/haxe/ui/core/TextInputData.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_MouseEvent
#include <hxinc/haxe/ui/events/MouseEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_Style
#include <hxinc/haxe/ui/styles/Style.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_238_new,"haxe.ui.components._TextArea.Events","new",0x0d67cc26,"haxe.ui.components._TextArea.Events.new","haxe/ui/components/TextArea.hx",238,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_243_register,"haxe.ui.components._TextArea.Events","register",0x3ce73cdd,"haxe.ui.components._TextArea.Events.register","haxe/ui/components/TextArea.hx",243,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_247_register,"haxe.ui.components._TextArea.Events","register",0x3ce73cdd,"haxe.ui.components._TextArea.Events.register","haxe/ui/components/TextArea.hx",247,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_255_register,"haxe.ui.components._TextArea.Events","register",0x3ce73cdd,"haxe.ui.components._TextArea.Events.register","haxe/ui/components/TextArea.hx",255,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_291_unregister,"haxe.ui.components._TextArea.Events","unregister",0x149936b6,"haxe.ui.components._TextArea.Events.unregister","haxe/ui/components/TextArea.hx",291,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_311_onMouseWheel,"haxe.ui.components._TextArea.Events","onMouseWheel",0xb57825af,"haxe.ui.components._TextArea.Events.onMouseWheel","haxe/ui/components/TextArea.hx",311,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_331_onScrollChange,"haxe.ui.components._TextArea.Events","onScrollChange",0xf97af316,"haxe.ui.components._TextArea.Events.onScrollChange","haxe/ui/components/TextArea.hx",331,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_344_onMouseDown,"haxe.ui.components._TextArea.Events","onMouseDown",0xc1c3c5ce,"haxe.ui.components._TextArea.Events.onMouseDown","haxe/ui/components/TextArea.hx",344,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_0c9c2549ed15ec5e_347_onFocusChange,"haxe.ui.components._TextArea.Events","onFocusChange",0x6f6aa3cf,"haxe.ui.components._TextArea.Events.onFocusChange","haxe/ui/components/TextArea.hx",347,0xfe441d7d)
namespace haxe{
namespace ui{
namespace components{
namespace _TextArea{

void Events_obj::__construct( ::haxe::ui::components::TextArea textarea){
            	HX_GC_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_238_new)
HXLINE( 239)		super::__construct(textarea);
HXLINE( 240)		this->_hx_set__textarea(HX_CTX, textarea);
            	}

Dynamic Events_obj::__CreateEmpty() { return new Events_obj; }

void *Events_obj::_hx_vtable = 0;

Dynamic Events_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Events_obj > _hx_result = new Events_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Events_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1ddeb1ba) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x1ddeb1ba;
	} else {
		return inClassId==(int)0x5d294170;
	}
}

void Events_obj::_hx_register(){
            	HX_GC_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_243_register)
HXDLIN( 243)		 ::haxe::ui::components::_TextArea::Events _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 244)		if (hx::IsNull( this->_textarea->getTextInput()->get_data()->onChangedCallback )) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::haxe::ui::components::_TextArea::Events,_gthis) HXARGC(0)
            			void _hx_run(){
            				HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_247_register)
HXLINE( 247)				if ((_gthis->_textarea->hasClass(HX_(":empty",13,28,8d,a0)) == false)) {
HXLINE( 248)					 ::haxe::ui::components::TextArea _gthis1 = _gthis->_textarea;
HXDLIN( 248)					_gthis1->set_text(_gthis->_textarea->getTextInput()->get_text());
HXLINE( 249)					hx::TCast<  ::haxe::ui::components::_TextArea::TextAreaBuilder >::cast(_gthis->_textarea->_compositeBuilder)->checkScrolls();
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE( 245)			this->_textarea->getTextInput()->set_multiline(true);
HXLINE( 246)			this->_textarea->getTextInput()->get_data()->_hx_set_onChangedCallback(HX_CTX,  ::Dynamic(new _hx_Closure_0(_gthis)));
            		}
HXLINE( 254)		if (hx::IsNull( this->_textarea->getTextInput()->get_data()->onScrollCallback )) {
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::haxe::ui::components::_TextArea::Events,_gthis) HXARGC(0)
            			void _hx_run(){
            				HX_GC_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_255_register)
HXLINE( 256)				 ::haxe::ui::components::HorizontalScroll hscroll = _gthis->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 257)				if (hx::IsNotNull( hscroll )) {
HXLINE( 258)					hscroll->set_pos(_gthis->_textarea->getTextInput()->get_hscrollPos());
            				}
HXLINE( 260)				 ::haxe::ui::components::VerticalScroll vscroll = _gthis->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 261)				if (hx::IsNotNull( vscroll )) {
HXLINE( 262)					vscroll->set_pos(_gthis->_textarea->getTextInput()->get_vscrollPos());
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

HXLINE( 255)			this->_textarea->getTextInput()->get_data()->_hx_set_onScrollCallback(HX_CTX,  ::Dynamic(new _hx_Closure_1(_gthis)));
            		}
HXLINE( 267)		 ::haxe::ui::components::HorizontalScroll hscroll1 = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 268)		bool _hx_tmp;
HXDLIN( 268)		if (hx::IsNotNull( hscroll1 )) {
HXLINE( 268)			_hx_tmp = (hscroll1->hasEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn()) == false);
            		}
            		else {
HXLINE( 268)			_hx_tmp = false;
            		}
HXDLIN( 268)		if (_hx_tmp) {
HXLINE( 269)			hscroll1->registerEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn(),null());
            		}
HXLINE( 272)		 ::haxe::ui::components::VerticalScroll vscroll1 = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 273)		bool _hx_tmp1;
HXDLIN( 273)		if (hx::IsNotNull( vscroll1 )) {
HXLINE( 273)			_hx_tmp1 = (vscroll1->hasEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn()) == false);
            		}
            		else {
HXLINE( 273)			_hx_tmp1 = false;
            		}
HXDLIN( 273)		if (_hx_tmp1) {
HXLINE( 274)			vscroll1->registerEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn(),null());
            		}
HXLINE( 277)		if ((this->hasEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn()) == false)) {
HXLINE( 278)			this->registerEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn(),null());
            		}
HXLINE( 280)		if ((this->hasEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn()) == false)) {
HXLINE( 281)			this->registerEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn(),null());
            		}
HXLINE( 283)		if ((this->hasEvent(HX_("focusin",bd,61,83,41),this->onFocusChange_dyn()) == false)) {
HXLINE( 284)			this->registerEvent(HX_("focusin",bd,61,83,41),this->onFocusChange_dyn(),null());
            		}
HXLINE( 286)		if ((this->hasEvent(HX_("focusout",b6,b7,76,11),this->onFocusChange_dyn()) == false)) {
HXLINE( 287)			this->registerEvent(HX_("focusout",b6,b7,76,11),this->onFocusChange_dyn(),null());
            		}
            	}


void Events_obj::unregister(){
            	HX_GC_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_291_unregister)
HXLINE( 292)		this->_textarea->getTextInput()->get_data()->_hx_set_onChangedCallback(HX_CTX, null());
HXLINE( 293)		this->_textarea->getTextInput()->get_data()->_hx_set_onScrollCallback(HX_CTX, null());
HXLINE( 295)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 296)		if (hx::IsNotNull( hscroll )) {
HXLINE( 297)			hscroll->unregisterEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn());
            		}
HXLINE( 300)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 301)		if (hx::IsNotNull( vscroll )) {
HXLINE( 302)			vscroll->unregisterEvent(HX_("change",70,91,72,b7),this->onScrollChange_dyn());
            		}
HXLINE( 305)		this->unregisterEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn());
HXLINE( 306)		this->unregisterEvent(HX_("mousedown",07,85,e9,03),this->onMouseDown_dyn());
HXLINE( 307)		this->unregisterEvent(HX_("focusin",bd,61,83,41),this->onFocusChange_dyn());
HXLINE( 308)		this->unregisterEvent(HX_("focusout",b6,b7,76,11),this->onFocusChange_dyn());
            	}


void Events_obj::onMouseWheel( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_311_onMouseWheel)
HXLINE( 312)		if ((this->_textarea->getTextInput()->get_data()->vscrollNativeWheel == true)) {
HXLINE( 313)			return;
            		}
HXLINE( 315)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 316)		if (hx::IsNotNull( vscroll )) {
HXLINE( 317)			Float step = ( (Float)(20) );
HXLINE( 318)			if (hx::IsNotNull( this->_textarea->getTextInput()->get_data()->vscrollPageStep )) {
HXLINE( 319)				step = ( (Float)(this->_textarea->getTextInput()->get_data()->vscrollPageStep) );
            			}
            			else {
HXLINE( 321)				step = ( (Float)((::Math_obj::ceil(((this->_textarea->getTextInput()->get_textStyle()->fontSize + 1) / ( (Float)(10) ))) * 10)) );
            			}
HXLINE( 323)			if ((event->delta > 0)) {
HXLINE( 324)				 ::haxe::ui::components::VerticalScroll _g = vscroll;
HXDLIN( 324)				_g->set_pos((_g->get_pos() - step));
            			}
            			else {
HXLINE( 325)				if ((event->delta < 0)) {
HXLINE( 326)					 ::haxe::ui::components::VerticalScroll _g1 = vscroll;
HXDLIN( 326)					_g1->set_pos((_g1->get_pos() + step));
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onMouseWheel,(void))

void Events_obj::onScrollChange( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_331_onScrollChange)
HXLINE( 332)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 333)		if (hx::IsNotNull( hscroll )) {
HXLINE( 334)			 ::haxe::ui::core::TextInput _hx_tmp = this->_textarea->getTextInput();
HXDLIN( 334)			_hx_tmp->set_hscrollPos(hscroll->get_pos());
            		}
HXLINE( 337)		 ::haxe::ui::components::VerticalScroll vscroll = this->_textarea->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 338)		if (hx::IsNotNull( vscroll )) {
HXLINE( 339)			 ::haxe::ui::core::TextInput _hx_tmp1 = this->_textarea->getTextInput();
HXDLIN( 339)			_hx_tmp1->set_vscrollPos(vscroll->get_pos());
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onScrollChange,(void))

void Events_obj::onMouseDown( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_344_onMouseDown)
HXDLIN( 344)		this->_textarea->set_focus(true);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onMouseDown,(void))

void Events_obj::onFocusChange( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_0c9c2549ed15ec5e_347_onFocusChange)
HXLINE( 348)		if ((this->_textarea->get_focus() == true)) {
HXLINE( 349)			this->_textarea->getTextInput()->focus();
            		}
            		else {
HXLINE( 351)			this->_textarea->getTextInput()->blur();
            		}
HXLINE( 353)		 ::haxe::ui::components::TextArea _hx_tmp = this->_textarea;
HXDLIN( 353)		::haxe::ui::components::_TextArea::TextAreaHelper_obj::validateText(_hx_tmp,this->_textarea->get_text());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onFocusChange,(void))


hx::ObjectPtr< Events_obj > Events_obj::__new( ::haxe::ui::components::TextArea textarea) {
	hx::ObjectPtr< Events_obj > __this = new Events_obj();
	__this->__construct(textarea);
	return __this;
}

hx::ObjectPtr< Events_obj > Events_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::components::TextArea textarea) {
	Events_obj *__this = (Events_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Events_obj), true, "haxe.ui.components._TextArea.Events"));
	*(void **)__this = Events_obj::_hx_vtable;
	__this->__construct(textarea);
	return __this;
}

Events_obj::Events_obj()
{
}

void Events_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Events);
	HX_MARK_MEMBER_NAME(_textarea,"_textarea");
	 ::haxe::ui::events::Events_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Events_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_textarea,"_textarea");
	 ::haxe::ui::events::Events_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Events_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"register") ) { return hx::Val( _hx_register_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_textarea") ) { return hx::Val( _textarea ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"unregister") ) { return hx::Val( unregister_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return hx::Val( onMouseDown_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { return hx::Val( onMouseWheel_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onFocusChange") ) { return hx::Val( onFocusChange_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"onScrollChange") ) { return hx::Val( onScrollChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Events_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_textarea") ) { _hx_set__textarea(HX_CTX_GET,inValue.Cast<  ::haxe::ui::components::TextArea >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Events_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_textarea",19,aa,2c,a0));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Events_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::components::TextArea */ ,(int)offsetof(Events_obj,_textarea),HX_("_textarea",19,aa,2c,a0)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Events_obj_sStaticStorageInfo = 0;
#endif

static ::String Events_obj_sMemberFields[] = {
	HX_("_textarea",19,aa,2c,a0),
	HX_("register",63,a6,9f,d0),
	HX_("unregister",bc,8d,63,56),
	HX_("onMouseWheel",35,ca,ca,bf),
	HX_("onScrollChange",1c,45,24,39),
	HX_("onMouseDown",08,94,05,11),
	HX_("onFocusChange",89,f4,67,6d),
	::String(null()) };

hx::Class Events_obj::__mClass;

void Events_obj::__register()
{
	Events_obj _hx_dummy;
	Events_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components._TextArea.Events",34,81,81,78);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Events_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Events_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Events_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Events_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
} // end namespace _TextArea
