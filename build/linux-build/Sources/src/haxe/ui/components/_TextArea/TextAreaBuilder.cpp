// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextBase
#include <hxinc/haxe/ui/backend/TextBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_TextInputImpl
#include <hxinc/haxe/ui/backend/TextInputImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_HorizontalScroll
#include <hxinc/haxe/ui/components/HorizontalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Scroll
#include <hxinc/haxe/ui/components/Scroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TextArea
#include <hxinc/haxe/ui/components/TextArea.h>
#endif
#ifndef INCLUDED_haxe_ui_components_VerticalScroll
#include <hxinc/haxe/ui/components/VerticalScroll.h>
#endif
#ifndef INCLUDED_haxe_ui_components__TextArea_TextAreaBuilder
#include <hxinc/haxe/ui/components/_TextArea/TextAreaBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDirectionalComponent
#include <hxinc/haxe/ui/core/IDirectionalComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInput
#include <hxinc/haxe/ui/core/TextInput.h>
#endif
#ifndef INCLUDED_haxe_ui_core_TextInputData
#include <hxinc/haxe/ui/core/TextInputData.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_Style
#include <hxinc/haxe/ui/styles/Style.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_468b2c7ac9171f50_366_new,"haxe.ui.components._TextArea.TextAreaBuilder","new",0x05a1d1d8,"haxe.ui.components._TextArea.TextAreaBuilder.new","haxe/ui/components/TextArea.hx",366,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_468b2c7ac9171f50_371_checkScrolls,"haxe.ui.components._TextArea.TextAreaBuilder","checkScrolls",0x6cb0fb66,"haxe.ui.components._TextArea.TextAreaBuilder.checkScrolls","haxe/ui/components/TextArea.hx",371,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_468b2c7ac9171f50_413_createHScroll,"haxe.ui.components._TextArea.TextAreaBuilder","createHScroll",0x826fea71,"haxe.ui.components._TextArea.TextAreaBuilder.createHScroll","haxe/ui/components/TextArea.hx",413,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_468b2c7ac9171f50_422_createVScroll,"haxe.ui.components._TextArea.TextAreaBuilder","createVScroll",0xc89c68ff,"haxe.ui.components._TextArea.TextAreaBuilder.createVScroll","haxe/ui/components/TextArea.hx",422,0xfe441d7d)
HX_LOCAL_STACK_FRAME(_hx_pos_468b2c7ac9171f50_434_applyStyle,"haxe.ui.components._TextArea.TextAreaBuilder","applyStyle",0x91f8be6b,"haxe.ui.components._TextArea.TextAreaBuilder.applyStyle","haxe/ui/components/TextArea.hx",434,0xfe441d7d)
namespace haxe{
namespace ui{
namespace components{
namespace _TextArea{

void TextAreaBuilder_obj::__construct( ::haxe::ui::components::TextArea textarea){
            	HX_GC_STACKFRAME(&_hx_pos_468b2c7ac9171f50_366_new)
HXLINE( 367)		super::__construct(textarea);
HXLINE( 368)		this->_hx_set__textarea(HX_CTX, textarea);
            	}

Dynamic TextAreaBuilder_obj::__CreateEmpty() { return new TextAreaBuilder_obj; }

void *TextAreaBuilder_obj::_hx_vtable = 0;

Dynamic TextAreaBuilder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TextAreaBuilder_obj > _hx_result = new TextAreaBuilder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool TextAreaBuilder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x00397344) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x00397344;
	} else {
		return inClassId==(int)0x6fc7eb95;
	}
}

void TextAreaBuilder_obj::checkScrolls(){
            	HX_STACKFRAME(&_hx_pos_468b2c7ac9171f50_371_checkScrolls)
HXLINE( 372)		if (hx::IsEq( this->_textarea->get_native(),true )) {
HXLINE( 373)			return;
            		}
HXLINE( 376)		 ::haxe::ui::core::TextInput textInput = this->_textarea->getTextInput();
HXLINE( 378)		 ::haxe::ui::components::HorizontalScroll hscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::HorizontalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::HorizontalScroll >();
HXLINE( 379)		Float _hx_tmp = textInput->get_textWidth();
HXDLIN( 379)		if (((_hx_tmp - textInput->get_width()) > 1)) {
HXLINE( 380)			if (hx::IsNull( hscroll )) {
HXLINE( 381)				hscroll = this->createHScroll();
            			}
HXLINE( 384)			hscroll->set_max(textInput->get_hscrollMax());
HXLINE( 385)			hscroll->set_pos(textInput->get_hscrollPos());
HXLINE( 386)			hscroll->set_pageSize(textInput->get_hscrollPageSize());
            		}
            		else {
HXLINE( 388)			if (hx::IsNotNull( hscroll )) {
HXLINE( 389)				this->_component->removeComponent(hscroll,null(),null());
            			}
            		}
HXLINE( 393)		 ::haxe::ui::components::VerticalScroll vscroll = this->_component->findComponent(null(),hx::ClassOf< ::haxe::ui::components::VerticalScroll >(),false,null()).StaticCast<  ::haxe::ui::components::VerticalScroll >();
HXLINE( 394)		Float _hx_tmp1 = textInput->get_textHeight();
HXDLIN( 394)		if (((_hx_tmp1 - textInput->get_height()) > 1)) {
HXLINE( 395)			if (hx::IsNull( vscroll )) {
HXLINE( 396)				vscroll = this->createVScroll();
            			}
HXLINE( 399)			vscroll->set_max(textInput->get_vscrollMax());
HXLINE( 400)			vscroll->set_pos(textInput->get_vscrollPos());
HXLINE( 401)			vscroll->set_pageSize(textInput->get_vscrollPageSize());
HXLINE( 403)			if ((this->_textarea->get_autoScrollToBottom() == true)) {
HXLINE( 404)				this->_textarea->scrollToBottom();
            			}
            		}
            		else {
HXLINE( 407)			if (hx::IsNotNull( vscroll )) {
HXLINE( 408)				this->_component->removeComponent(vscroll,null(),null());
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextAreaBuilder_obj,checkScrolls,(void))

 ::haxe::ui::components::HorizontalScroll TextAreaBuilder_obj::createHScroll(){
            	HX_GC_STACKFRAME(&_hx_pos_468b2c7ac9171f50_413_createHScroll)
HXLINE( 414)		 ::haxe::ui::components::HorizontalScroll hscroll =  ::haxe::ui::components::HorizontalScroll_obj::__alloc( HX_CTX );
HXLINE( 415)		hscroll->set_percentWidth(100);
HXLINE( 416)		hscroll->set_id(HX_("textarea-hscroll",a2,22,fa,36));
HXLINE( 417)		this->_component->addComponent(hscroll);
HXLINE( 418)		this->_component->registerInternalEvents(null(),true);
HXLINE( 419)		return hscroll;
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextAreaBuilder_obj,createHScroll,return )

 ::haxe::ui::components::VerticalScroll TextAreaBuilder_obj::createVScroll(){
            	HX_GC_STACKFRAME(&_hx_pos_468b2c7ac9171f50_422_createVScroll)
HXLINE( 423)		 ::haxe::ui::components::VerticalScroll vscroll =  ::haxe::ui::components::VerticalScroll_obj::__alloc( HX_CTX );
HXLINE( 424)		if (hx::IsNotNull( this->_textarea->getTextInput()->get_data()->vscrollPageStep )) {
HXLINE( 425)			vscroll->set_increment(( (Float)(this->_textarea->getTextInput()->get_data()->vscrollPageStep) ));
            		}
HXLINE( 427)		vscroll->set_percentHeight(100);
HXLINE( 428)		vscroll->set_id(HX_("textarea-vscroll",30,a1,26,7d));
HXLINE( 429)		this->_component->addComponent(vscroll);
HXLINE( 430)		this->_component->registerInternalEvents(null(),true);
HXLINE( 431)		return vscroll;
            	}


HX_DEFINE_DYNAMIC_FUNC0(TextAreaBuilder_obj,createVScroll,return )

void TextAreaBuilder_obj::applyStyle( ::haxe::ui::styles::Style style){
            	HX_STACKFRAME(&_hx_pos_468b2c7ac9171f50_434_applyStyle)
HXLINE( 435)		this->super::applyStyle(style);
HXLINE( 436)		if ((this->_component->hasTextInput() == true)) {
HXLINE( 437)			this->_component->getTextInput()->set_textStyle(style);
            		}
            	}



hx::ObjectPtr< TextAreaBuilder_obj > TextAreaBuilder_obj::__new( ::haxe::ui::components::TextArea textarea) {
	hx::ObjectPtr< TextAreaBuilder_obj > __this = new TextAreaBuilder_obj();
	__this->__construct(textarea);
	return __this;
}

hx::ObjectPtr< TextAreaBuilder_obj > TextAreaBuilder_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::components::TextArea textarea) {
	TextAreaBuilder_obj *__this = (TextAreaBuilder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TextAreaBuilder_obj), true, "haxe.ui.components._TextArea.TextAreaBuilder"));
	*(void **)__this = TextAreaBuilder_obj::_hx_vtable;
	__this->__construct(textarea);
	return __this;
}

TextAreaBuilder_obj::TextAreaBuilder_obj()
{
}

void TextAreaBuilder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TextAreaBuilder);
	HX_MARK_MEMBER_NAME(_textarea,"_textarea");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void TextAreaBuilder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_textarea,"_textarea");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

hx::Val TextAreaBuilder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_textarea") ) { return hx::Val( _textarea ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"applyStyle") ) { return hx::Val( applyStyle_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"checkScrolls") ) { return hx::Val( checkScrolls_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createHScroll") ) { return hx::Val( createHScroll_dyn() ); }
		if (HX_FIELD_EQ(inName,"createVScroll") ) { return hx::Val( createVScroll_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TextAreaBuilder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_textarea") ) { _hx_set__textarea(HX_CTX_GET,inValue.Cast<  ::haxe::ui::components::TextArea >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TextAreaBuilder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_textarea",19,aa,2c,a0));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo TextAreaBuilder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::components::TextArea */ ,(int)offsetof(TextAreaBuilder_obj,_textarea),HX_("_textarea",19,aa,2c,a0)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TextAreaBuilder_obj_sStaticStorageInfo = 0;
#endif

static ::String TextAreaBuilder_obj_sMemberFields[] = {
	HX_("_textarea",19,aa,2c,a0),
	HX_("checkScrolls",de,eb,5e,1e),
	HX_("createHScroll",f9,62,f4,48),
	HX_("createVScroll",87,e1,20,8f),
	HX_("applyStyle",e3,20,6f,2f),
	::String(null()) };

hx::Class TextAreaBuilder_obj::__mClass;

void TextAreaBuilder_obj::__register()
{
	TextAreaBuilder_obj _hx_dummy;
	TextAreaBuilder_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components._TextArea.TextAreaBuilder",e6,45,b6,bf);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TextAreaBuilder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TextAreaBuilder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextAreaBuilder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextAreaBuilder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
} // end namespace _TextArea
