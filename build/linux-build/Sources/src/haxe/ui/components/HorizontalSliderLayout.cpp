// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Button
#include <hxinc/haxe/ui/components/Button.h>
#endif
#ifndef INCLUDED_haxe_ui_components_HorizontalSliderLayout
#include <hxinc/haxe/ui/components/HorizontalSliderLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Range
#include <hxinc/haxe/ui/components/Range.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDirectionalComponent
#include <hxinc/haxe/ui/core/IDirectionalComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_DefaultLayout
#include <hxinc/haxe/ui/layouts/DefaultLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <hxinc/haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <hxinc/haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a3299513c0dd49a6_15_new,"haxe.ui.components.HorizontalSliderLayout","new",0xd0fa5f47,"haxe.ui.components.HorizontalSliderLayout.new","haxe/ui/components/HorizontalSlider.hx",15,0x1d546412)
HX_LOCAL_STACK_FRAME(_hx_pos_a3299513c0dd49a6_16_repositionChildren,"haxe.ui.components.HorizontalSliderLayout","repositionChildren",0xea254db4,"haxe.ui.components.HorizontalSliderLayout.repositionChildren","haxe/ui/components/HorizontalSlider.hx",16,0x1d546412)
namespace haxe{
namespace ui{
namespace components{

void HorizontalSliderLayout_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a3299513c0dd49a6_15_new)
HXDLIN(  15)		super::__construct();
            	}

Dynamic HorizontalSliderLayout_obj::__CreateEmpty() { return new HorizontalSliderLayout_obj; }

void *HorizontalSliderLayout_obj::_hx_vtable = 0;

Dynamic HorizontalSliderLayout_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HorizontalSliderLayout_obj > _hx_result = new HorizontalSliderLayout_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HorizontalSliderLayout_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x652c3c60) {
		if (inClassId<=(int)0x548a03f5) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x548a03f5;
		} else {
			return inClassId==(int)0x652c3c60;
		}
	} else {
		return inClassId==(int)0x6ac3bc9f;
	}
}

void HorizontalSliderLayout_obj::repositionChildren(){
            	HX_STACKFRAME(&_hx_pos_a3299513c0dd49a6_16_repositionChildren)
HXLINE(  17)		this->super::repositionChildren();
HXLINE(  19)		 ::haxe::ui::components::Range range = ( ( ::haxe::ui::components::Range)(this->findComponent(null(),hx::ClassOf< ::haxe::ui::components::Range >(),null(),null())) );
HXLINE(  20)		 ::haxe::ui::core::Component rangeValue = range->findComponent(HX_("range-value",a1,cd,09,7e),null(),null(),null()).StaticCast<  ::haxe::ui::core::Component >();
HXLINE(  21)		 ::haxe::ui::components::Button startThumb = ( ( ::haxe::ui::components::Button)(this->findComponent(HX_("start-thumb",ab,c8,f3,50),null(),null(),null())) );
HXLINE(  22)		 ::haxe::ui::components::Button endThumb = ( ( ::haxe::ui::components::Button)(this->findComponent(HX_("end-thumb",e4,b8,ef,18),null(),null(),null())) );
HXLINE(  24)		if (hx::IsNotNull( startThumb )) {
HXLINE(  25)			 ::Dynamic _hx_tmp = range->get_left();
HXDLIN(  25)			Float _hx_tmp1 = (_hx_tmp + rangeValue->get_left());
HXDLIN(  25)			startThumb->set_left((_hx_tmp1 - (( (Float)(startThumb->get_width()) ) / ( (Float)(2) ))));
            		}
HXLINE(  28)		 ::Dynamic _hx_tmp2 = range->get_left();
HXDLIN(  28)		Float _hx_tmp3 = (_hx_tmp2 + rangeValue->get_left());
HXDLIN(  28)		Float _hx_tmp4 = (_hx_tmp3 + rangeValue->get_width());
HXDLIN(  28)		endThumb->set_left((_hx_tmp4 - (( (Float)(endThumb->get_width()) ) / ( (Float)(2) ))));
            	}



hx::ObjectPtr< HorizontalSliderLayout_obj > HorizontalSliderLayout_obj::__new() {
	hx::ObjectPtr< HorizontalSliderLayout_obj > __this = new HorizontalSliderLayout_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< HorizontalSliderLayout_obj > HorizontalSliderLayout_obj::__alloc(hx::Ctx *_hx_ctx) {
	HorizontalSliderLayout_obj *__this = (HorizontalSliderLayout_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HorizontalSliderLayout_obj), true, "haxe.ui.components.HorizontalSliderLayout"));
	*(void **)__this = HorizontalSliderLayout_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HorizontalSliderLayout_obj::HorizontalSliderLayout_obj()
{
}

hx::Val HorizontalSliderLayout_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 18:
		if (HX_FIELD_EQ(inName,"repositionChildren") ) { return hx::Val( repositionChildren_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *HorizontalSliderLayout_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *HorizontalSliderLayout_obj_sStaticStorageInfo = 0;
#endif

static ::String HorizontalSliderLayout_obj_sMemberFields[] = {
	HX_("repositionChildren",bb,00,c7,9c),
	::String(null()) };

hx::Class HorizontalSliderLayout_obj::__mClass;

void HorizontalSliderLayout_obj::__register()
{
	HorizontalSliderLayout_obj _hx_dummy;
	HorizontalSliderLayout_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components.HorizontalSliderLayout",d5,af,e1,e9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(HorizontalSliderLayout_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< HorizontalSliderLayout_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HorizontalSliderLayout_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HorizontalSliderLayout_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
