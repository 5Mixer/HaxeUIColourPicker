// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviour
#include <hxinc/haxe/ui/behaviours/Behaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviours
#include <hxinc/haxe/ui/behaviours/Behaviours.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DataBehaviour
#include <hxinc/haxe/ui/behaviours/DataBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DefaultBehaviour
#include <hxinc/haxe/ui/behaviours/DefaultBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_ValueBehaviour
#include <hxinc/haxe/ui/behaviours/ValueBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_binding_BindingManager
#include <hxinc/haxe/ui/binding/BindingManager.h>
#endif
#ifndef INCLUDED_haxe_ui_components_NumberStepper
#include <hxinc/haxe/ui/components/NumberStepper.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_Builder
#include <hxinc/haxe/ui/components/_NumberStepper/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_Events
#include <hxinc/haxe/ui/components/_NumberStepper/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_MaxBehaviour
#include <hxinc/haxe/ui/components/_NumberStepper/MaxBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_MinBehaviour
#include <hxinc/haxe/ui/components/_NumberStepper/MinBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_PosBehaviour
#include <hxinc/haxe/ui/components/_NumberStepper/PosBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_PrecisionBehaviour
#include <hxinc/haxe/ui/components/_NumberStepper/PrecisionBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_StepBehaviour
#include <hxinc/haxe/ui/components/_NumberStepper/StepBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_DefaultLayout
#include <hxinc/haxe/ui/layouts/DefaultLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_HorizontalLayout
#include <hxinc/haxe/ui/layouts/HorizontalLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <hxinc/haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <hxinc/haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_935bee7c67bd6ec6_19_new,"haxe.ui.components.NumberStepper","new",0x964a8ed4,"haxe.ui.components.NumberStepper.new","haxe/ui/components/NumberStepper.hx",19,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_314_registerBehaviours,"haxe.ui.components.NumberStepper","registerBehaviours",0xc3894be5,"haxe.ui.components.NumberStepper.registerBehaviours","haxe/ui/macros/Macros.hx",314,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_331_get_pos,"haxe.ui.components.NumberStepper","get_pos",0xdc732e9f,"haxe.ui.components.NumberStepper.get_pos","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_343_set_pos,"haxe.ui.components.NumberStepper","set_pos",0xcf74bfab,"haxe.ui.components.NumberStepper.set_pos","haxe/ui/macros/Macros.hx",343,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_331_get_step,"haxe.ui.components.NumberStepper","get_step",0x0a54ffe1,"haxe.ui.components.NumberStepper.get_step","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_357_set_step,"haxe.ui.components.NumberStepper","set_step",0xb8b25955,"haxe.ui.components.NumberStepper.set_step","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_331_get_min,"haxe.ui.components.NumberStepper","get_min",0xdc70e29d,"haxe.ui.components.NumberStepper.get_min","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_357_set_min,"haxe.ui.components.NumberStepper","set_min",0xcf7273a9,"haxe.ui.components.NumberStepper.set_min","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_331_get_max,"haxe.ui.components.NumberStepper","get_max",0xdc70dbaf,"haxe.ui.components.NumberStepper.get_max","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_357_set_max,"haxe.ui.components.NumberStepper","set_max",0xcf726cbb,"haxe.ui.components.NumberStepper.set_max","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_331_get_precision,"haxe.ui.components.NumberStepper","get_precision",0xa0048089,"haxe.ui.components.NumberStepper.get_precision","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_357_set_precision,"haxe.ui.components.NumberStepper","set_precision",0xe50a6295,"haxe.ui.components.NumberStepper.set_precision","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_420_get_value,"haxe.ui.components.NumberStepper","get_value",0xadb4e93c,"haxe.ui.components.NumberStepper.get_value","haxe/ui/macros/Macros.hx",420,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_423_set_value,"haxe.ui.components.NumberStepper","set_value",0x9105d548,"haxe.ui.components.NumberStepper.set_value","haxe/ui/macros/Macros.hx",423,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_41703d0a40144b05_521_cloneComponent,"haxe.ui.components.NumberStepper","cloneComponent",0xe63a97ac,"haxe.ui.components.NumberStepper.cloneComponent","haxe/ui/macros/helpers/ClassBuilder.hx",521,0x8cdaad7b)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_302_self,"haxe.ui.components.NumberStepper","self",0xee407298,"haxe.ui.components.NumberStepper.self","haxe/ui/macros/Macros.hx",302,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_32ef210da4c6323f_72_registerComposite,"haxe.ui.components.NumberStepper","registerComposite",0x198b8698,"haxe.ui.components.NumberStepper.registerComposite","haxe/ui/macros/Macros.hx",72,0x27866361)
namespace haxe{
namespace ui{
namespace components{

void NumberStepper_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_935bee7c67bd6ec6_19_new)
HXDLIN(  19)		super::__construct();
            	}

Dynamic NumberStepper_obj::__CreateEmpty() { return new NumberStepper_obj; }

void *NumberStepper_obj::_hx_vtable = 0;

Dynamic NumberStepper_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NumberStepper_obj > _hx_result = new NumberStepper_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NumberStepper_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4a06d0bc) {
		if (inClassId<=(int)0x23af8dfd) {
			if (inClassId<=(int)0x13ef1590) {
				if (inClassId<=(int)0x0fddceef) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0fddceef;
				} else {
					return inClassId==(int)0x13ef1590;
				}
			} else {
				return inClassId==(int)0x23af8dfd;
			}
		} else {
			if (inClassId<=(int)0x324697fd) {
				return inClassId==(int)0x2a04b446 || inClassId==(int)0x324697fd;
			} else {
				return inClassId==(int)0x4a06d0bc;
			}
		}
	} else {
		if (inClassId<=(int)0x7ee2d869) {
			if (inClassId<=(int)0x7140e8dc) {
				if (inClassId<=(int)0x5f23eff4) {
					return inClassId==(int)0x4eb0678b || inClassId==(int)0x5f23eff4;
				} else {
					return inClassId==(int)0x7140e8dc;
				}
			} else {
				return inClassId==(int)0x7ee2d869;
			}
		} else {
			return inClassId==(int)0x7f63f3f1 || inClassId==(int)0x7ff0cb0e;
		}
	}
}

void NumberStepper_obj::registerBehaviours(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_314_registerBehaviours)
HXLINE( 315)		this->super::registerBehaviours();
HXLINE( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 376)		_hx_tmp->_hx_register(HX_("pos",94,5d,55,00),hx::ClassOf< ::haxe::ui::components::_NumberStepper::PosBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(0) )));
HXDLIN( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp1 = this->behaviours;
HXDLIN( 376)		_hx_tmp1->_hx_register(HX_("step",4c,e7,5b,4c),hx::ClassOf< ::haxe::ui::components::_NumberStepper::StepBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(1) )));
HXDLIN( 376)		this->behaviours->_hx_register(HX_("min",92,11,53,00),hx::ClassOf< ::haxe::ui::components::_NumberStepper::MinBehaviour >(),null());
HXDLIN( 376)		this->behaviours->_hx_register(HX_("max",a4,0a,53,00),hx::ClassOf< ::haxe::ui::components::_NumberStepper::MaxBehaviour >(),null());
HXDLIN( 376)		this->behaviours->_hx_register(HX_("precision",3e,d5,c7,80),hx::ClassOf< ::haxe::ui::components::_NumberStepper::PrecisionBehaviour >(),null());
            	}


Float NumberStepper_obj::get_pos(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_331_get_pos)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("pos",94,5d,55,00)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(NumberStepper_obj,get_pos,return )

Float NumberStepper_obj::set_pos(Float value){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_343_set_pos)
HXLINE( 344)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 344)		_hx_tmp->set(HX_("pos",94,5d,55,00),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 345)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(hx::ObjectPtr<OBJ_>(this),HX_("value",71,7f,b8,31));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("pos",94,5d,55,00));
HXLINE( 346)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NumberStepper_obj,set_pos,return )

Float NumberStepper_obj::get_step(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_331_get_step)
HXDLIN( 331)		return ( (Float)(::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("step",4c,e7,5b,4c)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(NumberStepper_obj,get_step,return )

Float NumberStepper_obj::set_step(Float value){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_357_set_step)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("step",4c,e7,5b,4c),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("step",4c,e7,5b,4c));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NumberStepper_obj,set_step,return )

 ::Dynamic NumberStepper_obj::get_min(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_331_get_min)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("min",92,11,53,00)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(NumberStepper_obj,get_min,return )

 ::Dynamic NumberStepper_obj::set_min( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_357_set_min)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("min",92,11,53,00),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(value) )));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("min",92,11,53,00));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NumberStepper_obj,set_min,return )

 ::Dynamic NumberStepper_obj::get_max(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_331_get_max)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toFloat(this->behaviours->get(HX_("max",a4,0a,53,00)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(NumberStepper_obj,get_max,return )

 ::Dynamic NumberStepper_obj::set_max( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_357_set_max)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("max",a4,0a,53,00),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(value) )));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("max",a4,0a,53,00));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NumberStepper_obj,set_max,return )

 ::Dynamic NumberStepper_obj::get_precision(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_331_get_precision)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toInt(this->behaviours->get(HX_("precision",3e,d5,c7,80)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(NumberStepper_obj,get_precision,return )

 ::Dynamic NumberStepper_obj::set_precision( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_357_set_precision)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("precision",3e,d5,c7,80),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(value) )));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("precision",3e,d5,c7,80));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NumberStepper_obj,set_precision,return )

 ::Dynamic NumberStepper_obj::get_value(){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_420_get_value)
HXDLIN( 420)		return this->get_pos();
            	}


 ::Dynamic NumberStepper_obj::set_value( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_32ef210da4c6323f_423_set_value)
HXLINE( 424)		this->set_pos(( (Float)(value) ));
HXLINE( 425)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(hx::ObjectPtr<OBJ_>(this),HX_("pos",94,5d,55,00));
HXLINE( 426)		return value;
            	}


 ::haxe::ui::core::ComponentContainer NumberStepper_obj::cloneComponent(){
            	HX_STACKFRAME(&_hx_pos_41703d0a40144b05_521_cloneComponent)
HXLINE( 267)		 ::haxe::ui::components::NumberStepper c = ( ( ::haxe::ui::components::NumberStepper)(this->super::cloneComponent()) );
HXLINE( 281)		c->set_pos(this->get_pos());
HXDLIN( 281)		c->set_step(this->get_step());
HXLINE( 277)		if (hx::IsNotNull( this->get_min() )) {
HXLINE( 277)			c->set_min(this->get_min());
            		}
HXDLIN( 277)		if (hx::IsNotNull( this->get_max() )) {
HXLINE( 277)			c->set_max(this->get_max());
            		}
HXDLIN( 277)		if (hx::IsNotNull( this->get_precision() )) {
HXLINE( 277)			c->set_precision(this->get_precision());
            		}
HXLINE( 287)		::Array< ::Dynamic> _hx_tmp;
HXDLIN( 287)		if (hx::IsNull( this->_children )) {
HXLINE( 287)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp = this->_children;
            		}
HXDLIN( 287)		::Array< ::Dynamic> _hx_tmp1;
HXDLIN( 287)		if (hx::IsNull( c->_children )) {
HXLINE( 287)			_hx_tmp1 = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp1 = c->_children;
            		}
HXDLIN( 287)		if ((_hx_tmp->length != _hx_tmp1->length)) {
HXLINE( 288)			int _g = 0;
HXDLIN( 288)			::Array< ::Dynamic> _g1;
HXDLIN( 288)			if (hx::IsNull( this->_children )) {
HXLINE( 288)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 288)				_g1 = this->_children;
            			}
HXDLIN( 288)			while((_g < _g1->length)){
HXLINE( 288)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 288)				_g = (_g + 1);
HXLINE( 289)				c->addComponent(Dynamic( child->cloneComponent()).StaticCast<  ::haxe::ui::core::Component >());
            			}
            		}
HXLINE( 293)		return c;
            	}


 ::haxe::ui::core::ComponentContainer NumberStepper_obj::self(){
            	HX_GC_STACKFRAME(&_hx_pos_32ef210da4c6323f_302_self)
HXDLIN( 302)		return  ::haxe::ui::components::NumberStepper_obj::__alloc( HX_CTX );
            	}


void NumberStepper_obj::registerComposite(){
            	HX_GC_STACKFRAME(&_hx_pos_32ef210da4c6323f_72_registerComposite)
HXLINE(  73)		this->super::registerComposite();
HXLINE(  81)		this->_hx_set__internalEventsClass(HX_CTX, hx::ClassOf< ::haxe::ui::components::_NumberStepper::Events >());
HXLINE(  85)		this->_hx_set__compositeBuilderClass(HX_CTX, hx::ClassOf< ::haxe::ui::components::_NumberStepper::Builder >());
HXLINE(  89)		this->_hx_set__defaultLayoutClass(HX_CTX, hx::ClassOf< ::haxe::ui::layouts::HorizontalLayout >());
            	}



hx::ObjectPtr< NumberStepper_obj > NumberStepper_obj::__new() {
	hx::ObjectPtr< NumberStepper_obj > __this = new NumberStepper_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< NumberStepper_obj > NumberStepper_obj::__alloc(hx::Ctx *_hx_ctx) {
	NumberStepper_obj *__this = (NumberStepper_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NumberStepper_obj), true, "haxe.ui.components.NumberStepper"));
	*(void **)__this = NumberStepper_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

NumberStepper_obj::NumberStepper_obj()
{
}

hx::Val NumberStepper_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pos") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_pos() ); }
		if (HX_FIELD_EQ(inName,"min") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_min() ); }
		if (HX_FIELD_EQ(inName,"max") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_max() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_step() ); }
		if (HX_FIELD_EQ(inName,"self") ) { return hx::Val( self_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"get_pos") ) { return hx::Val( get_pos_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pos") ) { return hx::Val( set_pos_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_min") ) { return hx::Val( get_min_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_min") ) { return hx::Val( set_min_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_max") ) { return hx::Val( get_max_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_max") ) { return hx::Val( set_max_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_step") ) { return hx::Val( get_step_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_step") ) { return hx::Val( set_step_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"precision") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_precision() ); }
		if (HX_FIELD_EQ(inName,"get_value") ) { return hx::Val( get_value_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_value") ) { return hx::Val( set_value_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_precision") ) { return hx::Val( get_precision_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_precision") ) { return hx::Val( set_precision_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"cloneComponent") ) { return hx::Val( cloneComponent_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"registerComposite") ) { return hx::Val( registerComposite_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"registerBehaviours") ) { return hx::Val( registerBehaviours_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val NumberStepper_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pos") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pos(inValue.Cast< Float >()) ); }
		if (HX_FIELD_EQ(inName,"min") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_min(inValue.Cast<  ::Dynamic >()) ); }
		if (HX_FIELD_EQ(inName,"max") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_max(inValue.Cast<  ::Dynamic >()) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"step") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_step(inValue.Cast< Float >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"precision") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_precision(inValue.Cast<  ::Dynamic >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NumberStepper_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("pos",94,5d,55,00));
	outFields->push(HX_("step",4c,e7,5b,4c));
	outFields->push(HX_("min",92,11,53,00));
	outFields->push(HX_("max",a4,0a,53,00));
	outFields->push(HX_("precision",3e,d5,c7,80));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *NumberStepper_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *NumberStepper_obj_sStaticStorageInfo = 0;
#endif

static ::String NumberStepper_obj_sMemberFields[] = {
	HX_("registerBehaviours",d9,a7,67,34),
	HX_("get_pos",2b,26,ca,26),
	HX_("set_pos",37,b7,cb,19),
	HX_("get_step",d5,a2,16,cc),
	HX_("set_step",49,fc,73,7a),
	HX_("get_min",29,da,c7,26),
	HX_("set_min",35,6b,c9,19),
	HX_("get_max",3b,d3,c7,26),
	HX_("set_max",47,64,c9,19),
	HX_("get_precision",15,a9,2b,42),
	HX_("set_precision",21,8b,31,87),
	HX_("get_value",c8,db,61,75),
	HX_("set_value",d4,c7,b2,58),
	HX_("cloneComponent",a0,e9,56,26),
	HX_("self",8c,8b,50,4c),
	HX_("registerComposite",24,e5,7f,fe),
	::String(null()) };

hx::Class NumberStepper_obj::__mClass;

void NumberStepper_obj::__register()
{
	NumberStepper_obj _hx_dummy;
	NumberStepper_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components.NumberStepper",e2,d4,85,bd);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NumberStepper_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NumberStepper_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NumberStepper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NumberStepper_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
