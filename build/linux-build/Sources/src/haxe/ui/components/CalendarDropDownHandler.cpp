// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Date
#include <hxinc/Date.h>
#endif
#ifndef INCLUDED_DateTools
#include <hxinc/DateTools.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Button
#include <hxinc/haxe/ui/components/Button.h>
#endif
#ifndef INCLUDED_haxe_ui_components_ButtonEvents
#include <hxinc/haxe/ui/components/ButtonEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_components_CalendarDropDownHandler
#include <hxinc/haxe/ui/components/CalendarDropDownHandler.h>
#endif
#ifndef INCLUDED_haxe_ui_components_DropDown
#include <hxinc/haxe/ui/components/DropDown.h>
#endif
#ifndef INCLUDED_haxe_ui_components_DropDownEvents
#include <hxinc/haxe/ui/components/DropDownEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_components_DropDownHandler
#include <hxinc/haxe/ui/components/DropDownHandler.h>
#endif
#ifndef INCLUDED_haxe_ui_components_IDropDownHandler
#include <hxinc/haxe/ui/components/IDropDownHandler.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_CalendarView
#include <hxinc/haxe/ui/containers/CalendarView.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_VBox
#include <hxinc/haxe/ui/containers/VBox.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IDataComponent
#include <hxinc/haxe/ui/core/IDataComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a41105f6d2db613f_352_new,"haxe.ui.components.CalendarDropDownHandler","new",0xe8112607,"haxe.ui.components.CalendarDropDownHandler.new","haxe/ui/components/DropDown.hx",352,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_357_get_component,"haxe.ui.components.CalendarDropDownHandler","get_component",0x916950fb,"haxe.ui.components.CalendarDropDownHandler.get_component","haxe/ui/components/DropDown.hx",357,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_365_prepare,"haxe.ui.components.CalendarDropDownHandler","prepare",0x795446ae,"haxe.ui.components.CalendarDropDownHandler.prepare","haxe/ui/components/DropDown.hx",365,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_384_get_selectedItem,"haxe.ui.components.CalendarDropDownHandler","get_selectedItem",0xacdbbf90,"haxe.ui.components.CalendarDropDownHandler.get_selectedItem","haxe/ui/components/DropDown.hx",384,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_391_set_selectedItem,"haxe.ui.components.CalendarDropDownHandler","set_selectedItem",0x031dad04,"haxe.ui.components.CalendarDropDownHandler.set_selectedItem","haxe/ui/components/DropDown.hx",391,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_418_onCalendarChange,"haxe.ui.components.CalendarDropDownHandler","onCalendarChange",0x4cb20246,"haxe.ui.components.CalendarDropDownHandler.onCalendarChange","haxe/ui/components/DropDown.hx",418,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_428_applyDefault,"haxe.ui.components.CalendarDropDownHandler","applyDefault",0xbe35626c,"haxe.ui.components.CalendarDropDownHandler.applyDefault","haxe/ui/components/DropDown.hx",428,0x145b8c86)
HX_LOCAL_STACK_FRAME(_hx_pos_a41105f6d2db613f_353_boot,"haxe.ui.components.CalendarDropDownHandler","boot",0x1f0920ab,"haxe.ui.components.CalendarDropDownHandler.boot","haxe/ui/components/DropDown.hx",353,0x145b8c86)
namespace haxe{
namespace ui{
namespace components{

void CalendarDropDownHandler_obj::__construct( ::haxe::ui::components::DropDown dropdown){
            	HX_GC_STACKFRAME(&_hx_pos_a41105f6d2db613f_352_new)
HXLINE( 383)		this->_hx_set__cachedSelectedDate(HX_CTX, null());
HXLINE( 352)		super::__construct(dropdown);
            	}

Dynamic CalendarDropDownHandler_obj::__CreateEmpty() { return new CalendarDropDownHandler_obj; }

void *CalendarDropDownHandler_obj::_hx_vtable = 0;

Dynamic CalendarDropDownHandler_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CalendarDropDownHandler_obj > _hx_result = new CalendarDropDownHandler_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CalendarDropDownHandler_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0c25bba7) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0c25bba7;
	} else {
		return inClassId==(int)0x43b3c0c5;
	}
}

 ::haxe::ui::core::Component CalendarDropDownHandler_obj::get_component(){
            	HX_GC_STACKFRAME(&_hx_pos_a41105f6d2db613f_357_get_component)
HXLINE( 358)		if (hx::IsNull( this->_calendar )) {
HXLINE( 359)			this->_hx_set__calendar(HX_CTX,  ::haxe::ui::containers::CalendarView_obj::__alloc( HX_CTX ));
HXLINE( 360)			this->_calendar->registerEvent(HX_("change",70,91,72,b7),this->onCalendarChange_dyn(),null());
            		}
HXLINE( 362)		return this->_calendar;
            	}


void CalendarDropDownHandler_obj::prepare( ::haxe::ui::containers::Box wrapper){
            	HX_STACKFRAME(&_hx_pos_a41105f6d2db613f_365_prepare)
HXLINE( 366)		if (hx::IsNotNull( this->_dropdown->get_dropdownWidth() )) {
HXLINE( 367)			 ::haxe::ui::containers::CalendarView _hx_tmp = this->_calendar;
HXDLIN( 367)			_hx_tmp->set_width(this->_dropdown->get_dropdownWidth());
            		}
HXLINE( 369)		if (hx::IsNotNull( this->_dropdown->get_dropdownHeight() )) {
HXLINE( 370)			 ::haxe::ui::containers::CalendarView _hx_tmp1 = this->_calendar;
HXDLIN( 370)			_hx_tmp1->set_height(this->_dropdown->get_dropdownHeight());
            		}
HXLINE( 373)		if (hx::IsNotNull( this->_cachedSelectedDate )) {
HXLINE( 374)			this->_calendar->unregisterEvent(HX_("change",70,91,72,b7),this->onCalendarChange_dyn());
HXLINE( 375)			this->_calendar->set_selectedDate(this->_cachedSelectedDate);
HXLINE( 376)			this->_calendar->registerEvent(HX_("change",70,91,72,b7),this->onCalendarChange_dyn(),null());
            		}
HXLINE( 380)		this->_calendar->syncComponentValidation(null());
            	}


 ::Dynamic CalendarDropDownHandler_obj::get_selectedItem(){
            	HX_STACKFRAME(&_hx_pos_a41105f6d2db613f_384_get_selectedItem)
HXLINE( 385)		if (hx::IsNull( this->_calendar )) {
HXLINE( 386)			return this->_cachedSelectedDate;
            		}
HXLINE( 388)		return this->_calendar->get_selectedDate();
            	}


 ::Dynamic CalendarDropDownHandler_obj::set_selectedItem( ::Dynamic value){
            	HX_GC_STACKFRAME(&_hx_pos_a41105f6d2db613f_391_set_selectedItem)
HXLINE( 392)		if (hx::IsNull( value )) {
HXLINE( 393)			return value;
            		}
HXLINE( 395)		 ::haxe::ui::util::VariantType v = value;
HXLINE( 396)		 ::Date date = null();
HXLINE( 397)		if ((::haxe::ui::util::_Variant::Variant_Impl__obj::get_isString(v) == true)) {
HXLINE( 398)			date = ::Date_obj::fromString(::haxe::ui::util::_Variant::Variant_Impl__obj::toString(v));
            		}
            		else {
HXLINE( 399)			if (::haxe::ui::util::_Variant::Variant_Impl__obj::get_isDate(v)) {
HXLINE( 400)				date = ::haxe::ui::util::_Variant::Variant_Impl__obj::toDate(v);
            			}
            		}
HXLINE( 403)		bool _hx_tmp;
HXDLIN( 403)		if (hx::IsNotNull( this->_calendar )) {
HXLINE( 403)			_hx_tmp = hx::IsNotNull( date );
            		}
            		else {
HXLINE( 403)			_hx_tmp = false;
            		}
HXDLIN( 403)		if (_hx_tmp) {
HXLINE( 404)			::String _hx_tmp1 = date->toString();
HXDLIN( 404)			if ((_hx_tmp1 == this->_calendar->get_selectedDate()->toString())) {
HXLINE( 405)				 ::haxe::ui::components::DropDown _hx_tmp2 = this->_dropdown;
HXDLIN( 405)				_hx_tmp2->set_text(::DateTools_obj::format(date,::haxe::ui::components::CalendarDropDownHandler_obj::DATE_FORMAT));
HXLINE( 406)				return value;
            			}
HXLINE( 408)			this->_hx_set__cachedSelectedDate(HX_CTX, date);
HXLINE( 409)			this->_calendar->set_selectedDate(date);
            		}
            		else {
HXLINE( 411)			if (hx::IsNotNull( date )) {
HXLINE( 412)				this->_hx_set__cachedSelectedDate(HX_CTX, date);
HXLINE( 413)				 ::haxe::ui::components::DropDown _hx_tmp3 = this->_dropdown;
HXDLIN( 413)				_hx_tmp3->set_text(::DateTools_obj::format(this->_cachedSelectedDate,::haxe::ui::components::CalendarDropDownHandler_obj::DATE_FORMAT));
            			}
            		}
HXLINE( 415)		return value;
            	}


void CalendarDropDownHandler_obj::onCalendarChange( ::haxe::ui::events::UIEvent event){
            	HX_GC_STACKFRAME(&_hx_pos_a41105f6d2db613f_418_onCalendarChange)
HXLINE( 419)		if (hx::IsNull( this->_calendar->get_selectedDate() )) {
HXLINE( 420)			return;
            		}
HXLINE( 422)		this->_hx_set__cachedSelectedDate(HX_CTX, this->_calendar->get_selectedDate());
HXLINE( 423)		 ::haxe::ui::components::DropDown _hx_tmp = this->_dropdown;
HXDLIN( 423)		 ::Date _hx_tmp1 = this->_calendar->get_selectedDate();
HXDLIN( 423)		_hx_tmp->set_text(::DateTools_obj::format(_hx_tmp1,::haxe::ui::components::CalendarDropDownHandler_obj::DATE_FORMAT));
HXLINE( 424)		hx::TCast<  ::haxe::ui::components::DropDownEvents >::cast(this->_dropdown->_internalEvents)->hideDropDown();
HXLINE( 425)		 ::haxe::ui::components::DropDown _hx_tmp2 = this->_dropdown;
HXDLIN( 425)		_hx_tmp2->dispatch( ::haxe::ui::events::UIEvent_obj::__alloc( HX_CTX ,HX_("change",70,91,72,b7),null(),null()));
            	}


HX_DEFINE_DYNAMIC_FUNC1(CalendarDropDownHandler_obj,onCalendarChange,(void))

void CalendarDropDownHandler_obj::applyDefault(){
            	HX_STACKFRAME(&_hx_pos_a41105f6d2db613f_428_applyDefault)
HXLINE( 429)		 ::Date now = ::Date_obj::now();
HXLINE( 430)		this->_dropdown->set_selectedItem(now);
            	}


::String CalendarDropDownHandler_obj::DATE_FORMAT;


hx::ObjectPtr< CalendarDropDownHandler_obj > CalendarDropDownHandler_obj::__new( ::haxe::ui::components::DropDown dropdown) {
	hx::ObjectPtr< CalendarDropDownHandler_obj > __this = new CalendarDropDownHandler_obj();
	__this->__construct(dropdown);
	return __this;
}

hx::ObjectPtr< CalendarDropDownHandler_obj > CalendarDropDownHandler_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::components::DropDown dropdown) {
	CalendarDropDownHandler_obj *__this = (CalendarDropDownHandler_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CalendarDropDownHandler_obj), true, "haxe.ui.components.CalendarDropDownHandler"));
	*(void **)__this = CalendarDropDownHandler_obj::_hx_vtable;
	__this->__construct(dropdown);
	return __this;
}

CalendarDropDownHandler_obj::CalendarDropDownHandler_obj()
{
}

void CalendarDropDownHandler_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(CalendarDropDownHandler);
	HX_MARK_MEMBER_NAME(_calendar,"_calendar");
	HX_MARK_MEMBER_NAME(_cachedSelectedDate,"_cachedSelectedDate");
	 ::haxe::ui::components::DropDownHandler_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void CalendarDropDownHandler_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_calendar,"_calendar");
	HX_VISIT_MEMBER_NAME(_cachedSelectedDate,"_cachedSelectedDate");
	 ::haxe::ui::components::DropDownHandler_obj::__Visit(HX_VISIT_ARG);
}

hx::Val CalendarDropDownHandler_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"prepare") ) { return hx::Val( prepare_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_calendar") ) { return hx::Val( _calendar ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"applyDefault") ) { return hx::Val( applyDefault_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"get_component") ) { return hx::Val( get_component_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_selectedItem") ) { return hx::Val( get_selectedItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selectedItem") ) { return hx::Val( set_selectedItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"onCalendarChange") ) { return hx::Val( onCalendarChange_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"_cachedSelectedDate") ) { return hx::Val( _cachedSelectedDate ); }
	}
	return super::__Field(inName,inCallProp);
}

bool CalendarDropDownHandler_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"DATE_FORMAT") ) { outValue = ( DATE_FORMAT ); return true; }
	}
	return false;
}

hx::Val CalendarDropDownHandler_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_calendar") ) { _hx_set__calendar(HX_CTX_GET,inValue.Cast<  ::haxe::ui::containers::CalendarView >()); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"_cachedSelectedDate") ) { _hx_set__cachedSelectedDate(HX_CTX_GET,inValue.Cast<  ::Date >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool CalendarDropDownHandler_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"DATE_FORMAT") ) { DATE_FORMAT=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void CalendarDropDownHandler_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_calendar",1d,56,bf,c6));
	outFields->push(HX_("_cachedSelectedDate",4a,f1,5d,d1));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo CalendarDropDownHandler_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::containers::CalendarView */ ,(int)offsetof(CalendarDropDownHandler_obj,_calendar),HX_("_calendar",1d,56,bf,c6)},
	{hx::fsObject /*  ::Date */ ,(int)offsetof(CalendarDropDownHandler_obj,_cachedSelectedDate),HX_("_cachedSelectedDate",4a,f1,5d,d1)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo CalendarDropDownHandler_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &CalendarDropDownHandler_obj::DATE_FORMAT,HX_("DATE_FORMAT",68,70,54,ce)},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String CalendarDropDownHandler_obj_sMemberFields[] = {
	HX_("_calendar",1d,56,bf,c6),
	HX_("get_component",94,c4,b7,d0),
	HX_("prepare",87,91,dd,37),
	HX_("_cachedSelectedDate",4a,f1,5d,d1),
	HX_("get_selectedItem",97,d1,f8,da),
	HX_("set_selectedItem",0b,bf,3a,31),
	HX_("onCalendarChange",4d,14,cf,7a),
	HX_("applyDefault",f3,24,31,db),
	::String(null()) };

static void CalendarDropDownHandler_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CalendarDropDownHandler_obj::DATE_FORMAT,"DATE_FORMAT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CalendarDropDownHandler_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CalendarDropDownHandler_obj::DATE_FORMAT,"DATE_FORMAT");
};

#endif

hx::Class CalendarDropDownHandler_obj::__mClass;

static ::String CalendarDropDownHandler_obj_sStaticFields[] = {
	HX_("DATE_FORMAT",68,70,54,ce),
	::String(null())
};

void CalendarDropDownHandler_obj::__register()
{
	CalendarDropDownHandler_obj _hx_dummy;
	CalendarDropDownHandler_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components.CalendarDropDownHandler",95,16,de,66);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &CalendarDropDownHandler_obj::__GetStatic;
	__mClass->mSetStaticField = &CalendarDropDownHandler_obj::__SetStatic;
	__mClass->mMarkFunc = CalendarDropDownHandler_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(CalendarDropDownHandler_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(CalendarDropDownHandler_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< CalendarDropDownHandler_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CalendarDropDownHandler_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CalendarDropDownHandler_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CalendarDropDownHandler_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void CalendarDropDownHandler_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a41105f6d2db613f_353_boot)
HXDLIN( 353)		DATE_FORMAT = HX_("%d/%m/%Y",2b,5a,76,e3);
            	}
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
