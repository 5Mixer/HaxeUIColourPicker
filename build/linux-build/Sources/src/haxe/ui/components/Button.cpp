// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviour
#include <hxinc/haxe/ui/behaviours/Behaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_Behaviours
#include <hxinc/haxe/ui/behaviours/Behaviours.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DataBehaviour
#include <hxinc/haxe/ui/behaviours/DataBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_DefaultBehaviour
#include <hxinc/haxe/ui/behaviours/DefaultBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_behaviours_ValueBehaviour
#include <hxinc/haxe/ui/behaviours/ValueBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_binding_BindingManager
#include <hxinc/haxe/ui/binding/BindingManager.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Button
#include <hxinc/haxe/ui/components/Button.h>
#endif
#ifndef INCLUDED_haxe_ui_components_ButtonBuilder
#include <hxinc/haxe/ui/components/ButtonBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_components_ButtonEvents
#include <hxinc/haxe/ui/components/ButtonEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_components_ButtonLayout
#include <hxinc/haxe/ui/components/ButtonLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_components__Button_IconBehaviour
#include <hxinc/haxe/ui/components/_Button/IconBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__Button_SelectedBehaviour
#include <hxinc/haxe/ui/components/_Button/SelectedBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__Button_TextBehaviour
#include <hxinc/haxe/ui/components/_Button/TextBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_components__Button_ToggleBehaviour
#include <hxinc/haxe/ui/components/_Button/ToggleBehaviour.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_filters_Filter
#include <hxinc/haxe/ui/filters/Filter.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_DefaultLayout
#include <hxinc/haxe/ui/layouts/DefaultLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_ILayout
#include <hxinc/haxe/ui/layouts/ILayout.h>
#endif
#ifndef INCLUDED_haxe_ui_layouts_Layout
#include <hxinc/haxe/ui/layouts/Layout.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_Style
#include <hxinc/haxe/ui/styles/Style.h>
#endif
#ifndef INCLUDED_haxe_ui_styles_animation_AnimationOptions
#include <hxinc/haxe/ui/styles/animation/AnimationOptions.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_util__Variant_Variant_Impl_
#include <hxinc/haxe/ui/util/_Variant/Variant_Impl_.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_13057cf4e603c2d2_50_new,"haxe.ui.components.Button","new",0x541d2c0a,"haxe.ui.components.Button.new","haxe/ui/components/Button.hx",50,0x45086125)
HX_LOCAL_STACK_FRAME(_hx_pos_13057cf4e603c2d2_109_applyStyle,"haxe.ui.components.Button","applyStyle",0xc0d6ee79,"haxe.ui.components.Button.applyStyle","haxe/ui/components/Button.hx",109,0x45086125)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_314_registerBehaviours,"haxe.ui.components.Button","registerBehaviours",0xef57fb6f,"haxe.ui.components.Button.registerBehaviours","haxe/ui/macros/Macros.hx",314,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_repeater,"haxe.ui.components.Button","get_repeater",0x5a964fa7,"haxe.ui.components.Button.get_repeater","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_repeater,"haxe.ui.components.Button","set_repeater",0x6f8f731b,"haxe.ui.components.Button.set_repeater","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_repeatInterval,"haxe.ui.components.Button","get_repeatInterval",0x9bf4541f,"haxe.ui.components.Button.get_repeatInterval","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_repeatInterval,"haxe.ui.components.Button","set_repeatInterval",0x78a38693,"haxe.ui.components.Button.set_repeatInterval","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_easeInRepeater,"haxe.ui.components.Button","get_easeInRepeater",0x5698fb7a,"haxe.ui.components.Button.get_easeInRepeater","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_easeInRepeater,"haxe.ui.components.Button","set_easeInRepeater",0x33482dee,"haxe.ui.components.Button.set_easeInRepeater","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_remainPressed,"haxe.ui.components.Button","get_remainPressed",0x43ed0b17,"haxe.ui.components.Button.get_remainPressed","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_remainPressed,"haxe.ui.components.Button","set_remainPressed",0x675ae323,"haxe.ui.components.Button.set_remainPressed","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_toggle,"haxe.ui.components.Button","get_toggle",0x1132fcf3,"haxe.ui.components.Button.get_toggle","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_toggle,"haxe.ui.components.Button","set_toggle",0x14b09b67,"haxe.ui.components.Button.set_toggle","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_selected,"haxe.ui.components.Button","get_selected",0xfbadbd7a,"haxe.ui.components.Button.get_selected","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_selected,"haxe.ui.components.Button","set_selected",0x10a6e0ee,"haxe.ui.components.Button.set_selected","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_331_get_icon,"haxe.ui.components.Button","get_icon",0x8b85bf18,"haxe.ui.components.Button.get_icon","haxe/ui/macros/Macros.hx",331,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_357_set_icon,"haxe.ui.components.Button","set_icon",0x39e3188c,"haxe.ui.components.Button.set_icon","haxe/ui/macros/Macros.hx",357,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_420_get_value,"haxe.ui.components.Button","get_value",0x046252f2,"haxe.ui.components.Button.get_value","haxe/ui/macros/Macros.hx",420,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_423_set_value,"haxe.ui.components.Button","set_value",0xe7b33efe,"haxe.ui.components.Button.set_value","haxe/ui/macros/Macros.hx",423,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_127_get_iconPosition,"haxe.ui.components.Button","get_iconPosition",0xa12af3e1,"haxe.ui.components.Button.get_iconPosition","haxe/ui/macros/Macros.hx",127,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_140_set_iconPosition,"haxe.ui.components.Button","set_iconPosition",0xf76ce155,"haxe.ui.components.Button.set_iconPosition","haxe/ui/macros/Macros.hx",140,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_127_get_fontSize,"haxe.ui.components.Button","get_fontSize",0x1912514f,"haxe.ui.components.Button.get_fontSize","haxe/ui/macros/Macros.hx",127,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_140_set_fontSize,"haxe.ui.components.Button","set_fontSize",0x2e0b74c3,"haxe.ui.components.Button.set_fontSize","haxe/ui/macros/Macros.hx",140,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_127_get_textAlign,"haxe.ui.components.Button","get_textAlign",0x68bf0ed9,"haxe.ui.components.Button.get_textAlign","haxe/ui/macros/Macros.hx",127,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_140_set_textAlign,"haxe.ui.components.Button","set_textAlign",0xadc4f0e5,"haxe.ui.components.Button.set_textAlign","haxe/ui/macros/Macros.hx",140,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_5ed56d518d8ec04e_521_cloneComponent,"haxe.ui.components.Button","cloneComponent",0x7a443a36,"haxe.ui.components.Button.cloneComponent","haxe/ui/macros/helpers/ClassBuilder.hx",521,0x8cdaad7b)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_302_self,"haxe.ui.components.Button","self",0x48b764a2,"haxe.ui.components.Button.self","haxe/ui/macros/Macros.hx",302,0x27866361)
HX_LOCAL_STACK_FRAME(_hx_pos_3a212889e7a03c26_72_registerComposite,"haxe.ui.components.Button","registerComposite",0x60ea964e,"haxe.ui.components.Button.registerComposite","haxe/ui/macros/Macros.hx",72,0x27866361)
namespace haxe{
namespace ui{
namespace components{

void Button_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_13057cf4e603c2d2_50_new)
HXDLIN(  50)		super::__construct();
            	}

Dynamic Button_obj::__CreateEmpty() { return new Button_obj; }

void *Button_obj::_hx_vtable = 0;

Dynamic Button_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Button_obj > _hx_result = new Button_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Button_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x4a06d0bc) {
		if (inClassId<=(int)0x23af8dfd) {
			if (inClassId<=(int)0x23718646) {
				if (inClassId<=(int)0x0fddceef) {
					return inClassId==(int)0x00000001 || inClassId==(int)0x0fddceef;
				} else {
					return inClassId==(int)0x23718646;
				}
			} else {
				return inClassId==(int)0x23af8dfd;
			}
		} else {
			if (inClassId<=(int)0x324697fd) {
				return inClassId==(int)0x2a04b446 || inClassId==(int)0x324697fd;
			} else {
				return inClassId==(int)0x4a06d0bc;
			}
		}
	} else {
		if (inClassId<=(int)0x7ee2d869) {
			if (inClassId<=(int)0x7140e8dc) {
				if (inClassId<=(int)0x5f23eff4) {
					return inClassId==(int)0x4eb0678b || inClassId==(int)0x5f23eff4;
				} else {
					return inClassId==(int)0x7140e8dc;
				}
			} else {
				return inClassId==(int)0x7ee2d869;
			}
		} else {
			return inClassId==(int)0x7f63f3f1 || inClassId==(int)0x7ff0cb0e;
		}
	}
}

void Button_obj::applyStyle( ::haxe::ui::styles::Style style){
            	HX_STACKFRAME(&_hx_pos_13057cf4e603c2d2_109_applyStyle)
HXLINE( 110)		this->super::applyStyle(style);
HXLINE( 111)		if (hx::IsNotNull( style->icon )) {
HXLINE( 112)			this->set_icon(style->icon);
            		}
            	}


void Button_obj::registerBehaviours(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_314_registerBehaviours)
HXLINE( 315)		this->super::registerBehaviours();
HXLINE( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 376)		_hx_tmp->_hx_register(HX_("repeater",88,bc,55,10),hx::ClassOf< ::haxe::ui::behaviours::DefaultBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(false));
HXDLIN( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp1 = this->behaviours;
HXDLIN( 376)		_hx_tmp1->_hx_register(HX_("repeatInterval",c0,1f,6a,45),hx::ClassOf< ::haxe::ui::behaviours::DefaultBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(50) )));
HXDLIN( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp2 = this->behaviours;
HXDLIN( 376)		_hx_tmp2->_hx_register(HX_("easeInRepeater",1b,c7,0e,00),hx::ClassOf< ::haxe::ui::behaviours::DefaultBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(false));
HXDLIN( 376)		 ::haxe::ui::behaviours::Behaviours _hx_tmp3 = this->behaviours;
HXDLIN( 376)		_hx_tmp3->_hx_register(HX_("remainPressed",96,4e,12,db),hx::ClassOf< ::haxe::ui::behaviours::DefaultBehaviour >(),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(false));
HXLINE( 372)		this->behaviours->_hx_register(HX_("toggle",94,bf,43,8f),hx::ClassOf< ::haxe::ui::components::_Button::ToggleBehaviour >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("selected",5b,2a,6d,b1),hx::ClassOf< ::haxe::ui::components::_Button::SelectedBehaviour >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("text",ad,cc,f9,4c),hx::ClassOf< ::haxe::ui::components::_Button::TextBehaviour >(),null());
HXDLIN( 372)		this->behaviours->_hx_register(HX_("icon",79,e7,b2,45),hx::ClassOf< ::haxe::ui::components::_Button::IconBehaviour >(),null());
            	}


bool Button_obj::get_repeater(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_repeater)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("repeater",88,bc,55,10)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_repeater,return )

bool Button_obj::set_repeater(bool value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_repeater)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("repeater",88,bc,55,10),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("repeater",88,bc,55,10));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_repeater,return )

int Button_obj::get_repeatInterval(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_repeatInterval)
HXDLIN( 331)		return ( (int)(::haxe::ui::util::_Variant::Variant_Impl__obj::toInt(this->behaviours->get(HX_("repeatInterval",c0,1f,6a,45)))) );
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_repeatInterval,return )

int Button_obj::set_repeatInterval(int value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_repeatInterval)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("repeatInterval",c0,1f,6a,45),::haxe::ui::util::_Variant::Variant_Impl__obj::fromFloat(( (Float)(value) )));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("repeatInterval",c0,1f,6a,45));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_repeatInterval,return )

bool Button_obj::get_easeInRepeater(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_easeInRepeater)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("easeInRepeater",1b,c7,0e,00)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_easeInRepeater,return )

bool Button_obj::set_easeInRepeater(bool value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_easeInRepeater)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("easeInRepeater",1b,c7,0e,00),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("easeInRepeater",1b,c7,0e,00));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_easeInRepeater,return )

bool Button_obj::get_remainPressed(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_remainPressed)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("remainPressed",96,4e,12,db)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_remainPressed,return )

bool Button_obj::set_remainPressed(bool value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_remainPressed)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("remainPressed",96,4e,12,db),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("remainPressed",96,4e,12,db));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_remainPressed,return )

bool Button_obj::get_toggle(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_toggle)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("toggle",94,bf,43,8f)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_toggle,return )

bool Button_obj::set_toggle(bool value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_toggle)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("toggle",94,bf,43,8f),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("toggle",94,bf,43,8f));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_toggle,return )

bool Button_obj::get_selected(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_selected)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toBool(this->behaviours->get(HX_("selected",5b,2a,6d,b1)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_selected,return )

bool Button_obj::set_selected(bool value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_selected)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("selected",5b,2a,6d,b1),::haxe::ui::util::_Variant::Variant_Impl__obj::fromBool(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("selected",5b,2a,6d,b1));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_selected,return )

::String Button_obj::get_icon(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_331_get_icon)
HXDLIN( 331)		return ::haxe::ui::util::_Variant::Variant_Impl__obj::toString(this->behaviours->get(HX_("icon",79,e7,b2,45)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_icon,return )

::String Button_obj::set_icon(::String value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_357_set_icon)
HXLINE( 358)		 ::haxe::ui::behaviours::Behaviours _hx_tmp = this->behaviours;
HXDLIN( 358)		_hx_tmp->set(HX_("icon",79,e7,b2,45),::haxe::ui::util::_Variant::Variant_Impl__obj::fromString(value));
HXLINE( 211)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(( ( ::haxe::ui::core::Component)(hx::ObjectPtr<OBJ_>(this)) ),HX_("icon",79,e7,b2,45));
HXLINE( 359)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_icon,return )

 ::Dynamic Button_obj::get_value(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_420_get_value)
HXDLIN( 420)		return this->get_text();
            	}


 ::Dynamic Button_obj::set_value( ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_423_set_value)
HXLINE( 424)		this->set_text(( (::String)(value) ));
HXLINE( 425)		::haxe::ui::binding::BindingManager_obj::get_instance()->componentPropChanged(hx::ObjectPtr<OBJ_>(this),HX_("text",ad,cc,f9,4c));
HXLINE( 426)		return value;
            	}


::String Button_obj::get_iconPosition(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_127_get_iconPosition)
HXLINE( 128)		if (hx::IsNotNull( this->customStyle->iconPosition )) {
HXLINE( 129)			return this->customStyle->iconPosition;
            		}
HXLINE( 131)		bool _hx_tmp;
HXDLIN( 131)		if (hx::IsNotNull( this->get_style() )) {
HXLINE( 131)			_hx_tmp = hx::IsNull( this->get_style()->iconPosition );
            		}
            		else {
HXLINE( 131)			_hx_tmp = true;
            		}
HXDLIN( 131)		if (_hx_tmp) {
HXLINE( 132)			return null();
            		}
HXLINE( 134)		return this->get_style()->iconPosition;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_iconPosition,return )

::String Button_obj::set_iconPosition(::String value){
            	HX_GC_STACKFRAME(&_hx_pos_3a212889e7a03c26_140_set_iconPosition)
HXLINE( 141)		if ((this->customStyle->iconPosition == value)) {
HXLINE( 142)			return value;
            		}
HXLINE( 144)		if (hx::IsNull( this->_style )) {
HXLINE( 145)			this->_hx_set__style(HX_CTX,  ::haxe::ui::styles::Style_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null()));
            		}
HXLINE( 147)		this->customStyle->_hx_set_iconPosition(HX_CTX, value);
HXLINE( 148)		{
HXLINE( 148)			this->invalidateComponent(HX_("style",31,a5,1d,84));
HXDLIN( 148)			{
            			}
            		}
HXLINE( 153)		bool _hx_tmp;
HXDLIN( 153)		if (hx::IsNotNull( this->_layout )) {
HXLINE( 153)			_hx_tmp = (this->_layoutLocked == true);
            		}
            		else {
HXLINE( 153)			_hx_tmp = true;
            		}
HXDLIN( 153)		if (!(_hx_tmp)) {
HXLINE( 153)			this->invalidateComponent(HX_("layout",aa,ae,b8,58));
            		}
HXLINE( 149)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_iconPosition,return )

 ::Dynamic Button_obj::get_fontSize(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_127_get_fontSize)
HXLINE( 128)		if (hx::IsNotNull( this->customStyle->fontSize )) {
HXLINE( 129)			return this->customStyle->fontSize;
            		}
HXLINE( 131)		bool _hx_tmp;
HXDLIN( 131)		if (hx::IsNotNull( this->get_style() )) {
HXLINE( 131)			_hx_tmp = hx::IsNull( this->get_style()->fontSize );
            		}
            		else {
HXLINE( 131)			_hx_tmp = true;
            		}
HXDLIN( 131)		if (_hx_tmp) {
HXLINE( 132)			return null();
            		}
HXLINE( 134)		return this->get_style()->fontSize;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_fontSize,return )

 ::Dynamic Button_obj::set_fontSize( ::Dynamic value){
            	HX_GC_STACKFRAME(&_hx_pos_3a212889e7a03c26_140_set_fontSize)
HXLINE( 141)		if (hx::IsEq( this->customStyle->fontSize,value )) {
HXLINE( 142)			return value;
            		}
HXLINE( 144)		if (hx::IsNull( this->_style )) {
HXLINE( 145)			this->_hx_set__style(HX_CTX,  ::haxe::ui::styles::Style_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null()));
            		}
HXLINE( 147)		this->customStyle->_hx_set_fontSize(HX_CTX, value);
HXLINE( 148)		{
HXLINE( 148)			this->invalidateComponent(HX_("style",31,a5,1d,84));
HXDLIN( 148)			{
            			}
            		}
HXLINE( 153)		bool _hx_tmp;
HXDLIN( 153)		if (hx::IsNotNull( this->_layout )) {
HXLINE( 153)			_hx_tmp = (this->_layoutLocked == true);
            		}
            		else {
HXLINE( 153)			_hx_tmp = true;
            		}
HXDLIN( 153)		if (!(_hx_tmp)) {
HXLINE( 153)			this->invalidateComponent(HX_("layout",aa,ae,b8,58));
            		}
HXLINE( 149)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_fontSize,return )

::String Button_obj::get_textAlign(){
            	HX_STACKFRAME(&_hx_pos_3a212889e7a03c26_127_get_textAlign)
HXLINE( 128)		if (hx::IsNotNull( this->customStyle->textAlign )) {
HXLINE( 129)			return this->customStyle->textAlign;
            		}
HXLINE( 131)		bool _hx_tmp;
HXDLIN( 131)		if (hx::IsNotNull( this->get_style() )) {
HXLINE( 131)			_hx_tmp = hx::IsNull( this->get_style()->textAlign );
            		}
            		else {
HXLINE( 131)			_hx_tmp = true;
            		}
HXDLIN( 131)		if (_hx_tmp) {
HXLINE( 132)			return null();
            		}
HXLINE( 134)		return this->get_style()->textAlign;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Button_obj,get_textAlign,return )

::String Button_obj::set_textAlign(::String value){
            	HX_GC_STACKFRAME(&_hx_pos_3a212889e7a03c26_140_set_textAlign)
HXLINE( 141)		if ((this->customStyle->textAlign == value)) {
HXLINE( 142)			return value;
            		}
HXLINE( 144)		if (hx::IsNull( this->_style )) {
HXLINE( 145)			this->_hx_set__style(HX_CTX,  ::haxe::ui::styles::Style_obj::__alloc( HX_CTX ,null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null(),null()));
            		}
HXLINE( 147)		this->customStyle->_hx_set_textAlign(HX_CTX, value);
HXLINE( 148)		{
HXLINE( 148)			this->invalidateComponent(HX_("style",31,a5,1d,84));
HXDLIN( 148)			{
            			}
            		}
HXLINE( 153)		bool _hx_tmp;
HXDLIN( 153)		if (hx::IsNotNull( this->_layout )) {
HXLINE( 153)			_hx_tmp = (this->_layoutLocked == true);
            		}
            		else {
HXLINE( 153)			_hx_tmp = true;
            		}
HXDLIN( 153)		if (!(_hx_tmp)) {
HXLINE( 153)			this->invalidateComponent(HX_("layout",aa,ae,b8,58));
            		}
HXLINE( 149)		return value;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Button_obj,set_textAlign,return )

 ::haxe::ui::core::ComponentContainer Button_obj::cloneComponent(){
            	HX_STACKFRAME(&_hx_pos_5ed56d518d8ec04e_521_cloneComponent)
HXLINE( 267)		 ::haxe::ui::components::Button c = ( ( ::haxe::ui::components::Button)(this->super::cloneComponent()) );
HXLINE( 281)		c->set_repeater(this->get_repeater());
HXDLIN( 281)		c->set_repeatInterval(this->get_repeatInterval());
HXDLIN( 281)		c->set_easeInRepeater(this->get_easeInRepeater());
HXDLIN( 281)		c->set_remainPressed(this->get_remainPressed());
HXDLIN( 281)		c->set_toggle(this->get_toggle());
HXDLIN( 281)		c->set_selected(this->get_selected());
HXLINE( 277)		if (hx::IsNotNull( this->get_icon() )) {
HXLINE( 277)			c->set_icon(this->get_icon());
            		}
HXLINE( 287)		::Array< ::Dynamic> _hx_tmp;
HXDLIN( 287)		if (hx::IsNull( this->_children )) {
HXLINE( 287)			_hx_tmp = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp = this->_children;
            		}
HXDLIN( 287)		::Array< ::Dynamic> _hx_tmp1;
HXDLIN( 287)		if (hx::IsNull( c->_children )) {
HXLINE( 287)			_hx_tmp1 = ::Array_obj< ::Dynamic>::__new(0);
            		}
            		else {
HXLINE( 287)			_hx_tmp1 = c->_children;
            		}
HXDLIN( 287)		if ((_hx_tmp->length != _hx_tmp1->length)) {
HXLINE( 288)			int _g = 0;
HXDLIN( 288)			::Array< ::Dynamic> _g1;
HXDLIN( 288)			if (hx::IsNull( this->_children )) {
HXLINE( 288)				_g1 = ::Array_obj< ::Dynamic>::__new(0);
            			}
            			else {
HXLINE( 288)				_g1 = this->_children;
            			}
HXDLIN( 288)			while((_g < _g1->length)){
HXLINE( 288)				 ::haxe::ui::core::Component child = _g1->__get(_g).StaticCast<  ::haxe::ui::core::Component >();
HXDLIN( 288)				_g = (_g + 1);
HXLINE( 289)				c->addComponent(Dynamic( child->cloneComponent()).StaticCast<  ::haxe::ui::core::Component >());
            			}
            		}
HXLINE( 293)		return c;
            	}


 ::haxe::ui::core::ComponentContainer Button_obj::self(){
            	HX_GC_STACKFRAME(&_hx_pos_3a212889e7a03c26_302_self)
HXDLIN( 302)		return  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
            	}


void Button_obj::registerComposite(){
            	HX_GC_STACKFRAME(&_hx_pos_3a212889e7a03c26_72_registerComposite)
HXLINE(  73)		this->super::registerComposite();
HXLINE(  81)		this->_hx_set__internalEventsClass(HX_CTX, hx::ClassOf< ::haxe::ui::components::ButtonEvents >());
HXLINE(  85)		this->_hx_set__compositeBuilderClass(HX_CTX, hx::ClassOf< ::haxe::ui::components::ButtonBuilder >());
HXLINE(  89)		this->_hx_set__defaultLayoutClass(HX_CTX, hx::ClassOf< ::haxe::ui::components::ButtonLayout >());
            	}



hx::ObjectPtr< Button_obj > Button_obj::__new() {
	hx::ObjectPtr< Button_obj > __this = new Button_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Button_obj > Button_obj::__alloc(hx::Ctx *_hx_ctx) {
	Button_obj *__this = (Button_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Button_obj), true, "haxe.ui.components.Button"));
	*(void **)__this = Button_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Button_obj::Button_obj()
{
}

hx::Val Button_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"icon") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_icon() ); }
		if (HX_FIELD_EQ(inName,"self") ) { return hx::Val( self_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toggle") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_toggle() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"repeater") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_repeater() ); }
		if (HX_FIELD_EQ(inName,"selected") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_selected() ); }
		if (HX_FIELD_EQ(inName,"get_icon") ) { return hx::Val( get_icon_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_icon") ) { return hx::Val( set_icon_dyn() ); }
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_fontSize() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_value") ) { return hx::Val( get_value_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_value") ) { return hx::Val( set_value_dyn() ); }
		if (HX_FIELD_EQ(inName,"textAlign") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_textAlign() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"applyStyle") ) { return hx::Val( applyStyle_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_toggle") ) { return hx::Val( get_toggle_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_toggle") ) { return hx::Val( set_toggle_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"get_repeater") ) { return hx::Val( get_repeater_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_repeater") ) { return hx::Val( set_repeater_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_selected") ) { return hx::Val( get_selected_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_selected") ) { return hx::Val( set_selected_dyn() ); }
		if (HX_FIELD_EQ(inName,"iconPosition") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_iconPosition() ); }
		if (HX_FIELD_EQ(inName,"get_fontSize") ) { return hx::Val( get_fontSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_fontSize") ) { return hx::Val( set_fontSize_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"remainPressed") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_remainPressed() ); }
		if (HX_FIELD_EQ(inName,"get_textAlign") ) { return hx::Val( get_textAlign_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_textAlign") ) { return hx::Val( set_textAlign_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"repeatInterval") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_repeatInterval() ); }
		if (HX_FIELD_EQ(inName,"easeInRepeater") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_easeInRepeater() ); }
		if (HX_FIELD_EQ(inName,"cloneComponent") ) { return hx::Val( cloneComponent_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_iconPosition") ) { return hx::Val( get_iconPosition_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_iconPosition") ) { return hx::Val( set_iconPosition_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"get_remainPressed") ) { return hx::Val( get_remainPressed_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_remainPressed") ) { return hx::Val( set_remainPressed_dyn() ); }
		if (HX_FIELD_EQ(inName,"registerComposite") ) { return hx::Val( registerComposite_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"registerBehaviours") ) { return hx::Val( registerBehaviours_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_repeatInterval") ) { return hx::Val( get_repeatInterval_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_repeatInterval") ) { return hx::Val( set_repeatInterval_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_easeInRepeater") ) { return hx::Val( get_easeInRepeater_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_easeInRepeater") ) { return hx::Val( set_easeInRepeater_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Button_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"icon") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_icon(inValue.Cast< ::String >()) ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toggle") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_toggle(inValue.Cast< bool >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"repeater") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_repeater(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"selected") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_selected(inValue.Cast< bool >()) ); }
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontSize(inValue.Cast<  ::Dynamic >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"textAlign") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_textAlign(inValue.Cast< ::String >()) ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"iconPosition") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_iconPosition(inValue.Cast< ::String >()) ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"remainPressed") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_remainPressed(inValue.Cast< bool >()) ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"repeatInterval") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_repeatInterval(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"easeInRepeater") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_easeInRepeater(inValue.Cast< bool >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Button_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("repeater",88,bc,55,10));
	outFields->push(HX_("repeatInterval",c0,1f,6a,45));
	outFields->push(HX_("easeInRepeater",1b,c7,0e,00));
	outFields->push(HX_("remainPressed",96,4e,12,db));
	outFields->push(HX_("toggle",94,bf,43,8f));
	outFields->push(HX_("selected",5b,2a,6d,b1));
	outFields->push(HX_("icon",79,e7,b2,45));
	outFields->push(HX_("iconPosition",42,e5,38,76));
	outFields->push(HX_("fontSize",30,be,d1,ce));
	outFields->push(HX_("textAlign",d8,e6,7e,ba));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo *Button_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Button_obj_sStaticStorageInfo = 0;
#endif

static ::String Button_obj_sMemberFields[] = {
	HX_("applyStyle",e3,20,6f,2f),
	HX_("registerBehaviours",d9,a7,67,34),
	HX_("get_repeater",91,70,6f,c5),
	HX_("set_repeater",05,94,68,da),
	HX_("get_repeatInterval",89,00,04,e1),
	HX_("set_repeatInterval",fd,32,b3,bd),
	HX_("get_easeInRepeater",e4,a7,a8,9b),
	HX_("set_easeInRepeater",58,da,57,78),
	HX_("get_remainPressed",ed,59,82,e1),
	HX_("set_remainPressed",f9,31,f0,04),
	HX_("get_toggle",5d,2f,cb,7f),
	HX_("set_toggle",d1,cd,48,83),
	HX_("get_selected",64,de,86,66),
	HX_("set_selected",d8,01,80,7b),
	HX_("get_icon",02,a3,6d,c5),
	HX_("set_icon",76,fc,ca,73),
	HX_("get_value",c8,db,61,75),
	HX_("set_value",d4,c7,b2,58),
	HX_("get_iconPosition",cb,d1,d7,7a),
	HX_("set_iconPosition",3f,bf,19,d1),
	HX_("get_fontSize",39,72,eb,83),
	HX_("set_fontSize",ad,95,e4,98),
	HX_("get_textAlign",af,ba,e2,7b),
	HX_("set_textAlign",bb,9c,e8,c0),
	HX_("cloneComponent",a0,e9,56,26),
	HX_("self",8c,8b,50,4c),
	HX_("registerComposite",24,e5,7f,fe),
	::String(null()) };

hx::Class Button_obj::__mClass;

void Button_obj::__register()
{
	Button_obj _hx_dummy;
	Button_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components.Button",18,1f,c8,73);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Button_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Button_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Button_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Button_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
