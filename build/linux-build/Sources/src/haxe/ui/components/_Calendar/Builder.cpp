// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_Date
#include <hxinc/Date.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Button
#include <hxinc/haxe/ui/components/Button.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Calendar
#include <hxinc/haxe/ui/components/Calendar.h>
#endif
#ifndef INCLUDED_haxe_ui_components__Calendar_Builder
#include <hxinc/haxe/ui/components/_Calendar/Builder.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Grid
#include <hxinc/haxe/ui/containers/Grid.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_CompositeBuilder
#include <hxinc/haxe/ui/core/CompositeBuilder.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_088fcfdce9e87021_265_new,"haxe.ui.components._Calendar.Builder","new",0x1973b776,"haxe.ui.components._Calendar.Builder.new","haxe/ui/components/Calendar.hx",265,0xa4f8a419)
HX_LOCAL_STACK_FRAME(_hx_pos_088fcfdce9e87021_270_create,"haxe.ui.components._Calendar.Builder","create",0x5f2491a6,"haxe.ui.components._Calendar.Builder.create","haxe/ui/components/Calendar.hx",270,0xa4f8a419)
namespace haxe{
namespace ui{
namespace components{
namespace _Calendar{

void Builder_obj::__construct( ::haxe::ui::components::Calendar calendar){
            	HX_GC_STACKFRAME(&_hx_pos_088fcfdce9e87021_265_new)
HXLINE( 266)		super::__construct(calendar);
HXLINE( 267)		this->_hx_set__calendar(HX_CTX, calendar);
            	}

Dynamic Builder_obj::__CreateEmpty() { return new Builder_obj; }

void *Builder_obj::_hx_vtable = 0;

Dynamic Builder_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Builder_obj > _hx_result = new Builder_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Builder_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x433c002e) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x433c002e;
	} else {
		return inClassId==(int)0x6fc7eb95;
	}
}

void Builder_obj::create(){
            	HX_GC_STACKFRAME(&_hx_pos_088fcfdce9e87021_270_create)
HXLINE( 271)		this->_calendar->set_columns(7);
HXLINE( 273)		{
HXLINE( 274)			{
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item1 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item1->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item1);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item2 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item2->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item2);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item3 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item3->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item3);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item4 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item4->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item4);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item5 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item5->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item5);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item6 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item6->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item6);
            				}
            			}
HXLINE( 274)			{
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item7 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item7->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item7);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item8 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item8->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item8);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item9 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item9->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item9);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item10 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item10->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item10);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item11 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item11->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item11);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item12 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item12->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item12);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item13 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item13->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item13);
            				}
            			}
HXLINE( 274)			{
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item14 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item14->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item14);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item15 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item15->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item15);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item16 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item16->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item16);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item17 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item17->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item17);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item18 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item18->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item18);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item19 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item19->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item19);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item20 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item20->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item20);
            				}
            			}
HXLINE( 274)			{
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item21 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item21->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item21);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item22 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item22->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item22);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item23 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item23->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item23);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item24 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item24->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item24);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item25 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item25->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item25);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item26 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item26->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item26);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item27 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item27->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item27);
            				}
            			}
HXLINE( 274)			{
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item28 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item28->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item28);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item29 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item29->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item29);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item30 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item30->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item30);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item31 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item31->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item31);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item32 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item32->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item32);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item33 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item33->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item33);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item34 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item34->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item34);
            				}
            			}
HXLINE( 274)			{
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item35 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item35->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item35);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item36 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item36->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item36);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item37 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item37->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item37);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item38 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item38->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item38);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item39 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item39->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item39);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item40 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item40->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item40);
            				}
HXLINE( 274)				{
HXLINE( 275)					 ::haxe::ui::components::Button item41 =  ::haxe::ui::components::Button_obj::__alloc( HX_CTX );
HXLINE( 276)					item41->scriptAccess = false;
HXLINE( 277)					this->_calendar->addComponent(item41);
            				}
            			}
            		}
HXLINE( 282)		 ::haxe::ui::components::Calendar _hx_tmp = this->_calendar;
HXDLIN( 282)		_hx_tmp->set_date(::Date_obj::now());
            	}



hx::ObjectPtr< Builder_obj > Builder_obj::__new( ::haxe::ui::components::Calendar calendar) {
	hx::ObjectPtr< Builder_obj > __this = new Builder_obj();
	__this->__construct(calendar);
	return __this;
}

hx::ObjectPtr< Builder_obj > Builder_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::components::Calendar calendar) {
	Builder_obj *__this = (Builder_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Builder_obj), true, "haxe.ui.components._Calendar.Builder"));
	*(void **)__this = Builder_obj::_hx_vtable;
	__this->__construct(calendar);
	return __this;
}

Builder_obj::Builder_obj()
{
}

void Builder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Builder);
	HX_MARK_MEMBER_NAME(_calendar,"_calendar");
	 ::haxe::ui::core::CompositeBuilder_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Builder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_calendar,"_calendar");
	 ::haxe::ui::core::CompositeBuilder_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Builder_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_calendar") ) { return hx::Val( _calendar ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Builder_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_calendar") ) { _hx_set__calendar(HX_CTX_GET,inValue.Cast<  ::haxe::ui::components::Calendar >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Builder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_calendar",1d,56,bf,c6));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Builder_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::components::Calendar */ ,(int)offsetof(Builder_obj,_calendar),HX_("_calendar",1d,56,bf,c6)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Builder_obj_sStaticStorageInfo = 0;
#endif

static ::String Builder_obj_sMemberFields[] = {
	HX_("_calendar",1d,56,bf,c6),
	HX_("create",fc,66,0f,7c),
	::String(null()) };

hx::Class Builder_obj::__mClass;

void Builder_obj::__register()
{
	Builder_obj _hx_dummy;
	Builder_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components._Calendar.Builder",84,84,c1,20);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Builder_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Builder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Builder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Builder_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
} // end namespace _Calendar
