// Generated by Haxe 4.0.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <hxinc/Std.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentBase
#include <hxinc/haxe/ui/backend/ComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentImpl
#include <hxinc/haxe/ui/backend/ComponentImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_ComponentSurface
#include <hxinc/haxe/ui/backend/ComponentSurface.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventBase
#include <hxinc/haxe/ui/backend/EventBase.h>
#endif
#ifndef INCLUDED_haxe_ui_backend_EventImpl
#include <hxinc/haxe/ui/backend/EventImpl.h>
#endif
#ifndef INCLUDED_haxe_ui_components_NumberStepper
#include <hxinc/haxe/ui/components/NumberStepper.h>
#endif
#ifndef INCLUDED_haxe_ui_components_Stepper
#include <hxinc/haxe/ui/components/Stepper.h>
#endif
#ifndef INCLUDED_haxe_ui_components_TextField
#include <hxinc/haxe/ui/components/TextField.h>
#endif
#ifndef INCLUDED_haxe_ui_components__NumberStepper_Events
#include <hxinc/haxe/ui/components/_NumberStepper/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_Box
#include <hxinc/haxe/ui/containers/Box.h>
#endif
#ifndef INCLUDED_haxe_ui_containers_VBox
#include <hxinc/haxe/ui/containers/VBox.h>
#endif
#ifndef INCLUDED_haxe_ui_core_Component
#include <hxinc/haxe/ui/core/Component.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentBounds
#include <hxinc/haxe/ui/core/ComponentBounds.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentCommon
#include <hxinc/haxe/ui/core/ComponentCommon.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentContainer
#include <hxinc/haxe/ui/core/ComponentContainer.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentEvents
#include <hxinc/haxe/ui/core/ComponentEvents.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentLayout
#include <hxinc/haxe/ui/core/ComponentLayout.h>
#endif
#ifndef INCLUDED_haxe_ui_core_ComponentValidation
#include <hxinc/haxe/ui/core/ComponentValidation.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IClonable
#include <hxinc/haxe/ui/core/IClonable.h>
#endif
#ifndef INCLUDED_haxe_ui_core_IComponentBase
#include <hxinc/haxe/ui/core/IComponentBase.h>
#endif
#ifndef INCLUDED_haxe_ui_core_InteractiveComponent
#include <hxinc/haxe/ui/core/InteractiveComponent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_Events
#include <hxinc/haxe/ui/events/Events.h>
#endif
#ifndef INCLUDED_haxe_ui_events_FocusEvent
#include <hxinc/haxe/ui/events/FocusEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_KeyboardEvent
#include <hxinc/haxe/ui/events/KeyboardEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_MouseEvent
#include <hxinc/haxe/ui/events/MouseEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_events_UIEvent
#include <hxinc/haxe/ui/events/UIEvent.h>
#endif
#ifndef INCLUDED_haxe_ui_focus_IFocusable
#include <hxinc/haxe/ui/focus/IFocusable.h>
#endif
#ifndef INCLUDED_haxe_ui_util_VariantType
#include <hxinc/haxe/ui/util/VariantType.h>
#endif
#ifndef INCLUDED_haxe_ui_validation_IValidating
#include <hxinc/haxe/ui/validation/IValidating.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c55100f525a41aa9_156_new,"haxe.ui.components._NumberStepper.Events","new",0xc468c24a,"haxe.ui.components._NumberStepper.Events.new","haxe/ui/components/NumberStepper.hx",156,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_161_register,"haxe.ui.components._NumberStepper.Events","register",0x55838439,"haxe.ui.components._NumberStepper.Events.register","haxe/ui/components/NumberStepper.hx",161,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_189_unregister,"haxe.ui.components._NumberStepper.Events","unregister",0xc25b0d12,"haxe.ui.components._NumberStepper.Events.unregister","haxe/ui/components/NumberStepper.hx",189,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_203_onKeyDown,"haxe.ui.components._NumberStepper.Events","onKeyDown",0x36705fac,"haxe.ui.components._NumberStepper.Events.onKeyDown","haxe/ui/components/NumberStepper.hx",203,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_219_onMouseWheel,"haxe.ui.components._NumberStepper.Events","onMouseWheel",0xb8214b0b,"haxe.ui.components._NumberStepper.Events.onMouseWheel","haxe/ui/components/NumberStepper.hx",219,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_231_onStepChange,"haxe.ui.components._NumberStepper.Events","onStepChange",0x75c390b1,"haxe.ui.components._NumberStepper.Events.onStepChange","haxe/ui/components/NumberStepper.hx",231,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_236_onStepMouseDown,"haxe.ui.components._NumberStepper.Events","onStepMouseDown",0xbad1f086,"haxe.ui.components._NumberStepper.Events.onStepMouseDown","haxe/ui/components/NumberStepper.hx",236,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_242_onTextFieldFocusIn,"haxe.ui.components._NumberStepper.Events","onTextFieldFocusIn",0xb0209d25,"haxe.ui.components._NumberStepper.Events.onTextFieldFocusIn","haxe/ui/components/NumberStepper.hx",242,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_246_onTextFieldFocusOut,"haxe.ui.components._NumberStepper.Events","onTextFieldFocusOut",0x6c6d774e,"haxe.ui.components._NumberStepper.Events.onTextFieldFocusOut","haxe/ui/components/NumberStepper.hx",246,0xb723c67d)
HX_LOCAL_STACK_FRAME(_hx_pos_c55100f525a41aa9_249_onTextFieldChange,"haxe.ui.components._NumberStepper.Events","onTextFieldChange",0x7b19bb28,"haxe.ui.components._NumberStepper.Events.onTextFieldChange","haxe/ui/components/NumberStepper.hx",249,0xb723c67d)
namespace haxe{
namespace ui{
namespace components{
namespace _NumberStepper{

void Events_obj::__construct( ::haxe::ui::components::NumberStepper stepper){
            	HX_GC_STACKFRAME(&_hx_pos_c55100f525a41aa9_156_new)
HXLINE( 157)		super::__construct(stepper);
HXLINE( 158)		this->_hx_set__stepper(HX_CTX, stepper);
            	}

Dynamic Events_obj::__CreateEmpty() { return new Events_obj; }

void *Events_obj::_hx_vtable = 0;

Dynamic Events_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Events_obj > _hx_result = new Events_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Events_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x03eb3096) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x03eb3096;
	} else {
		return inClassId==(int)0x5d294170;
	}
}

void Events_obj::_hx_register(){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_161_register)
HXLINE( 162)		if (!(this->hasEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn()))) {
HXLINE( 163)			this->registerEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn(),null());
            		}
HXLINE( 165)		if (!(this->_stepper->hasEvent(HX_("keydown",81,3d,6e,b1),this->onKeyDown_dyn()))) {
HXLINE( 166)			this->_stepper->registerEvent(HX_("keydown",81,3d,6e,b1),this->onKeyDown_dyn(),null());
            		}
HXLINE( 169)		 ::haxe::ui::components::TextField textfield = this->_stepper->findComponent(HX_("stepper-textfield",71,2b,a8,b3),hx::ClassOf< ::haxe::ui::components::TextField >(),null(),null()).StaticCast<  ::haxe::ui::components::TextField >();
HXLINE( 170)		if (!(textfield->hasEvent(HX_("focusin",bd,61,83,41),this->onTextFieldFocusIn_dyn()))) {
HXLINE( 171)			textfield->registerEvent(HX_("focusin",bd,61,83,41),this->onTextFieldFocusIn_dyn(),null());
            		}
HXLINE( 173)		if (!(textfield->hasEvent(HX_("focusout",b6,b7,76,11),this->onTextFieldFocusOut_dyn()))) {
HXLINE( 174)			textfield->registerEvent(HX_("focusout",b6,b7,76,11),this->onTextFieldFocusOut_dyn(),null());
            		}
HXLINE( 176)		if (!(textfield->hasEvent(HX_("change",70,91,72,b7),this->onTextFieldChange_dyn()))) {
HXLINE( 177)			textfield->registerEvent(HX_("change",70,91,72,b7),this->onTextFieldChange_dyn(),null());
            		}
HXLINE( 180)		 ::haxe::ui::components::Stepper step = this->_stepper->findComponent(HX_("stepper-step",48,ff,e2,4c),hx::ClassOf< ::haxe::ui::components::Stepper >(),null(),null()).StaticCast<  ::haxe::ui::components::Stepper >();
HXLINE( 181)		if (!(step->hasEvent(HX_("change",70,91,72,b7),this->onStepChange_dyn()))) {
HXLINE( 182)			step->registerEvent(HX_("change",70,91,72,b7),this->onStepChange_dyn(),null());
            		}
HXLINE( 184)		if (!(step->hasEvent(HX_("mousedown",07,85,e9,03),this->onStepMouseDown_dyn()))) {
HXLINE( 185)			step->registerEvent(HX_("mousedown",07,85,e9,03),this->onStepMouseDown_dyn(),null());
            		}
            	}


void Events_obj::unregister(){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_189_unregister)
HXLINE( 190)		this->unregisterEvent(HX_("mousewheel",56,b8,59,54),this->onMouseWheel_dyn());
HXLINE( 191)		this->_stepper->unregisterEvent(HX_("keydown",81,3d,6e,b1),this->onKeyDown_dyn());
HXLINE( 193)		 ::haxe::ui::components::TextField textfield = this->_stepper->findComponent(HX_("stepper-textfield",71,2b,a8,b3),hx::ClassOf< ::haxe::ui::components::TextField >(),null(),null()).StaticCast<  ::haxe::ui::components::TextField >();
HXLINE( 194)		textfield->unregisterEvent(HX_("focusin",bd,61,83,41),this->onTextFieldFocusIn_dyn());
HXLINE( 195)		textfield->unregisterEvent(HX_("focusout",b6,b7,76,11),this->onTextFieldFocusOut_dyn());
HXLINE( 196)		textfield->unregisterEvent(HX_("change",70,91,72,b7),this->onTextFieldChange_dyn());
HXLINE( 198)		 ::haxe::ui::components::Stepper step = this->_stepper->findComponent(HX_("stepper-step",48,ff,e2,4c),hx::ClassOf< ::haxe::ui::components::Stepper >(),null(),null()).StaticCast<  ::haxe::ui::components::Stepper >();
HXLINE( 199)		step->unregisterEvent(HX_("change",70,91,72,b7),this->onStepChange_dyn());
HXLINE( 200)		step->unregisterEvent(HX_("mousedown",07,85,e9,03),this->onStepMouseDown_dyn());
            	}


void Events_obj::onKeyDown( ::haxe::ui::events::KeyboardEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_203_onKeyDown)
HXLINE( 204)		 ::haxe::ui::components::Stepper step = this->_stepper->findComponent(HX_("stepper-step",48,ff,e2,4c),hx::ClassOf< ::haxe::ui::components::Stepper >(),null(),null()).StaticCast<  ::haxe::ui::components::Stepper >();
HXLINE( 205)		bool _hx_tmp;
HXDLIN( 205)		bool _hx_tmp1;
HXDLIN( 205)		if ((event->keyCode != 38)) {
HXLINE( 205)			_hx_tmp1 = (event->keyCode == 39);
            		}
            		else {
HXLINE( 205)			_hx_tmp1 = true;
            		}
HXDLIN( 205)		if (!(_hx_tmp1)) {
HXLINE( 205)			_hx_tmp = (event->keyCode == 107);
            		}
            		else {
HXLINE( 205)			_hx_tmp = true;
            		}
HXDLIN( 205)		if (_hx_tmp) {
HXLINE( 206)			step->increment();
            		}
HXLINE( 208)		bool _hx_tmp2;
HXDLIN( 208)		bool _hx_tmp3;
HXDLIN( 208)		if ((event->keyCode != 40)) {
HXLINE( 208)			_hx_tmp3 = (event->keyCode == 37);
            		}
            		else {
HXLINE( 208)			_hx_tmp3 = true;
            		}
HXDLIN( 208)		if (!(_hx_tmp3)) {
HXLINE( 208)			_hx_tmp2 = (event->keyCode == 109);
            		}
            		else {
HXLINE( 208)			_hx_tmp2 = true;
            		}
HXDLIN( 208)		if (_hx_tmp2) {
HXLINE( 209)			step->deincrement();
            		}
HXLINE( 211)		if ((event->keyCode == 36)) {
HXLINE( 212)			step->set_pos(( (Float)(step->get_min()) ));
            		}
HXLINE( 214)		if ((event->keyCode == 35)) {
HXLINE( 215)			step->set_pos(( (Float)(step->get_max()) ));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onKeyDown,(void))

void Events_obj::onMouseWheel( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_219_onMouseWheel)
HXLINE( 220)		 ::haxe::ui::components::TextField textfield = this->_stepper->findComponent(HX_("stepper-textfield",71,2b,a8,b3),hx::ClassOf< ::haxe::ui::components::TextField >(),null(),null()).StaticCast<  ::haxe::ui::components::TextField >();
HXLINE( 221)		textfield->set_focus(true);
HXLINE( 223)		 ::haxe::ui::components::Stepper step = this->_stepper->findComponent(HX_("stepper-step",48,ff,e2,4c),hx::ClassOf< ::haxe::ui::components::Stepper >(),null(),null()).StaticCast<  ::haxe::ui::components::Stepper >();
HXLINE( 224)		if ((event->delta > 0)) {
HXLINE( 225)			step->increment();
            		}
            		else {
HXLINE( 227)			step->deincrement();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onMouseWheel,(void))

void Events_obj::onStepChange( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_231_onStepChange)
HXLINE( 232)		 ::haxe::ui::components::Stepper step = this->_stepper->findComponent(HX_("stepper-step",48,ff,e2,4c),hx::ClassOf< ::haxe::ui::components::Stepper >(),null(),null()).StaticCast<  ::haxe::ui::components::Stepper >();
HXLINE( 233)		 ::haxe::ui::components::NumberStepper _hx_tmp = this->_stepper;
HXDLIN( 233)		_hx_tmp->set_pos(step->get_pos());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onStepChange,(void))

void Events_obj::onStepMouseDown( ::haxe::ui::events::MouseEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_236_onStepMouseDown)
HXLINE( 237)		 ::haxe::ui::components::TextField textfield = this->_stepper->findComponent(HX_("stepper-textfield",71,2b,a8,b3),hx::ClassOf< ::haxe::ui::components::TextField >(),null(),null()).StaticCast<  ::haxe::ui::components::TextField >();
HXLINE( 238)		textfield->set_focus(true);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onStepMouseDown,(void))

void Events_obj::onTextFieldFocusIn( ::haxe::ui::events::FocusEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_242_onTextFieldFocusIn)
HXDLIN( 242)		this->_stepper->addClass(HX_(":active",80,29,23,82),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onTextFieldFocusIn,(void))

void Events_obj::onTextFieldFocusOut( ::haxe::ui::events::FocusEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_246_onTextFieldFocusOut)
HXDLIN( 246)		this->_stepper->removeClass(HX_(":active",80,29,23,82),null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onTextFieldFocusOut,(void))

void Events_obj::onTextFieldChange( ::haxe::ui::events::UIEvent event){
            	HX_STACKFRAME(&_hx_pos_c55100f525a41aa9_249_onTextFieldChange)
HXLINE( 250)		 ::haxe::ui::components::Stepper step = this->_stepper->findComponent(HX_("stepper-step",48,ff,e2,4c),hx::ClassOf< ::haxe::ui::components::Stepper >(),null(),null()).StaticCast<  ::haxe::ui::components::Stepper >();
HXLINE( 251)		 ::haxe::ui::components::TextField textfield = this->_stepper->findComponent(HX_("stepper-textfield",71,2b,a8,b3),hx::ClassOf< ::haxe::ui::components::TextField >(),null(),null()).StaticCast<  ::haxe::ui::components::TextField >();
HXLINE( 252)		 ::haxe::ui::components::NumberStepper _hx_tmp = this->_stepper;
HXDLIN( 252)		 ::Dynamic v = ::Std_obj::parseFloat(textfield->get_text());
HXDLIN( 252)		 ::Dynamic min = this->_stepper->get_min();
HXDLIN( 252)		 ::Dynamic max = this->_stepper->get_max();
HXDLIN( 252)		Float _hx_tmp1;
HXDLIN( 252)		bool _hx_tmp2;
HXDLIN( 252)		if (hx::IsNotNull( v )) {
HXLINE( 252)			_hx_tmp2 = ::Math_obj::isNaN(( (Float)(v) ));
            		}
            		else {
HXLINE( 252)			_hx_tmp2 = true;
            		}
HXDLIN( 252)		if (_hx_tmp2) {
HXLINE( 252)			_hx_tmp1 = ( (Float)(min) );
            		}
            		else {
HXLINE( 252)			bool _hx_tmp3;
HXDLIN( 252)			if (hx::IsNotNull( min )) {
HXLINE( 252)				_hx_tmp3 = hx::IsLess( v,min );
            			}
            			else {
HXLINE( 252)				_hx_tmp3 = false;
            			}
HXDLIN( 252)			if (_hx_tmp3) {
HXLINE( 252)				v = min;
            			}
            			else {
HXLINE( 252)				bool _hx_tmp4;
HXDLIN( 252)				if (hx::IsNotNull( max )) {
HXLINE( 252)					_hx_tmp4 = hx::IsGreater( v,max );
            				}
            				else {
HXLINE( 252)					_hx_tmp4 = false;
            				}
HXDLIN( 252)				if (_hx_tmp4) {
HXLINE( 252)					v = max;
            				}
            			}
HXDLIN( 252)			_hx_tmp1 = ( (Float)(v) );
            		}
HXDLIN( 252)		_hx_tmp->set_pos(_hx_tmp1);
HXLINE( 253)		textfield->set_text(::Std_obj::string(this->_stepper->get_pos()));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Events_obj,onTextFieldChange,(void))


hx::ObjectPtr< Events_obj > Events_obj::__new( ::haxe::ui::components::NumberStepper stepper) {
	hx::ObjectPtr< Events_obj > __this = new Events_obj();
	__this->__construct(stepper);
	return __this;
}

hx::ObjectPtr< Events_obj > Events_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ui::components::NumberStepper stepper) {
	Events_obj *__this = (Events_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Events_obj), true, "haxe.ui.components._NumberStepper.Events"));
	*(void **)__this = Events_obj::_hx_vtable;
	__this->__construct(stepper);
	return __this;
}

Events_obj::Events_obj()
{
}

void Events_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Events);
	HX_MARK_MEMBER_NAME(_stepper,"_stepper");
	 ::haxe::ui::events::Events_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Events_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_stepper,"_stepper");
	 ::haxe::ui::events::Events_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Events_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"_stepper") ) { return hx::Val( _stepper ); }
		if (HX_FIELD_EQ(inName,"register") ) { return hx::Val( _hx_register_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { return hx::Val( onKeyDown_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"unregister") ) { return hx::Val( unregister_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { return hx::Val( onMouseWheel_dyn() ); }
		if (HX_FIELD_EQ(inName,"onStepChange") ) { return hx::Val( onStepChange_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"onStepMouseDown") ) { return hx::Val( onStepMouseDown_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"onTextFieldChange") ) { return hx::Val( onTextFieldChange_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"onTextFieldFocusIn") ) { return hx::Val( onTextFieldFocusIn_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"onTextFieldFocusOut") ) { return hx::Val( onTextFieldFocusOut_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Events_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"_stepper") ) { _hx_set__stepper(HX_CTX_GET,inValue.Cast<  ::haxe::ui::components::NumberStepper >()); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Events_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("_stepper",92,5e,18,bb));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo Events_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::haxe::ui::components::NumberStepper */ ,(int)offsetof(Events_obj,_stepper),HX_("_stepper",92,5e,18,bb)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Events_obj_sStaticStorageInfo = 0;
#endif

static ::String Events_obj_sMemberFields[] = {
	HX_("_stepper",92,5e,18,bb),
	HX_("register",63,a6,9f,d0),
	HX_("unregister",bc,8d,63,56),
	HX_("onKeyDown",42,22,f2,73),
	HX_("onMouseWheel",35,ca,ca,bf),
	HX_("onStepChange",db,0f,6d,7d),
	HX_("onStepMouseDown",9c,c7,a4,30),
	HX_("onTextFieldFocusIn",cf,d7,f8,54),
	HX_("onTextFieldFocusOut",64,91,c8,04),
	HX_("onTextFieldChange",be,03,a1,2c),
	::String(null()) };

hx::Class Events_obj::__mClass;

void Events_obj::__register()
{
	Events_obj _hx_dummy;
	Events_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("haxe.ui.components._NumberStepper.Events",58,95,7b,ec);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Events_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Events_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Events_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Events_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ui
} // end namespace components
} // end namespace _NumberStepper
