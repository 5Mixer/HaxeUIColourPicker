// Generated by Haxe 4.0.5
#ifndef INCLUDED_haxe_ui_core_ComponentFieldMap
#define INCLUDED_haxe_ui_core_ComponentFieldMap

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS3(haxe,ui,core,ComponentFieldMap)

namespace haxe{
namespace ui{
namespace core{


class HXCPP_CLASS_ATTRIBUTES ComponentFieldMap_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ComponentFieldMap_obj OBJ_;
		ComponentFieldMap_obj();

	public:
		enum { _hx_ClassId = 0x0299b0c6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.ui.core.ComponentFieldMap")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxe.ui.core.ComponentFieldMap"); }

		inline static hx::ObjectPtr< ComponentFieldMap_obj > __new() {
			hx::ObjectPtr< ComponentFieldMap_obj > __this = new ComponentFieldMap_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< ComponentFieldMap_obj > __alloc(hx::Ctx *_hx_ctx) {
			ComponentFieldMap_obj *__this = (ComponentFieldMap_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ComponentFieldMap_obj), false, "haxe.ui.core.ComponentFieldMap"));
			*(void **)__this = ComponentFieldMap_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ComponentFieldMap_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ComponentFieldMap",bf,4f,43,50); }

		static void __boot();
		static  ::haxe::ds::StringMap MAP;
		static ::String mapField(::String name);
		static ::Dynamic mapField_dyn();

};

} // end namespace haxe
} // end namespace ui
} // end namespace core

#endif /* INCLUDED_haxe_ui_core_ComponentFieldMap */ 
