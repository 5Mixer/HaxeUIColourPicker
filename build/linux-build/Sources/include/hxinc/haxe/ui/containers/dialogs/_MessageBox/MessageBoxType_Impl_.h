// Generated by Haxe 4.0.5
#ifndef INCLUDED_haxe_ui_containers_dialogs__MessageBox_MessageBoxType_Impl_
#define INCLUDED_haxe_ui_containers_dialogs__MessageBox_MessageBoxType_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS5(haxe,ui,containers,dialogs,_MessageBox,MessageBoxType_Impl_)

namespace haxe{
namespace ui{
namespace containers{
namespace dialogs{
namespace _MessageBox{


class HXCPP_CLASS_ATTRIBUTES MessageBoxType_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MessageBoxType_Impl__obj OBJ_;
		MessageBoxType_Impl__obj();

	public:
		enum { _hx_ClassId = 0x52551da2 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_"); }

		inline static hx::ObjectPtr< MessageBoxType_Impl__obj > __new() {
			hx::ObjectPtr< MessageBoxType_Impl__obj > __this = new MessageBoxType_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< MessageBoxType_Impl__obj > __alloc(hx::Ctx *_hx_ctx) {
			MessageBoxType_Impl__obj *__this = (MessageBoxType_Impl__obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MessageBoxType_Impl__obj), false, "haxe.ui.containers.dialogs._MessageBox.MessageBoxType_Impl_"));
			*(void **)__this = MessageBoxType_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MessageBoxType_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MessageBoxType_Impl_",9e,0a,b9,86); }

		static void __boot();
		static ::String TYPE_INFO;
		static ::String TYPE_QUESTION;
		static ::String TYPE_WARNING;
		static ::String TYPE_ERROR;
		static ::String toString(::String this1);
		static ::Dynamic toString_dyn();

};

} // end namespace haxe
} // end namespace ui
} // end namespace containers
} // end namespace dialogs
} // end namespace _MessageBox

#endif /* INCLUDED_haxe_ui_containers_dialogs__MessageBox_MessageBoxType_Impl_ */ 
